{
  "version": 3,
  "sources": ["../node_modules/.pnpm/d3-array@2.12.1/node_modules/d3-array/dist/d3-array.js", "../node_modules/.pnpm/d3-axis@2.1.0/node_modules/d3-axis/dist/d3-axis.js", "../node_modules/.pnpm/d3-dispatch@2.0.0/node_modules/d3-dispatch/dist/d3-dispatch.js", "../node_modules/.pnpm/d3-selection@2.0.0/node_modules/d3-selection/dist/d3-selection.js", "../node_modules/.pnpm/d3-drag@2.0.0/node_modules/d3-drag/dist/d3-drag.js", "../node_modules/.pnpm/d3-color@2.0.0/node_modules/d3-color/dist/d3-color.js", "../node_modules/.pnpm/d3-interpolate@2.0.1/node_modules/d3-interpolate/dist/d3-interpolate.js", "../node_modules/.pnpm/d3-timer@2.0.0/node_modules/d3-timer/dist/d3-timer.js", "../node_modules/.pnpm/d3-ease@2.0.0/node_modules/d3-ease/dist/d3-ease.js", "../node_modules/.pnpm/d3-transition@2.0.0_d3-selection@2.0.0/node_modules/d3-transition/dist/d3-transition.js", "../node_modules/.pnpm/d3-brush@2.1.0/node_modules/d3-brush/dist/d3-brush.js", "../node_modules/.pnpm/d3-path@2.0.0/node_modules/d3-path/dist/d3-path.js", "../node_modules/.pnpm/d3-chord@2.0.0/node_modules/d3-chord/dist/d3-chord.js", "../node_modules/.pnpm/d3-contour@2.0.0/node_modules/d3-contour/dist/d3-contour.js", "../node_modules/.pnpm/d3-delaunay@5.3.0/node_modules/d3-delaunay/dist/d3-delaunay.js", "../node_modules/.pnpm/d3-dsv@2.0.0/node_modules/d3-dsv/dist/d3-dsv.js", "../node_modules/.pnpm/d3-fetch@2.0.0/node_modules/d3-fetch/dist/d3-fetch.js", "../node_modules/.pnpm/d3-quadtree@2.0.0/node_modules/d3-quadtree/dist/d3-quadtree.js", "../node_modules/.pnpm/d3-force@2.1.1/node_modules/d3-force/dist/d3-force.js", "../node_modules/.pnpm/d3-format@2.0.0/node_modules/d3-format/dist/d3-format.js", "../node_modules/.pnpm/d3-geo@2.0.2/node_modules/d3-geo/dist/d3-geo.js", "../node_modules/.pnpm/d3-hierarchy@2.0.0/node_modules/d3-hierarchy/dist/d3-hierarchy.js", "../node_modules/.pnpm/d3-polygon@2.0.0/node_modules/d3-polygon/dist/d3-polygon.js", "../node_modules/.pnpm/d3-random@2.2.2/node_modules/d3-random/dist/d3-random.js", "../node_modules/.pnpm/d3-time@2.1.1/node_modules/d3-time/dist/d3-time.js", "../node_modules/.pnpm/d3-time-format@3.0.0/node_modules/d3-time-format/dist/d3-time-format.js", "../node_modules/.pnpm/d3-scale@3.3.0/node_modules/d3-scale/dist/d3-scale.js", "../node_modules/.pnpm/d3-scale-chromatic@2.0.0/node_modules/d3-scale-chromatic/dist/d3-scale-chromatic.js", "../node_modules/.pnpm/d3-shape@2.1.0/node_modules/d3-shape/dist/d3-shape.js", "../node_modules/.pnpm/d3-zoom@2.0.0/node_modules/d3-zoom/dist/d3-zoom.js", "../node_modules/.pnpm/d3@6.7.0/node_modules/d3/dist/d3.node.js", "../node_modules/.pnpm/midi-parser-js@4.0.4/node_modules/midi-parser-js/src/main.js", "../node_modules/.pnpm/@tonaljs+core@4.6.5/node_modules/@tonaljs/core/dist/index.js", "../node_modules/.pnpm/@tonaljs+abc-notation@4.6.5/node_modules/@tonaljs/abc-notation/dist/index.js", "../node_modules/.pnpm/@tonaljs+array@4.6.5/node_modules/@tonaljs/array/dist/index.js", "../node_modules/.pnpm/@tonaljs+collection@4.6.2/node_modules/@tonaljs/collection/dist/index.js", "../node_modules/.pnpm/@tonaljs+pcset@4.6.5/node_modules/@tonaljs/pcset/dist/index.js", "../node_modules/.pnpm/@tonaljs+chord-type@4.6.5/node_modules/@tonaljs/chord-type/dist/index.js", "../node_modules/.pnpm/@tonaljs+chord-detect@4.6.5/node_modules/@tonaljs/chord-detect/dist/index.js", "../node_modules/.pnpm/@tonaljs+scale-type@4.6.5/node_modules/@tonaljs/scale-type/dist/index.js", "../node_modules/.pnpm/@tonaljs+chord@4.6.5/node_modules/@tonaljs/chord/dist/index.js", "../node_modules/.pnpm/@tonaljs+duration-value@4.6.2/node_modules/@tonaljs/duration-value/dist/index.js", "../node_modules/.pnpm/@tonaljs+interval@4.6.5/node_modules/@tonaljs/interval/dist/index.js", "../node_modules/.pnpm/@tonaljs+midi@4.6.5/node_modules/@tonaljs/midi/dist/index.js", "../node_modules/.pnpm/@tonaljs+note@4.6.5/node_modules/@tonaljs/note/dist/index.js", "../node_modules/.pnpm/@tonaljs+roman-numeral@4.6.5/node_modules/@tonaljs/roman-numeral/dist/index.js", "../node_modules/.pnpm/@tonaljs+key@4.6.5/node_modules/@tonaljs/key/dist/index.js", "../node_modules/.pnpm/@tonaljs+mode@4.6.5/node_modules/@tonaljs/mode/dist/index.js", "../node_modules/.pnpm/@tonaljs+progression@4.6.5/node_modules/@tonaljs/progression/dist/index.js", "../node_modules/.pnpm/@tonaljs+range@4.6.5/node_modules/@tonaljs/range/dist/index.js", "../node_modules/.pnpm/@tonaljs+scale@4.6.5/node_modules/@tonaljs/scale/dist/index.js", "../node_modules/.pnpm/@tonaljs+time-signature@4.6.2/node_modules/@tonaljs/time-signature/dist/index.js", "../node_modules/.pnpm/@tonaljs+tonal@4.6.5/node_modules/@tonaljs/tonal/dist/index.js", "../src/index.js", "../src/fileFormats/Midi.js", "../src/types/Note.js", "../src/types/GuitarNote.js", "../src/types/HarmonicaNote.js", "../src/types/NoteArray.js", "../src/utils/MathUtils.js", "../src/utils/ArrayUtils.js", "../src/types/Recording.js", "../src/types/MusicPiece.js", "../src/fileFormats/MusicXmlParser.js", "../src/fileFormats/MidiParser.js", "../src/utils/MusicUtils.js", "../src/types/PitchSequence.js", "../src/graphics/Canvas.js", "../src/input/AudioRecorder.js", "../src/input/MidiRecorder.js", "../src/input/MidiInputManager.js", "../src/instruments/Drums.js", "../src/instruments/Guitar.js", "../src/instruments/Lamellophone.js", "../src/chords/Chords.js", "../src/instruments/Piano.js", "../src/alignment/Alignment.js", "../src/comparison/Matching.js", "../src/utils/index.js", "../src/utils/BlobUtils.js", "../src/utils/ColorUtils.js", "../src/utils/FormattingUtils.js", "../src/utils/LocalStorageUtils.js", "../src/utils/MiscUtils.js", "../src/utils/NoteColorUtils.js", "../src/utils/RecordingsUtils.js", "../src/utils/StatisticsUtils.js", "../src/utils/WebMidiUtils.js", "../src/alignment/DiffAlignment.js", "../src/comparison/PriorityMatching.js", "../src/comparison/Similarity.js", "../src/comparison/SimilarSections.js", "../src/stringBased/Levenshtein.js", "../src/stringBased/index.js", "../src/stringBased/LongestCommonSubsequence.js", "../src/stringBased/Gotoh.js", "../src/stringBased/SuffixTree.js", "../src/stringBased/NGrams.js", "../src/stringBased/ImmediateRepetitionCompression.js", "../src/stringBased/NeedlemanWunsch.js"],
  "sourcesContent": ["// https://d3js.org/d3-array/ v2.12.1 Copyright 2021 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction bisector(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n\nfunction number(x) {\n  return x === null ? NaN : +x;\n}\n\nfunction* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n\nconst ascendingBisect = bisector(ascending);\nconst bisectRight = ascendingBisect.right;\nconst bisectLeft = ascendingBisect.left;\nconst bisectCenter = bisector(number).center;\n\nfunction count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n\nfunction length$1(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nfunction cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length$1);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n\nfunction cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}\n\nfunction descending(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n\nfunction deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n\nfunction extent(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n\n// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nclass Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nfunction fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nfunction fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n\nclass InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nclass InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(value);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n\nfunction identity(x) {\n  return x;\n}\n\nfunction group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nfunction groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nfunction rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nfunction rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nfunction index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nfunction indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new InternMap();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n\nfunction permute(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n\nfunction sort(values, ...F) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  values = Array.from(values);\n  let [f = ascending] = F;\n  if (f.length === 1 || F.length > 1) {\n    const index = Uint32Array.from(values, (d, i) => i);\n    if (F.length > 1) {\n      F = F.map(f => values.map(f));\n      index.sort((i, j) => {\n        for (const f of F) {\n          const c = ascending(f[i], f[j]);\n          if (c) return c;\n        }\n      });\n    } else {\n      f = values.map(f);\n      index.sort((i, j) => ascending(f[i], f[j]));\n    }\n    return permute(values, index);\n  }\n  return values.sort(f);\n}\n\nfunction groupSort(values, reduce, key) {\n  return (reduce.length === 1\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nfunction nice(start, stop, count) {\n  let prestep;\n  while (true) {\n    const step = tickIncrement(start, stop, count);\n    if (step === prestep || step === 0 || !isFinite(step)) {\n      return [start, stop];\n    } else if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n    }\n    prestep = step;\n  }\n}\n\nfunction sturges(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n\nfunction bin() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds, and nice the\n    // default domain accordingly.\n    if (!Array.isArray(tz)) {\n      const max = x1, tn = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tn);\n      tz = ticks(x0, x1, tn);\n\n      // If the last threshold is coincident with the domain\u2019s upper bound, the\n      // last bin will be zero-width. If the default domain is used, and this\n      // last threshold is coincident with the maximum input value, we can\n      // extend the niced upper bound by one tick to ensure uniform bin widths;\n      // otherwise, we simply remove the last threshold. Note that we don\u2019t\n      // coerce values or the domain to numbers, and thus must be careful to\n      // compare order (>=) rather than strict equality (===)!\n      if (tz[tz.length - 1] >= x1) {\n        if (max >= x1 && domain === extent) {\n          const step = tickIncrement(x0, x1, tn);\n          if (isFinite(step)) {\n            if (step > 0) {\n              x1 = (Math.floor(x1 / step) + 1) * step;\n            } else if (step < 0) {\n              x1 = (Math.ceil(x1 * -step) + 1) / -step;\n            }\n          }\n        } else {\n          tz.pop();\n        }\n      }\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n\nfunction max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n\nfunction min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nfunction quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n\nfunction quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction freedmanDiaconis(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n\nfunction scott(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count(values), -1 / 3)));\n}\n\nfunction maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n\nfunction mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n\nfunction median(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n\nfunction* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nfunction merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n\nfunction minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n\nfunction pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nfunction range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\nfunction least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n\nfunction leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n\nfunction greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n\nfunction greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n\nfunction scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n\nvar shuffle = shuffler(Math.random);\n\nfunction shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n\nfunction sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n\nfunction transpose(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n\nfunction zip() {\n  return transpose(arguments);\n}\n\nfunction every(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (!test(value, ++index, values)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction some(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction filter(values, test) {\n  if (typeof test !== \"function\") throw new TypeError(\"test is not a function\");\n  const array = [];\n  let index = -1;\n  for (const value of values) {\n    if (test(value, ++index, values)) {\n      array.push(value);\n    }\n  }\n  return array;\n}\n\nfunction map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n\nfunction reduce(values, reducer, value) {\n  if (typeof reducer !== \"function\") throw new TypeError(\"reducer is not a function\");\n  const iterator = values[Symbol.iterator]();\n  let done, next, index = -1;\n  if (arguments.length < 3) {\n    ({done, value} = iterator.next());\n    if (done) return;\n    ++index;\n  }\n  while (({done, value: next} = iterator.next()), !done) {\n    value = reducer(value, next, ++index, values);\n  }\n  return value;\n}\n\nfunction reverse(values) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  return Array.from(values).reverse();\n}\n\nfunction difference(values, ...others) {\n  values = new Set(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n\nfunction disjoint(values, other) {\n  const iterator = other[Symbol.iterator](), set = new Set();\n  for (const v of values) {\n    if (set.has(v)) return false;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) break;\n      if (Object.is(v, value)) return false;\n      set.add(value);\n    }\n  }\n  return true;\n}\n\nfunction set(values) {\n  return values instanceof Set ? values : new Set(values);\n}\n\nfunction intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n\nfunction superset(values, other) {\n  const iterator = values[Symbol.iterator](), set = new Set();\n  for (const o of other) {\n    if (set.has(o)) continue;\n    let value, done;\n    while (({value, done} = iterator.next())) {\n      if (done) return false;\n      set.add(value);\n      if (Object.is(o, value)) break;\n    }\n  }\n  return true;\n}\n\nfunction subset(values, other) {\n  return superset(other, values);\n}\n\nfunction union(...others) {\n  const set = new Set();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n\nexports.Adder = Adder;\nexports.InternMap = InternMap;\nexports.InternSet = InternSet;\nexports.ascending = ascending;\nexports.bin = bin;\nexports.bisect = bisectRight;\nexports.bisectCenter = bisectCenter;\nexports.bisectLeft = bisectLeft;\nexports.bisectRight = bisectRight;\nexports.bisector = bisector;\nexports.count = count;\nexports.cross = cross;\nexports.cumsum = cumsum;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.difference = difference;\nexports.disjoint = disjoint;\nexports.every = every;\nexports.extent = extent;\nexports.fcumsum = fcumsum;\nexports.filter = filter;\nexports.fsum = fsum;\nexports.greatest = greatest;\nexports.greatestIndex = greatestIndex;\nexports.group = group;\nexports.groupSort = groupSort;\nexports.groups = groups;\nexports.histogram = bin;\nexports.index = index;\nexports.indexes = indexes;\nexports.intersection = intersection;\nexports.least = least;\nexports.leastIndex = leastIndex;\nexports.map = map;\nexports.max = max;\nexports.maxIndex = maxIndex;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.minIndex = minIndex;\nexports.nice = nice;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = quantile;\nexports.quantileSorted = quantileSorted;\nexports.quickselect = quickselect;\nexports.range = range;\nexports.reduce = reduce;\nexports.reverse = reverse;\nexports.rollup = rollup;\nexports.rollups = rollups;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.shuffler = shuffler;\nexports.some = some;\nexports.sort = sort;\nexports.subset = subset;\nexports.sum = sum;\nexports.superset = superset;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.ticks = ticks;\nexports.transpose = transpose;\nexports.union = union;\nexports.variance = variance;\nexports.zip = zip;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "// https://d3js.org/d3-axis/ v2.1.0 Copyright 2021 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nvar slice = Array.prototype.slice;\n\nfunction identity(x) {\n  return x;\n}\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + offset,\n        range1 = +range[range.length - 1] + offset,\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient === right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  axis.offset = function(_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.axisRight = axisRight;\nexports.axisTop = axisTop;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "// https://d3js.org/d3-dispatch/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexports.dispatch = dispatch;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-selection/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nfunction namespace(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nfunction creator(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n\nfunction none() {}\n\nfunction selector(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n\nfunction selection_select(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction array(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nfunction empty() {\n  return [];\n}\n\nfunction selectorAll(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n\nfunction arrayAll(select) {\n  return function() {\n    var group = select.apply(this, arguments);\n    return group == null ? [] : array(group);\n  };\n}\n\nfunction selection_selectAll(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n\nfunction matcher(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nfunction childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nfunction selection_selectChild(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return this.children;\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nfunction selection_selectChildren(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n\nfunction selection_filter(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n\nfunction sparse(update) {\n  return new Array(update.length);\n}\n\nfunction selection_enter() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don\u2019t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nfunction selection_data(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = array(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\nfunction selection_exit() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n\nfunction selection_join(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n\nfunction selection_merge(selection) {\n  if (!(selection instanceof Selection)) throw new Error(\"invalid merge\");\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n\nfunction selection_order() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction selection_sort(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction selection_call() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n\nfunction selection_nodes() {\n  return Array.from(this);\n}\n\nfunction selection_node() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n\nfunction selection_size() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n\nfunction selection_empty() {\n  return !this.node();\n}\n\nfunction selection_each(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nfunction selection_attr(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n\nfunction defaultView(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nfunction selection_style(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nfunction selection_property(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nfunction selection_classed(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_text(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nfunction selection_html(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nfunction selection_raise() {\n  return this.each(raise);\n}\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nfunction selection_lower() {\n  return this.each(lower);\n}\n\nfunction selection_append(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n\nfunction constantNull() {\n  return null;\n}\n\nfunction selection_insert(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nfunction selection_remove() {\n  return this.each(remove);\n}\n\nfunction selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_clone(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n\nfunction selection_datum(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n\nfunction contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nfunction selection_on(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nfunction selection_dispatch(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n\nfunction* selection_iterator() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nfunction select(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n\nfunction create(name) {\n  return select(creator(name).call(document.documentElement));\n}\n\nvar nextId = 0;\n\nfunction local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction sourceEvent(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n\nfunction pointer(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n\nfunction pointers(events, node) {\n  if (events.target) { // i.e., instanceof Event, not TouchList or iterable\n    events = sourceEvent(events);\n    if (node === undefined) node = events.currentTarget;\n    events = events.touches || [events];\n  }\n  return Array.from(events, event => pointer(event, node));\n}\n\nfunction selectAll(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : array(selector)], root);\n}\n\nexports.create = create;\nexports.creator = creator;\nexports.local = local;\nexports.matcher = matcher;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.pointer = pointer;\nexports.pointers = pointers;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.window = defaultView;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-drag/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-selection')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-selection'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Selection) { 'use strict';\n\nfunction nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nfunction noevent(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\nfunction nodrag(view) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = d3Selection.select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant = x => () => x;\n\nfunction DragEvent(type, {\n  sourceEvent,\n  subject,\n  target,\n  identifier,\n  active,\n  x, y, dx, dy,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    subject: {value: subject, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    identifier: {value: identifier, enumerable: true, configurable: true},\n    active: {value: active, enumerable: true, configurable: true},\n    x: {value: x, enumerable: true, configurable: true},\n    y: {value: y, enumerable: true, configurable: true},\n    dx: {value: dx, enumerable: true, configurable: true},\n    dy: {value: dy, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(event, d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction drag() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = d3Dispatch.dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned(event, d) {\n    if (touchending || !filter.call(this, event, d)) return;\n    var gesture = beforestart(this, container.call(this, event, d), event, d, \"mouse\");\n    if (!gesture) return;\n    d3Selection.select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation(event);\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\", event);\n  }\n\n  function mousemoved(event) {\n    noevent(event);\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\", event);\n  }\n\n  function mouseupped(event) {\n    d3Selection.select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent(event);\n    gestures.mouse(\"end\", event);\n  }\n\n  function touchstarted(event, d) {\n    if (!filter.call(this, event, d)) return;\n    var touches = event.changedTouches,\n        c = container.call(this, event, d),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {\n        nopropagation(event);\n        gesture(\"start\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchmoved(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent(event);\n        gesture(\"drag\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchended(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation(event);\n        gesture(\"end\", event, touches[i]);\n      }\n    }\n  }\n\n  function beforestart(that, container, event, d, identifier, touch) {\n    var dispatch = listeners.copy(),\n        p = d3Selection.pointer(touch || event, container), dx, dy,\n        s;\n\n    if ((s = subject.call(that, new DragEvent(\"beforestart\", {\n        sourceEvent: event,\n        target: drag,\n        identifier,\n        active,\n        x: p[0],\n        y: p[1],\n        dx: 0,\n        dy: 0,\n        dispatch\n      }), d)) == null) return;\n\n    dx = s.x - p[0] || 0;\n    dy = s.y - p[1] || 0;\n\n    return function gesture(type, event, touch) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[identifier] = gesture, n = active++; break;\n        case \"end\": delete gestures[identifier], --active; // nobreak\n        case \"drag\": p = d3Selection.pointer(touch || event, container), n = active; break;\n      }\n      dispatch.call(\n        type,\n        that,\n        new DragEvent(type, {\n          sourceEvent: event,\n          subject: s,\n          target: drag,\n          identifier,\n          active: n,\n          x: p[0] + dx,\n          y: p[1] + dy,\n          dx: p[0] - p0[0],\n          dy: p[1] - p0[1],\n          dispatch\n        }),\n        d\n      );\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n\nexports.drag = drag;\nexports.dragDisable = nodrag;\nexports.dragEnable = yesdrag;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-color/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction define(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nfunction color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nconst radians = Math.PI / 180;\nconst degrees = 180 / Math.PI;\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nexports.color = color;\nexports.cubehelix = cubehelix;\nexports.gray = gray;\nexports.hcl = hcl;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.lch = lch;\nexports.rgb = rgb;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-interpolate/ v2.0.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Color) { 'use strict';\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nfunction basis$1(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nfunction basisClosed(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\nvar constant = x => () => x;\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n\nvar rgb = (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = d3Color.rgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nfunction numberArray(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nfunction isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n\nfunction array(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nfunction genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n\nfunction date(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n\nfunction number(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n\nfunction object(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nfunction string(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n\nfunction value(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)\n      : b instanceof d3Color.color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n\nfunction discrete(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nfunction hue$1(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n\nfunction round(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n\nvar degrees = 180 / Math.PI;\n\nvar identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nfunction decompose(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nfunction parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nvar zoom = (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 \u2245 u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      };\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      };\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$1 = hsl(hue);\nvar hslLong = hsl(nogamma);\n\nfunction lab(start, end) {\n  var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$1 = hcl(hue);\nvar hclLong = hcl(nogamma);\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nvar cubehelix$1 = cubehelix(hue);\nvar cubehelixLong = cubehelix(nogamma);\n\nfunction piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n\nfunction quantize(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n\nexports.interpolate = value;\nexports.interpolateArray = array;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateCubehelix = cubehelix$1;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.interpolateDate = date;\nexports.interpolateDiscrete = discrete;\nexports.interpolateHcl = hcl$1;\nexports.interpolateHclLong = hclLong;\nexports.interpolateHsl = hsl$1;\nexports.interpolateHslLong = hslLong;\nexports.interpolateHue = hue$1;\nexports.interpolateLab = lab;\nexports.interpolateNumber = number;\nexports.interpolateNumberArray = numberArray;\nexports.interpolateObject = object;\nexports.interpolateRgb = rgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateRound = round;\nexports.interpolateString = string;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = zoom;\nexports.piecewise = piecewise;\nexports.quantize = quantize;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-timer/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we\u2019ve set an alarm, if we haven\u2019t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nfunction timeout$1(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n\nfunction interval$1(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  t._restart = t.restart;\n  t.restart = function(callback, delay, time) {\n    delay = +delay, time = time == null ? now() : +time;\n    t._restart(function tick(elapsed) {\n      elapsed += total;\n      t._restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n  };\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexports.interval = interval$1;\nexports.now = now;\nexports.timeout = timeout$1;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-ease/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nconst linear = t => +t;\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI,\n    halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\n// tpmt is two power minus ten times t scaled to [0,1]\nfunction tpmt(x) {\n  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\n}\n\nfunction expIn(t) {\n  return tpmt(1 - +t);\n}\n\nfunction expOut(t) {\n  return 1 - tpmt(t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return (t = +t) * t * (s * (t - 1) + t);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((t + 1) * s + t) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * tpmt(-(--t)) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * tpmt(-t) * Math.sin((s - t) / p)\n        : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackInOut = backInOut;\nexports.easeBackOut = backOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBounceOut = bounceOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleInOut = circleInOut;\nexports.easeCircleOut = circleOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicInOut = cubicInOut;\nexports.easeCubicOut = cubicOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticInOut = elasticInOut;\nexports.easeElasticOut = elasticOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpInOut = expInOut;\nexports.easeExpOut = expOut;\nexports.easeLinear = linear;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyInOut = polyInOut;\nexports.easePolyOut = polyOut;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadInOut = quadInOut;\nexports.easeQuadOut = quadOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinInOut = sinInOut;\nexports.easeSinOut = sinOut;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-transition/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-timer'), require('d3-interpolate'), require('d3-color'), require('d3-ease')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-timer', 'd3-interpolate', 'd3-color', 'd3-ease'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Selection, d3Dispatch, d3Timer, d3Interpolate, d3Color, d3Ease) { 'use strict';\n\nvar emptyOn = d3Dispatch.dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nfunction schedule(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nfunction init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nfunction set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nfunction get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = d3Timer.timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return d3Timer.timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    d3Timer.timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nfunction interrupt(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n\nfunction selection_interrupt(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction transition_tween(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n\nfunction interpolate(a, b) {\n  var c;\n  return (typeof b === \"number\" ? d3Interpolate.interpolateNumber\n      : b instanceof d3Color.color ? d3Interpolate.interpolateRgb\n      : (c = d3Color.color(b)) ? (b = c, d3Interpolate.interpolateRgb)\n      : d3Interpolate.interpolateString)(a, b);\n}\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction transition_attr(name, value) {\n  var fullname = d3Selection.namespace(name), i = fullname === \"transform\" ? d3Interpolate.interpolateTransformSvg : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_attrTween(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = d3Selection.namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nfunction transition_delay(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nfunction transition_duration(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nfunction transition_ease(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nfunction transition_easeVarying(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n\nfunction transition_filter(match) {\n  if (typeof match !== \"function\") match = d3Selection.matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n\nfunction transition_merge(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_on(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nfunction transition_remove() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n\nfunction transition_select(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n\nfunction transition_selectAll(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = d3Selection.selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n\nvar Selection = d3Selection.selection.prototype.constructor;\n\nfunction transition_selection() {\n  return new Selection(this._groups, this._parents);\n}\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        string1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = d3Selection.style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), d3Selection.style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we\u2019re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nfunction transition_style(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? d3Interpolate.interpolateTransformCss : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n\nfunction styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_styleTween(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nfunction transition_text(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n\nfunction textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction transition_textTween(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n\nfunction transition_transition() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n\nfunction transition_end() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we\u2019re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return d3Selection.selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = d3Selection.selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: d3Ease.easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nfunction selection_transition(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = d3Timer.now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n\nd3Selection.selection.prototype.interrupt = selection_interrupt;\nd3Selection.selection.prototype.transition = selection_transition;\n\nvar root = [null];\n\nfunction active(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n\nexports.active = active;\nexports.interrupt = interrupt;\nexports.transition = transition;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-brush/ v2.1.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Dispatch, d3Drag, d3Interpolate, d3Selection, d3Transition) { 'use strict';\n\nvar constant = x => () => x;\n\nfunction BrushEvent(type, {\n  sourceEvent,\n  target,\n  selection,\n  mode,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    selection: {value: selection, enumerable: true, configurable: true},\n    mode: {value: mode, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n\nfunction nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nfunction noevent(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name \u201C__brush\u201D rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nfunction brush() {\n  return brush$1(XY);\n}\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = d3Dispatch.dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          d3Selection.select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = d3Interpolate.interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            d3Transition.interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = d3Selection.select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = d3Selection.select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = d3Selection.pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move();\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = d3Selection.select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    d3Transition.interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = d3Selection.select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true);\n\n      d3Drag.dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = d3Selection.pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        d3Drag.dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nexports.brush = brush;\nexports.brushSelection = brushSelection;\nexports.brushX = brushX;\nexports.brushY = brushY;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-path/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nconst pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We\u2019re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexports.path = path;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-chord/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Path) { 'use strict';\n\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = pi * 2;\nvar max = Math.max;\nvar epsilon = 1e-12;\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nfunction chord() {\n  return chord$1(false, false);\n}\n\nfunction chordTranspose() {\n  return chord$1(false, true);\n}\n\nfunction chordDirected() {\n  return chord$1(true, false);\n}\n\nfunction chord$1(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n\nvar slice = Array.prototype.slice;\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = d3Path.path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nfunction ribbon$1() {\n  return ribbon();\n}\n\nfunction ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n\nexports.chord = chord;\nexports.chordDirected = chordDirected;\nexports.chordTranspose = chordTranspose;\nexports.ribbon = ribbon$1;\nexports.ribbonArrow = ribbonArrow;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-contour/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Array) { 'use strict';\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\n\nfunction ascending(a, b) {\n  return a - b;\n}\n\nfunction area(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n\nvar constant = x => () => x;\n\nfunction contains(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n\nfunction noop() {}\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nfunction contours() {\n  var dx = 1,\n      dy = 1,\n      threshold = d3Array.thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = d3Array.extent(values), start = domain[0], stop = domain[1];\n      tz = d3Array.tickStep(start, stop, tz);\n      tz = d3Array.range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nfunction blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nfunction density() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = d3Array.max(values0);\n      tz = d3Array.tickStep(0, stop, tz);\n      tz = d3Array.range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = +_[0], _1 = +_[1];\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n\nexports.contourDensity = density;\nexports.contours = contours;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://github.com/d3/d3-delaunay v5.3.0 Copyright 2020 Mike Bostock\n// https://github.com/mapbox/delaunator v4.0.1. Copyright 2019 Mapbox, Inc.\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nclass Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n\nconst epsilon = 1e-6;\n\nclass Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n\nclass Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n\nclass Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nclass Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n\nexports.Delaunay = Delaunay;\nexports.Voronoi = Voronoi;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-dsv/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nvar EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear()) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nfunction dsv(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatBody = csv.formatBody;\nvar csvFormatRows = csv.formatRows;\nvar csvFormatRow = csv.formatRow;\nvar csvFormatValue = csv.formatValue;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatBody = tsv.formatBody;\nvar tsvFormatRows = tsv.formatRows;\nvar tsvFormatRow = tsv.formatRow;\nvar tsvFormatValue = tsv.formatValue;\n\nfunction autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();\n\nexports.autoType = autoType;\nexports.csvFormat = csvFormat;\nexports.csvFormatBody = csvFormatBody;\nexports.csvFormatRow = csvFormatRow;\nexports.csvFormatRows = csvFormatRows;\nexports.csvFormatValue = csvFormatValue;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.dsvFormat = dsv;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatBody = tsvFormatBody;\nexports.tsvFormatRow = tsvFormatRow;\nexports.tsvFormatRows = tsvFormatRows;\nexports.tsvFormatValue = tsvFormatValue;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-fetch/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dsv')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dsv'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Dsv) { 'use strict';\n\nfunction responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nfunction blob(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n\nfunction responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nfunction buffer(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n\nfunction responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nfunction text(input, init) {\n  return fetch(input, init).then(responseText);\n}\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nfunction dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = d3Dsv.dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nvar csv = dsvParse(d3Dsv.csvParse);\nvar tsv = dsvParse(d3Dsv.tsvParse);\n\nfunction image(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n\nfunction responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nfunction json(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n\nfunction parser(type) {\n  return (input, init) => text(input, init)\n    .then(text => (new DOMParser).parseFromString(text, type));\n}\n\nvar xml = parser(\"application/xml\");\n\nvar html = parser(\"text/html\");\n\nvar svg = parser(\"image/svg+xml\");\n\nexports.blob = blob;\nexports.buffer = buffer;\nexports.csv = csv;\nexports.dsv = dsv;\nexports.html = html;\nexports.image = image;\nexports.json = json;\nexports.svg = svg;\nexports.text = text;\nexports.tsv = tsv;\nexports.xml = xml;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-quadtree/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction tree_add(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nfunction tree_cover(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don\u2019t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\nfunction tree_data() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\nfunction tree_extent(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\nfunction Quad(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\nfunction tree_find(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can\u2019t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn\u2019t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\nfunction tree_remove(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nfunction tree_root() {\n  return this._root;\n}\n\nfunction tree_size() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\nfunction tree_visit(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\nfunction tree_visitAfter(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction tree_x(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction tree_y(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nexports.quadtree = quadtree;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-force/ v2.1.1 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-quadtree'), require('d3-dispatch'), require('d3-timer')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-quadtree', 'd3-dispatch', 'd3-timer'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3));\n}(this, function (exports, d3Quadtree, d3Dispatch, d3Timer) { 'use strict';\n\nfunction center(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction jiggle(random) {\n  return (random() - 0.5) * 1e-6;\n}\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nfunction collide(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = d3Quadtree.quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nfunction link(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\n// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nfunction lcg() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nfunction simulation(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = d3Timer.timer(step),\n      event = d3Dispatch.dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\nfunction manyBody() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = d3Quadtree.quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\nfunction radial(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n\nfunction x$2(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\nfunction y$2(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\nexports.forceCenter = center;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceRadial = radial;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-format/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nfunction formatDecimal(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nfunction formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, \u00B1Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n\nfunction exponent(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n\nfunction formatGroup(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n\nfunction formatNumerals(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n\n// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n\n// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nfunction formatTrim(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n\nvar prefixExponent;\n\nfunction formatPrefixAuto(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n\nfunction formatRounded(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n\nvar formatTypes = {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n\nfunction identity(x) {\n  return x;\n}\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\u00B5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction formatLocale(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"\u2212\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer \u201Cvalue\u201D part that can be\n        // grouped, and fractional or exponential \u201Csuffix\u201D part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n\nvar locale;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.format = locale.format;\n  exports.formatPrefix = locale.formatPrefix;\n  return locale;\n}\n\nfunction precisionFixed(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n\nfunction precisionPrefix(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n\nfunction precisionRound(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n\nexports.FormatSpecifier = FormatSpecifier;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "// https://d3js.org/d3-geo/ v2.0.2 Copyright 2021 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Array) { 'use strict';\n\nvar epsilon = 1e-6;\nvar epsilon2 = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar quarterPi = pi / 4;\nvar tau = pi * 2;\n\nvar degrees = 180 / pi;\nvar radians = pi / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\nvar hypot = Math.hypot;\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\nfunction noop() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nfunction geoStream(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\nvar areaRingSum = new d3Array.Adder();\n\n// hello?\n\nvar areaSum = new d3Array.Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new d3Array.Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli\u2019s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nfunction area(object) {\n  areaSum = new d3Array.Adder();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n}\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00$1, phi00$1, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new d3Array.Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360\u00B0) % 360\u00B0, except that we want\n// the distance between \u00B1180\u00B0 to be 360\u00B0.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nfunction bounds(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n}\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00$2, phi00$2, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroid(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new d3Array.Adder();\n  Y2 = new d3Array.Adder();\n  Z2 = new d3Array.Adder();\n  geoStream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction compose(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nfunction rotation(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n\n// Generates a circle centered at [0\u00B0, 0\u00B0], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nfunction circle() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\nfunction clipBuffer() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nfunction clipRejoin(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nfunction polygonContains(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new d3Array.Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point\u2019s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n\nfunction clip(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = d3Array.merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nfunction clipCircle(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 \u2A2F n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n\nfunction clipLine(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon\u2019s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = d3Array.merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nfunction extent() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\nvar lengthSum,\n    lambda0$2,\n    sinPhi0$1,\n    cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin(phi), cosPhi0$1 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nfunction length(object) {\n  lengthSum = new d3Array.Adder();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n}\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nfunction distance(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nfunction contains(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\nfunction graticuleX(y0, y1, dy) {\n  var y = d3Array.range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = d3Array.range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return d3Array.range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(d3Array.range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(d3Array.range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(d3Array.range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nfunction interpolate(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\nvar identity = x => x;\n\nvar areaSum$1 = new d3Array.Adder(),\n    areaRingSum$1 = new d3Array.Adder(),\n    x00,\n    y00,\n    x0$1,\n    y0$1;\n\nvar areaStream$1 = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1 = new d3Array.Adder();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1 = new d3Array.Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity,\n    y0$2 = x0$2,\n    x1 = -x0$2,\n    y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0,\n    Y0$1 = 0,\n    Z0$1 = 0,\n    X1$1 = 0,\n    Y1$1 = 0,\n    Z1$1 = 0,\n    X2$1 = 0,\n    Y2$1 = 0,\n    Z2$1 = 0,\n    x00$1,\n    y00$1,\n    x0$3,\n    y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\nvar lengthSum$1 = new d3Array.Adder(),\n    lengthRing,\n    x00$2,\n    y00$2,\n    x0$4,\n    y0$4;\n\nvar lengthStream$1 = {\n  point: noop,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1 = new d3Array.Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nfunction index(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\nfunction transform(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream$1));\n  fitBounds(boundsStream$1.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nfunction fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nfunction fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nfunction fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nfunction resample(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nfunction conicEqualArea() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\nfunction albers() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960\u00D7500. The projection also works quite well at 960\u00D7600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nfunction albersUsa() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nfunction azimuthalEqualArea() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nfunction azimuthalEquidistant() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nfunction mercator() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nfunction conicConformal() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nfunction equirectangular() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nfunction conicEquidistant() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nfunction equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nfunction equalEarth() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nfunction gnomonic() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\nfunction identity$1() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y]);\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  };\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n\nfunction naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nfunction naturalEarth1() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\nfunction orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nfunction orthographic() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n\nfunction stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nfunction stereographic() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nfunction transverseMercator() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoArea = area;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipAntimeridian = clipAntimeridian;\nexports.geoClipCircle = clipCircle;\nexports.geoClipExtent = extent;\nexports.geoClipRectangle = clipRectangle;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoEqualEarth = equalEarth;\nexports.geoEqualEarthRaw = equalEarthRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoIdentity = identity$1;\nexports.geoInterpolate = interpolate;\nexports.geoLength = length;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoNaturalEarth1 = naturalEarth1;\nexports.geoNaturalEarth1Raw = naturalEarth1Raw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoPath = index;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoRotation = rotation;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-hierarchy/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nfunction cluster() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nfunction node_count() {\n  return this.eachAfter(count);\n}\n\nfunction node_each(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n\nfunction node_eachBefore(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n\nfunction node_eachAfter(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n\nfunction node_find(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n\nfunction node_sum(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n\nfunction node_sort(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n\nfunction node_path(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nfunction node_ancestors() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n\nfunction node_descendants() {\n  return Array.from(this);\n}\n\nfunction node_leaves() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n\nfunction node_links() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don\u2019t include the root\u2019s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n\nfunction* node_iterator() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n\nfunction hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n\nfunction array(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nfunction shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction enclose(circles) {\n  var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle\u2026\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // \u201CCloseness\u201D is determined by linear distance along the front-chain.\n    // \u201CAhead\u201D or \u201Cbehind\u201D is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nfunction siblings(circles) {\n  packEnclose(circles);\n  return circles;\n}\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction index() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nfunction roundNode(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n\nfunction treemapDice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n\nfunction partition() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n\nvar preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nfunction stratify() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        n = nodes.length,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    for (i = 0; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = parentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-\u2019s ancestor is a sibling of v, returns vi-\u2019s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nfunction tree() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.\u2019s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n\nfunction treemapSlice(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n\nfunction index$1() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n\nfunction binary(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n\nfunction sliceDice(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n}\n\nvar resquarify = (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index;\nexports.packEnclose = enclose;\nexports.packSiblings = siblings;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$1;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapResquarify = resquarify;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-polygon/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nfunction area(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n\nfunction centroid(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nfunction cross(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  const n = points.length,\n      indexes = [0, 1];\n  let size = 2, i;\n\n  for (i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nfunction hull(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n\nfunction contains(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n\nfunction length(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.hypot(xa, ya);\n  }\n\n  return perimeter;\n}\n\nexports.polygonArea = area;\nexports.polygonCentroid = centroid;\nexports.polygonContains = contains;\nexports.polygonHull = hull;\nexports.polygonLength = length;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-random/ v2.2.2 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nvar defaultSource = Math.random;\n\nvar uniform = (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n\nvar int = (function sourceRandomInt(source) {\n  function randomInt(min, max) {\n    if (arguments.length < 2) max = min, min = 0;\n    min = Math.floor(min);\n    max = Math.floor(max) - min;\n    return function() {\n      return Math.floor(source() * max + min);\n    };\n  }\n\n  randomInt.source = sourceRandomInt;\n\n  return randomInt;\n})(defaultSource);\n\nvar normal = (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n\nvar logNormal = (function sourceRandomLogNormal(source) {\n  var N = normal.source(source);\n\n  function randomLogNormal() {\n    var randomNormal = N.apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n\nvar irwinHall = (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    if ((n = +n) <= 0) return () => 0;\n    return function() {\n      for (var sum = 0, i = n; i > 1; --i) sum += source();\n      return sum + i * source();\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n\nvar bates = (function sourceRandomBates(source) {\n  var I = irwinHall.source(source);\n\n  function randomBates(n) {\n    // use limiting distribution at n === 0\n    if ((n = +n) === 0) return source;\n    var randomIrwinHall = I(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n\nvar exponential = (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log1p(-source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n\nvar pareto = (function sourceRandomPareto(source) {\n  function randomPareto(alpha) {\n    if ((alpha = +alpha) < 0) throw new RangeError(\"invalid alpha\");\n    alpha = 1 / -alpha;\n    return function() {\n      return Math.pow(1 - source(), alpha);\n    };\n  }\n\n  randomPareto.source = sourceRandomPareto;\n\n  return randomPareto;\n})(defaultSource);\n\nvar bernoulli = (function sourceRandomBernoulli(source) {\n  function randomBernoulli(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n    return function() {\n      return Math.floor(source() + p);\n    };\n  }\n\n  randomBernoulli.source = sourceRandomBernoulli;\n\n  return randomBernoulli;\n})(defaultSource);\n\nvar geometric = (function sourceRandomGeometric(source) {\n  function randomGeometric(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n    if (p === 0) return () => Infinity;\n    if (p === 1) return () => 1;\n    p = Math.log1p(-p);\n    return function() {\n      return 1 + Math.floor(Math.log1p(-source()) / p);\n    };\n  }\n\n  randomGeometric.source = sourceRandomGeometric;\n\n  return randomGeometric;\n})(defaultSource);\n\nvar gamma = (function sourceRandomGamma(source) {\n  var randomNormal = normal.source(source)();\n\n  function randomGamma(k, theta) {\n    if ((k = +k) < 0) throw new RangeError(\"invalid k\");\n    // degenerate distribution if k === 0\n    if (k === 0) return () => 0;\n    theta = theta == null ? 1 : +theta;\n    // exponential distribution if k === 1\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\n\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\n        c = 1 / (3 * Math.sqrt(d)),\n        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\n    return function() {\n      do {\n        do {\n          var x = randomNormal(),\n              v = 1 + c * x;\n        } while (v <= 0);\n        v *= v * v;\n        var u = 1 - source();\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n      return d * v * multiplier() * theta;\n    };\n  }\n\n  randomGamma.source = sourceRandomGamma;\n\n  return randomGamma;\n})(defaultSource);\n\nvar beta = (function sourceRandomBeta(source) {\n  var G = gamma.source(source);\n\n  function randomBeta(alpha, beta) {\n    var X = G(alpha),\n        Y = G(beta);\n    return function() {\n      var x = X();\n      return x === 0 ? 0 : x / (x + Y());\n    };\n  }\n\n  randomBeta.source = sourceRandomBeta;\n\n  return randomBeta;\n})(defaultSource);\n\nvar binomial = (function sourceRandomBinomial(source) {\n  var G = geometric.source(source),\n      B = beta.source(source);\n\n  function randomBinomial(n, p) {\n    n = +n;\n    if ((p = +p) >= 1) return () => n;\n    if (p <= 0) return () => 0;\n    return function() {\n      var acc = 0, nn = n, pp = p;\n      while (nn * pp > 16 && nn * (1 - pp) > 16) {\n        var i = Math.floor((nn + 1) * pp),\n            y = B(i, nn - i + 1)();\n        if (y <= pp) {\n          acc += i;\n          nn -= i;\n          pp = (pp - y) / (1 - y);\n        } else {\n          nn = i - 1;\n          pp /= y;\n        }\n      }\n      var sign = pp < 0.5,\n          pFinal = sign ? pp : 1 - pp,\n          g = G(pFinal);\n      for (var s = g(), k = 0; s <= nn; ++k) s += g();\n      return acc + (sign ? k : nn - k);\n    };\n  }\n\n  randomBinomial.source = sourceRandomBinomial;\n\n  return randomBinomial;\n})(defaultSource);\n\nvar weibull = (function sourceRandomWeibull(source) {\n  function randomWeibull(k, a, b) {\n    var outerFunc;\n    if ((k = +k) === 0) {\n      outerFunc = x => -Math.log(x);\n    } else {\n      k = 1 / k;\n      outerFunc = x => Math.pow(x, k);\n    }\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      return a + b * outerFunc(-Math.log1p(-source()));\n    };\n  }\n\n  randomWeibull.source = sourceRandomWeibull;\n\n  return randomWeibull;\n})(defaultSource);\n\nvar cauchy = (function sourceRandomCauchy(source) {\n  function randomCauchy(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      return a + b * Math.tan(Math.PI * source());\n    };\n  }\n\n  randomCauchy.source = sourceRandomCauchy;\n\n  return randomCauchy;\n})(defaultSource);\n\nvar logistic = (function sourceRandomLogistic(source) {\n  function randomLogistic(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      var u = source();\n      return a + b * Math.log(u / (1 - u));\n    };\n  }\n\n  randomLogistic.source = sourceRandomLogistic;\n\n  return randomLogistic;\n})(defaultSource);\n\nvar poisson = (function sourceRandomPoisson(source) {\n  var G = gamma.source(source),\n      B = binomial.source(source);\n\n  function randomPoisson(lambda) {\n    return function() {\n      var acc = 0, l = lambda;\n      while (l > 16) {\n        var n = Math.floor(0.875 * l),\n            t = G(n)();\n        if (t > l) return acc + B(n - 1, l / t)();\n        acc += n;\n        l -= t;\n      }\n      for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());\n      return acc + k;\n    };\n  }\n\n  randomPoisson.source = sourceRandomPoisson;\n\n  return randomPoisson;\n})(defaultSource);\n\n// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst mul = 0x19660D;\nconst inc = 0x3C6EF35F;\nconst eps = 1 / 0x100000000;\n\nfunction lcg(seed = Math.random()) {\n  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;\n  return () => (state = mul * state + inc | 0, eps * (state >>> 0));\n}\n\nexports.randomBates = bates;\nexports.randomBernoulli = bernoulli;\nexports.randomBeta = beta;\nexports.randomBinomial = binomial;\nexports.randomCauchy = cauchy;\nexports.randomExponential = exponential;\nexports.randomGamma = gamma;\nexports.randomGeometric = geometric;\nexports.randomInt = int;\nexports.randomIrwinHall = irwinHall;\nexports.randomLcg = lcg;\nexports.randomLogNormal = logNormal;\nexports.randomLogistic = logistic;\nexports.randomNormal = normal;\nexports.randomPareto = pareto;\nexports.randomPoisson = poisson;\nexports.randomUniform = uniform;\nexports.randomWeibull = weibull;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "// https://d3js.org/d3-time/ v2.1.1 Copyright 2021 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, (function (exports, d3Array) { 'use strict';\n\nvar t0 = new Date,\n    t1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\nvar milliseconds = millisecond.range;\n\nconst durationSecond = 1000;\nconst durationMinute = durationSecond * 60;\nconst durationHour = durationMinute * 60;\nconst durationDay = durationHour * 24;\nconst durationWeek = durationDay * 7;\nconst durationMonth = durationDay * 30;\nconst durationYear = durationDay * 365;\n\nvar second = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\nvar hours = hour.range;\n\nvar day = newInterval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\nvar utcYears = utcYear.range;\n\nfunction ticker(year, month, week, day, hour, minute) {\n\n  const tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function ticks(start, stop, count) {\n    const reverse = stop < start;\n    if (reverse) [start, stop] = [stop, start];\n    const interval = count && typeof count.range === \"function\" ? count : tickInterval(start, stop, count);\n    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop\n    return reverse ? ticks.reverse() : ticks;\n  }\n\n  function tickInterval(start, stop, count) {\n    const target = Math.abs(stop - start) / count;\n    const i = d3Array.bisector(([,, step]) => step).right(tickIntervals, target);\n    if (i === tickIntervals.length) return year.every(d3Array.tickStep(start / durationYear, stop / durationYear, count));\n    if (i === 0) return millisecond.every(Math.max(d3Array.tickStep(start, stop, count), 1));\n    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n    return t.every(step);\n  }\n\n  return [ticks, tickInterval];\n}\n\nconst [utcTicks, utcTickInterval] = ticker(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute);\nconst [timeTicks, timeTickInterval] = ticker(year, month, sunday, day, hour, minute);\n\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeTickInterval = timeTickInterval;\nexports.timeTicks = timeTicks;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcTickInterval = utcTickInterval;\nexports.utcTicks = utcTicks;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "// https://d3js.org/d3-time-format/ v3.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-time')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, function (exports, d3Time) { 'use strict';\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? d3Time.utcMonday.ceil(week) : d3Time.utcMonday(week);\n          week = d3Time.utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? d3Time.timeMonday.ceil(week) : d3Time.timeMonday(week);\n          week = d3Time.timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(d3Time.timeSunday.count(d3Time.timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(d3Time.timeThursday.count(d3Time.timeYear(d), d) + (d3Time.timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(d3Time.timeMonday.count(d3Time.timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? d3Time.timeThursday(d) : d3Time.timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(d3Time.utcSunday.count(d3Time.utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d3Time.utcThursday.count(d3Time.utcYear(d), d) + (d3Time.utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(d3Time.utcMonday.count(d3Time.utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? d3Time.utcThursday(d) : d3Time.utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n\nvar locale;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale(definition) {\n  locale = formatLocale(definition);\n  exports.timeFormat = locale.format;\n  exports.timeParse = locale.parse;\n  exports.utcFormat = locale.utcFormat;\n  exports.utcParse = locale.utcParse;\n  return locale;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.timeFormatDefaultLocale = defaultLocale;\nexports.timeFormatLocale = formatLocale;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-scale/ v3.3.0 Copyright 2021 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-array'), require('d3-interpolate'), require('d3-format'), require('d3-time'), require('d3-time-format')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, (function (exports, d3Array, d3Interpolate, d3Format, d3Time, d3TimeFormat) { 'use strict';\n\nfunction initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nfunction initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n\nconst implicit = Symbol(\"implicit\");\n\nfunction ordinal() {\n  var index = new Map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    for (const value of _) {\n      const key = value + \"\";\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = d3Array.range(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n\nfunction constants(x) {\n  return function() {\n    return x;\n  };\n}\n\nfunction number$1(x) {\n  return +x;\n}\n\nvar unit = [0, 1];\n\nfunction identity$1(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constants(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = d3Array.bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy$1(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction transformer$2() {\n  var domain = unit,\n      range = unit,\n      interpolate = d3Interpolate.interpolate,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity$1,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity$1) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), d3Interpolate.interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = d3Interpolate.interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity$1, rescale()) : clamp !== identity$1;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nfunction continuous() {\n  return transformer$2()(identity$1, identity$1);\n}\n\nfunction tickFormat(start, stop, count, specifier) {\n  var step = d3Array.tickStep(start, stop, count),\n      precision;\n  specifier = d3Format.formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;\n      return d3Format.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return d3Format.format(specifier);\n}\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = d3Array.tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start;\n        d[i1] = stop;\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy$1(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n\nfunction identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = Array.from(_, number$1), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? Array.from(domain, number$1) : [0, 1];\n\n  return linearish(scale);\n}\n\nfunction nice(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = d3Array.ticks(u, v, n);\n    } else {\n      z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = d3Format.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nfunction log() {\n  var scale = loggish(transformer$2()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy$1(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nfunction symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nfunction symlog() {\n  var scale = symlogish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nfunction powish(transform) {\n  var scale = transform(identity$1, identity$1),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity$1, identity$1)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nfunction pow() {\n  var scale = powish(transformer$2());\n\n  scale.copy = function() {\n    return copy$1(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nfunction sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n\nfunction square(x) {\n  return Math.sign(x) * x * x;\n}\n\nfunction unsquare(x) {\n  return Math.sign(x) * Math.sqrt(Math.abs(x));\n}\n\nfunction radial() {\n  var squared = continuous(),\n      range = [0, 1],\n      round = false,\n      unknown;\n\n  function scale(x) {\n    var y = unsquare(squared(x));\n    return isNaN(y) ? unknown : round ? Math.round(y) : y;\n  }\n\n  scale.invert = function(y) {\n    return squared.invert(square(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (squared.domain(_), scale) : squared.domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (squared.range((range = Array.from(_, number$1)).map(square)), scale) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return scale.range(_).round(true);\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, scale) : round;\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return radial(squared.domain(), range)\n        .round(round)\n        .clamp(squared.clamp())\n        .unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n\nfunction quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = d3Array.quantileSorted(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : range[d3Array.bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x != null && x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n\nfunction threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x != null && x <= x ? range[d3Array.bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    if (!interval || typeof interval.range !== \"function\") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);\n    return interval ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function() {\n    return copy$1(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));\n  };\n\n  return scale;\n}\n\nfunction time() {\n  return initRange.apply(calendar(d3Time.timeTicks, d3Time.timeTickInterval, d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n\nfunction utcTime() {\n  return initRange.apply(calendar(d3Time.utcTicks, d3Time.utcTickInterval, d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n\nfunction transformer$1() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity$1,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(d3Interpolate.interpolate);\n\n  scale.rangeRound = range(d3Interpolate.interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nfunction sequential() {\n  var scale = linearish(transformer$1()(identity$1));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialLog() {\n  var scale = loggish(transformer$1()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSymlog() {\n  var scale = symlogish(transformer$1());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialPow() {\n  var scale = powish(transformer$1());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n\nfunction sequentialQuantile() {\n  var domain = [],\n      interpolator = identity$1;\n\n  function scale(x) {\n    if (x != null && !isNaN(x = +x)) return interpolator((d3Array.bisect(domain, x, 1) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(d3Array.ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.range = function() {\n    return domain.map((d, i) => interpolator(i / (domain.length - 1)));\n  };\n\n  scale.quantiles = function(n) {\n    return Array.from({length: n + 1}, (_, i) => d3Array.quantile(domain, i / n));\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity$1,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = d3Interpolate.piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(d3Interpolate.interpolate);\n\n  scale.rangeRound = range(d3Interpolate.interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nfunction diverging() {\n  var scale = linearish(transformer()(identity$1));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nfunction divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n\nexports.scaleBand = band;\nexports.scaleDiverging = diverging;\nexports.scaleDivergingLog = divergingLog;\nexports.scaleDivergingPow = divergingPow;\nexports.scaleDivergingSqrt = divergingSqrt;\nexports.scaleDivergingSymlog = divergingSymlog;\nexports.scaleIdentity = identity;\nexports.scaleImplicit = implicit;\nexports.scaleLinear = linear;\nexports.scaleLog = log;\nexports.scaleOrdinal = ordinal;\nexports.scalePoint = point;\nexports.scalePow = pow;\nexports.scaleQuantile = quantile;\nexports.scaleQuantize = quantize;\nexports.scaleRadial = radial;\nexports.scaleSequential = sequential;\nexports.scaleSequentialLog = sequentialLog;\nexports.scaleSequentialPow = sequentialPow;\nexports.scaleSequentialQuantile = sequentialQuantile;\nexports.scaleSequentialSqrt = sequentialSqrt;\nexports.scaleSequentialSymlog = sequentialSymlog;\nexports.scaleSqrt = sqrt;\nexports.scaleSymlog = symlog;\nexports.scaleThreshold = threshold;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.tickFormat = tickFormat;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "// https://d3js.org/d3-scale-chromatic/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-interpolate'), require('d3-color')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-interpolate', 'd3-color'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3));\n}(this, function (exports, d3Interpolate, d3Color) { 'use strict';\n\nfunction colors(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar Accent = colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n\nvar Dark2 = colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n\nvar Paired = colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n\nvar Pastel1 = colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n\nvar Pastel2 = colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n\nvar Set1 = colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n\nvar Set2 = colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n\nvar Set3 = colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n\nvar Tableau10 = colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n\nvar ramp = scheme => d3Interpolate.interpolateRgbBasis(scheme[scheme.length - 1]);\n\nvar scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nvar BrBG = ramp(scheme);\n\nvar scheme$1 = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nvar PRGn = ramp(scheme$1);\n\nvar scheme$2 = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nvar PiYG = ramp(scheme$2);\n\nvar scheme$3 = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nvar PuOr = ramp(scheme$3);\n\nvar scheme$4 = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nvar RdBu = ramp(scheme$4);\n\nvar scheme$5 = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nvar RdGy = ramp(scheme$5);\n\nvar scheme$6 = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nvar RdYlBu = ramp(scheme$6);\n\nvar scheme$7 = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nvar RdYlGn = ramp(scheme$7);\n\nvar scheme$8 = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nvar Spectral = ramp(scheme$8);\n\nvar scheme$9 = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nvar BuGn = ramp(scheme$9);\n\nvar scheme$a = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nvar BuPu = ramp(scheme$a);\n\nvar scheme$b = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nvar GnBu = ramp(scheme$b);\n\nvar scheme$c = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nvar OrRd = ramp(scheme$c);\n\nvar scheme$d = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nvar PuBuGn = ramp(scheme$d);\n\nvar scheme$e = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nvar PuBu = ramp(scheme$e);\n\nvar scheme$f = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nvar PuRd = ramp(scheme$f);\n\nvar scheme$g = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nvar RdPu = ramp(scheme$g);\n\nvar scheme$h = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nvar YlGnBu = ramp(scheme$h);\n\nvar scheme$i = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nvar YlGn = ramp(scheme$i);\n\nvar scheme$j = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nvar YlOrBr = ramp(scheme$j);\n\nvar scheme$k = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nvar YlOrRd = ramp(scheme$k);\n\nvar scheme$l = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nvar Blues = ramp(scheme$l);\n\nvar scheme$m = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nvar Greens = ramp(scheme$m);\n\nvar scheme$n = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nvar Greys = ramp(scheme$n);\n\nvar scheme$o = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nvar Purples = ramp(scheme$o);\n\nvar scheme$p = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nvar Reds = ramp(scheme$p);\n\nvar scheme$q = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nvar Oranges = ramp(scheme$q);\n\nfunction cividis(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n\nvar cubehelix = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0));\n\nvar warm = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar cool = d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8));\n\nvar c = d3Color.cubehelix();\n\nfunction rainbow(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n\nvar c$1 = d3Color.rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nfunction sinebow(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c$1.r = 255 * (x = Math.sin(t)) * x;\n  c$1.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c$1.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c$1 + \"\";\n}\n\nfunction turbo(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n\nfunction ramp$1(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp$1(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp$1(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp$1(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp$1(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nexports.interpolateBlues = Blues;\nexports.interpolateBrBG = BrBG;\nexports.interpolateBuGn = BuGn;\nexports.interpolateBuPu = BuPu;\nexports.interpolateCividis = cividis;\nexports.interpolateCool = cool;\nexports.interpolateCubehelixDefault = cubehelix;\nexports.interpolateGnBu = GnBu;\nexports.interpolateGreens = Greens;\nexports.interpolateGreys = Greys;\nexports.interpolateInferno = inferno;\nexports.interpolateMagma = magma;\nexports.interpolateOrRd = OrRd;\nexports.interpolateOranges = Oranges;\nexports.interpolatePRGn = PRGn;\nexports.interpolatePiYG = PiYG;\nexports.interpolatePlasma = plasma;\nexports.interpolatePuBu = PuBu;\nexports.interpolatePuBuGn = PuBuGn;\nexports.interpolatePuOr = PuOr;\nexports.interpolatePuRd = PuRd;\nexports.interpolatePurples = Purples;\nexports.interpolateRainbow = rainbow;\nexports.interpolateRdBu = RdBu;\nexports.interpolateRdGy = RdGy;\nexports.interpolateRdPu = RdPu;\nexports.interpolateRdYlBu = RdYlBu;\nexports.interpolateRdYlGn = RdYlGn;\nexports.interpolateReds = Reds;\nexports.interpolateSinebow = sinebow;\nexports.interpolateSpectral = Spectral;\nexports.interpolateTurbo = turbo;\nexports.interpolateViridis = viridis;\nexports.interpolateWarm = warm;\nexports.interpolateYlGn = YlGn;\nexports.interpolateYlGnBu = YlGnBu;\nexports.interpolateYlOrBr = YlOrBr;\nexports.interpolateYlOrRd = YlOrRd;\nexports.schemeAccent = Accent;\nexports.schemeBlues = scheme$l;\nexports.schemeBrBG = scheme;\nexports.schemeBuGn = scheme$9;\nexports.schemeBuPu = scheme$a;\nexports.schemeCategory10 = category10;\nexports.schemeDark2 = Dark2;\nexports.schemeGnBu = scheme$b;\nexports.schemeGreens = scheme$m;\nexports.schemeGreys = scheme$n;\nexports.schemeOrRd = scheme$c;\nexports.schemeOranges = scheme$q;\nexports.schemePRGn = scheme$1;\nexports.schemePaired = Paired;\nexports.schemePastel1 = Pastel1;\nexports.schemePastel2 = Pastel2;\nexports.schemePiYG = scheme$2;\nexports.schemePuBu = scheme$e;\nexports.schemePuBuGn = scheme$d;\nexports.schemePuOr = scheme$3;\nexports.schemePuRd = scheme$f;\nexports.schemePurples = scheme$o;\nexports.schemeRdBu = scheme$4;\nexports.schemeRdGy = scheme$5;\nexports.schemeRdPu = scheme$g;\nexports.schemeRdYlBu = scheme$6;\nexports.schemeRdYlGn = scheme$7;\nexports.schemeReds = scheme$p;\nexports.schemeSet1 = Set1;\nexports.schemeSet2 = Set2;\nexports.schemeSet3 = Set3;\nexports.schemeSpectral = scheme$8;\nexports.schemeTableau10 = Tableau10;\nexports.schemeYlGn = scheme$i;\nexports.schemeYlGnBu = scheme$h;\nexports.schemeYlOrBr = scheme$j;\nexports.schemeYlOrRd = scheme$k;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "// https://d3js.org/d3-shape/ v2.1.0 Copyright 2021 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-path')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.d3 = global.d3 || {}, global.d3));\n}(this, (function (exports, d3Path) { 'use strict';\n\nfunction constant(x) {\n  return function constant() {\n    return x;\n  };\n}\n\nvar abs = Math.abs;\nvar atan2 = Math.atan2;\nvar cos = Math.cos;\nvar max = Math.max;\nvar min = Math.min;\nvar sin = Math.sin;\nvar sqrt = Math.sqrt;\n\nvar epsilon = 1e-12;\nvar pi = Math.PI;\nvar halfPi = pi / 2;\nvar tau = 2 * pi;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nfunction arc() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = d3Path.path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 \u2265 r0, da1 \u2265 da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector\u2019s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it\u2019s a circular sector?\n      // Or perhaps it\u2019s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector\u2019s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n\nvar slice = Array.prototype.slice;\n\nfunction array(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nfunction curveLinear(context) {\n  return new Linear(context);\n}\n\nfunction x(p) {\n  return p[0];\n}\n\nfunction y(p) {\n  return p[1];\n}\n\nfunction line(x$1, y$1) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x$1 = typeof x$1 === \"function\" ? x$1 : (x$1 === undefined) ? x : constant(x$1);\n  y$1 = typeof y$1 === \"function\" ? y$1 : (y$1 === undefined) ? y : constant(y$1);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$1(d, i, data), +y$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant(+_), line) : x$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant(+_), line) : y$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n\nfunction area(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? x : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? y : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = d3Path.path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n\nfunction descending$1(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n\nfunction identity(d) {\n  return d;\n}\n\nfunction pie() {\n  var value = identity,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n\nvar curveRadialLinear = curveRadial$1(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial$1(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial$1(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nfunction lineRadial$1() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n\nfunction areaRadial() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial$1(_)) : c()._curve;\n  };\n\n  return a;\n}\n\nfunction pointRadial(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$1 = x,\n      y$1 = y,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = d3Path.path();\n    curve(context, +x$1.apply(this, (argv[0] = s, argv)), +y$1.apply(this, argv), +x$1.apply(this, (argv[0] = t, argv)), +y$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$1 = typeof _ === \"function\" ? _ : constant(+_), link) : x$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$1 = typeof _ === \"function\" ? _ : constant(+_), link) : y$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n\nvar cross = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nfunction symbol(type, size) {\n  var context = null;\n  type = typeof type === \"function\" ? type : constant(type || circle);\n  size = typeof size === \"function\" ? size : constant(size === undefined ? 64 : +size);\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = d3Path.path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n\nfunction noop() {}\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$3(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basis(context) {\n  return new Basis(context);\n}\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisClosed(context) {\n  return new BasisClosed(context);\n}\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nfunction basisOpen(context) {\n  return new BasisOpen(context);\n}\n\nclass Bump {\n  constructor(context, x) {\n    this._context = context;\n    this._x = x;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: {\n        this._point = 1;\n        if (this._line) this._context.lineTo(x, y);\n        else this._context.moveTo(x, y);\n        break;\n      }\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);\n        else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n        break;\n      }\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nfunction bumpX(context) {\n  return new Bump(context, true);\n}\n\nfunction bumpY(context) {\n  return new Bump(context, false);\n}\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$2(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n\nfunction point$1(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$1(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$1(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$1(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nfunction linearClosed(context) {\n  return new LinearClosed(context);\n}\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic B\u00E9zier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nfunction natural(context) {\n  return new Natural(context);\n}\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nfunction step(context) {\n  return new Step(context, 0.5);\n}\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nfunction none$1(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n\nfunction none(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stackSeries(key) {\n  const series = [];\n  series.key = key;\n  return series;\n}\n\nfunction stack() {\n  var keys = constant([]),\n      order = none,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var sz = Array.from(keys.apply(this, arguments), stackSeries),\n        i, n = sz.length, j = -1,\n        oz;\n\n    for (const d of data) {\n      for (i = 0, ++j; i < n; ++i) {\n        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;\n      }\n    }\n\n    for (i = 0, oz = array(order(sz)); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none : typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n}\n\nfunction expand(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n}\n\nfunction diverging(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n\nfunction silhouette(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n}\n\nfunction wiggle(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n}\n\nfunction appearance(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n\nfunction ascending(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nfunction sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nfunction descending(series) {\n  return ascending(series).reverse();\n}\n\nfunction insideOut(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n\nfunction reverse(series) {\n  return none(series).reverse();\n}\n\nexports.arc = arc;\nexports.area = area;\nexports.areaRadial = areaRadial;\nexports.curveBasis = basis;\nexports.curveBasisClosed = basisClosed;\nexports.curveBasisOpen = basisOpen;\nexports.curveBumpX = bumpX;\nexports.curveBumpY = bumpY;\nexports.curveBundle = bundle;\nexports.curveCardinal = cardinal;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveLinear = curveLinear;\nexports.curveLinearClosed = linearClosed;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.line = line;\nexports.lineRadial = lineRadial$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkRadial = linkRadial;\nexports.linkVertical = linkVertical;\nexports.pie = pie;\nexports.pointRadial = pointRadial;\nexports.radialArea = areaRadial;\nexports.radialLine = lineRadial$1;\nexports.stack = stack;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAppearance = appearance;\nexports.stackOrderAscending = ascending;\nexports.stackOrderDescending = descending;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none;\nexports.stackOrderReverse = reverse;\nexports.symbol = symbol;\nexports.symbolCircle = circle;\nexports.symbolCross = cross;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.symbols = symbols;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "// https://d3js.org/d3-zoom/ v2.0.0 Copyright 2020 Mike Bostock\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-dispatch'), require('d3-drag'), require('d3-interpolate'), require('d3-selection'), require('d3-transition')) :\ntypeof define === 'function' && define.amd ? define(['exports', 'd3-dispatch', 'd3-drag', 'd3-interpolate', 'd3-selection', 'd3-transition'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}, global.d3, global.d3, global.d3, global.d3, global.d3));\n}(this, (function (exports, d3Dispatch, d3Drag, d3Interpolate, d3Selection, d3Transition) { 'use strict';\n\nvar constant = x => () => x;\n\nfunction ZoomEvent(type, {\n  sourceEvent,\n  target,\n  transform,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    transform: {value: transform, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nfunction transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n\nfunction nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nfunction noevent(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nfunction zoom() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = d3Interpolate.interpolateZoom,\n      listeners = d3Dispatch.dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = d3Selection.select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = d3Selection.pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won\u2019t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      d3Transition.interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, args, true).event(event),\n        v = d3Selection.select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = d3Selection.pointer(event, currentTarget),\n        currentTarget = event.currentTarget,\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    d3Drag.dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    d3Transition.interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = d3Selection.pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      d3Drag.dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = d3Selection.pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) d3Selection.select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else d3Selection.select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = d3Selection.pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      d3Transition.interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = d3Selection.pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = d3Selection.pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = d3Selection.select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n\nexports.zoom = zoom;\nexports.zoomIdentity = identity;\nexports.zoomTransform = transform;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar d3Array = require('d3-array');\nvar d3Axis = require('d3-axis');\nvar d3Brush = require('d3-brush');\nvar d3Chord = require('d3-chord');\nvar d3Color = require('d3-color');\nvar d3Contour = require('d3-contour');\nvar d3Delaunay = require('d3-delaunay');\nvar d3Dispatch = require('d3-dispatch');\nvar d3Drag = require('d3-drag');\nvar d3Dsv = require('d3-dsv');\nvar d3Ease = require('d3-ease');\nvar d3Fetch = require('d3-fetch');\nvar d3Force = require('d3-force');\nvar d3Format = require('d3-format');\nvar d3Geo = require('d3-geo');\nvar d3Hierarchy = require('d3-hierarchy');\nvar d3Interpolate = require('d3-interpolate');\nvar d3Path = require('d3-path');\nvar d3Polygon = require('d3-polygon');\nvar d3Quadtree = require('d3-quadtree');\nvar d3Random = require('d3-random');\nvar d3Scale = require('d3-scale');\nvar d3ScaleChromatic = require('d3-scale-chromatic');\nvar d3Selection = require('d3-selection');\nvar d3Shape = require('d3-shape');\nvar d3Time = require('d3-time');\nvar d3TimeFormat = require('d3-time-format');\nvar d3Timer = require('d3-timer');\nvar d3Transition = require('d3-transition');\nvar d3Zoom = require('d3-zoom');\n\nvar version = \"6.7.0\";\n\nexports.version = version;\nObject.keys(d3Array).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Array[k];\n\t\t}\n\t});\n});\nObject.keys(d3Axis).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Axis[k];\n\t\t}\n\t});\n});\nObject.keys(d3Brush).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Brush[k];\n\t\t}\n\t});\n});\nObject.keys(d3Chord).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Chord[k];\n\t\t}\n\t});\n});\nObject.keys(d3Color).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Color[k];\n\t\t}\n\t});\n});\nObject.keys(d3Contour).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Contour[k];\n\t\t}\n\t});\n});\nObject.keys(d3Delaunay).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Delaunay[k];\n\t\t}\n\t});\n});\nObject.keys(d3Dispatch).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Dispatch[k];\n\t\t}\n\t});\n});\nObject.keys(d3Drag).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Drag[k];\n\t\t}\n\t});\n});\nObject.keys(d3Dsv).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Dsv[k];\n\t\t}\n\t});\n});\nObject.keys(d3Ease).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Ease[k];\n\t\t}\n\t});\n});\nObject.keys(d3Fetch).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Fetch[k];\n\t\t}\n\t});\n});\nObject.keys(d3Force).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Force[k];\n\t\t}\n\t});\n});\nObject.keys(d3Format).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Format[k];\n\t\t}\n\t});\n});\nObject.keys(d3Geo).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Geo[k];\n\t\t}\n\t});\n});\nObject.keys(d3Hierarchy).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Hierarchy[k];\n\t\t}\n\t});\n});\nObject.keys(d3Interpolate).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Interpolate[k];\n\t\t}\n\t});\n});\nObject.keys(d3Path).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Path[k];\n\t\t}\n\t});\n});\nObject.keys(d3Polygon).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Polygon[k];\n\t\t}\n\t});\n});\nObject.keys(d3Quadtree).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Quadtree[k];\n\t\t}\n\t});\n});\nObject.keys(d3Random).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Random[k];\n\t\t}\n\t});\n});\nObject.keys(d3Scale).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Scale[k];\n\t\t}\n\t});\n});\nObject.keys(d3ScaleChromatic).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3ScaleChromatic[k];\n\t\t}\n\t});\n});\nObject.keys(d3Selection).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Selection[k];\n\t\t}\n\t});\n});\nObject.keys(d3Shape).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Shape[k];\n\t\t}\n\t});\n});\nObject.keys(d3Time).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Time[k];\n\t\t}\n\t});\n});\nObject.keys(d3TimeFormat).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3TimeFormat[k];\n\t\t}\n\t});\n});\nObject.keys(d3Timer).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Timer[k];\n\t\t}\n\t});\n});\nObject.keys(d3Transition).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Transition[k];\n\t\t}\n\t});\n});\nObject.keys(d3Zoom).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () {\n\t\t\treturn d3Zoom[k];\n\t\t}\n\t});\n});\n", "/*\n    Project Name : midi-parser-js\n    Project Url  : https://github.com/colxi/midi-parser-js/\n    Author       : colxi\n    Author URL   : http://www.colxi.info/\n    Description  : MidiParser library reads .MID binary files, Base64 encoded MIDI Data,\n    or UInt8 Arrays, and outputs as a readable and structured JS object.\n*/\n\n(function(){\n    'use strict';\n\n    /**\n     * CROSSBROWSER & NODEjs POLYFILL for ATOB() -\n     * By: https://github.com/MaxArt2501 (modified)\n     * @param  {string} string [description]\n     * @return {[type]}        [description]\n     */\n    const _atob = function(string) {\n        // base64 character set, plus padding character (=)\n        let b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        // Regular expression to check formal correctness of base64 encoded strings\n        let b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n        // remove data type signatures at the begining of the string\n        // eg :  \"data:audio/mid;base64,\"\n        string = string.replace( /^.*?base64,/ , '');\n        // atob can work with strings with whitespaces, even inside the encoded part,\n        // but only \\t, \\n, \\f, \\r and ' ', which can be stripped.\n        string = String(string).replace(/[\\t\\n\\f\\r ]+/g, '');\n        if (!b64re.test(string))\n            throw new TypeError('Failed to execute _atob() : The string to be decoded is not correctly encoded.');\n\n        // Adding the padding if missing, for semplicity\n        string += '=='.slice(2 - (string.length & 3));\n        let bitmap, result = '';\n        let r1, r2, i = 0;\n        for (; i < string.length;) {\n            bitmap = b64.indexOf(string.charAt(i++)) << 18 | b64.indexOf(string.charAt(i++)) << 12\n                    | (r1 = b64.indexOf(string.charAt(i++))) << 6 | (r2 = b64.indexOf(string.charAt(i++)));\n\n            result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255)\n                    : r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255)\n                    : String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);\n        }\n        return result;\n    };\n\n\n    /**\n     * [MidiParser description]\n     * @type {Object}\n     */\n    const MidiParser  = {\n        // debug (bool), when enabled will log in console unimplemented events\n        // warnings and internal handled errors.\n        debug: false,\n\n        /**\n         * [parse description]\n         * @param  {[type]} input     [description]\n         * @param  {[type]} _callback [description]\n         * @return {[type]}           [description]\n         */\n        parse: function(input, _callback){\n            if(input instanceof Uint8Array) return MidiParser.Uint8(input);\n            else if(typeof input === 'string') return MidiParser.Base64(input);\n            else if(input instanceof HTMLElement && input.type === 'file') return MidiParser.addListener(input , _callback);\n            else throw new Error('MidiParser.parse() : Invalid input provided');\n        },\n\n        /**\n         * addListener() should be called in order attach a listener to the INPUT HTML element\n         * that will provide the binary data automating the conversion, and returning\n         * the structured data to the provided callback function.\n         */\n        addListener: function(_fileElement, _callback){\n            if(!File || !FileReader) throw new Error('The File|FileReader APIs are not supported in this browser. Use instead MidiParser.Base64() or MidiParser.Uint8()');\n\n            // validate provided element\n            if( _fileElement === undefined ||\n                !(_fileElement instanceof HTMLElement) ||\n                _fileElement.tagName !== 'INPUT' ||\n                _fileElement.type.toLowerCase() !== 'file' \n            ){\n                console.warn('MidiParser.addListener() : Provided element is not a valid FILE INPUT element');\n                return false;\n            }\n            _callback = _callback || function(){};\n\n            _fileElement.addEventListener('change', function(InputEvt){             // set the 'file selected' event handler\n                if (!InputEvt.target.files.length) return false;                    // return false if no elements where selected\n                console.log('MidiParser.addListener() : File detected in INPUT ELEMENT processing data..');\n                let reader = new FileReader();                                      // prepare the file Reader\n                reader.readAsArrayBuffer(InputEvt.target.files[0]);                 // read the binary data\n                reader.onload =  function(e){\n                    _callback( MidiParser.Uint8(new Uint8Array(e.target.result)));  // encode data with Uint8Array and call the parser\n                };\n            });\n        },\n\n        /**\n         * Base64() : convert baset4 string into uint8 array buffer, before performing the\n         * parsing subroutine.\n         */\n        Base64 : function(b64String){\n            b64String = String(b64String);\n\n            let raw = _atob(b64String);\n            let rawLength = raw.length;\n            let t_array = new Uint8Array(new ArrayBuffer(rawLength));\n\n            for(let i=0; i<rawLength; i++) t_array[i] = raw.charCodeAt(i);\n            return  MidiParser.Uint8(t_array) ;\n        },\n\n        /**\n         * parse() : function reads the binary data, interpreting and spliting each chuck\n         * and parsing it to a structured Object. When job is finised returns the object\n         * or 'false' if any error was generated.\n         */\n        Uint8: function(FileAsUint8Array){\n            let file = {\n                data: null,\n                pointer: 0,\n                movePointer: function(_bytes){                                      // move the pointer negative and positive direction\n                    this.pointer += _bytes;\n                    return this.pointer;\n                },\n                readInt: function(_bytes){                                          // get integer from next _bytes group (big-endian)\n                    _bytes = Math.min(_bytes, this.data.byteLength-this.pointer);\n                    if (_bytes < 1) return -1;                                                                      // EOF\n                    let value = 0;\n                    if(_bytes > 1){\n                        for(let i=1; i<= (_bytes-1); i++){\n                            value += this.data.getUint8(this.pointer) * Math.pow(256, (_bytes - i));\n                            this.pointer++;\n                        }\n                    }\n                    value += this.data.getUint8(this.pointer);\n                    this.pointer++;\n                    return value;\n                },\n                readStr: function(_bytes){                                          // read as ASCII chars, the followoing _bytes\n                    let text = '';\n                    for(let char=1; char <= _bytes; char++) text +=  String.fromCharCode(this.readInt(1));\n                    return text;\n                },\n                readIntVLV: function(){                                             // read a variable length value\n                    let value = 0;\n                    if ( this.pointer >= this.data.byteLength ){\n                        return -1;                                                  // EOF\n                    }else if(this.data.getUint8(this.pointer) < 128){               // ...value in a single byte\n                        value = this.readInt(1);\n                    }else{                                                          // ...value in multiple bytes\n                        let FirstBytes = [];\n                        while(this.data.getUint8(this.pointer) >= 128){\n                            FirstBytes.push(this.readInt(1) - 128);\n                        }\n                        let lastByte  = this.readInt(1);\n                        for(let dt = 1; dt <= FirstBytes.length; dt++){\n                            value += FirstBytes[FirstBytes.length - dt] * Math.pow(128, dt);\n                        }\n                        value += lastByte;\n                    }\n                    return value;\n                }\n            };\n\n            file.data = new DataView(FileAsUint8Array.buffer, FileAsUint8Array.byteOffset, FileAsUint8Array.byteLength);                                            // 8 bits bytes file data array\n            //  ** read FILE HEADER\n            if(file.readInt(4) !== 0x4D546864){\n                console.warn('Header validation failed (not MIDI standard or file corrupt.)');\n                return false;                                                       // Header validation failed (not MIDI standard or file corrupt.)\n            }\n            let headerSize          = file.readInt(4);                              // header size (unused var), getted just for read pointer movement\n            let MIDI                = {};                                           // create new midi object\n            MIDI.formatType         = file.readInt(2);                              // get MIDI Format Type\n            MIDI.tracks             = file.readInt(2);                              // get ammount of track chunks\n            MIDI.track              = [];                                           // create array key for track data storing\n            let timeDivisionByte1   = file.readInt(1);                              // get Time Division first byte\n            let timeDivisionByte2   = file.readInt(1);                              // get Time Division second byte\n            if(timeDivisionByte1 >= 128){                                           // discover Time Division mode (fps or tpf)\n                MIDI.timeDivision    = [];\n                MIDI.timeDivision[0] = timeDivisionByte1 - 128;                     // frames per second MODE  (1st byte)\n                MIDI.timeDivision[1] = timeDivisionByte2;                           // ticks in each frame     (2nd byte)\n            }else MIDI.timeDivision  = (timeDivisionByte1 * 256) + timeDivisionByte2;// else... ticks per beat MODE  (2 bytes value)\n\n            //  ** read TRACK CHUNK\n            for(let t=1; t <= MIDI.tracks; t++){\n                MIDI.track[t-1]     = {event: []};                                  // create new Track entry in Array\n                let headerValidation = file.readInt(4);\n                if ( headerValidation === -1 ) break;                               // EOF\n                if(headerValidation !== 0x4D54726B) return false;                   // Track chunk header validation failed.\n                file.readInt(4);                                                    // move pointer. get chunk size (bytes length)\n                let e               = 0;                                            // init event counter\n                let endOfTrack      = false;                                        // FLAG for track reading secuence breaking\n                // ** read EVENT CHUNK\n                let statusByte;\n                let laststatusByte;\n                while(!endOfTrack){\n                    e++;                                                            // increase by 1 event counter\n                    MIDI.track[t-1].event[e-1] = {};                                // create new event object, in events array\n                    MIDI.track[t-1].event[e-1].deltaTime  = file.readIntVLV();      // get DELTA TIME OF MIDI event (Variable Length Value)\n                    statusByte = file.readInt(1);                                   // read EVENT TYPE (STATUS BYTE)\n                    if(statusByte === -1) break;                                    // EOF\n                    else if(statusByte >= 128) laststatusByte = statusByte;         // NEW STATUS BYTE DETECTED\n                    else{                                                           // 'RUNNING STATUS' situation detected\n                        statusByte = laststatusByte;                                // apply last loop, Status Byte\n                        file.movePointer(-1);                                       // move back the pointer (cause readed byte is not status byte)\n                    }\n\n\n                    //\n                    // ** IS META EVENT\n                    //\n                    if(statusByte === 0xFF){                                        // Meta Event type\n                        MIDI.track[t-1].event[e-1].type = 0xFF;                     // assign metaEvent code to array\n                        MIDI.track[t-1].event[e-1].metaType =  file.readInt(1);     // assign metaEvent subtype\n                        let metaEventLength = file.readIntVLV();                    // get the metaEvent length\n                        switch(MIDI.track[t-1].event[e-1].metaType){\n                            case 0x2F:                                              // end of track, has no data byte\n                            case -1:                                                // EOF\n                                endOfTrack = true;                                  // change FLAG to force track reading loop breaking\n                                break;\n                            case 0x01:                                              // Text Event\n                            case 0x02:                                              // Copyright Notice\n                            case 0x03:\n                            case 0x04:                                              // Instrument Name\n                            case 0x05:                                              // Lyrics)\n                            case 0x07:                                              // Cue point                                         // Sequence/Track Name (documentation: http://www.ta7.de/txt/musik/musi0006.htm)\n                            case 0x06:                                              // Marker\n                                MIDI.track[t-1].event[e-1].data = file.readStr(metaEventLength);\n                                break;\n                            case 0x21:                                              // MIDI PORT\n                            case 0x59:                                              // Key Signature\n                            case 0x51:                                              // Set Tempo\n                                MIDI.track[t-1].event[e-1].data = file.readInt(metaEventLength);\n                                break;\n                            case 0x54:                                              // SMPTE Offset\n                                MIDI.track[t-1].event[e-1].data    = [];\n                                MIDI.track[t-1].event[e-1].data[0] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[1] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[2] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[3] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[4] = file.readInt(1);\n                                break;\n                            case 0x58:                                              // Time Signature\n                                MIDI.track[t-1].event[e-1].data    = [];\n                                MIDI.track[t-1].event[e-1].data[0] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[1] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[2] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[3] = file.readInt(1);\n                                break;\n                            default :\n                                // if user provided a custom interpreter, call it\n                                // and assign to event the returned data\n                                if( this.customInterpreter !== null){\n                                    MIDI.track[t-1].event[e-1].data = this.customInterpreter( MIDI.track[t-1].event[e-1].metaType, file, metaEventLength);\n                                }\n                                // if no customInterpretr is provided, or returned\n                                // false (=apply default), perform default action\n                                if(this.customInterpreter === null || MIDI.track[t-1].event[e-1].data === false){\n                                    file.readInt(metaEventLength);\n                                    MIDI.track[t-1].event[e-1].data = file.readInt(metaEventLength);\n                                    if (this.debug) console.info('Unimplemented 0xFF meta event! data block readed as Integer');\n                                }\n                        }\n                    }\n\n                    //\n                    // IS REGULAR EVENT\n                    //\n                    else{                                                           // MIDI Control Events OR System Exclusive Events\n                        statusByte = statusByte.toString(16).split('');             // split the status byte HEX representation, to obtain 4 bits values\n                        if(!statusByte[1]) statusByte.unshift('0');                 // force 2 digits\n                        MIDI.track[t-1].event[e-1].type = parseInt(statusByte[0], 16);// first byte is EVENT TYPE ID\n                        MIDI.track[t-1].event[e-1].channel = parseInt(statusByte[1], 16);// second byte is channel\n                        switch(MIDI.track[t-1].event[e-1].type){\n                            case 0xF:{                                              // System Exclusive Events\n\n                                // if user provided a custom interpreter, call it\n                                // and assign to event the returned data\n                                if( this.customInterpreter !== null){\n                                    MIDI.track[t-1].event[e-1].data = this.customInterpreter( MIDI.track[t-1].event[e-1].type, file , false);\n                                }\n\n                                // if no customInterpretr is provided, or returned\n                                // false (=apply default), perform default action\n                                if(this.customInterpreter === null || MIDI.track[t-1].event[e-1].data === false){\n                                    let event_length = file.readIntVLV();\n                                    MIDI.track[t-1].event[e-1].data = file.readInt(event_length);\n                                    if (this.debug) console.info('Unimplemented 0xF exclusive events! data block readed as Integer');\n                                }\n                                break;\n                            }\n                            case 0xA:                                               // Note Aftertouch\n                            case 0xB:                                               // Controller\n                            case 0xE:                                               // Pitch Bend Event\n                            case 0x8:                                               // Note off\n                            case 0x9:                                               // Note On\n                                MIDI.track[t-1].event[e-1].data = [];\n                                MIDI.track[t-1].event[e-1].data[0] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[1] = file.readInt(1);\n                                break;\n                            case 0xC:                                               // Program Change\n                            case 0xD:                                               // Channel Aftertouch\n                                MIDI.track[t-1].event[e-1].data = file.readInt(1);\n                                break;\n                            case -1:                                                // EOF\n                                endOfTrack = true;                                  // change FLAG to force track reading loop breaking\n                                break;\n                            default:\n                                // if user provided a custom interpreter, call it\n                                // and assign to event the returned data\n                                if( this.customInterpreter !== null){\n                                    MIDI.track[t-1].event[e-1].data = this.customInterpreter( MIDI.track[t-1].event[e-1].metaType, file , false);\n                                }\n\n                                // if no customInterpretr is provided, or returned\n                                // false (=apply default), perform default action\n                                if(this.customInterpreter === null || MIDI.track[t-1].event[e-1].data === false){\n                                    console.log('Unknown EVENT detected... reading cancelled!');\n                                    return false;\n                                }\n                        }\n                    }\n                }\n            }\n            return MIDI;\n        },\n\n        /**\n         * custom function to handle unimplemented, or custom midi messages.\n         * If message is a meta-event, the value of metaEventLength will be >0.\n         * Function must return the value to store, and pointer of dataView needs\n         * to be manually increased\n         * If you want default action to be performed, return false\n         */\n        customInterpreter : null // function( e_type , arrayByffer, metaEventLength){ return e_data_int }\n    };\n\n\n    // if running in NODE export module\n    if(typeof module !== 'undefined') module.exports = MidiParser;\n    else{\n        // if running in Browser, set a global variable.\n        let _global = typeof window === 'object' && window.self === window && window ||\n                    typeof self === 'object' && self.self === self && self ||\n                    typeof global === 'object' && global.global === global && global;\n\n        _global.MidiParser = MidiParser;\n    }\n\n\n    \n})();", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Core = {}));\n}(this, (function (exports) { 'use strict';\n\n  /**\r\n   * Fill a string with a repeated character\r\n   *\r\n   * @param character\r\n   * @param repetition\r\n   */\r\n  var fillStr = function (s, n) { return Array(Math.abs(n) + 1).join(s); };\r\n  function deprecate(original, alternative, fn) {\r\n      return function () {\r\n          var args = [];\r\n          for (var _i = 0; _i < arguments.length; _i++) {\r\n              args[_i] = arguments[_i];\r\n          }\r\n          // tslint:disable-next-line\r\n          console.warn(original + \" is deprecated. Use \" + alternative + \".\");\r\n          return fn.apply(this, args);\r\n      };\r\n  }\n\n  function isNamed(src) {\r\n      return src !== null && typeof src === \"object\" && typeof src.name === \"string\"\r\n          ? true\r\n          : false;\r\n  }\n\n  function isPitch(pitch) {\r\n      return pitch !== null &&\r\n          typeof pitch === \"object\" &&\r\n          typeof pitch.step === \"number\" &&\r\n          typeof pitch.alt === \"number\"\r\n          ? true\r\n          : false;\r\n  }\r\n  // The number of fifths of [C, D, E, F, G, A, B]\r\n  var FIFTHS = [0, 2, 4, -1, 1, 3, 5];\r\n  // The number of octaves it span each step\r\n  var STEPS_TO_OCTS = FIFTHS.map(function (fifths) {\r\n      return Math.floor((fifths * 7) / 12);\r\n  });\r\n  function encode(pitch) {\r\n      var step = pitch.step, alt = pitch.alt, oct = pitch.oct, _a = pitch.dir, dir = _a === void 0 ? 1 : _a;\r\n      var f = FIFTHS[step] + 7 * alt;\r\n      if (oct === undefined) {\r\n          return [dir * f];\r\n      }\r\n      var o = oct - STEPS_TO_OCTS[step] - 4 * alt;\r\n      return [dir * f, dir * o];\r\n  }\r\n  // We need to get the steps from fifths\r\n  // Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\r\n  // We add 1 to fifths to avoid negative numbers, so:\r\n  // for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\r\n  var FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\r\n  function decode(coord) {\r\n      var f = coord[0], o = coord[1], dir = coord[2];\r\n      var step = FIFTHS_TO_STEPS[unaltered(f)];\r\n      var alt = Math.floor((f + 1) / 7);\r\n      if (o === undefined) {\r\n          return { step: step, alt: alt, dir: dir };\r\n      }\r\n      var oct = o + 4 * alt + STEPS_TO_OCTS[step];\r\n      return { step: step, alt: alt, oct: oct, dir: dir };\r\n  }\r\n  // Return the number of fifths as if it were unaltered\r\n  function unaltered(f) {\r\n      var i = (f + 1) % 7;\r\n      return i < 0 ? 7 + i : i;\r\n  }\n\n  var NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\r\n  var cache$1 = new Map();\r\n  var stepToLetter = function (step) { return \"CDEFGAB\".charAt(step); };\r\n  var altToAcc = function (alt) {\r\n      return alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\r\n  };\r\n  var accToAlt = function (acc) {\r\n      return acc[0] === \"b\" ? -acc.length : acc.length;\r\n  };\r\n  /**\r\n   * Given a note literal (a note name or a note object), returns the Note object\r\n   * @example\r\n   * note('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\r\n   */\r\n  function note(src) {\r\n      var cached = cache$1.get(src);\r\n      if (cached) {\r\n          return cached;\r\n      }\r\n      var value = typeof src === \"string\"\r\n          ? parse$1(src)\r\n          : isPitch(src)\r\n              ? note(pitchName$1(src))\r\n              : isNamed(src)\r\n                  ? note(src.name)\r\n                  : NoNote;\r\n      cache$1.set(src, value);\r\n      return value;\r\n  }\r\n  var REGEX$1 = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\r\n  /**\r\n   * @private\r\n   */\r\n  function tokenizeNote(str) {\r\n      var m = REGEX$1.exec(str);\r\n      return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\r\n  }\r\n  /**\r\n   * @private\r\n   */\r\n  function coordToNote(noteCoord) {\r\n      return note(decode(noteCoord));\r\n  }\r\n  var mod = function (n, m) { return ((n % m) + m) % m; };\r\n  var SEMI = [0, 2, 4, 5, 7, 9, 11];\r\n  function parse$1(noteName) {\r\n      var tokens = tokenizeNote(noteName);\r\n      if (tokens[0] === \"\" || tokens[3] !== \"\") {\r\n          return NoNote;\r\n      }\r\n      var letter = tokens[0];\r\n      var acc = tokens[1];\r\n      var octStr = tokens[2];\r\n      var step = (letter.charCodeAt(0) + 3) % 7;\r\n      var alt = accToAlt(acc);\r\n      var oct = octStr.length ? +octStr : undefined;\r\n      var coord = encode({ step: step, alt: alt, oct: oct });\r\n      var name = letter + acc + octStr;\r\n      var pc = letter + acc;\r\n      var chroma = (SEMI[step] + alt + 120) % 12;\r\n      var height = oct === undefined\r\n          ? mod(SEMI[step] + alt, 12) - 12 * 99\r\n          : SEMI[step] + alt + 12 * (oct + 1);\r\n      var midi = height >= 0 && height <= 127 ? height : null;\r\n      var freq = oct === undefined ? null : Math.pow(2, (height - 69) / 12) * 440;\r\n      return {\r\n          empty: false,\r\n          acc: acc,\r\n          alt: alt,\r\n          chroma: chroma,\r\n          coord: coord,\r\n          freq: freq,\r\n          height: height,\r\n          letter: letter,\r\n          midi: midi,\r\n          name: name,\r\n          oct: oct,\r\n          pc: pc,\r\n          step: step,\r\n      };\r\n  }\r\n  function pitchName$1(props) {\r\n      var step = props.step, alt = props.alt, oct = props.oct;\r\n      var letter = stepToLetter(step);\r\n      if (!letter) {\r\n          return \"\";\r\n      }\r\n      var pc = letter + altToAcc(alt);\r\n      return oct || oct === 0 ? pc + oct : pc;\r\n  }\n\n  var NoInterval = { empty: true, name: \"\", acc: \"\" };\r\n  // shorthand tonal notation (with quality after number)\r\n  var INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\r\n  // standard shorthand notation (with quality before number)\r\n  var INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\r\n  var REGEX = new RegExp(\"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\");\r\n  /**\r\n   * @private\r\n   */\r\n  function tokenizeInterval(str) {\r\n      var m = REGEX.exec(\"\" + str);\r\n      if (m === null) {\r\n          return [\"\", \"\"];\r\n      }\r\n      return m[1] ? [m[1], m[2]] : [m[4], m[3]];\r\n  }\r\n  var cache = {};\r\n  /**\r\n   * Get interval properties. It returns an object with:\r\n   *\r\n   * - name: the interval name\r\n   * - num: the interval number\r\n   * - type: 'perfectable' or 'majorable'\r\n   * - q: the interval quality (d, m, M, A)\r\n   * - dir: interval direction (1 ascending, -1 descending)\r\n   * - simple: the simplified number\r\n   * - semitones: the size in semitones\r\n   * - chroma: the interval chroma\r\n   *\r\n   * @param {string} interval - the interval name\r\n   * @return {Object} the interval properties\r\n   *\r\n   * @example\r\n   * import { interval } from '@tonaljs/core'\r\n   * interval('P5').semitones // => 7\r\n   * interval('m3').type // => 'majorable'\r\n   */\r\n  function interval(src) {\r\n      return typeof src === \"string\"\r\n          ? cache[src] || (cache[src] = parse(src))\r\n          : isPitch(src)\r\n              ? interval(pitchName(src))\r\n              : isNamed(src)\r\n                  ? interval(src.name)\r\n                  : NoInterval;\r\n  }\r\n  var SIZES = [0, 2, 4, 5, 7, 9, 11];\r\n  var TYPES = \"PMMPPMM\";\r\n  function parse(str) {\r\n      var tokens = tokenizeInterval(str);\r\n      if (tokens[0] === \"\") {\r\n          return NoInterval;\r\n      }\r\n      var num = +tokens[0];\r\n      var q = tokens[1];\r\n      var step = (Math.abs(num) - 1) % 7;\r\n      var t = TYPES[step];\r\n      if (t === \"M\" && q === \"P\") {\r\n          return NoInterval;\r\n      }\r\n      var type = t === \"M\" ? \"majorable\" : \"perfectable\";\r\n      var name = \"\" + num + q;\r\n      var dir = num < 0 ? -1 : 1;\r\n      var simple = num === 8 || num === -8 ? num : dir * (step + 1);\r\n      var alt = qToAlt(type, q);\r\n      var oct = Math.floor((Math.abs(num) - 1) / 7);\r\n      var semitones = dir * (SIZES[step] + alt + 12 * oct);\r\n      var chroma = (((dir * (SIZES[step] + alt)) % 12) + 12) % 12;\r\n      var coord = encode({ step: step, alt: alt, oct: oct, dir: dir });\r\n      return {\r\n          empty: false,\r\n          name: name,\r\n          num: num,\r\n          q: q,\r\n          step: step,\r\n          alt: alt,\r\n          dir: dir,\r\n          type: type,\r\n          simple: simple,\r\n          semitones: semitones,\r\n          chroma: chroma,\r\n          coord: coord,\r\n          oct: oct,\r\n      };\r\n  }\r\n  /**\r\n   * @private\r\n   *\r\n   * forceDescending is used in the case of unison (#243)\r\n   */\r\n  function coordToInterval(coord, forceDescending) {\r\n      var f = coord[0], _a = coord[1], o = _a === void 0 ? 0 : _a;\r\n      var isDescending = f * 7 + o * 12 < 0;\r\n      var ivl = forceDescending || isDescending ? [-f, -o, -1] : [f, o, 1];\r\n      return interval(decode(ivl));\r\n  }\r\n  function qToAlt(type, q) {\r\n      return (q === \"M\" && type === \"majorable\") ||\r\n          (q === \"P\" && type === \"perfectable\")\r\n          ? 0\r\n          : q === \"m\" && type === \"majorable\"\r\n              ? -1\r\n              : /^A+$/.test(q)\r\n                  ? q.length\r\n                  : /^d+$/.test(q)\r\n                      ? -1 * (type === \"perfectable\" ? q.length : q.length + 1)\r\n                      : 0;\r\n  }\r\n  // return the interval name of a pitch\r\n  function pitchName(props) {\r\n      var step = props.step, alt = props.alt, _a = props.oct, oct = _a === void 0 ? 0 : _a, dir = props.dir;\r\n      if (!dir) {\r\n          return \"\";\r\n      }\r\n      var calcNum = step + 1 + 7 * oct;\r\n      // this is an edge case: descending pitch class unison (see #243)\r\n      var num = calcNum === 0 ? step + 1 : calcNum;\r\n      var d = dir < 0 ? \"-\" : \"\";\r\n      var type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\r\n      var name = d + num + altToQ(type, alt);\r\n      return name;\r\n  }\r\n  function altToQ(type, alt) {\r\n      if (alt === 0) {\r\n          return type === \"majorable\" ? \"M\" : \"P\";\r\n      }\r\n      else if (alt === -1 && type === \"majorable\") {\r\n          return \"m\";\r\n      }\r\n      else if (alt > 0) {\r\n          return fillStr(\"A\", alt);\r\n      }\r\n      else {\r\n          return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1);\r\n      }\r\n  }\n\n  /**\r\n   * Transpose a note by an interval.\r\n   *\r\n   * @param {string} note - the note or note name\r\n   * @param {string} interval - the interval or interval name\r\n   * @return {string} the transposed note name or empty string if not valid notes\r\n   * @example\r\n   * import { tranpose } from \"@tonaljs/core\"\r\n   * transpose(\"d3\", \"3M\") // => \"F#3\"\r\n   * transpose(\"D\", \"3M\") // => \"F#\"\r\n   * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(pc => transpose(pc, \"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\r\n   */\r\n  function transpose(noteName, intervalName) {\r\n      var note$1 = note(noteName);\r\n      var interval$1 = interval(intervalName);\r\n      if (note$1.empty || interval$1.empty) {\r\n          return \"\";\r\n      }\r\n      var noteCoord = note$1.coord;\r\n      var intervalCoord = interval$1.coord;\r\n      var tr = noteCoord.length === 1\r\n          ? [noteCoord[0] + intervalCoord[0]]\r\n          : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\r\n      return coordToNote(tr).name;\r\n  }\r\n  /**\r\n   * Find the interval distance between two notes or coord classes.\r\n   *\r\n   * To find distance between coord classes, both notes must be coord classes and\r\n   * the interval is always ascending\r\n   *\r\n   * @param {Note|string} from - the note or note name to calculate distance from\r\n   * @param {Note|string} to - the note or note name to calculate distance to\r\n   * @return {string} the interval name or empty string if not valid notes\r\n   *\r\n   */\r\n  function distance(fromNote, toNote) {\r\n      var from = note(fromNote);\r\n      var to = note(toNote);\r\n      if (from.empty || to.empty) {\r\n          return \"\";\r\n      }\r\n      var fcoord = from.coord;\r\n      var tcoord = to.coord;\r\n      var fifths = tcoord[0] - fcoord[0];\r\n      var octs = fcoord.length === 2 && tcoord.length === 2\r\n          ? tcoord[1] - fcoord[1]\r\n          : -Math.floor((fifths * 7) / 12);\r\n      // If it's unison and not pitch class, it can be descending interval (#243)\r\n      var forceDescending = to.height === from.height &&\r\n          to.midi !== null &&\r\n          from.midi !== null &&\r\n          from.step > to.step;\r\n      return coordToInterval([fifths, octs], forceDescending).name;\r\n  }\n\n  exports.accToAlt = accToAlt;\n  exports.altToAcc = altToAcc;\n  exports.coordToInterval = coordToInterval;\n  exports.coordToNote = coordToNote;\n  exports.decode = decode;\n  exports.deprecate = deprecate;\n  exports.distance = distance;\n  exports.encode = encode;\n  exports.fillStr = fillStr;\n  exports.interval = interval;\n  exports.isNamed = isNamed;\n  exports.isPitch = isPitch;\n  exports.note = note;\n  exports.stepToLetter = stepToLetter;\n  exports.tokenizeInterval = tokenizeInterval;\n  exports.tokenizeNote = tokenizeNote;\n  exports.transpose = transpose;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/core')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/core'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.AbcNotation = {}, global.core));\n}(this, (function (exports, core) { 'use strict';\n\n  var fillStr = function (character, times) {\r\n      return Array(times + 1).join(character);\r\n  };\r\n  var REGEX = /^(_{1,}|=|\\^{1,}|)([abcdefgABCDEFG])([,']*)$/;\r\n  function tokenize(str) {\r\n      var m = REGEX.exec(str);\r\n      if (!m) {\r\n          return [\"\", \"\", \"\"];\r\n      }\r\n      return [m[1], m[2], m[3]];\r\n  }\r\n  /**\r\n   * Convert a (string) note in ABC notation into a (string) note in scientific notation\r\n   *\r\n   * @example\r\n   * abcToScientificNotation(\"c\") // => \"C5\"\r\n   */\r\n  function abcToScientificNotation(str) {\r\n      var _a = tokenize(str), acc = _a[0], letter = _a[1], oct = _a[2];\r\n      if (letter === \"\") {\r\n          return \"\";\r\n      }\r\n      var o = 4;\r\n      for (var i = 0; i < oct.length; i++) {\r\n          o += oct.charAt(i) === \",\" ? -1 : 1;\r\n      }\r\n      var a = acc[0] === \"_\"\r\n          ? acc.replace(/_/g, \"b\")\r\n          : acc[0] === \"^\"\r\n              ? acc.replace(/\\^/g, \"#\")\r\n              : \"\";\r\n      return letter.charCodeAt(0) > 96\r\n          ? letter.toUpperCase() + a + (o + 1)\r\n          : letter + a + o;\r\n  }\r\n  /**\r\n   * Convert a (string) note in scientific notation into a (string) note in ABC notation\r\n   *\r\n   * @example\r\n   * scientificToAbcNotation(\"C#4\") // => \"^C\"\r\n   */\r\n  function scientificToAbcNotation(str) {\r\n      var n = core.note(str);\r\n      if (n.empty || (!n.oct && n.oct !== 0)) {\r\n          return \"\";\r\n      }\r\n      var letter = n.letter, acc = n.acc, oct = n.oct;\r\n      var a = acc[0] === \"b\" ? acc.replace(/b/g, \"_\") : acc.replace(/#/g, \"^\");\r\n      var l = oct > 4 ? letter.toLowerCase() : letter;\r\n      var o = oct === 5 ? \"\" : oct > 4 ? fillStr(\"'\", oct - 5) : fillStr(\",\", 4 - oct);\r\n      return a + l + o;\r\n  }\r\n  function transpose(note, interval) {\r\n      return scientificToAbcNotation(core.transpose(abcToScientificNotation(note), interval));\r\n  }\r\n  function distance(from, to) {\r\n      return core.distance(abcToScientificNotation(from), abcToScientificNotation(to));\r\n  }\r\n  var index = {\r\n      abcToScientificNotation: abcToScientificNotation,\r\n      scientificToAbcNotation: scientificToAbcNotation,\r\n      tokenize: tokenize,\r\n      transpose: transpose,\r\n      distance: distance,\r\n  };\n\n  exports.abcToScientificNotation = abcToScientificNotation;\n  exports['default'] = index;\n  exports.distance = distance;\n  exports.scientificToAbcNotation = scientificToAbcNotation;\n  exports.tokenize = tokenize;\n  exports.transpose = transpose;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/core')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/core'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Array = {}, global.core));\n}(this, (function (exports, core) { 'use strict';\n\n  // ascending range\r\n  function ascR(b, n) {\r\n      var a = [];\r\n      // tslint:disable-next-line:curly\r\n      for (; n--; a[n] = n + b)\r\n          ;\r\n      return a;\r\n  }\r\n  // descending range\r\n  function descR(b, n) {\r\n      var a = [];\r\n      // tslint:disable-next-line:curly\r\n      for (; n--; a[n] = b - n)\r\n          ;\r\n      return a;\r\n  }\r\n  /**\r\n   * Creates a numeric range\r\n   *\r\n   * @param {number} from\r\n   * @param {number} to\r\n   * @return {Array<number>}\r\n   *\r\n   * @example\r\n   * range(-2, 2) // => [-2, -1, 0, 1, 2]\r\n   * range(2, -2) // => [2, 1, 0, -1, -2]\r\n   */\r\n  function range(from, to) {\r\n      return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\r\n  }\r\n  /**\r\n   * Rotates a list a number of times. It\"s completly agnostic about the\r\n   * contents of the list.\r\n   *\r\n   * @param {Integer} times - the number of rotations\r\n   * @param {Array} array\r\n   * @return {Array} the rotated array\r\n   *\r\n   * @example\r\n   * rotate(1, [1, 2, 3]) // => [2, 3, 1]\r\n   */\r\n  function rotate(times, arr) {\r\n      var len = arr.length;\r\n      var n = ((times % len) + len) % len;\r\n      return arr.slice(n, len).concat(arr.slice(0, n));\r\n  }\r\n  /**\r\n   * Return a copy of the array with the null values removed\r\n   * @function\r\n   * @param {Array} array\r\n   * @return {Array}\r\n   *\r\n   * @example\r\n   * compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\r\n   */\r\n  function compact(arr) {\r\n      return arr.filter(function (n) { return n === 0 || n; });\r\n  }\r\n  /**\r\n   * Sort an array of notes in ascending order. Pitch classes are listed\r\n   * before notes. Any string that is not a note is removed.\r\n   *\r\n   * @param {string[]} notes\r\n   * @return {string[]} sorted array of notes\r\n   *\r\n   * @example\r\n   * sortedNoteNames(['c2', 'c5', 'c1', 'c0', 'c6', 'c'])\r\n   * // => ['C', 'C0', 'C1', 'C2', 'C5', 'C6']\r\n   * sortedNoteNames(['c', 'F', 'G', 'a', 'b', 'h', 'J'])\r\n   * // => ['C', 'F', 'G', 'A', 'B']\r\n   */\r\n  function sortedNoteNames(notes) {\r\n      var valid = notes.map(function (n) { return core.note(n); }).filter(function (n) { return !n.empty; });\r\n      return valid.sort(function (a, b) { return a.height - b.height; }).map(function (n) { return n.name; });\r\n  }\r\n  /**\r\n   * Get sorted notes with duplicates removed. Pitch classes are listed\r\n   * before notes.\r\n   *\r\n   * @function\r\n   * @param {string[]} array\r\n   * @return {string[]} unique sorted notes\r\n   *\r\n   * @example\r\n   * Array.sortedUniqNoteNames(['a', 'b', 'c2', '1p', 'p2', 'c2', 'b', 'c', 'c3' ])\r\n   * // => [ 'C', 'A', 'B', 'C2', 'C3' ]\r\n   */\r\n  function sortedUniqNoteNames(arr) {\r\n      return sortedNoteNames(arr).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\r\n  }\r\n  /**\r\n   * Randomizes the order of the specified array in-place, using the Fisher\u2013Yates shuffle.\r\n   *\r\n   * @function\r\n   * @param {Array} array\r\n   * @return {Array} the array shuffled\r\n   *\r\n   * @example\r\n   * shuffle([\"C\", \"D\", \"E\", \"F\"]) // => [...]\r\n   */\r\n  function shuffle(arr, rnd) {\r\n      if (rnd === void 0) { rnd = Math.random; }\r\n      var i;\r\n      var t;\r\n      var m = arr.length;\r\n      while (m) {\r\n          i = Math.floor(rnd() * m--);\r\n          t = arr[m];\r\n          arr[m] = arr[i];\r\n          arr[i] = t;\r\n      }\r\n      return arr;\r\n  }\r\n  /**\r\n   * Get all permutations of an array\r\n   *\r\n   * @param {Array} array - the array\r\n   * @return {Array<Array>} an array with all the permutations\r\n   * @example\r\n   * permutations([\"a\", \"b\", \"c\"])) // =>\r\n   * [\r\n   *   [\"a\", \"b\", \"c\"],\r\n   *   [\"b\", \"a\", \"c\"],\r\n   *   [\"b\", \"c\", \"a\"],\r\n   *   [\"a\", \"c\", \"b\"],\r\n   *   [\"c\", \"a\", \"b\"],\r\n   *   [\"c\", \"b\", \"a\"]\r\n   * ]\r\n   */\r\n  function permutations(arr) {\r\n      if (arr.length === 0) {\r\n          return [[]];\r\n      }\r\n      return permutations(arr.slice(1)).reduce(function (acc, perm) {\r\n          return acc.concat(arr.map(function (e, pos) {\r\n              var newPerm = perm.slice();\r\n              newPerm.splice(pos, 0, arr[0]);\r\n              return newPerm;\r\n          }));\r\n      }, []);\r\n  }\n\n  exports.compact = compact;\n  exports.permutations = permutations;\n  exports.range = range;\n  exports.rotate = rotate;\n  exports.shuffle = shuffle;\n  exports.sortedNoteNames = sortedNoteNames;\n  exports.sortedUniqNoteNames = sortedUniqNoteNames;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Collection = {}));\n}(this, (function (exports) { 'use strict';\n\n  // ascending range\r\n  function ascR(b, n) {\r\n      var a = [];\r\n      // tslint:disable-next-line:curly\r\n      for (; n--; a[n] = n + b)\r\n          ;\r\n      return a;\r\n  }\r\n  // descending range\r\n  function descR(b, n) {\r\n      var a = [];\r\n      // tslint:disable-next-line:curly\r\n      for (; n--; a[n] = b - n)\r\n          ;\r\n      return a;\r\n  }\r\n  /**\r\n   * Creates a numeric range\r\n   *\r\n   * @param {number} from\r\n   * @param {number} to\r\n   * @return {Array<number>}\r\n   *\r\n   * @example\r\n   * range(-2, 2) // => [-2, -1, 0, 1, 2]\r\n   * range(2, -2) // => [2, 1, 0, -1, -2]\r\n   */\r\n  function range(from, to) {\r\n      return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\r\n  }\r\n  /**\r\n   * Rotates a list a number of times. It\"s completly agnostic about the\r\n   * contents of the list.\r\n   *\r\n   * @param {Integer} times - the number of rotations\r\n   * @param {Array} collection\r\n   * @return {Array} the rotated collection\r\n   *\r\n   * @example\r\n   * rotate(1, [1, 2, 3]) // => [2, 3, 1]\r\n   */\r\n  function rotate(times, arr) {\r\n      var len = arr.length;\r\n      var n = ((times % len) + len) % len;\r\n      return arr.slice(n, len).concat(arr.slice(0, n));\r\n  }\r\n  /**\r\n   * Return a copy of the collection with the null values removed\r\n   * @function\r\n   * @param {Array} collection\r\n   * @return {Array}\r\n   *\r\n   * @example\r\n   * compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\r\n   */\r\n  function compact(arr) {\r\n      return arr.filter(function (n) { return n === 0 || n; });\r\n  }\r\n  /**\r\n   * Randomizes the order of the specified collection in-place, using the Fisher\u2013Yates shuffle.\r\n   *\r\n   * @function\r\n   * @param {Array} collection\r\n   * @return {Array} the collection shuffled\r\n   *\r\n   * @example\r\n   * shuffle([\"C\", \"D\", \"E\", \"F\"]) // => [...]\r\n   */\r\n  function shuffle(arr, rnd) {\r\n      if (rnd === void 0) { rnd = Math.random; }\r\n      var i;\r\n      var t;\r\n      var m = arr.length;\r\n      while (m) {\r\n          i = Math.floor(rnd() * m--);\r\n          t = arr[m];\r\n          arr[m] = arr[i];\r\n          arr[i] = t;\r\n      }\r\n      return arr;\r\n  }\r\n  /**\r\n   * Get all permutations of an collection\r\n   *\r\n   * @param {Array} collection - the collection\r\n   * @return {Array<Array>} an collection with all the permutations\r\n   * @example\r\n   * permutations([\"a\", \"b\", \"c\"])) // =>\r\n   * [\r\n   *   [\"a\", \"b\", \"c\"],\r\n   *   [\"b\", \"a\", \"c\"],\r\n   *   [\"b\", \"c\", \"a\"],\r\n   *   [\"a\", \"c\", \"b\"],\r\n   *   [\"c\", \"a\", \"b\"],\r\n   *   [\"c\", \"b\", \"a\"]\r\n   * ]\r\n   */\r\n  function permutations(arr) {\r\n      if (arr.length === 0) {\r\n          return [[]];\r\n      }\r\n      return permutations(arr.slice(1)).reduce(function (acc, perm) {\r\n          return acc.concat(arr.map(function (e, pos) {\r\n              var newPerm = perm.slice();\r\n              newPerm.splice(pos, 0, arr[0]);\r\n              return newPerm;\r\n          }));\r\n      }, []);\r\n  }\r\n  var index = {\r\n      compact: compact,\r\n      permutations: permutations,\r\n      range: range,\r\n      rotate: rotate,\r\n      shuffle: shuffle,\r\n  };\n\n  exports.compact = compact;\n  exports.default = index;\n  exports.permutations = permutations;\n  exports.range = range;\n  exports.rotate = rotate;\n  exports.shuffle = shuffle;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/collection'), require('@tonaljs/core')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/collection', '@tonaljs/core'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Pcset = {}, global.collection, global.core));\n}(this, (function (exports, collection, core) { 'use strict';\n\n  var _a;\r\n  var EmptyPcset = {\r\n      empty: true,\r\n      name: \"\",\r\n      setNum: 0,\r\n      chroma: \"000000000000\",\r\n      normalized: \"000000000000\",\r\n      intervals: [],\r\n  };\r\n  // UTILITIES\r\n  var setNumToChroma = function (num) { return Number(num).toString(2); };\r\n  var chromaToNumber = function (chroma) { return parseInt(chroma, 2); };\r\n  var REGEX = /^[01]{12}$/;\r\n  function isChroma(set) {\r\n      return REGEX.test(set);\r\n  }\r\n  var isPcsetNum = function (set) {\r\n      return typeof set === \"number\" && set >= 0 && set <= 4095;\r\n  };\r\n  var isPcset = function (set) { return set && isChroma(set.chroma); };\r\n  var cache = (_a = {}, _a[EmptyPcset.chroma] = EmptyPcset, _a);\r\n  /**\r\n   * Get the pitch class set of a collection of notes or set number or chroma\r\n   */\r\n  function get(src) {\r\n      var chroma = isChroma(src)\r\n          ? src\r\n          : isPcsetNum(src)\r\n              ? setNumToChroma(src)\r\n              : Array.isArray(src)\r\n                  ? listToChroma(src)\r\n                  : isPcset(src)\r\n                      ? src.chroma\r\n                      : EmptyPcset.chroma;\r\n      return (cache[chroma] = cache[chroma] || chromaToPcset(chroma));\r\n  }\r\n  /**\r\n   * Use Pcset.properties\r\n   * @function\r\n   * @deprecated\r\n   */\r\n  var pcset = core.deprecate(\"Pcset.pcset\", \"Pcset.get\", get);\r\n  /**\r\n   * Get pitch class set chroma\r\n   * @function\r\n   * @example\r\n   * Pcset.chroma([\"c\", \"d\", \"e\"]); //=> \"101010000000\"\r\n   */\r\n  var chroma = function (set) { return get(set).chroma; };\r\n  /**\r\n   * Get intervals (from C) of a set\r\n   * @function\r\n   * @example\r\n   * Pcset.intervals([\"c\", \"d\", \"e\"]); //=>\r\n   */\r\n  var intervals = function (set) { return get(set).intervals; };\r\n  /**\r\n   * Get pitch class set number\r\n   * @function\r\n   * @example\r\n   * Pcset.num([\"c\", \"d\", \"e\"]); //=> 2192\r\n   */\r\n  var num = function (set) { return get(set).setNum; };\r\n  var IVLS = [\r\n      \"1P\",\r\n      \"2m\",\r\n      \"2M\",\r\n      \"3m\",\r\n      \"3M\",\r\n      \"4P\",\r\n      \"5d\",\r\n      \"5P\",\r\n      \"6m\",\r\n      \"6M\",\r\n      \"7m\",\r\n      \"7M\",\r\n  ];\r\n  /**\r\n   * @private\r\n   * Get the intervals of a pcset *starting from C*\r\n   * @param {Set} set - the pitch class set\r\n   * @return {IntervalName[]} an array of interval names or an empty array\r\n   * if not a valid pitch class set\r\n   */\r\n  function chromaToIntervals(chroma) {\r\n      var intervals = [];\r\n      for (var i = 0; i < 12; i++) {\r\n          // tslint:disable-next-line:curly\r\n          if (chroma.charAt(i) === \"1\")\r\n              intervals.push(IVLS[i]);\r\n      }\r\n      return intervals;\r\n  }\r\n  /**\r\n   * Get a list of all possible pitch class sets (all possible chromas) *having\r\n   * C as root*. There are 2048 different chromas. If you want them with another\r\n   * note you have to transpose it\r\n   *\r\n   * @see http://allthescales.org/\r\n   * @return {Array<PcsetChroma>} an array of possible chromas from '10000000000' to '11111111111'\r\n   */\r\n  function chromas() {\r\n      return collection.range(2048, 4095).map(setNumToChroma);\r\n  }\r\n  /**\r\n   * Given a a list of notes or a pcset chroma, produce the rotations\r\n   * of the chroma discarding the ones that starts with \"0\"\r\n   *\r\n   * This is used, for example, to get all the modes of a scale.\r\n   *\r\n   * @param {Array|string} set - the list of notes or pitchChr of the set\r\n   * @param {boolean} normalize - (Optional, true by default) remove all\r\n   * the rotations that starts with \"0\"\r\n   * @return {Array<string>} an array with all the modes of the chroma\r\n   *\r\n   * @example\r\n   * Pcset.modes([\"C\", \"D\", \"E\"]).map(Pcset.intervals)\r\n   */\r\n  function modes(set, normalize) {\r\n      if (normalize === void 0) { normalize = true; }\r\n      var pcs = get(set);\r\n      var binary = pcs.chroma.split(\"\");\r\n      return collection.compact(binary.map(function (_, i) {\r\n          var r = collection.rotate(i, binary);\r\n          return normalize && r[0] === \"0\" ? null : r.join(\"\");\r\n      }));\r\n  }\r\n  /**\r\n   * Test if two pitch class sets are numentical\r\n   *\r\n   * @param {Array|string} set1 - one of the pitch class sets\r\n   * @param {Array|string} set2 - the other pitch class set\r\n   * @return {boolean} true if they are equal\r\n   * @example\r\n   * Pcset.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\r\n   */\r\n  function isEqual(s1, s2) {\r\n      return get(s1).setNum === get(s2).setNum;\r\n  }\r\n  /**\r\n   * Create a function that test if a collection of notes is a\r\n   * subset of a given set\r\n   *\r\n   * The function is curryfied.\r\n   *\r\n   * @param {PcsetChroma|NoteName[]} set - the superset to test against (chroma or\r\n   * list of notes)\r\n   * @return{function(PcsetChroma|NoteNames[]): boolean} a function accepting a set\r\n   * to test against (chroma or list of notes)\r\n   * @example\r\n   * const inCMajor = Pcset.isSubsetOf([\"C\", \"E\", \"G\"])\r\n   * inCMajor([\"e6\", \"c4\"]) // => true\r\n   * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\r\n   */\r\n  function isSubsetOf(set) {\r\n      var s = get(set).setNum;\r\n      return function (notes) {\r\n          var o = get(notes).setNum;\r\n          // tslint:disable-next-line: no-bitwise\r\n          return s && s !== o && (o & s) === o;\r\n      };\r\n  }\r\n  /**\r\n   * Create a function that test if a collection of notes is a\r\n   * superset of a given set (it contains all notes and at least one more)\r\n   *\r\n   * @param {Set} set - an array of notes or a chroma set string to test against\r\n   * @return {(subset: Set): boolean} a function that given a set\r\n   * returns true if is a subset of the first one\r\n   * @example\r\n   * const extendsCMajor = Pcset.isSupersetOf([\"C\", \"E\", \"G\"])\r\n   * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\r\n   * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\r\n   */\r\n  function isSupersetOf(set) {\r\n      var s = get(set).setNum;\r\n      return function (notes) {\r\n          var o = get(notes).setNum;\r\n          // tslint:disable-next-line: no-bitwise\r\n          return s && s !== o && (o | s) === o;\r\n      };\r\n  }\r\n  /**\r\n   * Test if a given pitch class set includes a note\r\n   *\r\n   * @param {Array<string>} set - the base set to test against\r\n   * @param {string} note - the note to test\r\n   * @return {boolean} true if the note is included in the pcset\r\n   *\r\n   * Can be partially applied\r\n   *\r\n   * @example\r\n   * const isNoteInCMajor = isNoteIncludedIn(['C', 'E', 'G'])\r\n   * isNoteInCMajor('C4') // => true\r\n   * isNoteInCMajor('C#4') // => false\r\n   */\r\n  function isNoteIncludedIn(set) {\r\n      var s = get(set);\r\n      return function (noteName) {\r\n          var n = core.note(noteName);\r\n          return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\r\n      };\r\n  }\r\n  /** @deprecated use: isNoteIncludedIn */\r\n  var includes = isNoteIncludedIn;\r\n  /**\r\n   * Filter a list with a pitch class set\r\n   *\r\n   * @param {Array|string} set - the pitch class set notes\r\n   * @param {Array|string} notes - the note list to be filtered\r\n   * @return {Array} the filtered notes\r\n   *\r\n   * @example\r\n   * Pcset.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\r\n   * Pcset.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\r\n   */\r\n  function filter(set) {\r\n      var isIncluded = isNoteIncludedIn(set);\r\n      return function (notes) {\r\n          return notes.filter(isIncluded);\r\n      };\r\n  }\r\n  var index = {\r\n      get: get,\r\n      chroma: chroma,\r\n      num: num,\r\n      intervals: intervals,\r\n      chromas: chromas,\r\n      isSupersetOf: isSupersetOf,\r\n      isSubsetOf: isSubsetOf,\r\n      isNoteIncludedIn: isNoteIncludedIn,\r\n      isEqual: isEqual,\r\n      filter: filter,\r\n      modes: modes,\r\n      // deprecated\r\n      pcset: pcset,\r\n  };\r\n  //// PRIVATE ////\r\n  function chromaRotations(chroma) {\r\n      var binary = chroma.split(\"\");\r\n      return binary.map(function (_, i) { return collection.rotate(i, binary).join(\"\"); });\r\n  }\r\n  function chromaToPcset(chroma) {\r\n      var setNum = chromaToNumber(chroma);\r\n      var normalizedNum = chromaRotations(chroma)\r\n          .map(chromaToNumber)\r\n          .filter(function (n) { return n >= 2048; })\r\n          .sort()[0];\r\n      var normalized = setNumToChroma(normalizedNum);\r\n      var intervals = chromaToIntervals(chroma);\r\n      return {\r\n          empty: false,\r\n          name: \"\",\r\n          setNum: setNum,\r\n          chroma: chroma,\r\n          normalized: normalized,\r\n          intervals: intervals,\r\n      };\r\n  }\r\n  function listToChroma(set) {\r\n      if (set.length === 0) {\r\n          return EmptyPcset.chroma;\r\n      }\r\n      var pitch;\r\n      var binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (var i = 0; i < set.length; i++) {\r\n          pitch = core.note(set[i]);\r\n          // tslint:disable-next-line: curly\r\n          if (pitch.empty)\r\n              pitch = core.interval(set[i]);\r\n          // tslint:disable-next-line: curly\r\n          if (!pitch.empty)\r\n              binary[pitch.chroma] = 1;\r\n      }\r\n      return binary.join(\"\");\r\n  }\n\n  exports.EmptyPcset = EmptyPcset;\n  exports.chromaToIntervals = chromaToIntervals;\n  exports.chromas = chromas;\n  exports['default'] = index;\n  exports.filter = filter;\n  exports.get = get;\n  exports.includes = includes;\n  exports.isEqual = isEqual;\n  exports.isNoteIncludedIn = isNoteIncludedIn;\n  exports.isSubsetOf = isSubsetOf;\n  exports.isSupersetOf = isSupersetOf;\n  exports.modes = modes;\n  exports.pcset = pcset;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/core'), require('@tonaljs/pcset')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/core', '@tonaljs/pcset'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ChordType = {}, global.core, global.pcset));\n}(this, (function (exports, core, pcset) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    /**\r\n     * @private\r\n     * Chord List\r\n     * Source: https://en.wikibooks.org/wiki/Music_Theory/Complete_List_of_Chord_Patterns\r\n     * Format: [\"intervals\", \"full name\", \"abrv1 abrv2\"]\r\n     */\r\n    var CHORDS = [\r\n        // ==Major==\r\n        [\"1P 3M 5P\", \"major\", \"M ^ \"],\r\n        [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 \u0394 ma7 M7 Maj7 ^7\"],\r\n        [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 \u03949 ^9\"],\r\n        [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\r\n        [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\r\n        [\"1P 3M 5P 6M 9M\", \"sixth/ninth\", \"6/9 69 M69\"],\r\n        [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\r\n        [\r\n            \"1P 3M 5P 7M 11A\",\r\n            \"major seventh sharp eleventh\",\r\n            \"maj#4 \u0394#4 \u0394#11 M7#11 ^7#11 maj7#11\",\r\n        ],\r\n        // ==Minor==\r\n        // '''Normal'''\r\n        [\"1P 3m 5P\", \"minor\", \"m min -\"],\r\n        [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\r\n        [\r\n            \"1P 3m 5P 7M\",\r\n            \"minor/major seventh\",\r\n            \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -\u03947 m\u0394 -^7\",\r\n        ],\r\n        [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\r\n        [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\r\n        [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\r\n        [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\r\n        [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\r\n        // '''Diminished'''\r\n        [\"1P 3m 5d\", \"diminished\", \"dim \u00B0 o\"],\r\n        [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 \u00B07 o7\"],\r\n        [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 \u00F8 -7b5 h7 h\"],\r\n        // ==Dominant/Seventh==\r\n        // '''Normal'''\r\n        [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\r\n        [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\r\n        [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\r\n        [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\r\n        // '''Altered'''\r\n        [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\r\n        [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\r\n        [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\r\n        // '''Suspended'''\r\n        [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\r\n        [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\r\n        [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\r\n        [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\r\n        [\r\n            \"1P 4P 5P 7m 9m\",\r\n            \"suspended fourth flat ninth\",\r\n            \"b9sus phryg 7b9sus 7b9sus4\",\r\n        ],\r\n        // ==Other==\r\n        [\"1P 5P\", \"fifth\", \"5\"],\r\n        [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\r\n        [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\r\n        [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\r\n        [\r\n            \"1P 3M 5P 7M 9M 11A\",\r\n            \"major sharp eleventh (lydian)\",\r\n            \"maj9#11 \u03949#11 ^9#11\",\r\n        ],\r\n        // ==Legacy==\r\n        [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\r\n        [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\r\n        [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\r\n        [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\r\n        [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\r\n        [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\r\n        [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\r\n        [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\r\n        [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\r\n        [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\r\n        [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\r\n        [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\r\n        [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\r\n        [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\r\n        [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\r\n        [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\r\n        [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\r\n        [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\r\n        [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\r\n        [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\r\n        [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\r\n        [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\r\n        [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\r\n        [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\r\n        [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\r\n        [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\r\n        [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\r\n        [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\r\n        [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\r\n        [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\r\n        [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\r\n        [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\r\n        [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\r\n        [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\r\n        [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\r\n        [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\r\n        [\"1P 3M 5d\", \"\", \"Mb5\"],\r\n        [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\r\n        [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\r\n        [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\r\n        [\"1P 3M 5d 7m\", \"\", \"7b5\"],\r\n        [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\r\n        [\"1P 3M 7m\", \"\", \"7no5\"],\r\n        [\"1P 3M 7m 13m\", \"\", \"7b13\"],\r\n        [\"1P 3M 7m 9M\", \"\", \"9no5\"],\r\n        [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\r\n        [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\r\n        [\"1P 3m 4P 5P\", \"\", \"madd4\"],\r\n        [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\r\n        [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\r\n        [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\r\n        [\"1P 3m 5P 9M\", \"\", \"madd9\"],\r\n        [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\r\n        [\"1P 3m 5d 7M\", \"\", \"oM7\"],\r\n        [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\r\n        [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\r\n        [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\r\n        [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\r\n        [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\r\n        [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\r\n        [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\r\n        [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\r\n        [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\r\n        [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\r\n        [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\r\n        [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\r\n        [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\r\n        [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\r\n        [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\r\n        [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"],\r\n    ];\n\n    var NoChordType = __assign(__assign({}, pcset.EmptyPcset), { name: \"\", quality: \"Unknown\", intervals: [], aliases: [] });\r\n    var dictionary = [];\r\n    var index = {};\r\n    /**\r\n     * Given a chord name or chroma, return the chord properties\r\n     * @param {string} source - chord name or pitch class set chroma\r\n     * @example\r\n     * import { get } from 'tonaljs/chord-type'\r\n     * get('major') // => { name: 'major', ... }\r\n     */\r\n    function get(type) {\r\n        return index[type] || NoChordType;\r\n    }\r\n    var chordType = core.deprecate(\"ChordType.chordType\", \"ChordType.get\", get);\r\n    /**\r\n     * Get all chord (long) names\r\n     */\r\n    function names() {\r\n        return dictionary.map(function (chord) { return chord.name; }).filter(function (x) { return x; });\r\n    }\r\n    /**\r\n     * Get all chord symbols\r\n     */\r\n    function symbols() {\r\n        return dictionary.map(function (chord) { return chord.aliases[0]; }).filter(function (x) { return x; });\r\n    }\r\n    /**\r\n     * Keys used to reference chord types\r\n     */\r\n    function keys() {\r\n        return Object.keys(index);\r\n    }\r\n    /**\r\n     * Return a list of all chord types\r\n     */\r\n    function all() {\r\n        return dictionary.slice();\r\n    }\r\n    var entries = core.deprecate(\"ChordType.entries\", \"ChordType.all\", all);\r\n    /**\r\n     * Clear the dictionary\r\n     */\r\n    function removeAll() {\r\n        dictionary = [];\r\n        index = {};\r\n    }\r\n    /**\r\n     * Add a chord to the dictionary.\r\n     * @param intervals\r\n     * @param aliases\r\n     * @param [fullName]\r\n     */\r\n    function add(intervals, aliases, fullName) {\r\n        var quality = getQuality(intervals);\r\n        var chord = __assign(__assign({}, pcset.get(intervals)), { name: fullName || \"\", quality: quality, intervals: intervals, aliases: aliases });\r\n        dictionary.push(chord);\r\n        if (chord.name) {\r\n            index[chord.name] = chord;\r\n        }\r\n        index[chord.setNum] = chord;\r\n        index[chord.chroma] = chord;\r\n        chord.aliases.forEach(function (alias) { return addAlias(chord, alias); });\r\n    }\r\n    function addAlias(chord, alias) {\r\n        index[alias] = chord;\r\n    }\r\n    function getQuality(intervals) {\r\n        var has = function (interval) { return intervals.indexOf(interval) !== -1; };\r\n        return has(\"5A\")\r\n            ? \"Augmented\"\r\n            : has(\"3M\")\r\n                ? \"Major\"\r\n                : has(\"5d\")\r\n                    ? \"Diminished\"\r\n                    : has(\"3m\")\r\n                        ? \"Minor\"\r\n                        : \"Unknown\";\r\n    }\r\n    CHORDS.forEach(function (_a) {\r\n        var ivls = _a[0], fullName = _a[1], names = _a[2];\r\n        return add(ivls.split(\" \"), names.split(\" \"), fullName);\r\n    });\r\n    dictionary.sort(function (a, b) { return a.setNum - b.setNum; });\r\n    var index$1 = {\r\n        names: names,\r\n        symbols: symbols,\r\n        get: get,\r\n        all: all,\r\n        add: add,\r\n        removeAll: removeAll,\r\n        keys: keys,\r\n        // deprecated\r\n        entries: entries,\r\n        chordType: chordType,\r\n    };\n\n    exports.add = add;\n    exports.addAlias = addAlias;\n    exports.all = all;\n    exports.chordType = chordType;\n    exports['default'] = index$1;\n    exports.entries = entries;\n    exports.get = get;\n    exports.keys = keys;\n    exports.names = names;\n    exports.removeAll = removeAll;\n    exports.symbols = symbols;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/chord-type'), require('@tonaljs/core'), require('@tonaljs/pcset')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/chord-type', '@tonaljs/core', '@tonaljs/pcset'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ChordDetect = {}, global.chordType, global.core, global.pcset));\n}(this, (function (exports, chordType, core, pcset) { 'use strict';\n\n  var namedSet = function (notes) {\r\n      var pcToName = notes.reduce(function (record, n) {\r\n          var chroma = core.note(n).chroma;\r\n          if (chroma !== undefined) {\r\n              record[chroma] = record[chroma] || core.note(n).name;\r\n          }\r\n          return record;\r\n      }, {});\r\n      return function (chroma) { return pcToName[chroma]; };\r\n  };\r\n  function detect(source) {\r\n      var notes = source.map(function (n) { return core.note(n).pc; }).filter(function (x) { return x; });\r\n      if (core.note.length === 0) {\r\n          return [];\r\n      }\r\n      var found = findExactMatches(notes, 1);\r\n      return found\r\n          .filter(function (chord) { return chord.weight; })\r\n          .sort(function (a, b) { return b.weight - a.weight; })\r\n          .map(function (chord) { return chord.name; });\r\n  }\r\n  function findExactMatches(notes, weight) {\r\n      var tonic = notes[0];\r\n      var tonicChroma = core.note(tonic).chroma;\r\n      var noteName = namedSet(notes);\r\n      // we need to test all chormas to get the correct baseNote\r\n      var allModes = pcset.modes(notes, false);\r\n      var found = [];\r\n      allModes.forEach(function (mode, index) {\r\n          // some chords could have the same chroma but different interval spelling\r\n          var chordTypes = chordType.all().filter(function (chordType) { return chordType.chroma === mode; });\r\n          chordTypes.forEach(function (chordType) {\r\n              var chordName = chordType.aliases[0];\r\n              var baseNote = noteName(index);\r\n              var isInversion = index !== tonicChroma;\r\n              if (isInversion) {\r\n                  found.push({\r\n                      weight: 0.5 * weight,\r\n                      name: \"\" + baseNote + chordName + \"/\" + tonic,\r\n                  });\r\n              }\r\n              else {\r\n                  found.push({ weight: 1 * weight, name: \"\" + baseNote + chordName });\r\n              }\r\n          });\r\n      });\r\n      return found;\r\n  }\r\n  var index = { detect: detect };\n\n  exports['default'] = index;\n  exports.detect = detect;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/core'), require('@tonaljs/pcset')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/core', '@tonaljs/pcset'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ScaleType = {}, global.core, global.pcset));\n}(this, (function (exports, core, pcset) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    // SCALES\r\n    // Format: [\"intervals\", \"name\", \"alias1\", \"alias2\", ...]\r\n    var SCALES = [\r\n        // 5-note scales\r\n        [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\r\n        [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\r\n        [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\r\n        [\"1P 2M 4P 5P 6M\", \"ritusen\"],\r\n        [\"1P 2M 4P 5P 7m\", \"egyptian\"],\r\n        [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\r\n        [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\r\n        [\"1P 2m 3m 5P 6m\", \"pelog\"],\r\n        [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\r\n        [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\r\n        [\"1P 2m 4P 5d 7m\", \"iwato\"],\r\n        [\"1P 2m 4P 5P 7m\", \"in-sen\"],\r\n        [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\r\n        [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\r\n        [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\r\n        [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\r\n        [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\r\n        [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\r\n        [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\r\n        [\"1P 2m 3M 5P 6M\", \"scriabin\"],\r\n        [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\r\n        [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\r\n        [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\r\n        [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\r\n        [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\r\n        // 6-note scales\r\n        [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\r\n        [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\r\n        [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\r\n        [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\r\n        [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\r\n        [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\r\n        [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\r\n        [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\r\n        [\"1P 2M 3M 4A 5A 7m\", \"whole tone\", \"messiaen's mode #1\"],\r\n        [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\r\n        [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\r\n        // 7-note scales\r\n        [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\r\n        [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\r\n        [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\r\n        [\r\n            \"1P 2m 2A 3M 4A 6m 7m\",\r\n            \"altered\",\r\n            \"super locrian\",\r\n            \"diminished whole tone\",\r\n            \"pomeroy\",\r\n        ],\r\n        [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\r\n        [\r\n            \"1P 2M 3M 4P 5P 6m 7m\",\r\n            \"mixolydian b6\",\r\n            \"melodic minor fifth mode\",\r\n            \"hindu\",\r\n        ],\r\n        [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\r\n        [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\r\n        [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\r\n        [\r\n            \"1P 2m 3m 4P 5P 6M 7m\",\r\n            \"dorian b2\",\r\n            \"phrygian #6\",\r\n            \"melodic minor second mode\",\r\n        ],\r\n        [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\r\n        [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\r\n        [\r\n            \"1P 2m 3m 4d 5d 6m 7d\",\r\n            \"ultralocrian\",\r\n            \"superlocrian bb7\",\r\n            \"superlocrian diminished\",\r\n        ],\r\n        [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\r\n        [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\r\n        // Source https://en.wikipedia.org/wiki/Ukrainian_Dorian_scale\r\n        [\r\n            \"1P 2M 3m 4A 5P 6M 7m\",\r\n            \"dorian #4\",\r\n            \"ukrainian dorian\",\r\n            \"romanian minor\",\r\n            \"altered dorian\",\r\n        ],\r\n        [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\r\n        [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\r\n        [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\r\n        [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\r\n        [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\r\n        [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\r\n        [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\r\n        [\"1P 2M 3m 4P 5P 6m 7m\", \"aeolian\", \"minor\"],\r\n        [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\r\n        [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\r\n        [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\r\n        [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\r\n        [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\r\n        [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\r\n        [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\r\n        [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\r\n        [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\r\n        [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\r\n        [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\r\n        [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\r\n        [\r\n            \"1P 2M 3M 4P 5A 6M 7M\",\r\n            \"major augmented\",\r\n            \"major #5\",\r\n            \"ionian augmented\",\r\n            \"ionian #5\",\r\n        ],\r\n        [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\r\n        // 8-note scales\r\n        [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\r\n        [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\r\n        [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\r\n        [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\r\n        [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\r\n        [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\r\n        [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\r\n        [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\r\n        [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\r\n        [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\r\n        [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\r\n        [\r\n            \"1P 2m 3m 3M 4A 5P 6M 7m\",\r\n            \"half-whole diminished\",\r\n            \"dominant diminished\",\r\n            \"messiaen's mode #2\",\r\n        ],\r\n        [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\r\n        [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\r\n        // 9-note scales\r\n        [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\r\n        [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\r\n        // 10-note scales\r\n        [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\r\n        // 12-note scales\r\n        [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"],\r\n    ];\n\n    var NoScaleType = __assign(__assign({}, pcset.EmptyPcset), { intervals: [], aliases: [] });\r\n    var dictionary = [];\r\n    var index = {};\r\n    function names() {\r\n        return dictionary.map(function (scale) { return scale.name; });\r\n    }\r\n    /**\r\n     * Given a scale name or chroma, return the scale properties\r\n     *\r\n     * @param {string} type - scale name or pitch class set chroma\r\n     * @example\r\n     * import { get } from 'tonaljs/scale-type'\r\n     * get('major') // => { name: 'major', ... }\r\n     */\r\n    function get(type) {\r\n        return index[type] || NoScaleType;\r\n    }\r\n    var scaleType = core.deprecate(\"ScaleDictionary.scaleType\", \"ScaleType.get\", get);\r\n    /**\r\n     * Return a list of all scale types\r\n     */\r\n    function all() {\r\n        return dictionary.slice();\r\n    }\r\n    var entries = core.deprecate(\"ScaleDictionary.entries\", \"ScaleType.all\", all);\r\n    /**\r\n     * Keys used to reference scale types\r\n     */\r\n    function keys() {\r\n        return Object.keys(index);\r\n    }\r\n    /**\r\n     * Clear the dictionary\r\n     */\r\n    function removeAll() {\r\n        dictionary = [];\r\n        index = {};\r\n    }\r\n    /**\r\n     * Add a scale into dictionary\r\n     * @param intervals\r\n     * @param name\r\n     * @param aliases\r\n     */\r\n    function add(intervals, name, aliases) {\r\n        if (aliases === void 0) { aliases = []; }\r\n        var scale = __assign(__assign({}, pcset.get(intervals)), { name: name, intervals: intervals, aliases: aliases });\r\n        dictionary.push(scale);\r\n        index[scale.name] = scale;\r\n        index[scale.setNum] = scale;\r\n        index[scale.chroma] = scale;\r\n        scale.aliases.forEach(function (alias) { return addAlias(scale, alias); });\r\n        return scale;\r\n    }\r\n    function addAlias(scale, alias) {\r\n        index[alias] = scale;\r\n    }\r\n    SCALES.forEach(function (_a) {\r\n        var ivls = _a[0], name = _a[1], aliases = _a.slice(2);\r\n        return add(ivls.split(\" \"), name, aliases);\r\n    });\r\n    var index$1 = {\r\n        names: names,\r\n        get: get,\r\n        all: all,\r\n        add: add,\r\n        removeAll: removeAll,\r\n        keys: keys,\r\n        // deprecated\r\n        entries: entries,\r\n        scaleType: scaleType,\r\n    };\n\n    exports.NoScaleType = NoScaleType;\n    exports.add = add;\n    exports.addAlias = addAlias;\n    exports.all = all;\n    exports['default'] = index$1;\n    exports.entries = entries;\n    exports.get = get;\n    exports.keys = keys;\n    exports.names = names;\n    exports.removeAll = removeAll;\n    exports.scaleType = scaleType;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/chord-detect'), require('@tonaljs/chord-type'), require('@tonaljs/core'), require('@tonaljs/pcset'), require('@tonaljs/scale-type')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/chord-detect', '@tonaljs/chord-type', '@tonaljs/core', '@tonaljs/pcset', '@tonaljs/scale-type'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Chord = {}, global.chordDetect, global.chordType, global.core, global.pcset, global.scaleType));\n}(this, (function (exports, chordDetect, chordType, core, pcset, scaleType) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var NoChord = {\r\n        empty: true,\r\n        name: \"\",\r\n        symbol: \"\",\r\n        root: \"\",\r\n        rootDegree: 0,\r\n        type: \"\",\r\n        tonic: null,\r\n        setNum: NaN,\r\n        quality: \"Unknown\",\r\n        chroma: \"\",\r\n        normalized: \"\",\r\n        aliases: [],\r\n        notes: [],\r\n        intervals: [],\r\n    };\r\n    // 6, 64, 7, 9, 11 and 13 are consider part of the chord\r\n    // (see https://github.com/danigb/tonal/issues/55)\r\n    var NUM_TYPES = /^(6|64|7|9|11|13)$/;\r\n    /**\r\n     * Tokenize a chord name. It returns an array with the tonic and chord type\r\n     * If not tonic is found, all the name is considered the chord name.\r\n     *\r\n     * This function does NOT check if the chord type exists or not. It only tries\r\n     * to split the tonic and chord type.\r\n     *\r\n     * @function\r\n     * @param {string} name - the chord name\r\n     * @return {Array} an array with [tonic, type]\r\n     * @example\r\n     * tokenize(\"Cmaj7\") // => [ \"C\", \"maj7\" ]\r\n     * tokenize(\"C7\") // => [ \"C\", \"7\" ]\r\n     * tokenize(\"mMaj7\") // => [ null, \"mMaj7\" ]\r\n     * tokenize(\"Cnonsense\") // => [ null, \"nonsense\" ]\r\n     */\r\n    function tokenize(name) {\r\n        var _a = core.tokenizeNote(name), letter = _a[0], acc = _a[1], oct = _a[2], type = _a[3];\r\n        if (letter === \"\") {\r\n            return [\"\", name];\r\n        }\r\n        // aug is augmented (see https://github.com/danigb/tonal/issues/55)\r\n        if (letter === \"A\" && type === \"ug\") {\r\n            return [\"\", \"aug\"];\r\n        }\r\n        // see: https://github.com/tonaljs/tonal/issues/70\r\n        if (!type && (oct === \"4\" || oct === \"5\")) {\r\n            return [letter + acc, oct];\r\n        }\r\n        if (NUM_TYPES.test(oct)) {\r\n            return [letter + acc, oct + type];\r\n        }\r\n        else {\r\n            return [letter + acc + oct, type];\r\n        }\r\n    }\r\n    /**\r\n     * Get a Chord from a chord name.\r\n     */\r\n    function get(src) {\r\n        if (src === \"\") {\r\n            return NoChord;\r\n        }\r\n        if (Array.isArray(src) && src.length === 2) {\r\n            return getChord(src[1], src[0]);\r\n        }\r\n        else {\r\n            var _a = tokenize(src), tonic = _a[0], type = _a[1];\r\n            var chord_1 = getChord(type, tonic);\r\n            return chord_1.empty ? getChord(src) : chord_1;\r\n        }\r\n    }\r\n    /**\r\n     * Get chord properties\r\n     *\r\n     * @param typeName - the chord type name\r\n     * @param [tonic] - Optional tonic\r\n     * @param [root]  - Optional root (requires a tonic)\r\n     */\r\n    function getChord(typeName, optionalTonic, optionalRoot) {\r\n        var type = chordType.get(typeName);\r\n        var tonic = core.note(optionalTonic || \"\");\r\n        var root = core.note(optionalRoot || \"\");\r\n        if (type.empty ||\r\n            (optionalTonic && tonic.empty) ||\r\n            (optionalRoot && root.empty)) {\r\n            return NoChord;\r\n        }\r\n        var rootInterval = core.distance(tonic.pc, root.pc);\r\n        var rootDegree = type.intervals.indexOf(rootInterval) + 1;\r\n        if (!root.empty && !rootDegree) {\r\n            return NoChord;\r\n        }\r\n        var intervals = Array.from(type.intervals);\r\n        for (var i = 1; i < rootDegree; i++) {\r\n            var num = intervals[0][0];\r\n            var quality = intervals[0][1];\r\n            var newNum = parseInt(num, 10) + 7;\r\n            intervals.push(\"\" + newNum + quality);\r\n            intervals.shift();\r\n        }\r\n        var notes = tonic.empty\r\n            ? []\r\n            : intervals.map(function (i) { return core.transpose(tonic, i); });\r\n        typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\r\n        var symbol = \"\" + (tonic.empty ? \"\" : tonic.pc) + typeName + (root.empty || rootDegree <= 1 ? \"\" : \"/\" + root.pc);\r\n        var name = \"\" + (optionalTonic ? tonic.pc + \" \" : \"\") + type.name + (rootDegree > 1 && optionalRoot ? \" over \" + root.pc : \"\");\r\n        return __assign(__assign({}, type), { name: name, symbol: symbol, type: type.name, root: root.name, intervals: intervals, rootDegree: rootDegree, tonic: tonic.name, notes: notes });\r\n    }\r\n    var chord = core.deprecate(\"Chord.chord\", \"Chord.get\", get);\r\n    /**\r\n     * Transpose a chord name\r\n     *\r\n     * @param {string} chordName - the chord name\r\n     * @return {string} the transposed chord\r\n     *\r\n     * @example\r\n     * transpose('Dm7', 'P4') // => 'Gm7\r\n     */\r\n    function transpose(chordName, interval) {\r\n        var _a = tokenize(chordName), tonic = _a[0], type = _a[1];\r\n        if (!tonic) {\r\n            return chordName;\r\n        }\r\n        return core.transpose(tonic, interval) + type;\r\n    }\r\n    /**\r\n     * Get all scales where the given chord fits\r\n     *\r\n     * @example\r\n     * chordScales('C7b9')\r\n     * // => [\"phrygian dominant\", \"flamenco\", \"spanish heptatonic\", \"half-whole diminished\", \"chromatic\"]\r\n     */\r\n    function chordScales(name) {\r\n        var s = get(name);\r\n        var isChordIncluded = pcset.isSupersetOf(s.chroma);\r\n        return scaleType.all()\r\n            .filter(function (scale) { return isChordIncluded(scale.chroma); })\r\n            .map(function (scale) { return scale.name; });\r\n    }\r\n    /**\r\n     * Get all chords names that are a superset of the given one\r\n     * (has the same notes and at least one more)\r\n     *\r\n     * @function\r\n     * @example\r\n     * extended(\"CMaj7\")\r\n     * // => [ 'Cmaj#4', 'Cmaj7#9#11', 'Cmaj9', 'CM7add13', 'Cmaj13', 'Cmaj9#11', 'CM13#11', 'CM7b9' ]\r\n     */\r\n    function extended(chordName) {\r\n        var s = get(chordName);\r\n        var isSuperset = pcset.isSupersetOf(s.chroma);\r\n        return chordType.all()\r\n            .filter(function (chord) { return isSuperset(chord.chroma); })\r\n            .map(function (chord) { return s.tonic + chord.aliases[0]; });\r\n    }\r\n    /**\r\n     * Find all chords names that are a subset of the given one\r\n     * (has less notes but all from the given chord)\r\n     *\r\n     * @example\r\n     */\r\n    function reduced(chordName) {\r\n        var s = get(chordName);\r\n        var isSubset = pcset.isSubsetOf(s.chroma);\r\n        return chordType.all()\r\n            .filter(function (chord) { return isSubset(chord.chroma); })\r\n            .map(function (chord) { return s.tonic + chord.aliases[0]; });\r\n    }\r\n    var index = {\r\n        getChord: getChord,\r\n        get: get,\r\n        detect: chordDetect.detect,\r\n        chordScales: chordScales,\r\n        extended: extended,\r\n        reduced: reduced,\r\n        tokenize: tokenize,\r\n        transpose: transpose,\r\n        // deprecate\r\n        chord: chord,\r\n    };\n\n    Object.defineProperty(exports, 'detect', {\n        enumerable: true,\n        get: function () {\n            return chordDetect.detect;\n        }\n    });\n    exports.chord = chord;\n    exports.chordScales = chordScales;\n    exports['default'] = index;\n    exports.extended = extended;\n    exports.get = get;\n    exports.getChord = getChord;\n    exports.reduced = reduced;\n    exports.tokenize = tokenize;\n    exports.transpose = transpose;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.DurationValue = {}));\n}(this, (function (exports) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    // source: https://en.wikipedia.org/wiki/Note_value\r\n    var DATA = [\r\n        [\r\n            0.125,\r\n            \"dl\",\r\n            [\"large\", \"duplex longa\", \"maxima\", \"octuple\", \"octuple whole\"],\r\n        ],\r\n        [0.25, \"l\", [\"long\", \"longa\"]],\r\n        [0.5, \"d\", [\"double whole\", \"double\", \"breve\"]],\r\n        [1, \"w\", [\"whole\", \"semibreve\"]],\r\n        [2, \"h\", [\"half\", \"minim\"]],\r\n        [4, \"q\", [\"quarter\", \"crotchet\"]],\r\n        [8, \"e\", [\"eighth\", \"quaver\"]],\r\n        [16, \"s\", [\"sixteenth\", \"semiquaver\"]],\r\n        [32, \"t\", [\"thirty-second\", \"demisemiquaver\"]],\r\n        [64, \"sf\", [\"sixty-fourth\", \"hemidemisemiquaver\"]],\r\n        [128, \"h\", [\"hundred twenty-eighth\"]],\r\n        [256, \"th\", [\"two hundred fifty-sixth\"]],\r\n    ];\n\n    var VALUES = [];\r\n    DATA.forEach(function (_a) {\r\n        var denominator = _a[0], shorthand = _a[1], names = _a[2];\r\n        return add(denominator, shorthand, names);\r\n    });\r\n    var NoDuration = {\r\n        empty: true,\r\n        name: \"\",\r\n        value: 0,\r\n        fraction: [0, 0],\r\n        shorthand: \"\",\r\n        dots: \"\",\r\n        names: [],\r\n    };\r\n    function names() {\r\n        return VALUES.reduce(function (names, duration) {\r\n            duration.names.forEach(function (name) { return names.push(name); });\r\n            return names;\r\n        }, []);\r\n    }\r\n    function shorthands() {\r\n        return VALUES.map(function (dur) { return dur.shorthand; });\r\n    }\r\n    var REGEX = /^([^.]+)(\\.*)$/;\r\n    function get(name) {\r\n        var _a = REGEX.exec(name) || []; _a[0]; var simple = _a[1], dots = _a[2];\r\n        var base = VALUES.find(function (dur) { return dur.shorthand === simple || dur.names.includes(simple); });\r\n        if (!base) {\r\n            return NoDuration;\r\n        }\r\n        var fraction = calcDots(base.fraction, dots.length);\r\n        var value = fraction[0] / fraction[1];\r\n        return __assign(__assign({}, base), { name: name, dots: dots, value: value, fraction: fraction });\r\n    }\r\n    var value = function (name) { return get(name).value; };\r\n    var fraction = function (name) { return get(name).fraction; };\r\n    var index = { names: names, shorthands: shorthands, get: get, value: value, fraction: fraction };\r\n    //// PRIVATE ////\r\n    function add(denominator, shorthand, names) {\r\n        VALUES.push({\r\n            empty: false,\r\n            dots: \"\",\r\n            name: \"\",\r\n            value: 1 / denominator,\r\n            fraction: denominator < 1 ? [1 / denominator, 1] : [1, denominator],\r\n            shorthand: shorthand,\r\n            names: names,\r\n        });\r\n    }\r\n    function calcDots(fraction, dots) {\r\n        var pow = Math.pow(2, dots);\r\n        var numerator = fraction[0] * pow;\r\n        var denominator = fraction[1] * pow;\r\n        var base = numerator;\r\n        // add fractions\r\n        for (var i = 0; i < dots; i++) {\r\n            numerator += base / Math.pow(2, i + 1);\r\n        }\r\n        // simplify\r\n        while (numerator % 2 === 0 && denominator % 2 === 0) {\r\n            numerator /= 2;\r\n            denominator /= 2;\r\n        }\r\n        return [numerator, denominator];\r\n    }\n\n    exports.default = index;\n    exports.fraction = fraction;\n    exports.get = get;\n    exports.names = names;\n    exports.shorthands = shorthands;\n    exports.value = value;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/core')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/core'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Interval = {}, global.core));\n}(this, (function (exports, core) { 'use strict';\n\n  /**\r\n   * Get the natural list of names\r\n   */\r\n  function names() {\r\n      return \"1P 2M 3M 4P 5P 6m 7m\".split(\" \");\r\n  }\r\n  /**\r\n   * Get properties of an interval\r\n   *\r\n   * @function\r\n   * @example\r\n   * Interval.get('P4') // => {\"alt\": 0,  \"dir\": 1,  \"name\": \"4P\", \"num\": 4, \"oct\": 0, \"q\": \"P\", \"semitones\": 5, \"simple\": 4, \"step\": 3, \"type\": \"perfectable\"}\r\n   */\r\n  var get = core.interval;\r\n  /**\r\n   * Get name of an interval\r\n   *\r\n   * @function\r\n   * @example\r\n   * Interval.name('4P') // => \"4P\"\r\n   * Interval.name('P4') // => \"4P\"\r\n   * Interval.name('C4') // => \"\"\r\n   */\r\n  var name = function (name) { return core.interval(name).name; };\r\n  /**\r\n   * Get semitones of an interval\r\n   * @function\r\n   * @example\r\n   * Interval.semitones('P4') // => 5\r\n   */\r\n  var semitones = function (name) { return core.interval(name).semitones; };\r\n  /**\r\n   * Get quality of an interval\r\n   * @function\r\n   * @example\r\n   * Interval.quality('P4') // => \"P\"\r\n   */\r\n  var quality = function (name) { return core.interval(name).q; };\r\n  /**\r\n   * Get number of an interval\r\n   * @function\r\n   * @example\r\n   * Interval.num('P4') // => 4\r\n   */\r\n  var num = function (name) { return core.interval(name).num; };\r\n  /**\r\n   * Get the simplified version of an interval.\r\n   *\r\n   * @function\r\n   * @param {string} interval - the interval to simplify\r\n   * @return {string} the simplified interval\r\n   *\r\n   * @example\r\n   * Interval.simplify(\"9M\") // => \"2M\"\r\n   * Interval.simplify(\"2M\") // => \"2M\"\r\n   * Interval.simplify(\"-2M\") // => \"7m\"\r\n   * [\"8P\", \"9M\", \"10M\", \"11P\", \"12P\", \"13M\", \"14M\", \"15P\"].map(Interval.simplify)\r\n   * // => [ \"8P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\r\n   */\r\n  function simplify(name) {\r\n      var i = core.interval(name);\r\n      return i.empty ? \"\" : i.simple + i.q;\r\n  }\r\n  /**\r\n   * Get the inversion (https://en.wikipedia.org/wiki/Inversion_(music)#Intervals)\r\n   * of an interval.\r\n   *\r\n   * @function\r\n   * @param {string} interval - the interval to invert in interval shorthand\r\n   * notation or interval array notation\r\n   * @return {string} the inverted interval\r\n   *\r\n   * @example\r\n   * Interval.invert(\"3m\") // => \"6M\"\r\n   * Interval.invert(\"2M\") // => \"7m\"\r\n   */\r\n  function invert(name) {\r\n      var i = core.interval(name);\r\n      if (i.empty) {\r\n          return \"\";\r\n      }\r\n      var step = (7 - i.step) % 7;\r\n      var alt = i.type === \"perfectable\" ? -i.alt : -(i.alt + 1);\r\n      return core.interval({ step: step, alt: alt, oct: i.oct, dir: i.dir }).name;\r\n  }\r\n  // interval numbers\r\n  var IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\r\n  // interval qualities\r\n  var IQ = \"P m M m M P d P m M m M\".split(\" \");\r\n  /**\r\n   * Get interval name from semitones number. Since there are several interval\r\n   * names for the same number, the name it's arbitrary, but deterministic.\r\n   *\r\n   * @param {Integer} num - the number of semitones (can be negative)\r\n   * @return {string} the interval name\r\n   * @example\r\n   * Interval.fromSemitones(7) // => \"5P\"\r\n   * Interval.fromSemitones(-7) // => \"-5P\"\r\n   */\r\n  function fromSemitones(semitones) {\r\n      var d = semitones < 0 ? -1 : 1;\r\n      var n = Math.abs(semitones);\r\n      var c = n % 12;\r\n      var o = Math.floor(n / 12);\r\n      return d * (IN[c] + 7 * o) + IQ[c];\r\n  }\r\n  /**\r\n   * Find interval between two notes\r\n   *\r\n   * @example\r\n   * Interval.distance(\"C4\", \"G4\"); // => \"5P\"\r\n   */\r\n  var distance = core.distance;\r\n  /**\r\n   * Adds two intervals\r\n   *\r\n   * @function\r\n   * @param {string} interval1\r\n   * @param {string} interval2\r\n   * @return {string} the added interval name\r\n   * @example\r\n   * Interval.add(\"3m\", \"5P\") // => \"7m\"\r\n   */\r\n  var add = combinator(function (a, b) { return [a[0] + b[0], a[1] + b[1]]; });\r\n  /**\r\n   * Returns a function that adds an interval\r\n   *\r\n   * @function\r\n   * @example\r\n   * ['1P', '2M', '3M'].map(Interval.addTo('5P')) // => [\"5P\", \"6M\", \"7M\"]\r\n   */\r\n  var addTo = function (interval) { return function (other) {\r\n      return add(interval, other);\r\n  }; };\r\n  /**\r\n   * Subtracts two intervals\r\n   *\r\n   * @function\r\n   * @param {string} minuendInterval\r\n   * @param {string} subtrahendInterval\r\n   * @return {string} the substracted interval name\r\n   * @example\r\n   * Interval.substract('5P', '3M') // => '3m'\r\n   * Interval.substract('3M', '5P') // => '-3m'\r\n   */\r\n  var substract = combinator(function (a, b) { return [a[0] - b[0], a[1] - b[1]]; });\r\n  function transposeFifths(interval, fifths) {\r\n      var ivl = get(interval);\r\n      if (ivl.empty)\r\n          return \"\";\r\n      var _a = ivl.coord, nFifths = _a[0], nOcts = _a[1], dir = _a[2];\r\n      return core.coordToInterval([nFifths + fifths, nOcts, dir]).name;\r\n  }\r\n  var index = {\r\n      names: names,\r\n      get: get,\r\n      name: name,\r\n      num: num,\r\n      semitones: semitones,\r\n      quality: quality,\r\n      fromSemitones: fromSemitones,\r\n      distance: distance,\r\n      invert: invert,\r\n      simplify: simplify,\r\n      add: add,\r\n      addTo: addTo,\r\n      substract: substract,\r\n      transposeFifths: transposeFifths,\r\n  };\r\n  function combinator(fn) {\r\n      return function (a, b) {\r\n          var coordA = core.interval(a).coord;\r\n          var coordB = core.interval(b).coord;\r\n          if (coordA && coordB) {\r\n              var coord = fn(coordA, coordB);\r\n              return core.coordToInterval(coord).name;\r\n          }\r\n      };\r\n  }\n\n  exports.add = add;\n  exports.addTo = addTo;\n  exports['default'] = index;\n  exports.distance = distance;\n  exports.fromSemitones = fromSemitones;\n  exports.get = get;\n  exports.invert = invert;\n  exports.name = name;\n  exports.names = names;\n  exports.num = num;\n  exports.quality = quality;\n  exports.semitones = semitones;\n  exports.simplify = simplify;\n  exports.substract = substract;\n  exports.transposeFifths = transposeFifths;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/core')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/core'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Midi = {}, global.core));\n}(this, (function (exports, core) { 'use strict';\n\n  function isMidi(arg) {\r\n      return +arg >= 0 && +arg <= 127;\r\n  }\r\n  /**\r\n   * Get the note midi number (a number between 0 and 127)\r\n   *\r\n   * It returns undefined if not valid note name\r\n   *\r\n   * @function\r\n   * @param {string|number} note - the note name or midi number\r\n   * @return {Integer} the midi number or undefined if not valid note\r\n   * @example\r\n   * import { toMidi } from '@tonaljs/midi'\r\n   * toMidi(\"C4\") // => 60\r\n   * toMidi(60) // => 60\r\n   * toMidi('60') // => 60\r\n   */\r\n  function toMidi(note) {\r\n      if (isMidi(note)) {\r\n          return +note;\r\n      }\r\n      var n = core.note(note);\r\n      return n.empty ? null : n.midi;\r\n  }\r\n  /**\r\n   * Get the frequency in hertzs from midi number\r\n   *\r\n   * @param {number} midi - the note midi number\r\n   * @param {number} [tuning = 440] - A4 tuning frequency in Hz (440 by default)\r\n   * @return {number} the frequency or null if not valid note midi\r\n   * @example\r\n   * import { midiToFreq} from '@tonaljs/midi'\r\n   * midiToFreq(69) // => 440\r\n   */\r\n  function midiToFreq(midi, tuning) {\r\n      if (tuning === void 0) { tuning = 440; }\r\n      return Math.pow(2, (midi - 69) / 12) * tuning;\r\n  }\r\n  var L2 = Math.log(2);\r\n  var L440 = Math.log(440);\r\n  /**\r\n   * Get the midi number from a frequency in hertz. The midi number can\r\n   * contain decimals (with two digits precission)\r\n   *\r\n   * @param {number} frequency\r\n   * @return {number}\r\n   * @example\r\n   * import { freqToMidi} from '@tonaljs/midi'\r\n   * freqToMidi(220)); //=> 57\r\n   * freqToMidi(261.62)); //=> 60\r\n   * freqToMidi(261)); //=> 59.96\r\n   */\r\n  function freqToMidi(freq) {\r\n      var v = (12 * (Math.log(freq) - L440)) / L2 + 69;\r\n      return Math.round(v * 100) / 100;\r\n  }\r\n  var SHARPS = \"C C# D D# E F F# G G# A A# B\".split(\" \");\r\n  var FLATS = \"C Db D Eb E F Gb G Ab A Bb B\".split(\" \");\r\n  /**\r\n   * Given a midi number, returns a note name. The altered notes will have\r\n   * flats unless explicitly set with the optional `useSharps` parameter.\r\n   *\r\n   * @function\r\n   * @param {number} midi - the midi note number\r\n   * @param {Object} options = default: `{ sharps: false, pitchClass: false }`\r\n   * @param {boolean} useSharps - (Optional) set to true to use sharps instead of flats\r\n   * @return {string} the note name\r\n   * @example\r\n   * import { midiToNoteName } from '@tonaljs/midi'\r\n   * midiToNoteName(61) // => \"Db4\"\r\n   * midiToNoteName(61, { pitchClass: true }) // => \"Db\"\r\n   * midiToNoteName(61, { sharps: true }) // => \"C#4\"\r\n   * midiToNoteName(61, { pitchClass: true, sharps: true }) // => \"C#\"\r\n   * // it rounds to nearest note\r\n   * midiToNoteName(61.7) // => \"D4\"\r\n   */\r\n  function midiToNoteName(midi, options) {\r\n      if (options === void 0) { options = {}; }\r\n      if (isNaN(midi) || midi === -Infinity || midi === Infinity)\r\n          return \"\";\r\n      midi = Math.round(midi);\r\n      var pcs = options.sharps === true ? SHARPS : FLATS;\r\n      var pc = pcs[midi % 12];\r\n      if (options.pitchClass) {\r\n          return pc;\r\n      }\r\n      var o = Math.floor(midi / 12) - 1;\r\n      return pc + o;\r\n  }\r\n  var index = { isMidi: isMidi, toMidi: toMidi, midiToFreq: midiToFreq, midiToNoteName: midiToNoteName, freqToMidi: freqToMidi };\n\n  exports['default'] = index;\n  exports.freqToMidi = freqToMidi;\n  exports.isMidi = isMidi;\n  exports.midiToFreq = midiToFreq;\n  exports.midiToNoteName = midiToNoteName;\n  exports.toMidi = toMidi;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/core'), require('@tonaljs/midi')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/core', '@tonaljs/midi'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Note = {}, global.core, global.midi$1));\n}(this, (function (exports, core, midi$1) { 'use strict';\n\n  var NAMES = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\r\n  var toName = function (n) { return n.name; };\r\n  var onlyNotes = function (array) {\r\n      return array.map(core.note).filter(function (n) { return !n.empty; });\r\n  };\r\n  /**\r\n   * Return the natural note names without octave\r\n   * @function\r\n   * @example\r\n   * Note.names(); // => [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"]\r\n   */\r\n  function names(array) {\r\n      if (array === undefined) {\r\n          return NAMES.slice();\r\n      }\r\n      else if (!Array.isArray(array)) {\r\n          return [];\r\n      }\r\n      else {\r\n          return onlyNotes(array).map(toName);\r\n      }\r\n  }\r\n  /**\r\n   * Get a note from a note name\r\n   *\r\n   * @function\r\n   * @example\r\n   * Note.get('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\r\n   */\r\n  var get = core.note;\r\n  /**\r\n   * Get the note name\r\n   * @function\r\n   */\r\n  var name = function (note) { return get(note).name; };\r\n  /**\r\n   * Get the note pitch class name\r\n   * @function\r\n   */\r\n  var pitchClass = function (note) { return get(note).pc; };\r\n  /**\r\n   * Get the note accidentals\r\n   * @function\r\n   */\r\n  var accidentals = function (note) { return get(note).acc; };\r\n  /**\r\n   * Get the note octave\r\n   * @function\r\n   */\r\n  var octave = function (note) { return get(note).oct; };\r\n  /**\r\n   * Get the note midi\r\n   * @function\r\n   */\r\n  var midi = function (note) { return get(note).midi; };\r\n  /**\r\n   * Get the note midi\r\n   * @function\r\n   */\r\n  var freq = function (note) { return get(note).freq; };\r\n  /**\r\n   * Get the note chroma\r\n   * @function\r\n   */\r\n  var chroma = function (note) { return get(note).chroma; };\r\n  /**\r\n   * Given a midi number, returns a note name. Uses flats for altered notes.\r\n   *\r\n   * @function\r\n   * @param {number} midi - the midi note number\r\n   * @return {string} the note name\r\n   * @example\r\n   * Note.fromMidi(61) // => \"Db4\"\r\n   * Note.fromMidi(61.7) // => \"D4\"\r\n   */\r\n  function fromMidi(midi) {\r\n      return midi$1.midiToNoteName(midi);\r\n  }\r\n  /**\r\n   * Given a midi number, returns a note name. Uses flats for altered notes.\r\n   */\r\n  function fromFreq(freq) {\r\n      return midi$1.midiToNoteName(midi$1.freqToMidi(freq));\r\n  }\r\n  /**\r\n   * Given a midi number, returns a note name. Uses flats for altered notes.\r\n   */\r\n  function fromFreqSharps(freq) {\r\n      return midi$1.midiToNoteName(midi$1.freqToMidi(freq), { sharps: true });\r\n  }\r\n  /**\r\n   * Given a midi number, returns a note name. Uses flats for altered notes.\r\n   *\r\n   * @function\r\n   * @param {number} midi - the midi note number\r\n   * @return {string} the note name\r\n   * @example\r\n   * Note.fromMidiSharps(61) // => \"C#4\"\r\n   */\r\n  function fromMidiSharps(midi) {\r\n      return midi$1.midiToNoteName(midi, { sharps: true });\r\n  }\r\n  /**\r\n   * Transpose a note by an interval\r\n   */\r\n  var transpose = core.transpose;\r\n  var tr = core.transpose;\r\n  /**\r\n   * Transpose by an interval.\r\n   * @function\r\n   * @param {string} interval\r\n   * @return {function} a function that transposes by the given interval\r\n   * @example\r\n   * [\"C\", \"D\", \"E\"].map(Note.transposeBy(\"5P\"));\r\n   * // => [\"G\", \"A\", \"B\"]\r\n   */\r\n  var transposeBy = function (interval) { return function (note) {\r\n      return transpose(note, interval);\r\n  }; };\r\n  var trBy = transposeBy;\r\n  /**\r\n   * Transpose from a note\r\n   * @function\r\n   * @param {string} note\r\n   * @return {function}  a function that transposes the the note by an interval\r\n   * [\"1P\", \"3M\", \"5P\"].map(Note.transposeFrom(\"C\"));\r\n   * // => [\"C\", \"E\", \"G\"]\r\n   */\r\n  var transposeFrom = function (note) { return function (interval) {\r\n      return transpose(note, interval);\r\n  }; };\r\n  var trFrom = transposeFrom;\r\n  /**\r\n   * Transpose a note by a number of perfect fifths.\r\n   *\r\n   * @function\r\n   * @param {string} note - the note name\r\n   * @param {number} fifhts - the number of fifths\r\n   * @return {string} the transposed note name\r\n   *\r\n   * @example\r\n   * import { transposeFifths } from \"@tonaljs/note\"\r\n   * transposeFifths(\"G4\", 1) // => \"D\"\r\n   * [0, 1, 2, 3, 4].map(fifths => transposeFifths(\"C\", fifths)) // => [\"C\", \"G\", \"D\", \"A\", \"E\"]\r\n   */\r\n  function transposeFifths(noteName, fifths) {\r\n      var note = get(noteName);\r\n      if (note.empty) {\r\n          return \"\";\r\n      }\r\n      var _a = note.coord, nFifths = _a[0], nOcts = _a[1];\r\n      var transposed = nOcts === undefined\r\n          ? core.coordToNote([nFifths + fifths])\r\n          : core.coordToNote([nFifths + fifths, nOcts]);\r\n      return transposed.name;\r\n  }\r\n  var trFifths = transposeFifths;\r\n  var ascending = function (a, b) { return a.height - b.height; };\r\n  var descending = function (a, b) { return b.height - a.height; };\r\n  function sortedNames(notes, comparator) {\r\n      comparator = comparator || ascending;\r\n      return onlyNotes(notes).sort(comparator).map(toName);\r\n  }\r\n  function sortedUniqNames(notes) {\r\n      return sortedNames(notes, ascending).filter(function (n, i, a) { return i === 0 || n !== a[i - 1]; });\r\n  }\r\n  /**\r\n   * Simplify a note\r\n   *\r\n   * @function\r\n   * @param {string} note - the note to be simplified\r\n   * - sameAccType: default true. Use same kind of accidentals that source\r\n   * @return {string} the simplified note or '' if not valid note\r\n   * @example\r\n   * simplify(\"C##\") // => \"D\"\r\n   * simplify(\"C###\") // => \"D#\"\r\n   * simplify(\"C###\")\r\n   * simplify(\"B#4\") // => \"C5\"\r\n   */\r\n  var simplify = function (noteName) {\r\n      var note = get(noteName);\r\n      if (note.empty) {\r\n          return \"\";\r\n      }\r\n      return midi$1.midiToNoteName(note.midi || note.chroma, {\r\n          sharps: note.alt > 0,\r\n          pitchClass: note.midi === null,\r\n      });\r\n  };\r\n  /**\r\n   * Get enharmonic of a note\r\n   *\r\n   * @function\r\n   * @param {string} note\r\n   * @param [string] - [optional] Destination pitch class\r\n   * @return {string} the enharmonic note name or '' if not valid note\r\n   * @example\r\n   * Note.enharmonic(\"Db\") // => \"C#\"\r\n   * Note.enharmonic(\"C\") // => \"C\"\r\n   * Note.enharmonic(\"F2\",\"E#\") // => \"E#2\"\r\n   */\r\n  function enharmonic(noteName, destName) {\r\n      var src = get(noteName);\r\n      if (src.empty) {\r\n          return \"\";\r\n      }\r\n      // destination: use given or generate one\r\n      var dest = get(destName ||\r\n          midi$1.midiToNoteName(src.midi || src.chroma, {\r\n              sharps: src.alt < 0,\r\n              pitchClass: true,\r\n          }));\r\n      // ensure destination is valid\r\n      if (dest.empty || dest.chroma !== src.chroma) {\r\n          return \"\";\r\n      }\r\n      // if src has no octave, no need to calculate anything else\r\n      if (src.oct === undefined) {\r\n          return dest.pc;\r\n      }\r\n      // detect any octave overflow\r\n      var srcChroma = src.chroma - src.alt;\r\n      var destChroma = dest.chroma - dest.alt;\r\n      var destOctOffset = srcChroma > 11 || destChroma < 0\r\n          ? -1\r\n          : srcChroma < 0 || destChroma > 11\r\n              ? +1\r\n              : 0;\r\n      // calculate the new octave\r\n      var destOct = src.oct + destOctOffset;\r\n      return dest.pc + destOct;\r\n  }\r\n  var index = {\r\n      names: names,\r\n      get: get,\r\n      name: name,\r\n      pitchClass: pitchClass,\r\n      accidentals: accidentals,\r\n      octave: octave,\r\n      midi: midi,\r\n      ascending: ascending,\r\n      descending: descending,\r\n      sortedNames: sortedNames,\r\n      sortedUniqNames: sortedUniqNames,\r\n      fromMidi: fromMidi,\r\n      fromMidiSharps: fromMidiSharps,\r\n      freq: freq,\r\n      fromFreq: fromFreq,\r\n      fromFreqSharps: fromFreqSharps,\r\n      chroma: chroma,\r\n      transpose: transpose,\r\n      tr: tr,\r\n      transposeBy: transposeBy,\r\n      trBy: trBy,\r\n      transposeFrom: transposeFrom,\r\n      trFrom: trFrom,\r\n      transposeFifths: transposeFifths,\r\n      trFifths: trFifths,\r\n      simplify: simplify,\r\n      enharmonic: enharmonic,\r\n  };\n\n  exports.accidentals = accidentals;\n  exports.ascending = ascending;\n  exports.chroma = chroma;\n  exports['default'] = index;\n  exports.descending = descending;\n  exports.enharmonic = enharmonic;\n  exports.freq = freq;\n  exports.fromFreq = fromFreq;\n  exports.fromFreqSharps = fromFreqSharps;\n  exports.fromMidi = fromMidi;\n  exports.fromMidiSharps = fromMidiSharps;\n  exports.get = get;\n  exports.midi = midi;\n  exports.name = name;\n  exports.names = names;\n  exports.octave = octave;\n  exports.pitchClass = pitchClass;\n  exports.simplify = simplify;\n  exports.sortedNames = sortedNames;\n  exports.sortedUniqNames = sortedUniqNames;\n  exports.tr = tr;\n  exports.trBy = trBy;\n  exports.trFifths = trFifths;\n  exports.trFrom = trFrom;\n  exports.transpose = transpose;\n  exports.transposeBy = transposeBy;\n  exports.transposeFifths = transposeFifths;\n  exports.transposeFrom = transposeFrom;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/core')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/core'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.RomanNumeral = {}, global.core));\n}(this, (function (exports, core) { 'use strict';\n\n  var NoRomanNumeral = { empty: true, name: \"\", chordType: \"\" };\r\n  var cache = {};\r\n  /**\r\n   * Get properties of a roman numeral string\r\n   *\r\n   * @function\r\n   * @param {string} - the roman numeral string (can have type, like: Imaj7)\r\n   * @return {Object} - the roman numeral properties\r\n   * @param {string} name - the roman numeral (tonic)\r\n   * @param {string} type - the chord type\r\n   * @param {string} num - the number (1 = I, 2 = II...)\r\n   * @param {boolean} major - major or not\r\n   *\r\n   * @example\r\n   * romanNumeral(\"VIIb5\") // => { name: \"VII\", type: \"b5\", num: 7, major: true }\r\n   */\r\n  function get(src) {\r\n      return typeof src === \"string\"\r\n          ? cache[src] || (cache[src] = parse(src))\r\n          : typeof src === \"number\"\r\n              ? get(NAMES[src] || \"\")\r\n              : core.isPitch(src)\r\n                  ? fromPitch(src)\r\n                  : core.isNamed(src)\r\n                      ? get(src.name)\r\n                      : NoRomanNumeral;\r\n  }\r\n  var romanNumeral = core.deprecate(\"RomanNumeral.romanNumeral\", \"RomanNumeral.get\", get);\r\n  /**\r\n   * Get roman numeral names\r\n   *\r\n   * @function\r\n   * @param {boolean} [isMajor=true]\r\n   * @return {Array<String>}\r\n   *\r\n   * @example\r\n   * names() // => [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"]\r\n   */\r\n  function names(major) {\r\n      if (major === void 0) { major = true; }\r\n      return (major ? NAMES : NAMES_MINOR).slice();\r\n  }\r\n  function fromPitch(pitch) {\r\n      return get(core.altToAcc(pitch.alt) + NAMES[pitch.step]);\r\n  }\r\n  var REGEX = /^(#{1,}|b{1,}|x{1,}|)(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2})([^IViv]*)$/;\r\n  function tokenize(str) {\r\n      return (REGEX.exec(str) || [\"\", \"\", \"\", \"\"]);\r\n  }\r\n  var ROMANS = \"I II III IV V VI VII\";\r\n  var NAMES = ROMANS.split(\" \");\r\n  var NAMES_MINOR = ROMANS.toLowerCase().split(\" \");\r\n  function parse(src) {\r\n      var _a = tokenize(src), name = _a[0], acc = _a[1], roman = _a[2], chordType = _a[3];\r\n      if (!roman) {\r\n          return NoRomanNumeral;\r\n      }\r\n      var upperRoman = roman.toUpperCase();\r\n      var step = NAMES.indexOf(upperRoman);\r\n      var alt = core.accToAlt(acc);\r\n      var dir = 1;\r\n      return {\r\n          empty: false,\r\n          name: name,\r\n          roman: roman,\r\n          interval: core.interval({ step: step, alt: alt, dir: dir }).name,\r\n          acc: acc,\r\n          chordType: chordType,\r\n          alt: alt,\r\n          step: step,\r\n          major: roman === upperRoman,\r\n          oct: 0,\r\n          dir: dir,\r\n      };\r\n  }\r\n  var index = {\r\n      names: names,\r\n      get: get,\r\n      // deprecated\r\n      romanNumeral: romanNumeral,\r\n  };\n\n  exports['default'] = index;\n  exports.get = get;\n  exports.names = names;\n  exports.tokenize = tokenize;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/core'), require('@tonaljs/note'), require('@tonaljs/roman-numeral')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/core', '@tonaljs/note', '@tonaljs/roman-numeral'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Key = {}, global.core, global.note, global.romanNumeral));\n}(this, (function (exports, core, note, romanNumeral) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var Empty = Object.freeze([]);\r\n    var NoKey = {\r\n        type: \"major\",\r\n        tonic: \"\",\r\n        alteration: 0,\r\n        keySignature: \"\",\r\n    };\r\n    var NoKeyScale = {\r\n        tonic: \"\",\r\n        grades: Empty,\r\n        intervals: Empty,\r\n        scale: Empty,\r\n        chords: Empty,\r\n        chordsHarmonicFunction: Empty,\r\n        chordScales: Empty,\r\n    };\r\n    var NoMajorKey = __assign(__assign(__assign({}, NoKey), NoKeyScale), { type: \"major\", minorRelative: \"\", scale: Empty, secondaryDominants: Empty, secondaryDominantsMinorRelative: Empty, substituteDominants: Empty, substituteDominantsMinorRelative: Empty });\r\n    var NoMinorKey = __assign(__assign({}, NoKey), { type: \"minor\", relativeMajor: \"\", natural: NoKeyScale, harmonic: NoKeyScale, melodic: NoKeyScale });\r\n    var mapScaleToType = function (scale, list, sep) {\r\n        if (sep === void 0) { sep = \"\"; }\r\n        return list.map(function (type, i) { return \"\" + scale[i] + sep + type; });\r\n    };\r\n    function keyScale(grades, chords, harmonicFunctions, chordScales) {\r\n        return function (tonic) {\r\n            var intervals = grades.map(function (gr) { return romanNumeral.get(gr).interval || \"\"; });\r\n            var scale = intervals.map(function (interval) { return core.transpose(tonic, interval); });\r\n            return {\r\n                tonic: tonic,\r\n                grades: grades,\r\n                intervals: intervals,\r\n                scale: scale,\r\n                chords: mapScaleToType(scale, chords),\r\n                chordsHarmonicFunction: harmonicFunctions.slice(),\r\n                chordScales: mapScaleToType(scale, chordScales, \" \"),\r\n            };\r\n        };\r\n    }\r\n    var distInFifths = function (from, to) {\r\n        var f = core.note(from);\r\n        var t = core.note(to);\r\n        return f.empty || t.empty ? 0 : t.coord[0] - f.coord[0];\r\n    };\r\n    var MajorScale = keyScale(\"I II III IV V VI VII\".split(\" \"), \"maj7 m7 m7 maj7 7 m7 m7b5\".split(\" \"), \"T SD T SD D T D\".split(\" \"), \"major,dorian,phrygian,lydian,mixolydian,minor,locrian\".split(\",\"));\r\n    var NaturalScale = keyScale(\"I II bIII IV V bVI bVII\".split(\" \"), \"m7 m7b5 maj7 m7 m7 maj7 7\".split(\" \"), \"T SD T SD D SD SD\".split(\" \"), \"minor,locrian,major,dorian,phrygian,lydian,mixolydian\".split(\",\"));\r\n    var HarmonicScale = keyScale(\"I II bIII IV V bVI VII\".split(\" \"), \"mMaj7 m7b5 +maj7 m7 7 maj7 o7\".split(\" \"), \"T SD T SD D SD D\".split(\" \"), \"harmonic minor,locrian 6,major augmented,lydian diminished,phrygian dominant,lydian #9,ultralocrian\".split(\",\"));\r\n    var MelodicScale = keyScale(\"I II bIII IV V VI VII\".split(\" \"), \"m6 m7 +maj7 7 7 m7b5 m7b5\".split(\" \"), \"T SD T SD D  \".split(\" \"), \"melodic minor,dorian b2,lydian augmented,lydian dominant,mixolydian b6,locrian #2,altered\".split(\",\"));\r\n    /**\r\n     * Get a major key properties in a given tonic\r\n     * @param tonic\r\n     */\r\n    function majorKey(tonic) {\r\n        var pc = core.note(tonic).pc;\r\n        if (!pc)\r\n            return NoMajorKey;\r\n        var keyScale = MajorScale(pc);\r\n        var alteration = distInFifths(\"C\", pc);\r\n        var romanInTonic = function (src) {\r\n            var r = romanNumeral.get(src);\r\n            if (r.empty)\r\n                return \"\";\r\n            return core.transpose(tonic, r.interval) + r.chordType;\r\n        };\r\n        return __assign(__assign({}, keyScale), { type: \"major\", minorRelative: core.transpose(pc, \"-3m\"), alteration: alteration, keySignature: core.altToAcc(alteration), secondaryDominants: \"- VI7 VII7 I7 II7 III7 -\".split(\" \").map(romanInTonic), secondaryDominantsMinorRelative: \"- IIIm7b5 IV#m7 Vm7 VIm7 VIIm7b5 -\"\r\n                .split(\" \")\r\n                .map(romanInTonic), substituteDominants: \"- bIII7 IV7 bV7 bVI7 bVII7 -\"\r\n                .split(\" \")\r\n                .map(romanInTonic), substituteDominantsMinorRelative: \"- IIIm7 Im7 IIbm7 VIm7 IVm7 -\"\r\n                .split(\" \")\r\n                .map(romanInTonic) });\r\n    }\r\n    /**\r\n     * Get minor key properties in a given tonic\r\n     * @param tonic\r\n     */\r\n    function minorKey(tnc) {\r\n        var pc = core.note(tnc).pc;\r\n        if (!pc)\r\n            return NoMinorKey;\r\n        var alteration = distInFifths(\"C\", pc) - 3;\r\n        return {\r\n            type: \"minor\",\r\n            tonic: pc,\r\n            relativeMajor: core.transpose(pc, \"3m\"),\r\n            alteration: alteration,\r\n            keySignature: core.altToAcc(alteration),\r\n            natural: NaturalScale(pc),\r\n            harmonic: HarmonicScale(pc),\r\n            melodic: MelodicScale(pc),\r\n        };\r\n    }\r\n    /**\r\n     * Given a key signature, returns the tonic of the major key\r\n     * @param sigature\r\n     * @example\r\n     * majorTonicFromKeySignature('###') // => 'A'\r\n     */\r\n    function majorTonicFromKeySignature(sig) {\r\n        if (typeof sig === \"number\") {\r\n            return note.transposeFifths(\"C\", sig);\r\n        }\r\n        else if (typeof sig === \"string\" && /^b+|#+$/.test(sig)) {\r\n            return note.transposeFifths(\"C\", core.accToAlt(sig));\r\n        }\r\n        return null;\r\n    }\r\n    var index = { majorKey: majorKey, majorTonicFromKeySignature: majorTonicFromKeySignature, minorKey: minorKey };\n\n    exports['default'] = index;\n    exports.majorKey = majorKey;\n    exports.majorTonicFromKeySignature = majorTonicFromKeySignature;\n    exports.minorKey = minorKey;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/collection'), require('@tonaljs/core'), require('@tonaljs/interval'), require('@tonaljs/pcset'), require('@tonaljs/scale-type')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/collection', '@tonaljs/core', '@tonaljs/interval', '@tonaljs/pcset', '@tonaljs/scale-type'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Mode = {}, global.collection, global.core, global.interval, global.pcset, global.scaleType));\n}(this, (function (exports, collection, core, interval, pcset, scaleType) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var MODES = [\r\n        [0, 2773, 0, \"ionian\", \"\", \"Maj7\", \"major\"],\r\n        [1, 2902, 2, \"dorian\", \"m\", \"m7\"],\r\n        [2, 3418, 4, \"phrygian\", \"m\", \"m7\"],\r\n        [3, 2741, -1, \"lydian\", \"\", \"Maj7\"],\r\n        [4, 2774, 1, \"mixolydian\", \"\", \"7\"],\r\n        [5, 2906, 3, \"aeolian\", \"m\", \"m7\", \"minor\"],\r\n        [6, 3434, 5, \"locrian\", \"dim\", \"m7b5\"],\r\n    ];\r\n    var NoMode = __assign(__assign({}, pcset.EmptyPcset), { name: \"\", alt: 0, modeNum: NaN, triad: \"\", seventh: \"\", aliases: [] });\r\n    var modes = MODES.map(toMode);\r\n    var index = {};\r\n    modes.forEach(function (mode) {\r\n        index[mode.name] = mode;\r\n        mode.aliases.forEach(function (alias) {\r\n            index[alias] = mode;\r\n        });\r\n    });\r\n    /**\r\n     * Get a Mode by it's name\r\n     *\r\n     * @example\r\n     * get('dorian')\r\n     * // =>\r\n     * // {\r\n     * //   intervals: [ '1P', '2M', '3m', '4P', '5P', '6M', '7m' ],\r\n     * //   modeNum: 1,\r\n     * //   chroma: '101101010110',\r\n     * //   normalized: '101101010110',\r\n     * //   name: 'dorian',\r\n     * //   setNum: 2902,\r\n     * //   alt: 2,\r\n     * //   triad: 'm',\r\n     * //   seventh: 'm7',\r\n     * //   aliases: []\r\n     * // }\r\n     */\r\n    function get(name) {\r\n        return typeof name === \"string\"\r\n            ? index[name.toLowerCase()] || NoMode\r\n            : name && name.name\r\n                ? get(name.name)\r\n                : NoMode;\r\n    }\r\n    var mode = core.deprecate(\"Mode.mode\", \"Mode.get\", get);\r\n    /**\r\n     * Get a list of all modes\r\n     */\r\n    function all() {\r\n        return modes.slice();\r\n    }\r\n    var entries = core.deprecate(\"Mode.mode\", \"Mode.all\", all);\r\n    /**\r\n     * Get a list of all mode names\r\n     */\r\n    function names() {\r\n        return modes.map(function (mode) { return mode.name; });\r\n    }\r\n    function toMode(mode) {\r\n        var modeNum = mode[0], setNum = mode[1], alt = mode[2], name = mode[3], triad = mode[4], seventh = mode[5], alias = mode[6];\r\n        var aliases = alias ? [alias] : [];\r\n        var chroma = Number(setNum).toString(2);\r\n        var intervals = scaleType.get(name).intervals;\r\n        return {\r\n            empty: false,\r\n            intervals: intervals,\r\n            modeNum: modeNum,\r\n            chroma: chroma,\r\n            normalized: chroma,\r\n            name: name,\r\n            setNum: setNum,\r\n            alt: alt,\r\n            triad: triad,\r\n            seventh: seventh,\r\n            aliases: aliases,\r\n        };\r\n    }\r\n    function notes(modeName, tonic) {\r\n        return get(modeName).intervals.map(function (ivl) { return core.transpose(tonic, ivl); });\r\n    }\r\n    function chords(chords) {\r\n        return function (modeName, tonic) {\r\n            var mode = get(modeName);\r\n            if (mode.empty)\r\n                return [];\r\n            var triads = collection.rotate(mode.modeNum, chords);\r\n            var tonics = mode.intervals.map(function (i) { return core.transpose(tonic, i); });\r\n            return triads.map(function (triad, i) { return tonics[i] + triad; });\r\n        };\r\n    }\r\n    var triads = chords(MODES.map(function (x) { return x[4]; }));\r\n    var seventhChords = chords(MODES.map(function (x) { return x[5]; }));\r\n    function distance(destination, source) {\r\n        var from = get(source);\r\n        var to = get(destination);\r\n        if (from.empty || to.empty)\r\n            return \"\";\r\n        return interval.simplify(interval.transposeFifths(\"1P\", to.alt - from.alt));\r\n    }\r\n    function relativeTonic(destination, source, tonic) {\r\n        return core.transpose(tonic, distance(destination, source));\r\n    }\r\n    var index$1 = {\r\n        get: get,\r\n        names: names,\r\n        all: all,\r\n        distance: distance,\r\n        relativeTonic: relativeTonic,\r\n        notes: notes,\r\n        triads: triads,\r\n        seventhChords: seventhChords,\r\n        // deprecated\r\n        entries: entries,\r\n        mode: mode,\r\n    };\n\n    exports.all = all;\n    exports['default'] = index$1;\n    exports.distance = distance;\n    exports.entries = entries;\n    exports.get = get;\n    exports.mode = mode;\n    exports.names = names;\n    exports.notes = notes;\n    exports.relativeTonic = relativeTonic;\n    exports.seventhChords = seventhChords;\n    exports.triads = triads;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/chord'), require('@tonaljs/core'), require('@tonaljs/roman-numeral')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/chord', '@tonaljs/core', '@tonaljs/roman-numeral'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Progression = {}, global.chord, global.core, global.romanNumeral));\n}(this, (function (exports, chord, core, romanNumeral) { 'use strict';\n\n  /**\r\n   * Given a tonic and a chord list expressed with roman numeral notation\r\n   * returns the progression expressed with leadsheet chords symbols notation\r\n   * @example\r\n   * fromRomanNumerals(\"C\", [\"I\", \"IIm7\", \"V7\"]);\r\n   * // => [\"C\", \"Dm7\", \"G7\"]\r\n   */\r\n  function fromRomanNumerals(tonic, chords) {\r\n      var romanNumerals = chords.map(romanNumeral.get);\r\n      return romanNumerals.map(function (rn) { return core.transpose(tonic, core.interval(rn)) + rn.chordType; });\r\n  }\r\n  /**\r\n   * Given a tonic and a chord list with leadsheet symbols notation,\r\n   * return the chord list with roman numeral notation\r\n   * @example\r\n   * toRomanNumerals(\"C\", [\"CMaj7\", \"Dm7\", \"G7\"]);\r\n   * // => [\"IMaj7\", \"IIm7\", \"V7\"]\r\n   */\r\n  function toRomanNumerals(tonic, chords) {\r\n      return chords.map(function (chord$1) {\r\n          var _a = chord.tokenize(chord$1), note = _a[0], chordType = _a[1];\r\n          var intervalName = core.distance(tonic, note);\r\n          var roman = romanNumeral.get(core.interval(intervalName));\r\n          return roman.name + chordType;\r\n      });\r\n  }\r\n  var index = { fromRomanNumerals: fromRomanNumerals, toRomanNumerals: toRomanNumerals };\n\n  exports['default'] = index;\n  exports.fromRomanNumerals = fromRomanNumerals;\n  exports.toRomanNumerals = toRomanNumerals;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/collection'), require('@tonaljs/midi')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/collection', '@tonaljs/midi'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Range = {}, global.collection, global.midi));\n}(this, (function (exports, collection, midi) { 'use strict';\n\n  /**\r\n   * Create a numeric range. You supply a list of notes or numbers and it will\r\n   * be connected to create complex ranges.\r\n   *\r\n   * @param {Array} notes - the list of notes or midi numbers used\r\n   * @return {Array} an array of numbers or empty array if not valid parameters\r\n   *\r\n   * @example\r\n   * numeric([\"C5\", \"C4\"]) // => [ 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60 ]\r\n   * // it works midi notes\r\n   * numeric([10, 5]) // => [ 10, 9, 8, 7, 6, 5 ]\r\n   * // complex range\r\n   * numeric([\"C4\", \"E4\", \"Bb3\"]) // => [60, 61, 62, 63, 64, 63, 62, 61, 60, 59, 58]\r\n   */\r\n  function numeric(notes) {\r\n      var midi$1 = collection.compact(notes.map(midi.toMidi));\r\n      if (!notes.length || midi$1.length !== notes.length) {\r\n          // there is no valid notes\r\n          return [];\r\n      }\r\n      return midi$1.reduce(function (result, note) {\r\n          var last = result[result.length - 1];\r\n          return result.concat(collection.range(last, note).slice(1));\r\n      }, [midi$1[0]]);\r\n  }\r\n  /**\r\n   * Create a range of chromatic notes. The altered notes will use flats.\r\n   *\r\n   * @function\r\n   * @param {Array} notes - the list of notes or midi note numbers to create a range from\r\n   * @param {Object} options - The same as `midiToNoteName` (`{ sharps: boolean, pitchClass: boolean }`)\r\n   * @return {Array} an array of note names\r\n   *\r\n   * @example\r\n   * Range.chromatic([\"C2, \"E2\", \"D2\"]) // => [\"C2\", \"Db2\", \"D2\", \"Eb2\", \"E2\", \"Eb2\", \"D2\"]\r\n   * // with sharps\r\n   * Range.chromatic([\"C2\", \"C3\"], { sharps: true }) // => [ \"C2\", \"C#2\", \"D2\", \"D#2\", \"E2\", \"F2\", \"F#2\", \"G2\", \"G#2\", \"A2\", \"A#2\", \"B2\", \"C3\" ]\r\n   */\r\n  function chromatic(notes, options) {\r\n      return numeric(notes).map(function (midi$1) { return midi.midiToNoteName(midi$1, options); });\r\n  }\r\n  var index = { numeric: numeric, chromatic: chromatic };\n\n  exports.chromatic = chromatic;\n  exports['default'] = index;\n  exports.numeric = numeric;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/chord-type'), require('@tonaljs/collection'), require('@tonaljs/core'), require('@tonaljs/note'), require('@tonaljs/pcset'), require('@tonaljs/scale-type')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/chord-type', '@tonaljs/collection', '@tonaljs/core', '@tonaljs/note', '@tonaljs/pcset', '@tonaljs/scale-type'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Scale = {}, global.chordType, global.collection, global.core, global.note, global.pcset, global.scaleType));\n}(this, (function (exports, chordType, collection, core, note, pcset, scaleType) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var NoScale = {\r\n        empty: true,\r\n        name: \"\",\r\n        type: \"\",\r\n        tonic: null,\r\n        setNum: NaN,\r\n        chroma: \"\",\r\n        normalized: \"\",\r\n        aliases: [],\r\n        notes: [],\r\n        intervals: [],\r\n    };\r\n    /**\r\n     * Given a string with a scale name and (optionally) a tonic, split\r\n     * that components.\r\n     *\r\n     * It retuns an array with the form [ name, tonic ] where tonic can be a\r\n     * note name or null and name can be any arbitrary string\r\n     * (this function doesn\"t check if that scale name exists)\r\n     *\r\n     * @function\r\n     * @param {string} name - the scale name\r\n     * @return {Array} an array [tonic, name]\r\n     * @example\r\n     * tokenize(\"C mixolydean\") // => [\"C\", \"mixolydean\"]\r\n     * tokenize(\"anything is valid\") // => [\"\", \"anything is valid\"]\r\n     * tokenize() // => [\"\", \"\"]\r\n     */\r\n    function tokenize(name) {\r\n        if (typeof name !== \"string\") {\r\n            return [\"\", \"\"];\r\n        }\r\n        var i = name.indexOf(\" \");\r\n        var tonic = core.note(name.substring(0, i));\r\n        if (tonic.empty) {\r\n            var n = core.note(name);\r\n            return n.empty ? [\"\", name] : [n.name, \"\"];\r\n        }\r\n        var type = name.substring(tonic.name.length + 1);\r\n        return [tonic.name, type.length ? type : \"\"];\r\n    }\r\n    /**\r\n     * Get all scale names\r\n     * @function\r\n     */\r\n    var names = scaleType.names;\r\n    /**\r\n     * Get a Scale from a scale name.\r\n     */\r\n    function get(src) {\r\n        var tokens = Array.isArray(src) ? src : tokenize(src);\r\n        var tonic = core.note(tokens[0]).name;\r\n        var st = scaleType.get(tokens[1]);\r\n        if (st.empty) {\r\n            return NoScale;\r\n        }\r\n        var type = st.name;\r\n        var notes = tonic\r\n            ? st.intervals.map(function (i) { return core.transpose(tonic, i); })\r\n            : [];\r\n        var name = tonic ? tonic + \" \" + type : type;\r\n        return __assign(__assign({}, st), { name: name, type: type, tonic: tonic, notes: notes });\r\n    }\r\n    var scale = core.deprecate(\"Scale.scale\", \"Scale.get\", get);\r\n    /**\r\n     * Get all chords that fits a given scale\r\n     *\r\n     * @function\r\n     * @param {string} name - the scale name\r\n     * @return {Array<string>} - the chord names\r\n     *\r\n     * @example\r\n     * scaleChords(\"pentatonic\") // => [\"5\", \"64\", \"M\", \"M6\", \"Madd9\", \"Msus2\"]\r\n     */\r\n    function scaleChords(name) {\r\n        var s = get(name);\r\n        var inScale = pcset.isSubsetOf(s.chroma);\r\n        return chordType.all()\r\n            .filter(function (chord) { return inScale(chord.chroma); })\r\n            .map(function (chord) { return chord.aliases[0]; });\r\n    }\r\n    /**\r\n     * Get all scales names that are a superset of the given one\r\n     * (has the same notes and at least one more)\r\n     *\r\n     * @function\r\n     * @param {string} name\r\n     * @return {Array} a list of scale names\r\n     * @example\r\n     * extended(\"major\") // => [\"bebop\", \"bebop dominant\", \"bebop major\", \"chromatic\", \"ichikosucho\"]\r\n     */\r\n    function extended(name) {\r\n        var s = get(name);\r\n        var isSuperset = pcset.isSupersetOf(s.chroma);\r\n        return scaleType.all()\r\n            .filter(function (scale) { return isSuperset(scale.chroma); })\r\n            .map(function (scale) { return scale.name; });\r\n    }\r\n    /**\r\n     * Find all scales names that are a subset of the given one\r\n     * (has less notes but all from the given scale)\r\n     *\r\n     * @function\r\n     * @param {string} name\r\n     * @return {Array} a list of scale names\r\n     *\r\n     * @example\r\n     * reduced(\"major\") // => [\"ionian pentatonic\", \"major pentatonic\", \"ritusen\"]\r\n     */\r\n    function reduced(name) {\r\n        var isSubset = pcset.isSubsetOf(get(name).chroma);\r\n        return scaleType.all()\r\n            .filter(function (scale) { return isSubset(scale.chroma); })\r\n            .map(function (scale) { return scale.name; });\r\n    }\r\n    /**\r\n     * Given an array of notes, return the scale: a pitch class set starting from\r\n     * the first note of the array\r\n     *\r\n     * @function\r\n     * @param {string[]} notes\r\n     * @return {string[]} pitch classes with same tonic\r\n     * @example\r\n     * scaleNotes(['C4', 'c3', 'C5', 'C4', 'c4']) // => [\"C\"]\r\n     * scaleNotes(['D4', 'c#5', 'A5', 'F#6']) // => [\"D\", \"F#\", \"A\", \"C#\"]\r\n     */\r\n    function scaleNotes(notes) {\r\n        var pcset = notes.map(function (n) { return core.note(n).pc; }).filter(function (x) { return x; });\r\n        var tonic = pcset[0];\r\n        var scale = note.sortedUniqNames(pcset);\r\n        return collection.rotate(scale.indexOf(tonic), scale);\r\n    }\r\n    /**\r\n     * Find mode names of a scale\r\n     *\r\n     * @function\r\n     * @param {string} name - scale name\r\n     * @example\r\n     * modeNames(\"C pentatonic\") // => [\r\n     *   [\"C\", \"major pentatonic\"],\r\n     *   [\"D\", \"egyptian\"],\r\n     *   [\"E\", \"malkos raga\"],\r\n     *   [\"G\", \"ritusen\"],\r\n     *   [\"A\", \"minor pentatonic\"]\r\n     * ]\r\n     */\r\n    function modeNames(name) {\r\n        var s = get(name);\r\n        if (s.empty) {\r\n            return [];\r\n        }\r\n        var tonics = s.tonic ? s.notes : s.intervals;\r\n        return pcset.modes(s.chroma)\r\n            .map(function (chroma, i) {\r\n            var modeName = get(chroma).name;\r\n            return modeName ? [tonics[i], modeName] : [\"\", \"\"];\r\n        })\r\n            .filter(function (x) { return x[0]; });\r\n    }\r\n    function getNoteNameOf(scale) {\r\n        var names = Array.isArray(scale) ? scaleNotes(scale) : get(scale).notes;\r\n        var chromas = names.map(function (name) { return core.note(name).chroma; });\r\n        return function (noteOrMidi) {\r\n            var currNote = typeof noteOrMidi === \"number\"\r\n                ? core.note(note.fromMidi(noteOrMidi))\r\n                : core.note(noteOrMidi);\r\n            var height = currNote.height;\r\n            if (height === undefined)\r\n                return undefined;\r\n            var chroma = height % 12;\r\n            var position = chromas.indexOf(chroma);\r\n            if (position === -1)\r\n                return undefined;\r\n            return note.enharmonic(currNote.name, names[position]);\r\n        };\r\n    }\r\n    function rangeOf(scale) {\r\n        var getName = getNoteNameOf(scale);\r\n        return function (fromNote, toNote) {\r\n            var from = core.note(fromNote).height;\r\n            var to = core.note(toNote).height;\r\n            if (from === undefined || to === undefined)\r\n                return [];\r\n            return collection.range(from, to)\r\n                .map(getName)\r\n                .filter(function (x) { return x; });\r\n        };\r\n    }\r\n    var index = {\r\n        get: get,\r\n        names: names,\r\n        extended: extended,\r\n        modeNames: modeNames,\r\n        reduced: reduced,\r\n        scaleChords: scaleChords,\r\n        scaleNotes: scaleNotes,\r\n        tokenize: tokenize,\r\n        rangeOf: rangeOf,\r\n        // deprecated\r\n        scale: scale,\r\n    };\n\n    exports['default'] = index;\n    exports.extended = extended;\n    exports.get = get;\n    exports.modeNames = modeNames;\n    exports.names = names;\n    exports.rangeOf = rangeOf;\n    exports.reduced = reduced;\n    exports.scale = scale;\n    exports.scaleChords = scaleChords;\n    exports.scaleNotes = scaleNotes;\n    exports.tokenize = tokenize;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.TimeSignature = {}));\n}(this, (function (exports) { 'use strict';\n\n  // CONSTANTS\r\n  var NONE = {\r\n      empty: true,\r\n      name: \"\",\r\n      upper: undefined,\r\n      lower: undefined,\r\n      type: undefined,\r\n      additive: [],\r\n  };\r\n  var NAMES = [\"4/4\", \"3/4\", \"2/4\", \"2/2\", \"12/8\", \"9/8\", \"6/8\", \"3/8\"];\r\n  // PUBLIC API\r\n  function names() {\r\n      return NAMES.slice();\r\n  }\r\n  var REGEX = /^(\\d?\\d(?:\\+\\d)*)\\/(\\d)$/;\r\n  var CACHE = new Map();\r\n  function get(literal) {\r\n      var cached = CACHE.get(literal);\r\n      if (cached) {\r\n          return cached;\r\n      }\r\n      var ts = build(parse(literal));\r\n      CACHE.set(literal, ts);\r\n      return ts;\r\n  }\r\n  function parse(literal) {\r\n      if (typeof literal === \"string\") {\r\n          var _a = REGEX.exec(literal) || []; _a[0]; var up_1 = _a[1], low = _a[2];\r\n          return parse([up_1, low]);\r\n      }\r\n      var up = literal[0], down = literal[1];\r\n      var denominator = +down;\r\n      if (typeof up === \"number\") {\r\n          return [up, denominator];\r\n      }\r\n      var list = up.split(\"+\").map(function (n) { return +n; });\r\n      return list.length === 1 ? [list[0], denominator] : [list, denominator];\r\n  }\r\n  var index = { names: names, parse: parse, get: get };\r\n  // PRIVATE\r\n  function build(_a) {\r\n      var up = _a[0], down = _a[1];\r\n      var upper = Array.isArray(up) ? up.reduce(function (a, b) { return a + b; }, 0) : up;\r\n      var lower = down;\r\n      if (upper === 0 || lower === 0) {\r\n          return NONE;\r\n      }\r\n      var name = Array.isArray(up) ? up.join(\"+\") + \"/\" + down : up + \"/\" + down;\r\n      var additive = Array.isArray(up) ? up : [];\r\n      var type = lower === 4 || lower === 2\r\n          ? \"simple\"\r\n          : lower === 8 && upper % 3 === 0\r\n              ? \"compound\"\r\n              : \"irregular\";\r\n      return {\r\n          empty: false,\r\n          name: name,\r\n          type: type,\r\n          upper: upper,\r\n          lower: lower,\r\n          additive: additive,\r\n      };\r\n  }\n\n  exports.default = index;\n  exports.get = get;\n  exports.names = names;\n  exports.parse = parse;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@tonaljs/abc-notation'), require('@tonaljs/array'), require('@tonaljs/chord'), require('@tonaljs/chord-type'), require('@tonaljs/collection'), require('@tonaljs/core'), require('@tonaljs/duration-value'), require('@tonaljs/interval'), require('@tonaljs/key'), require('@tonaljs/midi'), require('@tonaljs/mode'), require('@tonaljs/note'), require('@tonaljs/pcset'), require('@tonaljs/progression'), require('@tonaljs/range'), require('@tonaljs/roman-numeral'), require('@tonaljs/scale'), require('@tonaljs/scale-type'), require('@tonaljs/time-signature')) :\n  typeof define === 'function' && define.amd ? define(['exports', '@tonaljs/abc-notation', '@tonaljs/array', '@tonaljs/chord', '@tonaljs/chord-type', '@tonaljs/collection', '@tonaljs/core', '@tonaljs/duration-value', '@tonaljs/interval', '@tonaljs/key', '@tonaljs/midi', '@tonaljs/mode', '@tonaljs/note', '@tonaljs/pcset', '@tonaljs/progression', '@tonaljs/range', '@tonaljs/roman-numeral', '@tonaljs/scale', '@tonaljs/scale-type', '@tonaljs/time-signature'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.Tonal = {}, global.abcNotation, global.array, global.chord, global.ChordType, global.collection, global.Core, global.durationValue, global.interval, global.key, global.midi, global.mode, global.note, global.Pcset, global.progression, global.range, global.romanNumeral, global.scale, global.ScaleType, global.timeSignature));\n}(this, (function (exports, abcNotation, array, chord, ChordType, collection, Core, durationValue, interval, key, midi, mode, note, Pcset, progression, range, romanNumeral, scale, ScaleType, timeSignature) { 'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () {\n              return e[k];\n            }\n          });\n        }\n      });\n    }\n    n['default'] = e;\n    return Object.freeze(n);\n  }\n\n  var abcNotation__default = /*#__PURE__*/_interopDefaultLegacy(abcNotation);\n  var array__namespace = /*#__PURE__*/_interopNamespace(array);\n  var chord__default = /*#__PURE__*/_interopDefaultLegacy(chord);\n  var ChordType__default = /*#__PURE__*/_interopDefaultLegacy(ChordType);\n  var collection__default = /*#__PURE__*/_interopDefaultLegacy(collection);\n  var Core__namespace = /*#__PURE__*/_interopNamespace(Core);\n  var durationValue__default = /*#__PURE__*/_interopDefaultLegacy(durationValue);\n  var interval__default = /*#__PURE__*/_interopDefaultLegacy(interval);\n  var key__default = /*#__PURE__*/_interopDefaultLegacy(key);\n  var midi__default = /*#__PURE__*/_interopDefaultLegacy(midi);\n  var mode__default = /*#__PURE__*/_interopDefaultLegacy(mode);\n  var note__default = /*#__PURE__*/_interopDefaultLegacy(note);\n  var Pcset__default = /*#__PURE__*/_interopDefaultLegacy(Pcset);\n  var progression__default = /*#__PURE__*/_interopDefaultLegacy(progression);\n  var range__default = /*#__PURE__*/_interopDefaultLegacy(range);\n  var romanNumeral__default = /*#__PURE__*/_interopDefaultLegacy(romanNumeral);\n  var scale__default = /*#__PURE__*/_interopDefaultLegacy(scale);\n  var ScaleType__default = /*#__PURE__*/_interopDefaultLegacy(ScaleType);\n  var timeSignature__default = /*#__PURE__*/_interopDefaultLegacy(timeSignature);\n\n  // deprecated (backwards compatibility)\r\n  var Tonal = Core__namespace;\r\n  var PcSet = Pcset__default['default'];\r\n  var ChordDictionary = ChordType__default['default'];\r\n  var ScaleDictionary = ScaleType__default['default'];\n\n  Object.defineProperty(exports, 'AbcNotation', {\n    enumerable: true,\n    get: function () {\n      return abcNotation__default['default'];\n    }\n  });\n  exports.Array = array__namespace;\n  Object.defineProperty(exports, 'Chord', {\n    enumerable: true,\n    get: function () {\n      return chord__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'ChordType', {\n    enumerable: true,\n    get: function () {\n      return ChordType__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Collection', {\n    enumerable: true,\n    get: function () {\n      return collection__default['default'];\n    }\n  });\n  exports.Core = Core__namespace;\n  Object.defineProperty(exports, 'DurationValue', {\n    enumerable: true,\n    get: function () {\n      return durationValue__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Interval', {\n    enumerable: true,\n    get: function () {\n      return interval__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Key', {\n    enumerable: true,\n    get: function () {\n      return key__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Midi', {\n    enumerable: true,\n    get: function () {\n      return midi__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Mode', {\n    enumerable: true,\n    get: function () {\n      return mode__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Note', {\n    enumerable: true,\n    get: function () {\n      return note__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Pcset', {\n    enumerable: true,\n    get: function () {\n      return Pcset__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Progression', {\n    enumerable: true,\n    get: function () {\n      return progression__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Range', {\n    enumerable: true,\n    get: function () {\n      return range__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'RomanNumeral', {\n    enumerable: true,\n    get: function () {\n      return romanNumeral__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'Scale', {\n    enumerable: true,\n    get: function () {\n      return scale__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'ScaleType', {\n    enumerable: true,\n    get: function () {\n      return ScaleType__default['default'];\n    }\n  });\n  Object.defineProperty(exports, 'TimeSignature', {\n    enumerable: true,\n    get: function () {\n      return timeSignature__default['default'];\n    }\n  });\n  exports.ChordDictionary = ChordDictionary;\n  exports.PcSet = PcSet;\n  exports.ScaleDictionary = ScaleDictionary;\n  exports.Tonal = Tonal;\n  Object.keys(Core).forEach(function (k) {\n    if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n      enumerable: true,\n      get: function () {\n        return Core[k];\n      }\n    });\n  });\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=index.js.map\n", "import packageJson from '../package.json'\r\n\r\n/**\r\n * @module musicvis-lib\r\n */\r\n\r\n/**\r\n * Returns the current version of the library\r\n *\r\n * @returns {string} version string\r\n */\r\nexport function getVersion () {\r\n  return packageJson.version\r\n}\r\n\r\n// Types\r\nexport { default as Note } from './types/Note.js'\r\nexport { default as GuitarNote } from './types/GuitarNote.js'\r\nexport { default as HarmonicaNote } from './types/HarmonicaNote.js'\r\nexport { default as NoteArray } from './types/NoteArray.js'\r\nexport { default as Recording } from './types/Recording.js'\r\nexport { default as MusicPiece } from './types/MusicPiece.js'\r\nexport { default as PitchSequence } from './types/PitchSequence.js'\r\n// File formats\r\nexport * as Midi from './fileFormats/Midi.js'\r\n// Graphics\r\nexport * as Canvas from './graphics/Canvas.js'\r\n// Input\r\nexport { recordAudio } from './input/AudioRecorder.js'\r\nexport { recordMidi } from './input/MidiRecorder.js'\r\nexport { default as MidiInputManager } from './input/MidiInputManager.js'\r\n// Instruments\r\nexport * as Drums from './instruments/Drums.js'\r\nexport * as Guitar from './instruments/Guitar.js'\r\nexport * as Lamellophone from './instruments/Lamellophone.js'\r\nexport * as Piano from './instruments/Piano.js'\r\n// Alignment\r\nexport * as Alignment from './alignment/Alignment.js'\r\nexport * as DiffAlignment from './alignment/DiffAlignment.js'\r\n// Comparison\r\nexport * as Matching from './comparison/Matching.js'\r\nexport * as PriorityMatching from './comparison/PriorityMatching.js'\r\nexport * as Similarity from './comparison/Similarity.js'\r\nexport * as SimilarSections from './comparison/SimilarSections.js'\r\n// Libraries\r\nexport * as Chords from './chords/Chords.js'\r\nexport * as Utils from './utils/index.js'\r\nexport * as StringBased from './stringBased/index.js'\r\n", "/**\r\n * Lookup for many MIDI specifications.\r\n *\r\n * @module fileFormats/Midi\r\n * @see https://soundprogramming.net/file-formats/\r\n */\r\n\r\n/**\r\n * @typedef {object} MidiNote A MIDI note\r\n * @property {number} pitch the MIDI note number e.g. 60 for C4\r\n * @property {string} name e.g. C#\r\n * @property {number} octave number in [-1, 9]\r\n * @property {string} label name and octave, e.g. C#5\r\n * @property {number} frequency physical frequency\r\n * @example <caption>Example for a MIDI note</caption>\r\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\r\n */\r\n\r\nconst MidiNoteByPitch = new Map()\r\nconst MidiNoteByLabel = new Map()\r\nconst MidiInstrumentByNumber = new Map()\r\nconst MidiInstrumentByNumberLev2 = new Map()\r\n\r\n/**\r\n * Returns information on the MIDI note with the specified number.\r\n *\r\n * @param {number} nr MIDI note number in [0, 127]\r\n * @returns {...MidiNote} MIDI note information as a {@link MidiNote}\r\n */\r\nexport function getMidiNoteByNr (nr) {\r\n  return MidiNoteByPitch.get(nr)\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI note with the specified label.\r\n *\r\n * @param {string} label note label, e.g. 'D#0'\r\n *      (upper-case and sharp notation necessary)\r\n * @returns {...MidiNote} MIDI note information as a {@link MidiNote}\r\n */\r\nexport function getMidiNoteByLabel (label) {\r\n  return MidiNoteByLabel.get(label)\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI note with the specified name and octave.\r\n *\r\n * @param {string} name note name, e.g. 'D#'\r\n *      (upper-case and sharp notation necessary)\r\n * @param {number} octave octave in [-1, 9]\r\n * @returns {...MidiNote} MIDI note information as a {@link MidiNote}\r\n */\r\nexport function getMidiNoteByNameAndOctave (name, octave) {\r\n  return MidiNoteByLabel.get(`${name}${octave}`)\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI instrument with the specified number.\r\n *\r\n * @param {number} nr MIDI instrument number in [0, 127]\r\n * @returns {object} note info, e.g.\r\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\r\n */\r\nexport function getMidiInstrumentByNr (nr) {\r\n  return MidiInstrumentByNumber.get(nr)\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI instrument (MIDI level 2) with the\r\n * specified number.\r\n *\r\n * @param {number} nr MIDI instrument number in [0, 127]\r\n * @param {number} subNr MIDI instrument sub number in [0, 127]\r\n * @returns {object} note info, e.g.\r\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\r\n */\r\nexport function getMidiInstrumentByNrL2 (nr, subNr) {\r\n  const key = `${nr}-${subNr}`\r\n  return MidiInstrumentByNumberLev2.get(key)\r\n}\r\n\r\n/**\r\n * Returns information on the MIDI instrument with the specified number.\r\n *\r\n * @param {number} nr MIDI drum note number in [27, 87]\r\n * @returns {string} note name, e.g. 'Bass Drum 1\r\n */\r\nexport function getMidiDrumNoteByNr (nr) {\r\n  return GENERAL_MIDI_DRUM_NOTE_NUMBERS.get(nr)\r\n}\r\n\r\n/**\r\n * Returns true if a given MIDI pitch refers to a sharp note.\r\n *\r\n * @param {number} nr MIDI note number in [0, 127]\r\n * @returns {boolean} true if sharp, false otherwise\r\n */\r\nexport function isSharp (nr) {\r\n  // return SHARPS.has(nr);\r\n  const chroma = nr % 12\r\n  return chroma === 1 ||\r\n    chroma === 3 ||\r\n    chroma === 6 ||\r\n    chroma === 8 ||\r\n    chroma === 10\r\n}\r\n\r\n/**\r\n * Returns a note name such as 'C#' (without octave) for a given MIDI\r\n * note number.\r\n *\r\n * @param {number} nr MIDI note number in [0, 127]\r\n * @returns {string} note name such as 'C#'\r\n */\r\nexport function getNoteNameFromNoteNr (nr) {\r\n  return NOTE_NAMES[nr % 12]\r\n}\r\n\r\n/**\r\n * Maps flats to sharps, e.g. flatToSharp.get('Db') === 'C#'\r\n *\r\n * @type {Map<string,string>}\r\n */\r\nexport const flatToSharp = new Map([\r\n  ['Cb', 'B'],\r\n  ['Db', 'C#'],\r\n  ['Eb', 'D#'],\r\n  ['Fb', 'E'],\r\n  ['Gb', 'F#'],\r\n  ['Ab', 'G#'],\r\n  ['Bb', 'A#']\r\n])\r\n\r\n/**\r\n * Maps shaprs to flats, e.g. sharpToFlat.get('C#') === 'Db'\r\n *\r\n * @type {Map<string,string>}\r\n */\r\nexport const sharpToFlat = new Map([\r\n  ['C#', 'Db'],\r\n  ['D#', 'Eb'],\r\n  ['E#', 'F'],\r\n  ['F#', 'Gb'],\r\n  ['G#', 'Ab'],\r\n  ['A#', 'Bb'],\r\n  ['B#', 'C']\r\n])\r\n\r\n/**\r\n * Names of notes, indexed like MIDI numbers, i.e. C is 0\r\n *\r\n * @type {string[]}\r\n */\r\nexport const NOTE_NAMES = [\r\n  'C',\r\n  'C#',\r\n  'D',\r\n  'D#',\r\n  'E',\r\n  'F',\r\n  'F#',\r\n  'G',\r\n  'G#',\r\n  'A',\r\n  'A#',\r\n  'B'\r\n]\r\n\r\n/**\r\n * Names of notes, indexed like MIDI numbers, i.e. C is 0, with flats instead of\r\n * sharps.\r\n *\r\n * @type {string[]}\r\n */\r\nexport const NOTE_NAMES_FLAT = [\r\n  'C',\r\n  'Db',\r\n  'D',\r\n  'Eb',\r\n  'E',\r\n  'F',\r\n  'Gb',\r\n  'G',\r\n  'Ab',\r\n  'A',\r\n  'Bb',\r\n  'B'\r\n]\r\n\r\n/**\r\n * Index equals MIDI note number\r\n *\r\n * @type {Array<MidiNote>}\r\n */\r\nexport const MIDI_NOTES = [\r\n  { pitch: 0, name: 'C', octave: -1, label: 'C-1', frequency: 8.176 },\r\n  { pitch: 1, name: 'C#', octave: -1, label: 'C#-1', frequency: 8.662 },\r\n  { pitch: 2, name: 'D', octave: -1, label: 'D-1', frequency: 9.177 },\r\n  { pitch: 3, name: 'D#', octave: -1, label: 'D#-1', frequency: 9.723 },\r\n  { pitch: 4, name: 'E', octave: -1, label: 'E-1', frequency: 10.301 },\r\n  { pitch: 5, name: 'F', octave: -1, label: 'F-1', frequency: 10.913 },\r\n  { pitch: 6, name: 'F#', octave: -1, label: 'F#-1', frequency: 11.562 },\r\n  { pitch: 7, name: 'G', octave: -1, label: 'G-1', frequency: 12.25 },\r\n  { pitch: 8, name: 'G#', octave: -1, label: 'G#-1', frequency: 12.978 },\r\n  { pitch: 9, name: 'A', octave: -1, label: 'A-1', frequency: 13.75 },\r\n  { pitch: 10, name: 'A#', octave: -1, label: 'A#-1', frequency: 14.568 },\r\n  { pitch: 11, name: 'B', octave: -1, label: 'B-1', frequency: 15.434 },\r\n  { pitch: 12, name: 'C', octave: 0, label: 'C0', frequency: 16.352 },\r\n  { pitch: 13, name: 'C#', octave: 0, label: 'C#0', frequency: 17.324 },\r\n  { pitch: 14, name: 'D', octave: 0, label: 'D0', frequency: 18.354 },\r\n  { pitch: 15, name: 'D#', octave: 0, label: 'D#0', frequency: 19.445 },\r\n  { pitch: 16, name: 'E', octave: 0, label: 'E0', frequency: 20.602 },\r\n  { pitch: 17, name: 'F', octave: 0, label: 'F0', frequency: 21.827 },\r\n  { pitch: 18, name: 'F#', octave: 0, label: 'F#0', frequency: 23.125 },\r\n  { pitch: 19, name: 'G', octave: 0, label: 'G0', frequency: 24.5 },\r\n  { pitch: 20, name: 'G#', octave: 0, label: 'G#0', frequency: 25.957 },\r\n  { pitch: 21, name: 'A', octave: 0, label: 'A0', frequency: 27.5 },\r\n  { pitch: 22, name: 'A#', octave: 0, label: 'A#0', frequency: 29.135 },\r\n  { pitch: 23, name: 'B', octave: 0, label: 'B0', frequency: 30.868 },\r\n  { pitch: 24, name: 'C', octave: 1, label: 'C1', frequency: 32.703 },\r\n  { pitch: 25, name: 'C#', octave: 1, label: 'C#1', frequency: 34.648 },\r\n  { pitch: 26, name: 'D', octave: 1, label: 'D1', frequency: 36.708 },\r\n  { pitch: 27, name: 'D#', octave: 1, label: 'D#1', frequency: 38.891 },\r\n  { pitch: 28, name: 'E', octave: 1, label: 'E1', frequency: 41.203 },\r\n  { pitch: 29, name: 'F', octave: 1, label: 'F1', frequency: 43.654 },\r\n  { pitch: 30, name: 'F#', octave: 1, label: 'F#1', frequency: 46.249 },\r\n  { pitch: 31, name: 'G', octave: 1, label: 'G1', frequency: 48.999 },\r\n  { pitch: 32, name: 'G#', octave: 1, label: 'G#1', frequency: 51.913 },\r\n  { pitch: 33, name: 'A', octave: 1, label: 'A1', frequency: 55 },\r\n  { pitch: 34, name: 'A#', octave: 1, label: 'A#1', frequency: 58.27 },\r\n  { pitch: 35, name: 'B', octave: 1, label: 'B1', frequency: 61.735 },\r\n  { pitch: 36, name: 'C', octave: 2, label: 'C2', frequency: 65.406 },\r\n  { pitch: 37, name: 'C#', octave: 2, label: 'C#2', frequency: 69.296 },\r\n  { pitch: 38, name: 'D', octave: 2, label: 'D2', frequency: 73.416 },\r\n  { pitch: 39, name: 'D#', octave: 2, label: 'D#2', frequency: 77.782 },\r\n  { pitch: 40, name: 'E', octave: 2, label: 'E2', frequency: 82.407 },\r\n  { pitch: 41, name: 'F', octave: 2, label: 'F2', frequency: 87.307 },\r\n  { pitch: 42, name: 'F#', octave: 2, label: 'F#2', frequency: 92.499 },\r\n  { pitch: 43, name: 'G', octave: 2, label: 'G2', frequency: 97.999 },\r\n  { pitch: 44, name: 'G#', octave: 2, label: 'G#2', frequency: 103.826 },\r\n  { pitch: 45, name: 'A', octave: 2, label: 'A2', frequency: 110 },\r\n  { pitch: 46, name: 'A#', octave: 2, label: 'A#2', frequency: 116.541 },\r\n  { pitch: 47, name: 'B', octave: 2, label: 'B2', frequency: 123.471 },\r\n  { pitch: 48, name: 'C', octave: 3, label: 'C3', frequency: 130.813 },\r\n  { pitch: 49, name: 'C#', octave: 3, label: 'C#3', frequency: 138.591 },\r\n  { pitch: 50, name: 'D', octave: 3, label: 'D3', frequency: 146.832 },\r\n  { pitch: 51, name: 'D#', octave: 3, label: 'D#3', frequency: 155.563 },\r\n  { pitch: 52, name: 'E', octave: 3, label: 'E3', frequency: 164.814 },\r\n  { pitch: 53, name: 'F', octave: 3, label: 'F3', frequency: 174.614 },\r\n  { pitch: 54, name: 'F#', octave: 3, label: 'F#3', frequency: 184.997 },\r\n  { pitch: 55, name: 'G', octave: 3, label: 'G3', frequency: 195.998 },\r\n  { pitch: 56, name: 'G#', octave: 3, label: 'G#3', frequency: 207.652 },\r\n  { pitch: 57, name: 'A', octave: 3, label: 'A3', frequency: 220 },\r\n  { pitch: 58, name: 'A#', octave: 3, label: 'A#3', frequency: 233.082 },\r\n  { pitch: 59, name: 'B', octave: 3, label: 'B3', frequency: 246.942 },\r\n  { pitch: 60, name: 'C', octave: 4, label: 'C4', frequency: 261.626 },\r\n  { pitch: 61, name: 'C#', octave: 4, label: 'C#4', frequency: 277.183 },\r\n  { pitch: 62, name: 'D', octave: 4, label: 'D4', frequency: 293.665 },\r\n  { pitch: 63, name: 'D#', octave: 4, label: 'D#4', frequency: 311.127 },\r\n  { pitch: 64, name: 'E', octave: 4, label: 'E4', frequency: 329.628 },\r\n  { pitch: 65, name: 'F', octave: 4, label: 'F4', frequency: 349.228 },\r\n  { pitch: 66, name: 'F#', octave: 4, label: 'F#4', frequency: 369.994 },\r\n  { pitch: 67, name: 'G', octave: 4, label: 'G4', frequency: 391.995 },\r\n  { pitch: 68, name: 'G#', octave: 4, label: 'G#4', frequency: 415.305 },\r\n  { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440 },\r\n  { pitch: 70, name: 'A#', octave: 4, label: 'A#4', frequency: 466.164 },\r\n  { pitch: 71, name: 'B', octave: 4, label: 'B4', frequency: 493.883 },\r\n  { pitch: 72, name: 'C', octave: 5, label: 'C5', frequency: 523.251 },\r\n  { pitch: 73, name: 'C#', octave: 5, label: 'C#5', frequency: 554.365 },\r\n  { pitch: 74, name: 'D', octave: 5, label: 'D5', frequency: 587.33 },\r\n  { pitch: 75, name: 'D#', octave: 5, label: 'D#5', frequency: 622.254 },\r\n  { pitch: 76, name: 'E', octave: 5, label: 'E5', frequency: 659.255 },\r\n  { pitch: 77, name: 'F', octave: 5, label: 'F5', frequency: 698.456 },\r\n  { pitch: 78, name: 'F#', octave: 5, label: 'F#5', frequency: 739.989 },\r\n  { pitch: 79, name: 'G', octave: 5, label: 'G5', frequency: 783.991 },\r\n  { pitch: 80, name: 'G#', octave: 5, label: 'G#5', frequency: 830.609 },\r\n  { pitch: 81, name: 'A', octave: 5, label: 'A5', frequency: 880 },\r\n  { pitch: 82, name: 'A#', octave: 5, label: 'A#5', frequency: 932.328 },\r\n  { pitch: 83, name: 'B', octave: 5, label: 'B5', frequency: 987.767 },\r\n  { pitch: 84, name: 'C', octave: 6, label: 'C6', frequency: 1046.502 },\r\n  { pitch: 85, name: 'C#', octave: 6, label: 'C#6', frequency: 1108.731 },\r\n  { pitch: 86, name: 'D', octave: 6, label: 'D6', frequency: 1174.659 },\r\n  { pitch: 87, name: 'D#', octave: 6, label: 'D#6', frequency: 1244.508 },\r\n  { pitch: 88, name: 'E', octave: 6, label: 'E6', frequency: 1318.51 },\r\n  { pitch: 89, name: 'F', octave: 6, label: 'F6', frequency: 1396.913 },\r\n  { pitch: 90, name: 'F#', octave: 6, label: 'F#6', frequency: 1479.978 },\r\n  { pitch: 91, name: 'G', octave: 6, label: 'G6', frequency: 1567.982 },\r\n  { pitch: 92, name: 'G#', octave: 6, label: 'G#6', frequency: 1661.219 },\r\n  { pitch: 93, name: 'A', octave: 6, label: 'A6', frequency: 1760 },\r\n  { pitch: 94, name: 'A#', octave: 6, label: 'A#6', frequency: 1864.655 },\r\n  { pitch: 95, name: 'B', octave: 6, label: 'B6', frequency: 1975.533 },\r\n  { pitch: 96, name: 'C', octave: 7, label: 'C7', frequency: 2093.005 },\r\n  { pitch: 97, name: 'C#', octave: 7, label: 'C#7', frequency: 2217.461 },\r\n  { pitch: 98, name: 'D', octave: 7, label: 'D7', frequency: 2349.318 },\r\n  { pitch: 99, name: 'D#', octave: 7, label: 'D#7', frequency: 2489.016 },\r\n  { pitch: 100, name: 'E', octave: 7, label: 'E7', frequency: 2637.02 },\r\n  { pitch: 101, name: 'F', octave: 7, label: 'F7', frequency: 2793.826 },\r\n  { pitch: 102, name: 'F#', octave: 7, label: 'F#7', frequency: 2959.955 },\r\n  { pitch: 103, name: 'G', octave: 7, label: 'G7', frequency: 3135.963 },\r\n  { pitch: 104, name: 'G#', octave: 7, label: 'G#7', frequency: 3322.438 },\r\n  { pitch: 105, name: 'A', octave: 7, label: 'A7', frequency: 3520 },\r\n  { pitch: 106, name: 'A#', octave: 7, label: 'A#7', frequency: 3729.31 },\r\n  { pitch: 107, name: 'B', octave: 7, label: 'B7', frequency: 3951.066 },\r\n  { pitch: 108, name: 'C', octave: 8, label: 'C8', frequency: 4186.009 },\r\n  { pitch: 109, name: 'C#', octave: 8, label: 'C#8', frequency: 4434.922 },\r\n  { pitch: 110, name: 'D', octave: 8, label: 'D8', frequency: 4698.636 },\r\n  { pitch: 111, name: 'D#', octave: 8, label: 'D#8', frequency: 4978.032 },\r\n  { pitch: 112, name: 'E', octave: 8, label: 'E8', frequency: 5274.041 },\r\n  { pitch: 113, name: 'F', octave: 8, label: 'F8', frequency: 5587.652 },\r\n  { pitch: 114, name: 'F#', octave: 8, label: 'F#8', frequency: 5919.911 },\r\n  { pitch: 115, name: 'G', octave: 8, label: 'G8', frequency: 6271.927 },\r\n  { pitch: 116, name: 'G#', octave: 8, label: 'G#8', frequency: 6644.875 },\r\n  { pitch: 117, name: 'A', octave: 8, label: 'A8', frequency: 7040 },\r\n  { pitch: 118, name: 'A#', octave: 8, label: 'A#8', frequency: 7458.62 },\r\n  { pitch: 119, name: 'B', octave: 8, label: 'B8', frequency: 7902.133 },\r\n  { pitch: 120, name: 'C', octave: 9, label: 'C9', frequency: 8372.018 },\r\n  { pitch: 121, name: 'C#', octave: 9, label: 'C#9', frequency: 8869.844 },\r\n  { pitch: 122, name: 'D', octave: 9, label: 'D9', frequency: 9397.273 },\r\n  { pitch: 123, name: 'D#', octave: 9, label: 'D#9', frequency: 9956.063 },\r\n  { pitch: 124, name: 'E', octave: 9, label: 'E9', frequency: 10_548.08 },\r\n  { pitch: 125, name: 'F', octave: 9, label: 'F9', frequency: 11_175.3 },\r\n  { pitch: 126, name: 'F#', octave: 9, label: 'F#9', frequency: 11_839.82 },\r\n  { pitch: 127, name: 'G', octave: 9, label: 'G9', frequency: 12_543.85 }\r\n]\r\n\r\n/**\r\n * Set of all MIDI notes that are sharp/flat\r\n *\r\n * @type {Set<number>}\r\n * @example <caption>Find out if a note is sharp/flat</caption>\r\n *      const midiNr = 42;\r\n *      const isSharp = Midi.SHARPS.has(midiNr);\r\n *      // true\r\n */\r\nexport const SHARPS = new Set([\r\n  1,\r\n  3,\r\n  6,\r\n  8,\r\n  10,\r\n  13,\r\n  15,\r\n  18,\r\n  20,\r\n  22,\r\n  25,\r\n  27,\r\n  30,\r\n  32,\r\n  34,\r\n  37,\r\n  39,\r\n  42,\r\n  44,\r\n  46,\r\n  49,\r\n  51,\r\n  54,\r\n  56,\r\n  58,\r\n  61,\r\n  63,\r\n  66,\r\n  68,\r\n  70,\r\n  73,\r\n  75,\r\n  78,\r\n  80,\r\n  82,\r\n  85,\r\n  87,\r\n  90,\r\n  92,\r\n  94,\r\n  97,\r\n  99,\r\n  102,\r\n  104,\r\n  106,\r\n  109,\r\n  111,\r\n  114,\r\n  116,\r\n  118,\r\n  121,\r\n  123,\r\n  126\r\n])\r\n\r\n/**\r\n * @typedef {object} MidiCommand A MIDI command\r\n * @property {string} name e.g. 'noteOn'\r\n * @property {string} description e.g. 'Note-on'\r\n * @property {string[]|undefined} params additional prameters of that command\r\n * @example <caption>Example for a MIDI command</caption>\r\n *      { name: 'noteOn', description: 'Note-on', params: ['key', 'velocity'] }],\r\n */\r\n\r\n/**\r\n * MIDI commands with code, name, and parameters\r\n * From: https://ccrma.stanford.edu/~craig/articles/linuxmidi/misc/essenmidi.html\r\n * https://www.midi.org/specifications/item/table-1-summary-of-midi-message\r\n *\r\n * @type {Map<number,MidiCommand>}\r\n */\r\nexport const MIDI_COMMANDS = new Map([\r\n  [0x80, { name: 'noteOff', description: 'Note-off', params: ['key', 'velocity'] }],\r\n  [0x90, { name: 'noteOn', description: 'Note-on', params: ['key', 'velocity'] }],\r\n  [0xA0, { name: 'aftertouch', description: 'Aftertouch', params: ['key', 'touch'] }],\r\n  [0xB0, { name: 'continuousController', description: 'Continuous controller', params: ['controller #', 'controller value'] }],\r\n  [0xC0, { name: 'patchChange', description: 'Patch change', params: ['instrument number', 'instrument number'] }],\r\n  [0xD0, { name: 'channelPressure', description: 'Channel Pressure', params: ['pressure'] }],\r\n  [0xE0, { name: 'pitchBend', description: 'Pitch bend', params: ['lsb (7 bits)', 'msb (7 bits)'] }],\r\n  [0xF0, { name: 'sysExStart', description: 'start of system exclusive message' }],\r\n  [0xF1, { name: 'timeCodeQuarter', description: 'MIDI Time Code Quarter Frame (Sys Common)' }],\r\n  [0xF2, { name: 'posPointer', description: 'Song Position Pointer (Sys Common)' }],\r\n  [0xF3, { name: 'songSelect', description: 'Song Select (Sys Common)' }],\r\n  [0xF4, { name: 'unknown1', description: '???' }],\r\n  [0xF5, { name: 'unknown2', description: '???' }],\r\n  [0xF6, { name: 'tuneRequest', description: 'Tune Request (Sys Common)' }],\r\n  [0xF7, { name: 'syExEnd', description: 'end of system exclusive message 0' }],\r\n  [0xF8, { name: 'timingClock', description: 'Timing Clock (Sys Realtime)' }],\r\n  [0xFA, { name: 'start', description: 'Start (Sys Realtime)' }],\r\n  [0xFB, { name: 'continue', description: 'Continue (Sys Realtime)' }],\r\n  [0xFC, { name: 'stop', description: 'Stop (Sys Realtime)' }],\r\n  [0xFD, { name: 'unknwon3', description: '???' }],\r\n  [0xFE, { name: 'activeSensing', description: 'Active Sensing (Sys Realtime)' }],\r\n  [0xFF, { name: 'systemReset', description: 'System Reset (Sys Realtime)' }]\r\n])\r\n\r\n/*\r\n * MIDI instruments with number, group, and label\r\n */\r\nconst MIDI_INSTRUMENTS = [\r\n  { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\r\n  { number: 1, group: 'Piano', label: 'Bright Acoustic Piano' },\r\n  { number: 2, group: 'Piano', label: 'Electric Grand Piano' },\r\n  { number: 3, group: 'Piano', label: 'Honky-tonk Piano' },\r\n  { number: 4, group: 'Piano', label: 'Electric Piano 1' },\r\n  { number: 5, group: 'Piano', label: 'Electric Piano 2' },\r\n  { number: 6, group: 'Piano', label: 'Harpsichord' },\r\n  { number: 7, group: 'Piano', label: 'Clavinet' },\r\n  { number: 8, group: 'Chromatic Percussion', label: 'Celesta' },\r\n  { number: 9, group: 'Chromatic Percussion', label: 'Glockenspiel' },\r\n  { number: 10, group: 'Chromatic Percussion', label: 'Music Box' },\r\n  { number: 11, group: 'Chromatic Percussion', label: 'Vibraphone' },\r\n  { number: 12, group: 'Chromatic Percussion', label: 'Marimba' },\r\n  { number: 13, group: 'Chromatic Percussion', label: 'Xylophone' },\r\n  { number: 14, group: 'Chromatic Percussion', label: 'Tubular Bells' },\r\n  { number: 15, group: 'Chromatic Percussion', label: 'Dulcimer' },\r\n  { number: 16, group: 'Organ', label: 'Drawbar Organ' },\r\n  { number: 17, group: 'Organ', label: 'Percussive Organ' },\r\n  { number: 18, group: 'Organ', label: 'Rock Organ' },\r\n  { number: 19, group: 'Organ', label: 'Church Organ' },\r\n  { number: 20, group: 'Organ', label: 'Reed Organ' },\r\n  { number: 21, group: 'Organ', label: 'Accordion' },\r\n  { number: 22, group: 'Organ', label: 'Harmonica' },\r\n  { number: 23, group: 'Organ', label: 'Tango Accordion' },\r\n  { number: 24, group: 'Guitar', label: 'Acoustic Guitar(nylon)' },\r\n  { number: 25, group: 'Guitar', label: 'Acoustic Guitar(steel)' },\r\n  { number: 26, group: 'Guitar', label: 'Electric Guitar(jazz)' },\r\n  { number: 27, group: 'Guitar', label: 'Electric Guitar(clean)' },\r\n  { number: 28, group: 'Guitar', label: 'Electric Guitar(muted)' },\r\n  { number: 29, group: 'Guitar', label: 'Overdriven Guitar' },\r\n  { number: 30, group: 'Guitar', label: 'Distortion Guitar' },\r\n  { number: 31, group: 'Guitar', label: 'Guitar harmonics' },\r\n  { number: 32, group: 'Bass', label: 'Acoustic Bass' },\r\n  { number: 33, group: 'Bass', label: 'Electric Bass(finger)' },\r\n  { number: 34, group: 'Bass', label: 'Electric Bass(pick)' },\r\n  { number: 35, group: 'Bass', label: 'Fretless Bass' },\r\n  { number: 36, group: 'Bass', label: 'Slap Bass 1' },\r\n  { number: 37, group: 'Bass', label: 'Slap Bass 2' },\r\n  { number: 38, group: 'Bass', label: 'Synth Bass 1' },\r\n  { number: 39, group: 'Bass', label: 'Synth Bass 2' },\r\n  { number: 40, group: 'Strings', label: 'Violin' },\r\n  { number: 41, group: 'Strings', label: 'Viola' },\r\n  { number: 42, group: 'Strings', label: 'Cello' },\r\n  { number: 43, group: 'Strings', label: 'Contrabass' },\r\n  { number: 44, group: 'Strings', label: 'Tremolo Strings' },\r\n  { number: 45, group: 'Strings', label: 'Pizzicato Strings' },\r\n  { number: 46, group: 'Strings', label: 'Orchestral Harp' },\r\n  { number: 47, group: 'Strings', label: 'Timpani' },\r\n  { number: 48, group: 'Strings (continued)', label: 'String Ensemble 1' },\r\n  { number: 49, group: 'Strings (continued)', label: 'String Ensemble 2' },\r\n  { number: 50, group: 'Strings (continued)', label: 'Synth Strings 1' },\r\n  { number: 51, group: 'Strings (continued)', label: 'Synth Strings 2' },\r\n  { number: 52, group: 'Strings (continued)', label: 'Choir Aahs' },\r\n  { number: 53, group: 'Strings (continued)', label: 'Voice Oohs' },\r\n  { number: 54, group: 'Strings (continued)', label: 'Synth Voice' },\r\n  { number: 55, group: 'Strings (continued)', label: 'Orchestra Hit' },\r\n  { number: 56, group: 'Brass', label: 'Trumpet' },\r\n  { number: 57, group: 'Brass', label: 'Trombone' },\r\n  { number: 58, group: 'Brass', label: 'Tuba' },\r\n  { number: 59, group: 'Brass', label: 'Muted Trumpet' },\r\n  { number: 60, group: 'Brass', label: 'French Horn' },\r\n  { number: 61, group: 'Brass', label: 'Brass Section' },\r\n  { number: 62, group: 'Brass', label: 'Synth Brass 1' },\r\n  { number: 63, group: 'Brass', label: 'Synth Brass 2' },\r\n  { number: 64, group: 'Reed', label: 'Soprano Sax' },\r\n  { number: 65, group: 'Reed', label: 'Alto Sax' },\r\n  { number: 66, group: 'Reed', label: 'Tenor Sax' },\r\n  { number: 67, group: 'Reed', label: 'Baritone Sax' },\r\n  { number: 68, group: 'Reed', label: 'Oboe' },\r\n  { number: 69, group: 'Reed', label: 'English Horn' },\r\n  { number: 70, group: 'Reed', label: 'Bassoon' },\r\n  { number: 71, group: 'Reed', label: 'Clarinet' },\r\n  { number: 72, group: 'Pipe', label: 'Piccolo' },\r\n  { number: 73, group: 'Pipe', label: 'Flute' },\r\n  { number: 74, group: 'Pipe', label: 'Recorder' },\r\n  { number: 75, group: 'Pipe', label: 'Pan Flute' },\r\n  { number: 76, group: 'Pipe', label: 'Blown Bottle' },\r\n  { number: 77, group: 'Pipe', label: 'Shakuhachi' },\r\n  { number: 78, group: 'Pipe', label: 'Whistle' },\r\n  { number: 79, group: 'Pipe', label: 'Ocarina' },\r\n  { number: 80, group: 'Synth Lead', label: 'Lead 1(square)' },\r\n  { number: 81, group: 'Synth Lead', label: 'Lead 2(sawtooth)' },\r\n  { number: 82, group: 'Synth Lead', label: 'Lead 3(calliope)' },\r\n  { number: 83, group: 'Synth Lead', label: 'Lead 4(chiff)' },\r\n  { number: 84, group: 'Synth Lead', label: 'Lead 5(charang)' },\r\n  { number: 85, group: 'Synth Lead', label: 'Lead 6(voice)' },\r\n  { number: 86, group: 'Synth Lead', label: 'Lead 7(fifths)' },\r\n  { number: 87, group: 'Synth Lead', label: 'Lead 8(bass + lead)' },\r\n  { number: 88, group: 'Synth Pad', label: 'Pad 1(new age)' },\r\n  { number: 89, group: 'Synth Pad', label: 'Pad 2(warm)' },\r\n  { number: 90, group: 'Synth Pad', label: 'Pad 3(polysynth)' },\r\n  { number: 91, group: 'Synth Pad', label: 'Pad 4(choir)' },\r\n  { number: 92, group: 'Synth Pad', label: 'Pad 5(bowed)' },\r\n  { number: 93, group: 'Synth Pad', label: 'Pad 6(metallic)' },\r\n  { number: 94, group: 'Synth Pad', label: 'Pad 7(halo)' },\r\n  { number: 95, group: 'Synth Pad', label: 'Pad 8(sweep)' },\r\n  { number: 96, group: 'Synth Effects', label: 'FX 1(rain)' },\r\n  { number: 97, group: 'Synth Effects', label: 'FX 2(soundtrack)' },\r\n  { number: 98, group: 'Synth Effects', label: 'FX 3(crystal)' },\r\n  { number: 99, group: 'Synth Effects', label: 'FX 4(atmosphere)' },\r\n  { number: 100, group: 'Synth Effects', label: 'FX 5(brightness)' },\r\n  { number: 101, group: 'Synth Effects', label: 'FX 6(goblins)' },\r\n  { number: 102, group: 'Synth Effects', label: 'FX 7(echoes)' },\r\n  { number: 103, group: 'Synth Effects', label: 'FX 8(sci-fi)' },\r\n  { number: 104, group: 'Ethnic', label: 'Sitar' },\r\n  { number: 105, group: 'Ethnic', label: 'Banjo' },\r\n  { number: 106, group: 'Ethnic', label: 'Shamisen' },\r\n  { number: 107, group: 'Ethnic', label: 'Koto' },\r\n  { number: 108, group: 'Ethnic', label: 'Kalimba' },\r\n  { number: 109, group: 'Ethnic', label: 'Bag pipe' },\r\n  { number: 110, group: 'Ethnic', label: 'Fiddle' },\r\n  { number: 111, group: 'Ethnic', label: 'Shanai' },\r\n  { number: 112, group: 'Percussive', label: 'Tinkle Bell' },\r\n  { number: 113, group: 'Percussive', label: 'Agogo' },\r\n  { number: 114, group: 'Percussive', label: 'Steel Drums' },\r\n  { number: 115, group: 'Percussive', label: 'Woodblock' },\r\n  { number: 116, group: 'Percussive', label: 'Taiko Drum' },\r\n  { number: 117, group: 'Percussive', label: 'Melodic Tom' },\r\n  { number: 118, group: 'Percussive', label: 'Synth Drum' },\r\n  { number: 119, group: 'Sound Effects', label: 'Reverse Cymbal' },\r\n  { number: 120, group: 'Sound Effects', label: 'Guitar Fret Noise' },\r\n  { number: 121, group: 'Sound Effects', label: 'Breath Noise' },\r\n  { number: 122, group: 'Sound Effects', label: 'Seashore' },\r\n  { number: 123, group: 'Sound Effects', label: 'Bird Tweet' },\r\n  { number: 124, group: 'Sound Effects', label: 'Telephone Ring' },\r\n  { number: 125, group: 'Sound Effects', label: 'Helicopter' },\r\n  { number: 126, group: 'Sound Effects', label: 'Applause' },\r\n  { number: 127, group: 'Sound Effects', label: 'Gunshot' }\r\n]\r\n\r\nconst MIDI_INSTRUMENTS_LEV2 = [\r\n  { number: 1, subnumber: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\r\n  { number: 1, subnumber: 1, group: 'Piano', label: 'Wide Acoustic Grand' },\r\n  { number: 1, subnumber: 2, group: 'Piano', label: 'Dark Acoustic Grand' },\r\n  { number: 2, subnumber: 0, group: 'Piano', label: 'Bright Acoustic Piano' },\r\n  { number: 2, subnumber: 1, group: 'Piano', label: 'Wide Bright Acoustic' },\r\n  { number: 3, subnumber: 0, group: 'Piano', label: 'Electric Grand Piano' },\r\n  { number: 3, subnumber: 1, group: 'Piano', label: 'Wide Electric Grand' },\r\n  { number: 4, subnumber: 0, group: 'Piano', label: 'Honky-tonk Piano' },\r\n  { number: 4, subnumber: 1, group: 'Piano', label: 'Wide Honky-tonk' },\r\n  { number: 5, subnumber: 0, group: 'Piano', label: 'Rhodes Piano' },\r\n  { number: 5, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 1' },\r\n  { number: 5, subnumber: 2, group: 'Piano', label: 'Electric Piano 1 Variation' },\r\n  { number: 5, subnumber: 3, group: 'Piano', label: '60\\'s Electric Piano' },\r\n  { number: 6, subnumber: 0, group: 'Piano', label: 'Chorused Electric Piano' },\r\n  { number: 6, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 2' },\r\n  { number: 6, subnumber: 2, group: 'Piano', label: 'Electric Piano 2 Variation' },\r\n  { number: 6, subnumber: 3, group: 'Piano', label: 'Electric Piano Legend' },\r\n  { number: 6, subnumber: 4, group: 'Piano', label: 'Electric Piano Phase' },\r\n  { number: 7, subnumber: 0, group: 'Piano', label: 'Harpsichord' },\r\n  { number: 7, subnumber: 1, group: 'Piano', label: 'Coupled Harpsichord' },\r\n  { number: 7, subnumber: 2, group: 'Piano', label: 'Wide Harpsichord' },\r\n  { number: 7, subnumber: 3, group: 'Piano', label: 'Open Harpsichord' },\r\n  { number: 8, subnumber: 0, group: 'Piano', label: 'Clavinet' },\r\n  { number: 8, subnumber: 1, group: 'Piano', label: 'Pulse Clavinet' },\r\n  { number: 9, subnumber: 0, group: 'Chromatic Percussion', label: 'Celesta' },\r\n  { number: 10, subnumber: 0, group: 'Chromatic Percussion', label: 'Glockenspiel' },\r\n  { number: 11, subnumber: 0, group: 'Chromatic Percussion', label: 'Music Box' },\r\n  { number: 12, subnumber: 0, group: 'Chromatic Percussion', label: 'Vibraphone' },\r\n  { number: 12, subnumber: 1, group: 'Chromatic Percussion', label: 'Wet Vibraphone' },\r\n  { number: 13, subnumber: 0, group: 'Chromatic Percussion', label: 'Marimba' },\r\n  { number: 13, subnumber: 1, group: 'Chromatic Percussion', label: 'Wide Marimba' },\r\n  { number: 14, subnumber: 0, group: 'Chromatic Percussion', label: 'Xylophone' },\r\n  { number: 15, subnumber: 0, group: 'Chromatic Percussion', label: 'Tubular Bells' },\r\n  { number: 15, subnumber: 1, group: 'Chromatic Percussion', label: 'Church Bells' },\r\n  { number: 15, subnumber: 2, group: 'Chromatic Percussion', label: 'Carillon' },\r\n  { number: 16, subnumber: 0, group: 'Chromatic Percussion', label: 'Dulcimer / Santur' },\r\n  { number: 17, subnumber: 0, group: 'Organ', label: 'Hammond Organ' },\r\n  { number: 17, subnumber: 1, group: 'Organ', label: 'Detuned Organ 1' },\r\n  { number: 17, subnumber: 2, group: 'Organ', label: '60\\'s Organ 1' },\r\n  { number: 17, subnumber: 3, group: 'Organ', label: 'Organ 4' },\r\n  { number: 18, subnumber: 0, group: 'Organ', label: 'Percussive Organ' },\r\n  { number: 18, subnumber: 1, group: 'Organ', label: 'Detuned Organ 2' },\r\n  { number: 18, subnumber: 2, group: 'Organ', label: 'Organ 5' },\r\n  { number: 19, subnumber: 0, group: 'Organ', label: 'Rock Organ' },\r\n  { number: 20, subnumber: 0, group: 'Organ', label: 'Church Organ 1' },\r\n  { number: 20, subnumber: 1, group: 'Organ', label: 'Church Organ 2' },\r\n  { number: 20, subnumber: 2, group: 'Organ', label: 'Church Organ 3' },\r\n  { number: 21, subnumber: 0, group: 'Organ', label: 'Reed Organ' },\r\n  { number: 21, subnumber: 1, group: 'Organ', label: 'Puff Organ' },\r\n  { number: 22, subnumber: 0, group: 'Organ', label: 'French Accordion' },\r\n  { number: 22, subnumber: 1, group: 'Organ', label: 'Italian Accordion' },\r\n  { number: 23, subnumber: 0, group: 'Organ', label: 'Harmonica' },\r\n  { number: 24, subnumber: 0, group: 'Organ', label: 'Bandoneon' },\r\n  { number: 25, subnumber: 0, group: 'Guitar', label: 'Nylon-String Guitar' },\r\n  { number: 25, subnumber: 1, group: 'Guitar', label: 'Ukelele' },\r\n  { number: 25, subnumber: 2, group: 'Guitar', label: 'Open Nylon Guitar' },\r\n  { number: 25, subnumber: 3, group: 'Guitar', label: 'Nylon Guitar 2' },\r\n  { number: 26, subnumber: 0, group: 'Guitar', label: 'Steel-String Guitar' },\r\n  { number: 26, subnumber: 1, group: 'Guitar', label: '12-String Guitar' },\r\n  { number: 26, subnumber: 2, group: 'Guitar', label: 'Mandolin' },\r\n  { number: 26, subnumber: 3, group: 'Guitar', label: 'Steel + Body' },\r\n  { number: 27, subnumber: 0, group: 'Guitar', label: 'Jazz Guitar' },\r\n  { number: 27, subnumber: 1, group: 'Guitar', label: 'Hawaiian Guitar' },\r\n  { number: 28, subnumber: 0, group: 'Guitar', label: 'Clean Electric Guitar' },\r\n  { number: 28, subnumber: 1, group: 'Guitar', label: 'Chorus Guitar' },\r\n  { number: 28, subnumber: 2, group: 'Guitar', label: 'Mid Tone Guitar' },\r\n  { number: 29, subnumber: 0, group: 'Guitar', label: 'Muted Electric Guitar' },\r\n  { number: 29, subnumber: 1, group: 'Guitar', label: 'Funk Guitar' },\r\n  { number: 29, subnumber: 2, group: 'Guitar', label: 'Funk Guitar 2' },\r\n  { number: 29, subnumber: 3, group: 'Guitar', label: 'Jazz Man' },\r\n  { number: 30, subnumber: 0, group: 'Guitar', label: 'Overdriven Guitar' },\r\n  { number: 30, subnumber: 1, group: 'Guitar', label: 'Guitar Pinch' },\r\n  { number: 31, subnumber: 0, group: 'Guitar', label: 'Distortion Guitar' },\r\n  { number: 31, subnumber: 1, group: 'Guitar', label: 'Feedback Guitar' },\r\n  { number: 31, subnumber: 2, group: 'Guitar', label: 'Distortion Rtm Guitar' },\r\n  { number: 32, subnumber: 0, group: 'Guitar', label: 'Guitar Harmonics' },\r\n  { number: 32, subnumber: 1, group: 'Guitar', label: 'Guitar Feedback' },\r\n  { number: 33, subnumber: 0, group: 'Bass', label: 'Acoustic Bass' },\r\n  { number: 34, subnumber: 0, group: 'Bass', label: 'Fingered Bass' },\r\n  { number: 34, subnumber: 1, group: 'Bass', label: 'Finger Slap' },\r\n  { number: 35, subnumber: 0, group: 'Bass', label: 'Picked Bass' },\r\n  { number: 36, subnumber: 0, group: 'Bass', label: 'Fretless Bass' },\r\n  { number: 37, subnumber: 0, group: 'Bass', label: 'Slap Bass 1' },\r\n  { number: 38, subnumber: 0, group: 'Bass', label: 'Slap Bass 2' },\r\n  { number: 39, subnumber: 0, group: 'Bass', label: 'Synth Bass 1' },\r\n  { number: 39, subnumber: 1, group: 'Bass', label: 'Synth Bass 101' },\r\n  { number: 39, subnumber: 2, group: 'Bass', label: 'Synth Bass 3' },\r\n  { number: 39, subnumber: 3, group: 'Bass', label: 'Clavi Bass' },\r\n  { number: 39, subnumber: 4, group: 'Bass', label: 'Hammer' },\r\n  { number: 40, subnumber: 0, group: 'Bass', label: 'Synth Bass 2' },\r\n  { number: 40, subnumber: 1, group: 'Bass', label: 'Synth Bass 4' },\r\n  { number: 40, subnumber: 2, group: 'Bass', label: 'Rubber Bass' },\r\n  { number: 40, subnumber: 3, group: 'Bass', label: 'Attack Pulse' },\r\n  { number: 41, subnumber: 0, group: 'Strings', label: 'Violin' },\r\n  { number: 41, subnumber: 1, group: 'Strings', label: 'Slow Violin' },\r\n  { number: 42, subnumber: 0, group: 'Strings', label: 'Viola' },\r\n  { number: 43, subnumber: 0, group: 'Strings', label: 'Cello' },\r\n  { number: 44, subnumber: 0, group: 'Strings', label: 'Contrabass' },\r\n  { number: 45, subnumber: 0, group: 'Strings', label: 'Tremolo Strings' },\r\n  { number: 46, subnumber: 0, group: 'Strings', label: 'Pizzicato Strings' },\r\n  { number: 47, subnumber: 0, group: 'Strings', label: 'Harp' },\r\n  { number: 47, subnumber: 1, group: 'Strings', label: 'Yang Qin' },\r\n  { number: 48, subnumber: 0, group: 'Strings', label: 'Timpani' },\r\n  { number: 49, subnumber: 0, group: 'Orchestral Ensemble', label: 'String Ensemble' },\r\n  { number: 49, subnumber: 1, group: 'Orchestral Ensemble', label: 'Orchestra Strings' },\r\n  { number: 49, subnumber: 2, group: 'Orchestral Ensemble', label: '60\\'s Strings' },\r\n  { number: 50, subnumber: 0, group: 'Orchestral Ensemble', label: 'Slow String Ensemble' },\r\n  { number: 51, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 1' },\r\n  { number: 51, subnumber: 1, group: 'Orchestral Ensemble', label: 'Synth Strings 3' },\r\n  { number: 52, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 2' },\r\n  { number: 53, subnumber: 0, group: 'Orchestral Ensemble', label: 'Choir Aahs' },\r\n  { number: 53, subnumber: 1, group: 'Orchestral Ensemble', label: 'Choir Aahs 2' },\r\n  { number: 54, subnumber: 0, group: 'Orchestral Ensemble', label: 'Voice Oohs' },\r\n  { number: 54, subnumber: 1, group: 'Orchestral Ensemble', label: 'Humming' },\r\n  { number: 55, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Voice' },\r\n  { number: 55, subnumber: 1, group: 'Orchestral Ensemble', label: 'Analog Voice' },\r\n  { number: 56, subnumber: 0, group: 'Orchestral Ensemble', label: 'Orchestra Hit' },\r\n  { number: 56, subnumber: 1, group: 'Orchestral Ensemble', label: 'Bass Hit' },\r\n  { number: 56, subnumber: 2, group: 'Orchestral Ensemble', label: '6th Hit' },\r\n  { number: 56, subnumber: 3, group: 'Orchestral Ensemble', label: 'Euro Hit' },\r\n  { number: 57, subnumber: 0, group: 'Brass', label: 'Trumpet' },\r\n  { number: 57, subnumber: 1, group: 'Brass', label: 'Dark Trumpet' },\r\n  { number: 58, subnumber: 0, group: 'Brass', label: 'Trombone' },\r\n  { number: 58, subnumber: 1, group: 'Brass', label: 'Trombone 2' },\r\n  { number: 58, subnumber: 2, group: 'Brass', label: 'Bright Trombone' },\r\n  { number: 59, subnumber: 0, group: 'Brass', label: 'Tuba' },\r\n  { number: 60, subnumber: 0, group: 'Brass', label: 'Muted Trumpet' },\r\n  { number: 60, subnumber: 1, group: 'Brass', label: 'Muted Trumpet 2' },\r\n  { number: 61, subnumber: 0, group: 'Brass', label: 'French Horn' },\r\n  { number: 61, subnumber: 1, group: 'Brass', label: 'French Horn 2' },\r\n  { number: 62, subnumber: 0, group: 'Brass', label: 'Brass Section' },\r\n  { number: 62, subnumber: 1, group: 'Brass', label: 'Brass Section' },\r\n  { number: 63, subnumber: 0, group: 'Brass', label: 'Synth Brass 1' },\r\n  { number: 63, subnumber: 1, group: 'Brass', label: 'Synth Brass 3' },\r\n  { number: 63, subnumber: 2, group: 'Brass', label: 'Analog Brass 1' },\r\n  { number: 63, subnumber: 3, group: 'Brass', label: 'Jump Brass' },\r\n  { number: 64, subnumber: 0, group: 'Brass', label: 'Synth Brass 2' },\r\n  { number: 64, subnumber: 1, group: 'Brass', label: 'Synth Brass 4' },\r\n  { number: 64, subnumber: 2, group: 'Brass', label: 'Analog Brass 2' },\r\n  { number: 65, subnumber: 0, group: 'Reed', label: 'Soprano Sax' },\r\n  { number: 66, subnumber: 0, group: 'Reed', label: 'Alto Sax' },\r\n  { number: 67, subnumber: 0, group: 'Reed', label: 'Tenor Sax' },\r\n  { number: 68, subnumber: 0, group: 'Reed', label: 'Baritone Sax' },\r\n  { number: 69, subnumber: 0, group: 'Reed', label: 'Oboe' },\r\n  { number: 70, subnumber: 0, group: 'Reed', label: 'English Horn' },\r\n  { number: 71, subnumber: 0, group: 'Reed', label: 'Bassoon' },\r\n  { number: 72, subnumber: 0, group: 'Reed', label: 'Clarinet' },\r\n  { number: 73, subnumber: 0, group: 'Wind', label: 'Piccolo' },\r\n  { number: 74, subnumber: 0, group: 'Wind', label: 'Flute' },\r\n  { number: 75, subnumber: 0, group: 'Wind', label: 'Recorder' },\r\n  { number: 76, subnumber: 0, group: 'Wind', label: 'Pan Flute' },\r\n  { number: 77, subnumber: 0, group: 'Wind', label: 'Blown Bottle' },\r\n  { number: 78, subnumber: 0, group: 'Wind', label: 'Shakuhachi' },\r\n  { number: 79, subnumber: 0, group: 'Wind', label: 'Whistle' },\r\n  { number: 80, subnumber: 0, group: 'Wind', label: 'Ocarina' },\r\n  { number: 81, subnumber: 0, group: 'Lead', label: 'Square Lead' },\r\n  { number: 81, subnumber: 1, group: 'Lead', label: 'Square Wave' },\r\n  { number: 81, subnumber: 2, group: 'Lead', label: 'Sine Wave' },\r\n  { number: 82, subnumber: 0, group: 'Lead', label: 'Saw Lead' },\r\n  { number: 82, subnumber: 1, group: 'Lead', label: 'Saw Wave' },\r\n  { number: 82, subnumber: 2, group: 'Lead', label: 'Doctor Solo' },\r\n  { number: 82, subnumber: 3, group: 'Lead', label: 'Natural Lead' },\r\n  { number: 82, subnumber: 4, group: 'Lead', label: 'Sequenced Saw' },\r\n  { number: 83, subnumber: 0, group: 'Lead', label: 'Synth Calliope' },\r\n  { number: 84, subnumber: 0, group: 'Lead', label: 'Chiffer Lead' },\r\n  { number: 85, subnumber: 0, group: 'Lead', label: 'Charang' },\r\n  { number: 85, subnumber: 1, group: 'Lead', label: 'Wire Lead' },\r\n  { number: 86, subnumber: 0, group: 'Lead', label: 'Solo Synth Vox' },\r\n  { number: 87, subnumber: 0, group: 'Lead', label: '5th Saw Wave' },\r\n  { number: 88, subnumber: 0, group: 'Lead', label: 'Bass & Lead' },\r\n  { number: 88, subnumber: 1, group: 'Lead', label: 'Delayed Lead' },\r\n  { number: 89, subnumber: 0, group: 'Synth Pad', label: 'Fantasia Pad' },\r\n  { number: 90, subnumber: 0, group: 'Synth Pad', label: 'Warm Pad' },\r\n  { number: 90, subnumber: 1, group: 'Synth Pad', label: 'Sine Pad' },\r\n  { number: 91, subnumber: 0, group: 'Synth Pad', label: 'Polysynth Pad' },\r\n  { number: 92, subnumber: 0, group: 'Synth Pad', label: 'Space Voice Pad' },\r\n  { number: 92, subnumber: 1, group: 'Synth Pad', label: 'Itopia' },\r\n  { number: 93, subnumber: 0, group: 'Synth Pad', label: 'Bowed Glass Pad' },\r\n  { number: 94, subnumber: 0, group: 'Synth Pad', label: 'Metal Pad' },\r\n  { number: 95, subnumber: 0, group: 'Synth Pad', label: 'Halo Pad' },\r\n  { number: 96, subnumber: 0, group: 'Synth Pad', label: 'Sweep Pad' },\r\n  { number: 97, subnumber: 0, group: 'Synth Effects', label: 'Ice Rain' },\r\n  { number: 98, subnumber: 0, group: 'Synth Effects', label: 'Soundtrack' },\r\n  { number: 99, subnumber: 0, group: 'Synth Effects', label: 'Crystal' },\r\n  { number: 99, subnumber: 1, group: 'Synth Effects', label: 'Synth Mallet' },\r\n  { number: 100, subnumber: 0, group: 'Synth Effects', label: 'Atmosphere' },\r\n  { number: 101, subnumber: 0, group: 'Synth Effects', label: 'Brightness' },\r\n  { number: 102, subnumber: 0, group: 'Synth Effects', label: 'Goblin' },\r\n  { number: 103, subnumber: 0, group: 'Synth Effects', label: 'Echo Drops' },\r\n  { number: 103, subnumber: 1, group: 'Synth Effects', label: 'Echo Bell' },\r\n  { number: 103, subnumber: 2, group: 'Synth Effects', label: 'Echo Pan' },\r\n  { number: 104, subnumber: 0, group: 'Synth Effects', label: 'Star Theme' },\r\n  { number: 105, subnumber: 0, group: 'Ethnic', label: 'Sitar' },\r\n  { number: 105, subnumber: 1, group: 'Ethnic', label: 'Sitar 2' },\r\n  { number: 106, subnumber: 0, group: 'Ethnic', label: 'Banjo' },\r\n  { number: 107, subnumber: 0, group: 'Ethnic', label: 'Shamisen' },\r\n  { number: 108, subnumber: 0, group: 'Ethnic', label: 'Koto' },\r\n  { number: 108, subnumber: 1, group: 'Ethnic', label: 'Taisho Koto' },\r\n  { number: 109, subnumber: 0, group: 'Ethnic', label: 'Kalimba' },\r\n  { number: 110, subnumber: 0, group: 'Ethnic', label: 'Bagpipe' },\r\n  { number: 111, subnumber: 0, group: 'Ethnic', label: 'Fiddle' },\r\n  { number: 112, subnumber: 0, group: 'Ethnic', label: 'Shanai' },\r\n  { number: 113, subnumber: 0, group: 'Percussive', label: 'Tinkle Bell' },\r\n  { number: 114, subnumber: 0, group: 'Percussive', label: 'Agogo' },\r\n  { number: 115, subnumber: 0, group: 'Percussive', label: 'Steel Drums' },\r\n  { number: 116, subnumber: 0, group: 'Percussive', label: 'Woodblock' },\r\n  { number: 116, subnumber: 1, group: 'Percussive', label: 'Castanets' },\r\n  { number: 117, subnumber: 0, group: 'Percussive', label: 'Taiko Drum' },\r\n  { number: 117, subnumber: 1, group: 'Percussive', label: 'Concert Bass Drum' },\r\n  { number: 118, subnumber: 0, group: 'Percussive', label: 'Melodic Tom 1' },\r\n  { number: 118, subnumber: 1, group: 'Percussive', label: 'Melodic Tom 2' },\r\n  { number: 119, subnumber: 0, group: 'Percussive', label: 'Synth Drum' },\r\n  { number: 119, subnumber: 1, group: 'Percussive', label: '808 Tom' },\r\n  { number: 119, subnumber: 2, group: 'Percussive', label: 'Electric Percussion' },\r\n  { number: 120, subnumber: 0, group: 'Percussive', label: 'Reverse Cymbal' },\r\n  { number: 121, subnumber: 0, group: 'Sound Effects', label: 'Guitar Fret Noise' },\r\n  { number: 121, subnumber: 1, group: 'Sound Effects', label: 'Guitar Cut Noise' },\r\n  { number: 121, subnumber: 2, group: 'Sound Effects', label: 'String Slap' },\r\n  { number: 122, subnumber: 0, group: 'Sound Effects', label: 'Breath Noise' },\r\n  { number: 122, subnumber: 1, group: 'Sound Effects', label: 'Flute Key Click' },\r\n  { number: 123, subnumber: 0, group: 'Sound Effects', label: 'Seashore' },\r\n  { number: 123, subnumber: 1, group: 'Sound Effects', label: 'Rain' },\r\n  { number: 123, subnumber: 2, group: 'Sound Effects', label: 'Thunder' },\r\n  { number: 123, subnumber: 3, group: 'Sound Effects', label: 'Wind' },\r\n  { number: 123, subnumber: 4, group: 'Sound Effects', label: 'Stream' },\r\n  { number: 123, subnumber: 5, group: 'Sound Effects', label: 'Bubble' },\r\n  { number: 124, subnumber: 0, group: 'Sound Effects', label: 'Bird Tweet' },\r\n  { number: 124, subnumber: 1, group: 'Sound Effects', label: 'Dog' },\r\n  { number: 124, subnumber: 2, group: 'Sound Effects', label: 'Horse Gallop' },\r\n  { number: 124, subnumber: 3, group: 'Sound Effects', label: 'Bird 2' },\r\n  { number: 125, subnumber: 0, group: 'Sound Effects', label: 'Telephone 1' },\r\n  { number: 125, subnumber: 1, group: 'Sound Effects', label: 'Telephone 2' },\r\n  { number: 125, subnumber: 2, group: 'Sound Effects', label: 'Door Creaking' },\r\n  { number: 125, subnumber: 3, group: 'Sound Effects', label: 'Door Closing' },\r\n  { number: 125, subnumber: 4, group: 'Sound Effects', label: 'Scratch' },\r\n  { number: 125, subnumber: 5, group: 'Sound Effects', label: 'Wind Chimes' },\r\n  { number: 126, subnumber: 0, group: 'Sound Effects', label: 'Helicopter' },\r\n  { number: 126, subnumber: 1, group: 'Sound Effects', label: 'Car Engine' },\r\n  { number: 126, subnumber: 2, group: 'Sound Effects', label: 'Car Stop' },\r\n  { number: 126, subnumber: 3, group: 'Sound Effects', label: 'Car Pass' },\r\n  { number: 126, subnumber: 4, group: 'Sound Effects', label: 'Car Crash' },\r\n  { number: 126, subnumber: 5, group: 'Sound Effects', label: 'Siren' },\r\n  { number: 126, subnumber: 6, group: 'Sound Effects', label: 'Train' },\r\n  { number: 126, subnumber: 7, group: 'Sound Effects', label: 'Jetplane' },\r\n  { number: 126, subnumber: 8, group: 'Sound Effects', label: 'Starship' },\r\n  { number: 126, subnumber: 9, group: 'Sound Effects', label: 'Burst Noise' },\r\n  { number: 127, subnumber: 0, group: 'Sound Effects', label: 'Applause' },\r\n  { number: 127, subnumber: 1, group: 'Sound Effects', label: 'Laughing' },\r\n  { number: 127, subnumber: 2, group: 'Sound Effects', label: 'Screaming' },\r\n  { number: 127, subnumber: 3, group: 'Sound Effects', label: 'Punch' },\r\n  { number: 127, subnumber: 4, group: 'Sound Effects', label: 'Heart Beat' },\r\n  { number: 127, subnumber: 5, group: 'Sound Effects', label: 'Footsteps' },\r\n  { number: 128, subnumber: 0, group: 'Sound Effects', label: 'Gun Shot' },\r\n  { number: 128, subnumber: 1, group: 'Sound Effects', label: 'Machine Gun' },\r\n  { number: 128, subnumber: 2, group: 'Sound Effects', label: 'Lasergun' },\r\n  { number: 128, subnumber: 3, group: 'Sound Effects', label: 'Explosion' }\r\n]\r\n\r\n/**\r\n * @type {Map<number,string>}\r\n */\r\nconst GENERAL_MIDI_DRUM_NOTE_NUMBERS = new Map([\r\n  [27, 'High Q(GM2)'],\r\n  [28, 'Slap(GM2)'],\r\n  [29, 'Scratch Push(GM2)'],\r\n  [30, 'Scratch Pull(GM2)'],\r\n  [31, 'Sticks(GM2)'],\r\n  [32, 'Square Click(GM2)'],\r\n  [33, 'Metronome Click(GM2)'],\r\n  [34, 'Metronome Bell(GM2)'],\r\n  [35, 'Bass Drum 2'],\r\n  [36, 'Bass Drum 1'],\r\n  [37, 'Side Stick'],\r\n  [38, 'Snare Drum 1'],\r\n  [39, 'Hand Clap'],\r\n  [40, 'Snare Drum 2'],\r\n  [41, 'Low Tom 2'],\r\n  [42, 'Closed Hi-hat'],\r\n  [43, 'Low Tom 1'],\r\n  [44, 'Pedal Hi-hat'],\r\n  [45, 'Mid Tom 2'],\r\n  [46, 'Open Hi-hat'],\r\n  [47, 'Mid Tom 1'],\r\n  [48, 'High Tom 2'],\r\n  [49, 'Crash Cymbal 1'],\r\n  [50, 'High Tom 1'],\r\n  [51, 'Ride Cymbal 1'],\r\n  [52, 'Chinese Cymbal'],\r\n  [53, 'Ride Bell'],\r\n  [54, 'Tambourine'],\r\n  [55, 'Splash Cymbal'],\r\n  [56, 'Cowbell'],\r\n  [57, 'Crash Cymbal 2'],\r\n  [58, 'Vibra Slap'],\r\n  [59, 'Ride Cymbal 2'],\r\n  [60, 'High Bongo'],\r\n  [61, 'Low Bongo'],\r\n  [62, 'Mute High Conga'],\r\n  [63, 'Open High Conga'],\r\n  [64, 'Low Conga'],\r\n  [65, 'High Timbale'],\r\n  [66, 'Low Timbale'],\r\n  [67, 'High Agogo'],\r\n  [68, 'Low Agogo'],\r\n  [69, 'Cabasa'],\r\n  [70, 'Maracas'],\r\n  [71, 'Short Whistle'],\r\n  [72, 'Long Whistle'],\r\n  [73, 'Short Guiro'],\r\n  [74, 'Long Guiro'],\r\n  [75, 'Claves'],\r\n  [76, 'High Wood Block'],\r\n  [77, 'Low Wood Block'],\r\n  [78, 'Mute Cuica'],\r\n  [79, 'Open Cuica'],\r\n  [80, 'Mute Triangle'],\r\n  [81, 'Open Triangle'],\r\n  [82, 'Shaker(GM2)'],\r\n  [83, 'Jingle Bell(GM2)'],\r\n  [84, 'Belltree(GM2)'],\r\n  [85, 'Castanets(GM2)'],\r\n  [86, 'Mute Surdo(GM2)'],\r\n  [87, 'Open Surdo(GM2)']\r\n])\r\n\r\n/**\r\n * @type {object[]}\r\n * @todo add instrument numbers\r\n * @todo This might be useful, e.g. to check which notes Player can play\r\n */\r\nexport const MIDI_NOTE_RANGES = [\r\n  // Strings\r\n  { instrNr: 40, nrL2: -1, subNrL2: -1, label: 'Violin', min: 55, max: 103 },\r\n  { instrNr: 41, nrL2: -1, subNrL2: -1, label: 'Viola', min: 48, max: 91 },\r\n  { instrNr: 42, nrL2: -1, subNrL2: -1, label: 'Cello', min: 36, max: 76 },\r\n  { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Double Bass', min: 28, max: 67 },\r\n  { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Bass Guitar', min: 28, max: 67 },\r\n  { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Acoustic Guitar', min: 40, max: 88 },\r\n  // Brass\r\n  { instrNr: 58, nrL2: 59, subNrL2: 0, label: 'Tuba', min: 28, max: 58 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Trombone', min: 34, max: 67 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'French Horn', min: 34, max: 77 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trombone', min: 40, max: 72 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trumpet', min: 55, max: 82 },\r\n  // Woodwinds\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Piccolo', min: 74, max: 102 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Flute', min: 60, max: 96 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Oboe', min: 58, max: 91 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Flute', min: 55, max: 91 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Cor Anglais (English Horn)', min: 52, max: 81 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Clarinet', min: 50, max: 94 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Clarinet', min: 38, max: 77 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bassoon', min: 34, max: 75 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Contrabassoon', min: 22, max: 53 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Recorder', min: 72, max: 98 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Recorder', min: 65, max: 91 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Recorder', min: 60, max: 86 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Recorder', min: 53, max: 79 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Baritone Sax', min: 36, max: 69 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Sax', min: 44, max: 76 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Sax', min: 49, max: 81 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Sax', min: 56, max: 88 },\r\n  // Tuned Percussion\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Glockenspiel', min: 79, max: 108 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Xylophone', min: 65, max: 108 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Vibraphone', min: 53, max: 89 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Marimba', min: 45, max: 96 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Marimba', min: 33, max: 81 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Celeste', min: 60, max: 108 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tubular Bells', min: 60, max: 77 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Timpani', min: 40, max: 55 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harpsichord', min: 29, max: 89 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Kalimba', min: 60, max: 88 },\r\n  { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harp', min: 24, max: 103 }\r\n]\r\n\r\n// Build lookup maps\r\nfor (const note of MIDI_NOTES) {\r\n  MidiNoteByPitch.set(note.pitch, note)\r\n  MidiNoteByLabel.set(note.label, note)\r\n}\r\nfor (const instrument of MIDI_INSTRUMENTS) {\r\n  MidiInstrumentByNumber.set(instrument.number, instrument)\r\n}\r\nfor (const instrument of MIDI_INSTRUMENTS_LEV2) {\r\n  const key = `${instrument.number}-${instrument.subnumber}`\r\n  MidiInstrumentByNumberLev2.set(key, instrument)\r\n}\r\n", "import { getMidiNoteByLabel, getMidiNoteByNr } from '../fileFormats/Midi.js'\r\n\r\n/**\r\n * Note class that reflects MIDI properties but has\r\n * absolute start and end times in seconds.\r\n */\r\nclass Note {\r\n  /**\r\n     * Creates a new Note. Note.from() is preferred over using the constructor.\r\n     *\r\n     * @param {number} pitch pitch\r\n     * @param {number} start start time in seconds\r\n     * @param {number} velocity velocity\r\n     * @param {number} channel MIDI channel\r\n     * @param {number} end end time in seconds\r\n     */\r\n  constructor (\r\n    pitch = 0,\r\n    start = 0,\r\n    velocity = 127,\r\n    channel = 0,\r\n    end = null\r\n  ) {\r\n    // Get note name, e.g. C#4\r\n    if (pitch < 0 || pitch > 127) {\r\n      throw new Error(`Invalid pitch ${pitch}`)\r\n    }\r\n    try {\r\n      this.name = getMidiNoteByNr(pitch).label\r\n    } catch {\r\n      throw new Error(`Invalid pitch ${pitch}`)\r\n    }\r\n    this.pitch = pitch\r\n    this.start = start\r\n    this.velocity = velocity\r\n    this.channel = channel\r\n    this.end = end\r\n    // TODO: breaks tests\r\n    // const duration = end - start;\r\n    // this.duration = Number.isNaN(duration) ? null : duration;\r\n  }\r\n\r\n  /**\r\n     * Creates a Note object from an object via destructuring.\r\n     * Use either 'end' or 'duration', if both are specified, end will be used.\r\n     *\r\n     * @example <caption>Using end</caption>\r\n     *  const n = Note.from({\r\n     *      pitch: 'C#4',     // e.g. 12 or C#4\r\n     *      start: 0.5,       // start time in seconds\r\n     *      end: 1.5,         // end time in seconds\r\n     *      velocity: 127,    // MIDI velocity\r\n     *      channel: 0,       // MIDI channel\r\n     *  });\r\n     * @example <caption>Using duration</caption>\r\n     *  const n = Note.from({\r\n     *      pitch: 'C#4',\r\n     *      start: 0.5,\r\n     *      duration: 1.2,\r\n     *  });\r\n     * @param {object} object object with at least {pitch}\r\n     * @param {number|string} object.pitch e.G. 12 or C#4\r\n     * @param {number} object.start start time in seconds\r\n     * @param {number} object.end end time in seconds\r\n     * @param {number} object.duration duration in seconds\r\n     * @param {number} object.velocity MIDI velocity\r\n     * @param {number} object.channel MIDI channel\r\n     * @returns {Note} new note\r\n     * @throws {Error} when pitch is invalid\r\n     */\r\n  static from (object) {\r\n    let {\r\n      pitch = 0,\r\n      start = 0,\r\n      velocity = 127,\r\n      channel = 0,\r\n      end = null,\r\n      duration = null\r\n    } = object\r\n    // Pitch can either be a number or a string\r\n    if ((typeof pitch === 'string') && Number.isNaN(+pitch)) {\r\n      const note = getMidiNoteByLabel(pitch)\r\n      if (note === null || note === undefined) {\r\n        throw new Error('Invalid pitch for Note.from()')\r\n      }\r\n      pitch = note.pitch\r\n    }\r\n    // Use either end or duration\r\n    if (\r\n      (end === undefined || end === null) &&\r\n            duration !== null &&\r\n            !Number.isNaN(duration)\r\n    ) {\r\n      end = start + duration\r\n    }\r\n    return new Note(pitch, start, velocity, channel, end)\r\n  }\r\n\r\n  /**\r\n     * Returns a copy of the Note object\r\n     *\r\n     * @returns {Note} new note\r\n     */\r\n  clone () {\r\n    return new Note(\r\n      this.pitch,\r\n      this.start,\r\n      this.velocity,\r\n      this.channel,\r\n      this.end\r\n    )\r\n  }\r\n\r\n  /**\r\n     * Returns the duration of this note in seconds\r\n     *\r\n     * @returns {number} note duration\r\n     */\r\n  getDuration () {\r\n    if (this.end === null) {\r\n      return 0\r\n    }\r\n    return this.end - this.start\r\n  }\r\n\r\n  /**\r\n     * Returns the note's name and octave, e.g. 'C#3'\r\n     *\r\n     * @returns {string} note name as string\r\n     */\r\n  getName () {\r\n    return this.name\r\n  }\r\n\r\n  /**\r\n     * Returns the note's name WITHOUT the octave, e.g. 'C#'\r\n     *\r\n     * @returns {string} note name as string\r\n     */\r\n  getLetter () {\r\n    return getMidiNoteByNr(this.pitch).name\r\n  }\r\n\r\n  /**\r\n     * Returns the note's octave\r\n     *\r\n     * @returns {number} the note's octave\r\n     */\r\n  getOctave () {\r\n    return getMidiNoteByNr(this.pitch).octave\r\n  }\r\n\r\n  /**\r\n     * Returns a new Note where start and end are multiplied by factor\r\n     *\r\n     * @param {number} addedSeconds seconds to be added to start and end\r\n     * @returns {Note} new note\r\n     */\r\n  shiftTime (addedSeconds) {\r\n    const n = this.clone()\r\n    n.start += addedSeconds\r\n    n.end = n.end === null ? null : n.end + addedSeconds\r\n    return n\r\n  }\r\n\r\n  /**\r\n     * Returns a new Note where start and end are multiplied by factor\r\n     *\r\n     * @param {number} factor factor to scale start and end with\r\n     * @returns {Note} new note\r\n     */\r\n  scaleTime (factor) {\r\n    const n = this.clone()\r\n    n.start *= factor\r\n    n.end = n.end === null ? null : n.end * factor\r\n    return n\r\n  }\r\n\r\n  /**\r\n     * Returns true, if this Note and otherNote overlap in time.\r\n     *\r\n     * @param {Note} otherNote another Note\r\n     * @returns {boolean} true if they overlap\r\n     */\r\n  overlapsInTime (otherNote) {\r\n    return (this.start >= otherNote.start && this.start <= otherNote.end) ||\r\n            (this.end >= otherNote.start && this.end <= otherNote.end)\r\n  }\r\n\r\n  /**\r\n     * Returns the amount of seconds this Note and otherNote overlap in time.\r\n     *\r\n     * @param {Note} otherNote another Note\r\n     * @returns {number} seconds of overlap\r\n     */\r\n  overlapInSeconds (otherNote) {\r\n    if (!this.overlapsInTime(otherNote)) {\r\n      return 0\r\n    }\r\n    const laterStart = Math.max(this.start, otherNote.start)\r\n    const earlierEnd = Math.min(this.end, otherNote.end)\r\n    return earlierEnd - laterStart\r\n  }\r\n\r\n  /**\r\n     * Returns true if this note and otherNote have equal attributes.\r\n     *\r\n     * @param {Note} otherNote another Note\r\n     * @returns {boolean} true if equal\r\n     */\r\n  equals (otherNote) {\r\n    if (!(otherNote instanceof Note)) {\r\n      return false\r\n    }\r\n    return (\r\n      this.pitch === otherNote.pitch &&\r\n            this.start === otherNote.start &&\r\n            this.velocity === otherNote.velocity &&\r\n            this.channel === otherNote.channel &&\r\n            this.end === otherNote.end\r\n    )\r\n  }\r\n\r\n  /**\r\n     * Human-readable string representation of this Note\r\n     *\r\n     * @param {boolean} short if true, attribute names will be shortened\r\n     * @returns {string} string representation\r\n     */\r\n  toString (short = false) {\r\n    if (short) {\r\n      return `Note(n: ${this.name}, p: ${this.pitch}, s: ${this.start}, e: ${this.end}, v: ${this.velocity}, c: ${this.channel})`\r\n    }\r\n    return `Note(name: ${this.name}, pitch: ${this.pitch}, start: ${this.start}, end: ${this.end}, velocity: ${this.velocity}, channel: ${this.channel})`\r\n  }\r\n}\r\n\r\nexport default Note\r\n", "import { getMidiNoteByLabel } from '../fileFormats/Midi.js'\nimport Note from './Note.js'\n\n/**\n * Guitar note class that reflects MIDI properties but has\n * absolute start and end times in seconds and\n * information on how to play it.\n *\n * @augments Note\n */\nclass GuitarNote extends Note {\n  /**\n     * Creates a new Note\n     *\n     * @param {number} pitch pitch\n     * @param {number} start start time in seconds\n     * @param {number} velocity velocity\n     * @param {number} channel MIDI channel\n     * @param {number} end end time in seconds\n     * @param {number} string guitar string\n     * @param {number} fret guitar fret\n     */\n  constructor (\n    pitch = 0,\n    start = 0,\n    velocity = 127,\n    channel = 0,\n    end = null,\n    // This is different to the base Note class\n    string = null,\n    fret = null\n  ) {\n    super(pitch, start, velocity, channel, end)\n    this.string = string\n    this.fret = fret\n  }\n\n  /**\n     * Creates a GuitarNote object from an object via destructuring\n     *\n     * @param {object} object object with at least {pitch}\n     *  {\n     *      pitch: number|string    e.g. 12 or C#4\n     *      start: number           start time in seconds\n     *      end: number             end time in seconds\n     *      velocity: number        MIDI velocity\n     *      channel: number         MIDI channel\n     *      string: number          guitar string\n     *      fret: number            guitar fret\n     *  }\n     * @returns {GuitarNote} new note\n     * @throws {Error} when pitch is invalid\n     */\n  static from (object) {\n    let {\n      pitch = 0,\n      start = 0,\n      velocity = 127,\n      channel = 0,\n      end = null,\n      // This is different to the base Note class\n      string = null,\n      fret = null\n    } = object\n    if (typeof pitch === 'string' && Number.isNaN(+pitch)) {\n      const note = getMidiNoteByLabel(pitch)\n      if (note === null || note === undefined) {\n        throw new Error('Invalid pitch for GuitarNote.from()')\n      }\n      pitch = note.pitch\n    }\n    return new GuitarNote(\n      pitch,\n      start,\n      velocity,\n      channel,\n      end,\n      string,\n      fret\n    )\n  }\n\n  /**\n     * Converts a Note to a GuitarNote\n     *\n     * @param {Note} note note\n     * @param {number} string string\n     * @param {number} fret fret\n     * @returns {GuitarNote} guitar note\n     */\n  static fromNote (note, string, fret) {\n    return new GuitarNote(\n      note.pitch,\n      note.start,\n      note.velocity,\n      note.channel,\n      note.end,\n      string,\n      fret\n    )\n  }\n\n  /**\n     * Simplifies the GuitarNote to a Note\n     *\n     * @returns {Note} note\n     */\n  toNote () {\n    return new Note(\n      this.pitch,\n      this.start,\n      this.velocity,\n      this.channel,\n      this.end\n    )\n  }\n\n  /**\n     * Returns a copy of the Note object\n     *\n     * @returns {GuitarNote} new note\n     */\n  clone () {\n    return new GuitarNote(\n      this.pitch,\n      this.start,\n      this.velocity,\n      this.channel,\n      this.end,\n      // This is different to the base Note class\n      this.string,\n      this.fret\n    )\n  }\n\n  /**\n     * Returns true if this note and otherNote have equal attributes.\n     *\n     * @param {GuitarNote} otherNote another GuitarNote\n     * @returns {boolean} true if equal\n     */\n  equals (otherNote) {\n    if (!(otherNote instanceof GuitarNote)) {\n      return false\n    }\n    return (\n      this.pitch === otherNote.pitch &&\n            this.start === otherNote.start &&\n            this.velocity === otherNote.velocity &&\n            this.channel === otherNote.channel &&\n            this.end === otherNote.end &&\n            // This is different to the base Note class\n            this.string === otherNote.string &&\n            this.fret === otherNote.fret\n    )\n  }\n\n  /**\n     * Human-readable string representation of this GuitarNote\n     *\n     * @param {boolean} short if true, attribute names will be shortened\n     * @returns {string} string representation\n     */\n  toString (short = false) {\n    if (short) {\n      return `GuitarNote(n: ${this.name}, p: ${this.pitch}, s: ${this.start}, e: ${this.end}, v: ${this.velocity}, c: ${this.channel}, s: ${this.string}, f: ${this.fret})`\n    }\n    return `GuitarNote(name: ${this.name}, pitch: ${this.pitch}, start: ${this.start}, end: ${this.end}, velocity: ${this.velocity}, channel: ${this.channel}, string: ${this.string}, fret: ${this.fret})`\n  }\n}\n\nexport default GuitarNote\n", "import { getMidiNoteByLabel } from '../fileFormats/Midi.js'\nimport Note from './Note.js'\n\n/**\n * Harmonica note class that reflects MIDI properties but has\n * absolute start and end times in seconds and\n * information on how to play it.\n *\n * @augments Note\n */\nclass HarmonicaNote extends Note {\n  /**\n     * Creates a new Note\n     *\n     * @param {number} pitch pitch\n     * @param {number} start start time in seconds\n     * @param {number} velocity velocity\n     * @param {number} channel MIDI channel\n     * @param {number} end end time in seconds\n     * @param {number} hole harmonica hole\n     * @param {'blow'|'draw'|'bend'|'overblow'} instruction instruction, e.g., blow or draw\n     */\n  constructor (\n    pitch = 0,\n    start = 0,\n    velocity = 127,\n    channel = 0,\n    end = null,\n    // This is different to the base Note class\n    hole = null,\n    instruction = null\n  ) {\n    super(pitch, start, velocity, channel, end)\n    this.hole = hole\n    this.instruction = instruction\n  }\n\n  /**\n     * Creates a HarmonicaNote object from an object via destructuring\n     *\n     * @param {object} object object with at least {pitch}\n     *  {\n     *      pitch: number|string    e.g. 12 or C#4\n     *      start: number           start time in seconds\n     *      end: number             end time in seconds\n     *      velocity: number        MIDI velocity\n     *      channel: number         MIDI channel\n     *      hole: number            harmonica hole\n     *      instruction: string     instruction, e.g., blow or draw\n     *  }\n     * @returns {HarmonicaNote} new note\n     * @throws {Error} when pitch is invalid\n     */\n  static from (object) {\n    let {\n      pitch = 0,\n      start = 0,\n      velocity = 127,\n      channel = 0,\n      end = null,\n      // This is different to the base Note class\n      hole = null,\n      instruction = null\n    } = object\n    if (typeof pitch === 'string' && Number.isNaN(+pitch)) {\n      const note = getMidiNoteByLabel(pitch)\n      if (note === null || note === undefined) {\n        throw new Error('Invalid pitch for HarmonicaNote.from()')\n      }\n      pitch = note.pitch\n    }\n    return new HarmonicaNote(\n      pitch,\n      start,\n      velocity,\n      channel,\n      end,\n      hole,\n      instruction\n    )\n  }\n\n  /**\n     * Converts a Note to a Harmonica\n     *\n     * @param {Note} note note\n     * @param {number} hole harmonica hole\n     * @param {'blow'|'draw'|'bend'|'overblow'} instruction instruction, e.g., blow or draw\n     * @returns {HarmonicaNote} harmonica note\n     */\n  static fromNote (note, hole, instruction) {\n    return new HarmonicaNote(\n      note.pitch,\n      note.start,\n      note.velocity,\n      note.channel,\n      note.end,\n      hole,\n      instruction\n    )\n  }\n\n  /**\n     * Simplifies the HarmonicaNote to a Note\n     *\n     * @returns {Note} note\n     */\n  toNote () {\n    return new Note(\n      this.pitch,\n      this.start,\n      this.velocity,\n      this.channel,\n      this.end\n    )\n  }\n\n  /**\n     * Returns a copy of the Note object\n     *\n     * @returns {GuitarNote} new note\n     */\n  clone () {\n    return new HarmonicaNote(\n      this.pitch,\n      this.start,\n      this.velocity,\n      this.channel,\n      this.end,\n      // This is different to the base Note class\n      this.hole,\n      this.instruction\n    )\n  }\n\n  /**\n     * Returns true if this note and otherNote have equal attributes.\n     *\n     * @param {GuitarNote} otherNote another GuitarNote\n     * @returns {boolean} true if equal\n     */\n  equals (otherNote) {\n    if (!(otherNote instanceof HarmonicaNote)) {\n      return false\n    }\n    return (\n      this.pitch === otherNote.pitch &&\n            this.start === otherNote.start &&\n            this.velocity === otherNote.velocity &&\n            this.channel === otherNote.channel &&\n            this.end === otherNote.end &&\n            // This is different to the base Note class\n            this.hole === otherNote.hole &&\n            this.instruction === otherNote.instruction\n    )\n  }\n\n  /**\n     * Human-readable string representation of this HarmonicaNote\n     *\n     * @param {boolean} short if true, attribute names will be shortened\n     * @returns {string} string representation\n     */\n  toString (short = false) {\n    if (short) {\n      return `HarmonicaNote(n: ${this.name}, p: ${this.pitch}, s: ${this.start}, e: ${this.end}, v: ${this.velocity}, c: ${this.channel}, h: ${this.hole}, i: ${this.instruction})`\n    }\n    return `HarmonicaNote(name: ${this.name}, pitch: ${this.pitch}, start: ${this.start}, end: ${this.end}, velocity: ${this.velocity}, channel: ${this.channel}, hole: ${this.hole}, instruction: ${this.instruction})`\n  }\n}\n\nexport default HarmonicaNote\n", "import { min } from 'd3'\r\nimport Note from './Note.js'\r\nimport GuitarNote from './GuitarNote.js'\r\nimport { clipValue } from '../utils/MathUtils.js'\r\n\r\n/**\r\n * This class represents an array of note objects.\r\n * It can be used to simplify operations on a track.\r\n *\r\n * @example\r\n *   const notes = [\r\n *       // Some Note objects\r\n *   ];\r\n *   const noteArr = new NoteArray(notes)\r\n *       // Add more notes (all notes will be sorted by time by default after this)\r\n *       .addNotes([])\r\n *       // Scale all note's sart and end time to make a track slower or faster\r\n *       .scaleTime(0.5)\r\n *       // Do more ...\r\n *       // This class also mirrors many functions from the Array class\r\n *       .sort(sortFunction).filter(filterFunction).map(mapFunction).slice(0, 20)\r\n *\r\n *   // Get Note objects back in a simple Array\r\n *   const transformedNotes = noteArr.getNotes();\r\n *   // [Note, Note, Note, ...]\r\n *\r\n *   // Or use an iterator\r\n *   for (const note of noteArr) {\r\n *       console.log(note);\r\n *   }\r\n */\r\nclass NoteArray {\r\n  /**\r\n       * Creates a new NoteArray,\r\n       * will make a copy of the passed array and cast all notes\r\n       *\r\n       * @param {Note[]} [notes=[]] notes\r\n       * @param {boolean} [reUseNotes=false] if true, will directly use the passed notes.\r\n       *      This can be dangerous if you do not want them to change.\r\n       */\r\n  constructor (notes = [], reUseNotes = false) {\r\n    if (reUseNotes) {\r\n      this._notes = notes\r\n    } else {\r\n      // Parse notes\r\n      this._notes = notes.map(d => {\r\n        if (d.string !== undefined && d.fret !== undefined) {\r\n          return GuitarNote.from(d)\r\n        }\r\n        return Note.from(d)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n       * Returns a simple array with all Note objects.\r\n       *\r\n       * @returns {Note[]} array with Note objects\r\n       * @example <caption>Getting notes as simple Note[]</caption>\r\n       *      const na = new NoteArray(someNotes);\r\n       *      const notes = na.getNotes();\r\n       * @example <caption>Using an iterator instead</caption>\r\n       *      const na = new NoteArray(someNotes);\r\n       *      for (const note of na) {\r\n       *          console.log(note);\r\n       *      }\r\n       *      // Or copy all Notes to an array with\r\n       *      const array = [...na];\r\n       */\r\n  getNotes () {\r\n    return this._notes\r\n  }\r\n\r\n  /**\r\n       * Overwrite the NoteArray's notes with another Array of Notes\r\n       *\r\n       * @param {Note[]} notes notes\r\n       * @returns {NoteArray} itself\r\n       */\r\n  setNotes (notes) {\r\n    this._notes = notes\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Makes this class iterable\r\n       *\r\n       * @yields {Note} note\r\n       * @example <caption>Using an iterator for NoteArray</caption>\r\n       *      const na = new NoteArray(someNotes);\r\n       *      for (const note of na) {\r\n       *          console.log(note);\r\n       *      }\r\n       */\r\n  * [Symbol.iterator] () {\r\n    for (const note of this._notes) {\r\n      yield note\r\n    }\r\n  }\r\n\r\n  /**\r\n       * Appends notes to this NoteArray\r\n       *\r\n       * @param {Note[]} notes notes\r\n       * @param {boolean} sort iff ture, sorts notes by start timeafter adding\r\n       *      the new ones (default:true)\r\n       * @returns {NoteArray} itself\r\n       */\r\n  addNotes (notes, sort = true) {\r\n    this._notes = [...this._notes, ...notes]\r\n    if (sort) {\r\n      this.sortByTime()\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Adds the notes from another NoteArray to this NoteArray\r\n       * IMPORTANT: this does not change the notes or sort them!\r\n       * Take a look at NoteArray.append() if you want to extend\r\n       * a track at its end.\r\n       *\r\n       * @param {NoteArray} noteArray another NoteArray\r\n       * @returns {NoteArray} itself\r\n       */\r\n  concat (noteArray) {\r\n    this._notes = [...this._notes, ...noteArray._notes]\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Appends notes to the end of this NoteArray, after shifting them by its\r\n       * duration. Set gap to something != 0 to create a gap or overlap.\r\n       *\r\n       * @param {NoteArray} noteArray another NoteArray\r\n       * @param {number} gap in seconds between the two parts\r\n       * @returns {NoteArray} itself\r\n       */\r\n  append (noteArray, gap = 0) {\r\n    const duration = this.getDuration()\r\n    const clone = noteArray.clone()\r\n    clone.shiftTime(duration + gap)\r\n    this._notes = [...this._notes, ...clone._notes]\r\n    this.sortByTime()\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Repeats the notes of this array by concatenating a time-shifted copy\r\n       *\r\n       * @param {number} times number of times to repeat it\r\n       * @returns {NoteArray} a new NoteArray with the repeated note sequence\r\n       */\r\n  repeat (times) {\r\n    const result = this.clone()\r\n    if (times < 1) {\r\n      return new NoteArray()\r\n    }\r\n    if (times === 1) {\r\n      return result\r\n    }\r\n    const copy = this.clone()\r\n    const duration = this.getDuration()\r\n    for (let index = 1; index < times; index++) {\r\n      // Shift notes in time\r\n      copy.shiftTime(duration)\r\n      // Result is a NoteArray so use .concat\r\n      result.concat(copy)\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n       * Returns the number of Note objects in this NoteArray\r\n       *\r\n       * @returns {number} note count\r\n       */\r\n  length () {\r\n    return this._notes.length\r\n  }\r\n\r\n  /**\r\n       * Returns the start time of the earliest note in this NoteArray\r\n       *\r\n       * @returns {number} start time\r\n       */\r\n  getStartTime () {\r\n    return min(this._notes, d => d.start)\r\n  }\r\n\r\n  /**\r\n       * Returns the duration of this note array in seconds from 0 to the end of\r\n       * the latest note.\r\n       *\r\n       * @returns {number} duration\r\n       */\r\n  getDuration () {\r\n    let duration = 0\r\n    for (const note of this._notes) {\r\n      const noteEnd = note.end === null ? note.start : note.end\r\n      if (noteEnd > duration) {\r\n        duration = noteEnd\r\n      }\r\n    }\r\n    return duration\r\n  }\r\n\r\n  /**\r\n       * Scales the time of each note by factor\r\n       *\r\n       * @param {number} factor factor\r\n       * @returns {NoteArray} itself\r\n       */\r\n  scaleTime (factor) {\r\n    this._notes = this._notes.map(n => n.scaleTime(factor))\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Adds the speicifed number of seconds to each note\r\n       *\r\n       * @param {number} addedSeconds time to add in seconds\r\n       * @returns {NoteArray} itself\r\n       */\r\n  shiftTime (addedSeconds) {\r\n    this._notes = this._notes.map(n => n.shiftTime(addedSeconds))\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Moves all notes s.t. the first starts at <start>\r\n       * Will sort the notes by start time.\r\n       *\r\n       * @param {number} startTime the new start time for the earliest note\r\n       * @returns {NoteArray} itself\r\n       */\r\n  shiftToStartAt (startTime) {\r\n    this.sortByTime()\r\n    const firstNoteStart = this._notes[0].start\r\n    const offset = firstNoteStart - startTime\r\n    this._notes.forEach(n => {\r\n      n.start -= offset\r\n      if (n.end !== null) {\r\n        n.end -= offset\r\n      }\r\n    })\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Similar to Array.forEach\r\n       *\r\n       * @param {Function} func a function\r\n       * @returns {NoteArray} this\r\n       */\r\n  forEach (func) {\r\n    this._notes.forEach(\r\n      (element, index, array) => func(element, index, array)\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Sorts the notes\r\n       *\r\n       * @param {Function} sortFunction sort function, e.g. (a, b)=>a.start-b.start\r\n       * @returns {NoteArray} itself\r\n       */\r\n  sort (sortFunction) {\r\n    this._notes = this._notes.sort(sortFunction)\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Sorts the notes by start time\r\n       *\r\n       * @returns {NoteArray} itself\r\n       */\r\n  sortByTime () {\r\n    this._notes = this._notes.sort((a, b) => a.start - b.start)\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Maps the notes using some mapping function\r\n       *\r\n       * @param {Function} mapFunction mapping function with same signature as\r\n       *      Array.map()\r\n       * @returns {NoteArray} itself\r\n       */\r\n  map (mapFunction) {\r\n    this._notes = this._notes.map(\r\n      (element, index, array) => mapFunction(element, index, array)\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Slices the notes by index, like Array.slice()\r\n       *\r\n       * @param {number} start start index\r\n       * @param {number} end end index\r\n       * @returns {NoteArray} itself\r\n       */\r\n  slice (start, end) {\r\n    this._notes = this._notes.slice(start, end)\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Slices the notes by time.\r\n       * The modes 'end' and 'contained' will remove all notes with end === null!\r\n       * Notes will not be changed, e.g. start time will remain the same.\r\n       *\r\n       * @param {number} startTime start of the filter range in seconds\r\n       * @param {number} endTime end of the filter range in seconds (exclusive)\r\n       * @param {string} [mode=contained] controls which note time to consider,\r\n       *      one of:\r\n       *      - start: note.start must be inside range\r\n       *      - end: note.end must be inside range\r\n       *      - contained: BOTH note.start and note.end must be inside range\r\n       *      - touched: EITHER start or end (or both) must be inside range)\r\n       *      - touched-included: like touched, but also includes notes where\r\n       *          neither start nor end inside range, but range is completely\r\n       *          inside the note\r\n       *      (contained is default)\r\n       * @returns {NoteArray} itself\r\n       * @throws {'Invalid slicing mode'} When slicing mode is not one of the\r\n       *      above values\r\n       */\r\n  sliceTime (startTime, endTime, mode = 'contained') {\r\n    const start = startTime\r\n    const end = endTime\r\n    let filterFunc\r\n    if (mode === 'start') {\r\n      filterFunc = n => n.start >= start && n.start < end\r\n    } else if (mode === 'end') {\r\n      filterFunc = n => n.end !== null && n.end >= start && n.end < end\r\n    } else if (mode === 'contained') {\r\n      filterFunc = n => n.end !== null && n.start >= start && n.end < end\r\n    } else if (mode === 'touched') {\r\n      filterFunc = n =>\r\n        (n.start >= start && n.start <= end) ||\r\n                (n.end !== null && n.end >= start && n.end <= end)\r\n    } else if (mode === 'touched-included') {\r\n      filterFunc = n =>\r\n      // like touched\r\n        (n.start >= start && n.start <= end) ||\r\n                (n.end !== null && n.end >= start && n.end <= end) ||\r\n                // filter range inside note range\r\n                (n.end !== null && n.start <= start && n.end >= end)\r\n    } else {\r\n      throw new Error('Invalid slicing mode')\r\n    }\r\n    this._notes = this._notes.filter(filterFunc)\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Slices this NoteArray into slices by the given times. Will not return\r\n       * NoteArrays but simple Note[][], where each item contains all notes of one\r\n       * time slice. Do not include 0, it will be assumed as first time to slice.\r\n       * To make sure notes are not contained twice in different slices use the\r\n       * mode 'start'.\r\n       *\r\n       * @param {number[]} times points of time at which to slice (in seconds)\r\n       * @param {string} mode see NoteArray.sliceTime()\r\n       * @returns {Note[][]} time slices\r\n       * @param {boolean} [reUseNotes=false] if true, will not clone notes.\r\n       *      This can be dangerous if you do not want them to change.\r\n       * @example\r\n       *      // Slice into 1 second slices\r\n       *      const slices = noteArray.sliceAtTimes([1, 2, 3], 'start)\r\n       */\r\n  sliceAtTimes (times, mode, reUseNotes = false) {\r\n    if (times.length === 0) {\r\n      return [this._notes]\r\n    }\r\n    // Make sure notes at the end are also in a slice\r\n    const duration = this.getDuration()\r\n    if (Math.max(...times) <= duration) {\r\n      times.push(duration + 1)\r\n    }\r\n    const slices = []\r\n    let lastTime = 0\r\n    for (const time of times) {\r\n      slices.push(\r\n        // this.clone()\r\n        new NoteArray(this._notes, reUseNotes)\r\n          .sliceTime(lastTime, time, mode)\r\n          .getNotes()\r\n      )\r\n      lastTime = time\r\n    }\r\n    return slices\r\n  }\r\n\r\n  /**\r\n       * Segments the NoteArray into smaller ones at times where no note occurs\r\n       * for a specified amount of time.\r\n       * This method is useful for segmenting a recording session into separate\r\n       * songs, riffs, licks, ...\r\n       *\r\n       * @param {number} gapDuration duration of seconds for a gap to be used as\r\n       *      segmenting time\r\n       * @param {'start-start'|'end-start'} mode gaps can either be considered as\r\n       *      the maximum time between two note's starts or the end of the first\r\n       *      and the start of the second note\r\n       * @returns {Note[][]} segments\r\n       */\r\n  segmentAtGaps (gapDuration, mode) {\r\n    if (this._notes.length < 2) {\r\n      return [this._notes]\r\n    }\r\n    if (mode === 'start-start') {\r\n      const notes = this.clone().sortByTime().getNotes()\r\n      const cuts = []\r\n      for (let index = 1; index < notes.length; index++) {\r\n        if (notes[index].start - notes[index - 1].start >= gapDuration) {\r\n          cuts.push(notes[index].start)\r\n        }\r\n      }\r\n      return this.sliceAtTimes(cuts, 'start')\r\n    } else {\r\n      // Get blocks of occupied time in the NoteArray's duration\r\n      const occupiedTimes = []\r\n      // TODO: can probably be made faster in the future\r\n      for (const note of this._notes) {\r\n        const { start, end } = note\r\n        // Check for collision\r\n        const collisions = []\r\n        for (let index = 0; index < occupiedTimes.length; index++) {\r\n          const [s, e] = occupiedTimes[index]\r\n          if (\r\n            (s >= start && s <= end) ||\r\n                        (e >= start && e <= end)\r\n          ) {\r\n            occupiedTimes.splice(index, 1)\r\n            collisions.push([s, e])\r\n          }\r\n        }\r\n        if (collisions.length === 0) {\r\n          // Just add note time span\r\n          occupiedTimes.push([start, end])\r\n        } else {\r\n          // Merge\r\n          const newStart = Math.min(start, ...collisions.map(d => d[0]))\r\n          const newEnd = Math.max(end, ...collisions.map(d => d[1]))\r\n          occupiedTimes.push([newStart, newEnd])\r\n        }\r\n      }\r\n      // Gaps are just between two following blocks of occupied time\r\n      if (occupiedTimes.length === 1) {\r\n        // One block, so no gaps\r\n        return [this._notes]\r\n      }\r\n      const cuts = []\r\n      for (let index = 1; index < occupiedTimes.length; index++) {\r\n        const currentStart = occupiedTimes[index][0]\r\n        const lastEnd = occupiedTimes[index - 1][1]\r\n        if (currentStart - lastEnd >= gapDuration) {\r\n          cuts.push(currentStart)\r\n        }\r\n      }\r\n      return this.sliceAtTimes(cuts, 'start')\r\n    }\r\n  }\r\n\r\n  /**\r\n       * Segments the NoteArray into Arrays of Notes at given indices\r\n       *\r\n       * @param {number[]} indices indices\r\n       * @returns {Note[][]} segments\r\n       * @example <caption>Get notes in partions of 4</caption>\r\n       *      const noteGroups = myNoteArray.segmentAtIndices([4, 8, 12, 16, 20]);\r\n       *      // noteGroups = [\r\n       *      //     Array(4),\r\n       *      //     Array(4),\r\n       *      //     Array(4),\r\n       *      // ]\r\n       */\r\n  segmentAtIndices (indices) {\r\n    const segments = []\r\n    let lastIndex = 0\r\n    for (const index of indices) {\r\n      segments.push(this._notes.slice(lastIndex, index))\r\n      lastIndex = index\r\n    }\r\n    return segments\r\n  }\r\n\r\n  /**\r\n       * Filters the NoteArray like you would filter via Array.filter().\r\n       *\r\n       * @param {Function} filterFunction filter function, same signature as\r\n       *      Array.filter()\r\n       * @returns {NoteArray} itself\r\n       * @example\r\n       *      // Only keep notes longer than 1 second\r\n       *      const filtered = noteArray.filter(note=>note.getDuration()>1);\r\n       */\r\n  filter (filterFunction) {\r\n    this._notes = this._notes.filter((element, index, array) => filterFunction(element, index, array))\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Filters by pitch, keeping only pitches specified in <pitches>\r\n       *\r\n       * @param {number[]|Set<number>} pitches array or Set of pitches to keep\r\n       * @returns {NoteArray} itself\r\n       */\r\n  filterPitches (pitches) {\r\n    if (!(pitches instanceof Set)) {\r\n      pitches = new Set(pitches)\r\n    }\r\n    this._notes = this._notes.filter(n => pitches.has(n.pitch))\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Transposes each note by <steps> semitones, will clip pitches to [0, 127]\r\n       *\r\n       * @param {number} steps number of semitones to transpose, can be negative\r\n       * @returns {NoteArray} itself\r\n       */\r\n  transpose (steps) {\r\n    this._notes = this._notes.map(n => Note.from({\r\n      ...n,\r\n      pitch: clipValue(n.pitch + steps, 0, 127)\r\n    }))\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Will set the octave of all notes to -1.\r\n       * This might cause two notes to exist at the same time and pitch!\r\n       *\r\n       * @returns {NoteArray} itself\r\n       */\r\n  removeOctaves () {\r\n    this._notes = this._notes.map(note => Note.from({\r\n      ...note,\r\n      pitch: note.pitch % 12\r\n    }))\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Reverses the note array, such that it can be played backwards.\r\n       *\r\n       * @returns {NoteArray} itself\r\n       */\r\n  reverse () {\r\n    // Update note start and end times\r\n    const duration = this.getDuration()\r\n    this._notes = this._notes.map(n => {\r\n      const newNote = n.clone()\r\n      newNote.start = duration - n.end\r\n      newNote.end = newNote.start + n.getDuration()\r\n      return newNote\r\n    })\r\n    // Sort by time\r\n    this.sortByTime()\r\n    return this\r\n  }\r\n\r\n  /**\r\n       * Returns true if this NoteArray and otherNoteArray have equal attributes.\r\n       *\r\n       * @param {NoteArray} otherNoteArray another NoteArray\r\n       * @returns {boolean} true if equal\r\n       */\r\n  equals (otherNoteArray) {\r\n    if (!(otherNoteArray instanceof NoteArray)) {\r\n      return false\r\n    }\r\n    const notes = otherNoteArray.getNotes()\r\n    if (this._notes.length !== notes.length) {\r\n      return false\r\n    }\r\n    for (const [index, note] of notes.entries()) {\r\n      if (!this._notes[index].equals(note)) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n       * Deep clone, all contained notes are cloned as well.\r\n       *\r\n       * @returns {NoteArray} clone\r\n       */\r\n  clone () {\r\n    return new NoteArray(this._notes)\r\n  }\r\n}\r\n\r\nexport default NoteArray\r\n", "import * as d3 from 'd3'\n\n/**\n * @module utils/MathUtils\n */\n\n/**\n * Generates a random float in [min, max)\n *\n * @param {number} min minimum\n * @param {number} max maximum\n * @returns {number} random float\n */\nexport function randFloat (min = 0, max = 1) {\n  return Math.random() * (max - min) + min\n}\n\n/**\n * Returns a random element from the given array.\n *\n * @param {Array} array an array\n * @returns {any} random element from the array\n */\nexport function choose (array) {\n  const index = d3.randomInt(0, array.length)()\n  return array[index]\n}\n\n/**\n * Shortcut for Math.max(minValue, Math.min(maxValue, value))\n *\n * @param {number} value value\n * @param {number} minValue lower limit\n * @param {number} maxValue upper limit\n * @returns {number} clipped number\n */\nexport function clipValue (value, minValue, maxValue) {\n  return Math.max(minValue, Math.min(maxValue, value))\n}\n\n/**\n * Rounds a number to a given number of decimals\n *\n * @param {number} number a number\n * @param {number} n number of digits\n * @returns {number} rounded number\n */\nexport function roundToNDecimals (number, n) {\n  return +number.toFixed(n)\n}\n\n/**\n * Swaps two numbers if the first is larger than the second\n *\n * @param {number} x a number\n * @param {number} y a number\n * @returns {number[]} array with the smaller number first\n */\nexport function swapSoSmallerFirst (x, y) {\n  if (x <= y) {\n    return [x, y]\n  }\n  return [y, x]\n}\n\n/**\n * Counts the number of 1s in a binary number, e.g 100101 has 3 1s\n *\n * @see https://prismoskills.appspot.com/lessons/Bitwise_Operators/Count_ones_in_an_integer.jsp\n * @param {number} integer an integer number\n * @returns {number} number of 1s\n */\nexport function countOnesOfBinary (integer) {\n  let count = 0\n  while (integer !== 0) {\n    // eslint-disable-next-line no-bitwise\n    integer = integer & (integer - 1)\n    count++\n  }\n  return count\n}\n\n/**\n * Local maxima are found by looking at entries that are higher than their left\n * and right neighbor, or higher than their only neighbor if they are at the\n * boundary.\n * IMPORTANT: does not find plateaus\n *\n * @param {number[]} array array\n * @returns {number[]} array with indices of maxima\n */\nexport function findLocalMaxima (array) {\n  if (array.length <= 1) { return [] }\n  if (array.length === 2) {\n    if (array[0] > array[1]) { return [0] }\n    if (array[1] > array[0]) { return [1] }\n    return []\n  }\n  // General case with 3 or more\n  const maximaIndices = []\n  if (array[0] > array[1]) {\n    maximaIndices.push(0)\n  }\n  let last = array[0]\n  let current = array[1]\n  for (let index = 1; index < array.length - 1; index++) {\n    const next = array[index + 1]\n    if (current > last && current > next) {\n      maximaIndices.push(index)\n    }\n    last = current\n    current = next\n  }\n  const lastIndex = array.length - 1\n  if (array[lastIndex] > array[lastIndex - 1]) {\n    maximaIndices.push(array.length - 1)\n  }\n  return maximaIndices\n}\n", "/**\r\n * @module utils/ArrayUtils\r\n */\r\n\r\nimport * as d3 from 'd3'\r\n\r\n/**\r\n * Shallow compares two arrays\r\n *\r\n * @param {Array} a an array\r\n * @param {Array} b another array\r\n * @returns {boolean} true iff equal\r\n */\r\nexport function arrayShallowEquals (a, b) {\r\n  if (a.length !== b.length) {\r\n    return false\r\n  }\r\n  for (const [index, element] of a.entries()) {\r\n    if (element !== b[index]) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Checks if two arrays contain the same elements,\r\n * ignoring their ordering in each array.\r\n *\r\n * @param {Array} a an array\r\n * @param {Array} b another array\r\n * @param {boolean} checkLength also checks if arrays have the same length\r\n * @returns {boolean} true iff arrays contain same elements\r\n */\r\nexport function arrayHasSameElements (a, b, checkLength = true) {\r\n  if (checkLength && a.length !== b.length) {\r\n    return false\r\n  }\r\n  const setA = new Set(a)\r\n  const setB = new Set(b)\r\n  for (const element of setA) {\r\n    if (!setB.has(element)) {\r\n      return false\r\n    }\r\n  }\r\n  for (const element of setB) {\r\n    if (!setA.has(element)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Jaccard index calulates the similarity of the sets as the size of the set\r\n * interaction divided by the size of the set union:\r\n * jackard_index = |intersection| / |union|\r\n *\r\n * @see https://en.wikipedia.org/wiki/Jaccard_index\r\n * @param {number[]} set1 set 1\r\n * @param {number[]} set2 set 2\r\n * @returns {number} similarity in [0, 1]\r\n */\r\nexport function jaccardIndex (set1, set2) {\r\n  if (set1.length === 0 && set2.length === 0) {\r\n    return 1\r\n  }\r\n  return d3.intersection(set1, set2).size / d3.union(set1, set2).size\r\n}\r\n\r\n/**\r\n * Kendall Tau distance\r\n *\r\n * @see https://en.wikipedia.org/wiki/Kendall_tau_distance\r\n * @todo naive implementation, can be sped up with hints on Wikipedia,\r\n *    see also https://stackoverflow.com/questions/6523712/calculating-the-number-of-inversions-in-a-permutation/6523781#6523781\r\n * @param {number[]} ranking1 a ranking, i.e. for each entry the rank\r\n * @param {number[]} ranking2 a ranking, i.e. for each entry the rank\r\n * @param {boolean} [normalize=true] normalize to [0, 1]?\r\n * @returns {number} Kendall tau distance\r\n * @throws {'Ranking length must be equal'} if rankings don't have euqal length\r\n */\r\nexport function kendallTau (ranking1, ranking2, normalize = true) {\r\n  if (ranking1.length !== ranking2.length) {\r\n    throw new Error('Ranking length must be equal')\r\n  }\r\n  if (ranking1.length === 0) {\r\n    return 0\r\n  }\r\n  let inversions = 0\r\n  const n = ranking1.length\r\n  for (let a = 0; a < n; a++) {\r\n    for (let b = a + 1; b < n; b++) {\r\n      const r1smaller = ranking1[a] < ranking1[b]\r\n      const r2smaller = ranking2[a] < ranking2[b]\r\n      if (r1smaller !== r2smaller) {\r\n        inversions++\r\n      }\r\n    }\r\n  }\r\n  if (normalize) {\r\n    inversions /= n * (n - 1) / 2\r\n  }\r\n  return inversions\r\n}\r\n\r\n/**\r\n * Removes duplicates from an Array by converting to a Set and back\r\n *\r\n * @param {Array} array an array\r\n * @returns {Array} array without duplicates\r\n */\r\nexport function removeDuplicates (array) {\r\n  return [...new Set(array)]\r\n}\r\n\r\n/**\r\n * Checks whether the array a contains the array b, i.e. whether the first\r\n * b.length elements are the same.\r\n *\r\n * @todo rename to arrayStartsWithArray\r\n * @param {Array} a an array\r\n * @param {Array} b a shorter array\r\n * @returns {boolean} true iff a contains b\r\n */\r\nexport function arrayContainsArray (a, b) {\r\n  if (a.length < b.length) {\r\n    return false\r\n  }\r\n  for (const [index, element] of b.entries()) {\r\n    if (a[index] !== element) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Compares a slice of a with a slice of b.\r\n * Slices start at startA and startB and have the same length\r\n *\r\n * @param {Array} a an Array\r\n * @param {Array} b an Array\r\n * @param {number} length slice length\r\n * @param {number} [startA=0] start index for the slice in a to compare\r\n * @param {number} [startB=0] start index for the slice in b to compare\r\n * @returns {boolean} true if slices are equal\r\n * @throws {'undefined length'} length is undefined\r\n * @throws {'start < 0'} when start is negative\r\n */\r\nexport function arraySlicesEqual (a, b, length, startA = 0, startB = 0) {\r\n  if (length === null || length === undefined) {\r\n    throw new Error('undefined length')\r\n  }\r\n  if (startA < 0 || startB < 0) {\r\n    throw new Error('start < 0')\r\n  }\r\n  if (a.length < startA + length || b.length < startB + length) {\r\n    // Array(s) too small for slicing with this start and length\r\n    return false\r\n  }\r\n  for (let offset = 0; offset < length; offset++) {\r\n    if (a[startA + offset] !== b[startB + offset]) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * Finds an array in another array, only shallow comparison\r\n *\r\n * @param {Array} haystack array to search in\r\n * @param {Array} needle array to search for\r\n * @param {number} [startIndex=0] index from which to start searching\r\n * @returns {number} index or -1 when not found\r\n */\r\nexport function arrayIndexOf (haystack, needle, startIndex = 0) {\r\n  if (needle.length === 0) { return -1 }\r\n  for (\r\n    let index = startIndex;\r\n    index < haystack.length - needle.length + 1;\r\n    ++index\r\n  ) {\r\n    if (haystack[index] === needle[0]) {\r\n      let found = true\r\n      for (let offset = 1; offset < needle.length; ++offset) {\r\n        if (haystack[index + offset] !== needle[offset]) {\r\n          found = false\r\n          break\r\n        }\r\n      }\r\n      if (found) {\r\n        return index\r\n      }\r\n    }\r\n  }\r\n  return -1\r\n}\r\n\r\n/**\r\n * Returns the maximum numerical value from an array of arrays with arbitrary\r\n * depth and structure.\r\n *\r\n * @param {Array} array array\r\n * @returns {number} maximum value\r\n */\r\nexport function getArrayMax (array) {\r\n  return d3.max(array.flat(Number.POSITIVE_INFINITY))\r\n}\r\n\r\n/**\r\n * Normalizes by dividing all entries by the maximum.\r\n * Only for positive values!\r\n *\r\n * @param {Array} array nD array with arbitrary depth and structure\r\n * @returns {Array} normalized array\r\n */\r\nexport function normalizeNdArray (array) {\r\n  const max = d3.max(array.flat(Number.POSITIVE_INFINITY))\r\n  const normalize = (array_, maxValue) =>\r\n    array_.map((d) => {\r\n      return d.length !== undefined ? normalize(d, maxValue) : d / maxValue\r\n    })\r\n  return normalize(array, max)\r\n}\r\n\r\n/**\r\n * Assumes same shape of matrices.\r\n *\r\n * @param {number[][]} matrixA a matrix\r\n * @param {number[][]} matrixB a matrix\r\n * @returns {number} Euclidean distance of the two matrices\r\n */\r\nexport function euclideanDistance (matrixA, matrixB) {\r\n  const valuesA = matrixA.flat()\r\n  const valuesB = matrixB.flat()\r\n  const diffs = valuesA.map((d, i) => d - valuesB[i])\r\n  return Math.hypot(...diffs)\r\n}\r\n\r\n/**\r\n * Stringifies a 2D array / matrix for logging onto the console.\r\n *\r\n * @param {any[][]} matrix the matrix\r\n * @param {string} colSeparator column separator\r\n * @param {string} rowSeparator row separator\r\n * @param {Function} formatter formatting for each element\r\n * @returns {string} stringified matrix\r\n */\r\nexport function formatMatrix (matrix, colSeparator = ', ', rowSeparator = '\\n', formatter) {\r\n  if (!matrix || matrix.length === 0) { return '' }\r\n  if (formatter) {\r\n    matrix = matrix.map(row => row.map(value => formatter(value)))\r\n  }\r\n  return matrix.map(row => row.join(colSeparator)).join(rowSeparator)\r\n}\r\n\r\n/**\r\n * Returns the value in array that is closest to value.\r\n * Array MUST be sorted ascending.\r\n *\r\n * @param {Array} array array\r\n * @param {*} value value\r\n * @param {Function} accessor accessor\r\n * @returns {*} value in array closest to value\r\n */\r\nexport function binarySearch (array, value, accessor = d => d) {\r\n  // Handle short arrays\r\n  if (array.length <= 3) {\r\n    let closest = null\r\n    let diff = Number.POSITIVE_INFINITY\r\n    for (const element of array) {\r\n      const value_ = accessor(element)\r\n      const diff2 = Math.abs(value - value_)\r\n      if (diff2 < diff) {\r\n        closest = element\r\n        diff = diff2\r\n      }\r\n    }\r\n    return closest\r\n  }\r\n  // Split longer array in two for binary search\r\n  const pivotPosition = Math.floor(array.length / 2)\r\n  const pivotElement = array[pivotPosition]\r\n  const pivotValue = accessor(pivotElement)\r\n  if (value === pivotValue) {\r\n    return pivotElement\r\n  }\r\n  if (value < pivotValue) {\r\n    return binarySearch(array.slice(0, pivotPosition + 1), value, accessor)\r\n  }\r\n  if (value > pivotValue) {\r\n    return binarySearch(array.slice(pivotPosition - 1), value, accessor)\r\n  }\r\n}\r\n\r\n/**\r\n * Finds streaks of values in an array.\r\n *\r\n * @param {Array} values array\r\n * @param {Function} accessor value to compare\r\n * @param {Function} equality comparator for equality of two values\r\n * @returns {object[]} {startIndex, endIndex, length}[]\r\n * @example\r\n *   const arr = [1, 1, 2, 3, 3, 3];\r\n *   const streaks = findStreaks(arr);\r\n */\r\nexport function findStreaks (\r\n  values,\r\n  accessor = (d) => d,\r\n  equality = (a, b) => a === b\r\n) {\r\n  let startIndex = 0\r\n  const result = []\r\n  let startValue = accessor(values[0])\r\n  for (const [index, value] of values.entries()) {\r\n    const v = accessor(value)\r\n    if (!equality(startValue, v)) {\r\n      result.push({\r\n        startIndex,\r\n        endIndex: index - 1,\r\n        length: index - startIndex\r\n      })\r\n      startIndex = index\r\n      startValue = v\r\n    }\r\n  }\r\n  // Finish last streak\r\n  if (values.length > 0) {\r\n    result.push({\r\n      startIndex,\r\n      endIndex: values.length - 1,\r\n      length: values.length - startIndex\r\n    })\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * For each element in a sequence, finds the lowest index where an equal element\r\n * occurs.\r\n *\r\n * @param {Array} sequence an Array\r\n * @param {Function} equals euqality function\r\n * @returns {number[]} result\r\n */\r\nexport function findRepeatedIndices (sequence, equals = (a, b) => a === b) {\r\n  return sequence.map((element) => {\r\n    for (const [index2, element2] of sequence.entries()) {\r\n      if (equals(element, element2)) {\r\n        return index2\r\n      }\r\n    }\r\n    return null\r\n  })\r\n}\r\n", "import NoteArray from './NoteArray.js'\r\nimport { arrayShallowEquals } from '../utils/ArrayUtils.js'\r\n\r\n/**\r\n * Class for storing recorded notes alongside meta information.\r\n */\r\nclass Recording extends NoteArray {\r\n  /**\r\n     * Creates a new Recording\r\n     *\r\n     * @param {string} name name if the song\r\n     * @param {Date} date date of the recording\r\n     * @param {Note[]} notes array of Note objects\r\n     * @param {number} [speed=1] relative speed compared to ground truth,\r\n     *      e.g. 0.5 for half as fast\r\n     * @param {number} [selectedTrack=0] track number of the ground truth to which\r\n     *      this recording belongs\r\n     * @param {number[]|null} [timeSelection=null] time selection of the ground\r\n     *      truth to which this recording belongs, or null if full duration\r\n     * @param {string} [comment=''] a free-text comment for the user to annotate\r\n     *      the recording\r\n     */\r\n  constructor (name, date, notes, speed = 1, selectedTrack = 0, timeSelection = null, comment = '') {\r\n    super(notes)\r\n    this.name = name\r\n    this.date = date\r\n    // Save formatted date for faster access\r\n    this.dateString = date.toISOString()\r\n      .slice(0, 19)\r\n      .replace('T', ' ')\r\n    this.speed = +speed\r\n    this.selectedTrack = +selectedTrack\r\n    this.timeSelection = timeSelection\r\n    this.comment = comment\r\n    this.sortByTime()\r\n  }\r\n\r\n  /**\r\n     * Returns a copy of the Note object\r\n     *\r\n     * @returns {Recording} new recording\r\n     */\r\n  clone () {\r\n    return new Recording(\r\n      this.name,\r\n      this.date,\r\n      this.getNotes().map(d => d.clone()),\r\n      this.speed,\r\n      this.selectedTrack,\r\n      this.timeSelection === null ? null : [...this.timeSelection],\r\n      this.comment\r\n    )\r\n  }\r\n\r\n  /**\r\n     * Returns true if this Recording and otherRecording have equal attributes.\r\n     *\r\n     * @param {Recording} otherRecording another Recording\r\n     * @returns {boolean} true if equal\r\n     */\r\n  equals (otherRecording) {\r\n    if (!(otherRecording instanceof Recording)) { return false }\r\n    if (this.name !== otherRecording.name) { return false }\r\n    if (this.date.getTime() !== otherRecording.date.getTime()) { return false }\r\n    if (this.speed !== otherRecording.speed) { return false }\r\n    if (this.selectedTrack !== otherRecording.selectedTrack) { return false }\r\n    if (this.timeSelection !== otherRecording.timeSelection) {\r\n      if (this.timeSelection === null || otherRecording.timeSelection === null) {\r\n        return false\r\n      }\r\n      if (!arrayShallowEquals(this.timeSelection, otherRecording.timeSelection)) {\r\n        return false\r\n      }\r\n    }\r\n    // Below is the same as NoteArray\r\n    const notes1 = this.getNotes()\r\n    const notes2 = otherRecording.getNotes()\r\n    if (notes1.length !== notes2.length) {\r\n      return false\r\n    }\r\n    for (const [index, element] of notes1.entries()) {\r\n      if (!element.equals(notes2[index])) {\r\n        return false\r\n      }\r\n    }\r\n    if (this.comment !== otherRecording.comment) { return false }\r\n    return true\r\n  }\r\n\r\n  /**\r\n     * Turns the recoring into a simple object with the same properties\r\n     *\r\n     * @returns {object} simple object representation of the recording\r\n     */\r\n  toSimpleObject () {\r\n    return {\r\n      name: this.name,\r\n      date: this.date,\r\n      notes: this.getNotes(),\r\n      speed: this.speed,\r\n      selectedTrack: this.selectedTrack,\r\n      timeSelection: this.timeSelection,\r\n      comment: this.comment\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Creates a Note object from an object via destructuring\r\n     *\r\n     * @param {object} object object with at least {name, date, notes, speed}\r\n     * @returns {Recording} new note\r\n     * @throws {Error} when name, date, or notes are missing\r\n     */\r\n  static from (object) {\r\n    let { name, date, notes } = object\r\n    // Check for undefined\r\n    const values = [name, date, notes]\r\n    const names = ['name', 'date', 'notes']\r\n    for (const [index, value] of values.entries()) {\r\n      if (value === undefined || value === null) {\r\n        throw new Error(`Cannot create Recording with undefined ${names[index]}`)\r\n      }\r\n    }\r\n    // Parse date if it is a string\r\n    if (typeof (date) === 'string') {\r\n      date = new Date(Date.parse(date))\r\n    }\r\n    const { speed, selectedTrack, timeSelection, comment } = object\r\n    return new Recording(\r\n      name,\r\n      date,\r\n      notes,\r\n      speed,\r\n      selectedTrack,\r\n      timeSelection,\r\n      comment\r\n    )\r\n  }\r\n}\r\n\r\nexport default Recording\r\n", "import * as midiParser from 'midi-parser-js'\r\nimport Note from './Note.js'\r\nimport { preprocessMusicXmlData } from '../fileFormats/MusicXmlParser.js'\r\nimport { preprocessMidiFileData } from '../fileFormats/MidiParser.js'\r\nimport NoteArray from './NoteArray.js'\r\nimport GuitarNote from './GuitarNote.js'\r\n\r\n/**\r\n * Represents a parsed MIDI or MusicXML file in a uniform format.\r\n */\r\nclass MusicPiece {\r\n  /**\r\n   * @deprecated Do not use this constructor, but the static methods MusicPiece.fromMidi\r\n   * and MusicPiece.fromMusicXml instead.\r\n   * @param {string} name name (e.g. file name or piece name)\r\n   * @param {TempoDefinition[]} tempos tempos\r\n   * @param {TimeSignature[]} timeSignatures time signatures\r\n   * @param {KeySignature[]} keySignatures key signatures\r\n   * @param {number[]} measureTimes time in seconds for each measure line\r\n   * @param {Track[]} tracks tracks\r\n   * @param {number[]} [xmlMeasureIndices] for each parsed measure, the index of\r\n   *   the corresponding XML measure (only for MusicXML)\r\n   * @throws {'No or invalid tracks given!'} when invalid tracks are given\r\n   */\r\n  constructor (\r\n    name,\r\n    tempos,\r\n    timeSignatures,\r\n    keySignatures,\r\n    measureTimes,\r\n    tracks,\r\n    xmlMeasureIndices\r\n  ) {\r\n    if (!tracks || tracks.length === 0) {\r\n      throw new Error('No or invalid tracks given! Use .fromMidi or .fromMusicXml?')\r\n    }\r\n    this.name = name\r\n    this.measureTimes = measureTimes\r\n    this.xmlMeasureIndices = xmlMeasureIndices\r\n    this.tracks = tracks\r\n    this.duration = Math.max(...this.tracks.map(d => d.duration))\r\n    // Filter multiple identical consecutive infos\r\n    this.tempos = tempos.slice(0, 1)\r\n    let currentTempo = tempos[0]\r\n    for (const tempo of tempos) {\r\n      if (tempo.string !== currentTempo.string) {\r\n        currentTempo = tempo\r\n        this.tempos.push(tempo)\r\n      }\r\n    }\r\n    this.timeSignatures = timeSignatures.slice(0, 1)\r\n    let currentTimeSig = timeSignatures[0]\r\n    for (const timeSignature of timeSignatures) {\r\n      if (timeSignature.string !== currentTimeSig.string) {\r\n        currentTimeSig = timeSignature\r\n        this.timeSignatures.push(timeSignature)\r\n      }\r\n    }\r\n    this.keySignatures = keySignatures.slice(0, 1)\r\n    let currentKeySig = keySignatures[0]\r\n    for (const keySignature of keySignatures) {\r\n      if (keySignature.string !== currentKeySig.string) {\r\n        currentKeySig = keySignature\r\n        this.keySignatures.push(keySignature)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a MusicPiece object from a MIDI file binary\r\n   *\r\n   * @param {string} name name\r\n   * @param {ArrayBuffer} midiFile MIDI file\r\n   * @returns {MusicPiece} new MusicPiece\r\n   * @throws {'No MIDI file content given'} when MIDI file is undefined or null\r\n   * @example <caption>In Node.js</caption>\r\n   *      const file = path.join(directory, fileName);\r\n   *      const data = fs.readFileSync(file, 'base64');\r\n   *      const mp = MusicPiece.fromMidi(fileName, data);\r\n   * @example <caption>In the browser</caption>\r\n   *      const uintArray = new Uint8Array(midiBinary);\r\n   *      const MP = MusicPiece.fromMidi(filename, uintArray);\r\n   */\r\n  static fromMidi (name, midiFile) {\r\n    if (!midiFile) {\r\n      throw new Error('No MIDI file content given')\r\n    }\r\n    const midi = midiParser.parse(midiFile)\r\n    const parsed = preprocessMidiFileData(midi)\r\n    let tempos = []\r\n    let timeSignatures = []\r\n    let keySignatures = []\r\n    let measureTimes = []\r\n    if (parsed.tracks.length > 0) {\r\n      // Tempos\r\n      tempos = parsed.tempoChanges\r\n        .map(d => new TempoDefinition(d.time, d.tempo))\r\n      // Time signatures\r\n      timeSignatures = parsed.beatTypeChanges\r\n        .map(d => new TimeSignature(d.time, [d.beats, d.beatType]))\r\n      // Key signatures\r\n      keySignatures = parsed.keySignatureChanges\r\n        .map(d => new KeySignature(d.time, d.key, d.scale))\r\n      // Measure times\r\n      measureTimes = parsed.measureLinePositions\r\n    }\r\n    // Tracks\r\n    const tracks = parsed.tracks.map((track) => new Track(\r\n      track.trackName,\r\n      track.instrumentName,\r\n      track.noteObjs,\r\n      null,\r\n      track.measureIndices,\r\n      new Map(),\r\n      new Map()\r\n    ))\r\n    return new MusicPiece(\r\n      name,\r\n      tempos,\r\n      timeSignatures,\r\n      keySignatures,\r\n      measureTimes,\r\n      tracks\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Creates a MusicPiece object from a MIDI file binary\r\n   *\r\n   * @deprecated This is not fully implemented yet\r\n   * @todo on hold until @tonejs/midi adds time in seconds for meta events\r\n   * @todo use @tonejs/midi for parsing, but the same information as with\r\n   * MusicPiece.fromMidi()\r\n   * @see https://github.com/Tonejs/Midi\r\n   * @param {string} name name\r\n   * @param {ArrayBuffer} midiFile MIDI file\r\n   * @returns {MusicPiece} new MusicPiece\r\n   * @throws {'No MIDI file content given'} when MIDI file is undefined or null\r\n   * @example <caption>In Node.js</caption>\r\n   *      const file = path.join(directory, fileName);\r\n   *      const data = fs.readFileSync(file);\r\n   *      const mp = MusicPiece.fromMidi(fileName, data);\r\n   * @example <caption>In the browser</caption>\r\n   *      const uintArray = new Uint8Array(midiBinary);\r\n   *      const MP = MusicPiece.fromMidi(filename, uintArray);\r\n   */\r\n  // static fromMidi2 (name, midiFile) {\r\n  //   if (!midiFile) {\r\n  //     throw new Error('No MIDI file content given')\r\n  //   }\r\n\r\n  //   const parsed = new Midi(midiFile)\r\n  //   // const uintArray = new Uint8Array(midiFile);\r\n  //   // const parsed = new Midi(uintArray);\r\n\r\n  //   // Tracks\r\n  //   const tracks = []\r\n  //   for (const track of parsed.tracks) {\r\n  //     if (track.notes.length === 0) { continue }\r\n  //     const notes = track.notes.map(note => Note.from({\r\n  //       pitch: note.midi,\r\n  //       start: note.time,\r\n  //       end: note.time + note.duration,\r\n  //       velocity: Math.round(note.velocity * 127),\r\n  //       channel: track.channel\r\n  //     }))\r\n  //     tracks.push(\r\n  //       Track.fromMidi(\r\n  //         track.trackName,\r\n  //         track.instrumentName,\r\n  //         notes\r\n  //       )\r\n  //     )\r\n  //   }\r\n\r\n  //   // TODO: convert ticks to seconds\r\n  //   let tempos = []\r\n  //   let timeSignatures = []\r\n  //   let keySignatures = []\r\n  //   let measureTimes = []\r\n  //   if (parsed.tracks.length > 0) {\r\n  //     // tempos\r\n  //     tempos = parsed.header.tempos\r\n  //       .map(d => new TempoDefinition(d.time, d.tempo))\r\n  //     // time signatures\r\n  //     timeSignatures = parsed.header.timeSignatures\r\n  //       .map(d => new TimeSignature(d.time, [d.beats, d.beatType]))\r\n  //     // key signatures\r\n  //     keySignatures = parsed.header.keySignatures\r\n  //       .map(d => new KeySignature(d.time, d.key, d.scale))\r\n  //     // measure times\r\n  //     measureTimes = parsed.measureLinePositions\r\n  //   }\r\n  //   return new MusicPiece(\r\n  //     name,\r\n  //     tempos,\r\n  //     timeSignatures,\r\n  //     keySignatures,\r\n  //     measureTimes,\r\n  //     tracks\r\n  //   )\r\n  // }\r\n\r\n  /**\r\n   * Creates a MusicPiece object from a MusicXML string\r\n   *\r\n   * @param {string} name name\r\n   * @param {string|object} xmlFile MusicXML file content as string or object\r\n   *      If it is an object, it must behave like a DOM, e.g. provide methods\r\n   *      such as .querySelectorAll()\r\n   * @returns {MusicPiece} new MusicPiece\r\n   * @throws {'No MusicXML file content given'} when MusicXML file is\r\n   *  undefined or null\r\n   * @example Parsing a MusicPiece in Node.js\r\n   *    const jsdom = require('jsdom');\r\n   *    const xmlFile = fs.readFileSync('My Song.musicxml');\r\n   *    const dom = new jsdom.JSDOM(xmlFile);\r\n   *    const xmlDocument = dom.window.document;\r\n   *    const mp = musicvislib.MusicPiece.fromMusicXml('My Song', xmlDocument);\r\n   */\r\n  static fromMusicXml (name, xmlFile) {\r\n    if (!xmlFile) {\r\n      throw new Error('No MusicXML file content given')\r\n    }\r\n    let xmlDocument = xmlFile\r\n    if (typeof xmlDocument === 'string') {\r\n      const parser = new DOMParser()\r\n      xmlDocument = parser.parseFromString(xmlFile, 'text/xml')\r\n    }\r\n    const parsed = preprocessMusicXmlData(xmlDocument)\r\n    let tempos = []\r\n    let timeSignatures = []\r\n    let keySignatures = []\r\n    if (parsed.parts.length > 0) {\r\n      // Tempos\r\n      tempos = parsed.parts[0].tempoChanges\r\n        .map(d => new TempoDefinition(d.time, d.tempo))\r\n      // Time signatures\r\n      timeSignatures = parsed.parts[0].beatTypeChanges\r\n        .map(d => new TimeSignature(d.time, [d.beats, d.beatType]))\r\n      // Key signatures\r\n      keySignatures = parsed.parts[0].keySignatureChanges\r\n        .map(d => new KeySignature(d.time, d.key, d.scale))\r\n    }\r\n    // Measure times\r\n    let measureTimes = []\r\n    let xmlMeasureIndices = []\r\n    if (parsed.parts.length > 0) {\r\n      measureTimes = parsed.parts[0].measureLinePositions\r\n      xmlMeasureIndices = parsed.parts[0].xmlMeasureIndices\r\n    }\r\n    // Tracks\r\n    const tracks = parsed.parts\r\n      .map((track, index) => {\r\n        for (const n of track.noteObjs) {\r\n          n.channel = index\r\n        }\r\n        return new Track(\r\n          parsed.partNames[index],\r\n          parsed.instruments[index],\r\n          track.noteObjs,\r\n          track.tuning,\r\n          track.measureIndices,\r\n          track.measureRehearsalMap,\r\n          track.noteLyricsMap,\r\n          track.xmlNoteIndices\r\n        )\r\n      })\r\n    return new MusicPiece(\r\n      name,\r\n      tempos,\r\n      timeSignatures,\r\n      keySignatures,\r\n      measureTimes,\r\n      tracks,\r\n      xmlMeasureIndices\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Allows to get a MusicPiece from JSON after doing JSON.stringify()\r\n   *\r\n   * @param {string|object} json JSON\r\n   * @returns {MusicPiece} new MusicPiece\r\n   * @example\r\n   *      const jsonString = mp.toJson();\r\n   *      const recovered = MusicPiece.fromJson(jsonString);\r\n   */\r\n  static fromJson (json) {\r\n    json = (typeof json === 'string') ? JSON.parse(json) : json\r\n    const tempos = json.tempos.map(d => new TempoDefinition(d.time, d.bpm))\r\n    const timeSignatures = json.timeSignatures.map(d => new TimeSignature(d.time, d.signature))\r\n    const keySignatures = json.keySignatures.map(d => new KeySignature(d.time, d.key, d.scale))\r\n    const tracks = json.tracks.map(track => Track.from(track))\r\n    return new MusicPiece(\r\n      json.name,\r\n      tempos, timeSignatures,\r\n      keySignatures,\r\n      json.measureTimes,\r\n      tracks,\r\n      json.xmlMeasureIndices\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Returns a JSON-serialized representation\r\n   *\r\n   * @param {boolean} pretty true for readable (prettified) JSON\r\n   * @returns {string} JSON as string\r\n   * @example\r\n   *      const jsonString = mp.toJson();\r\n   *      const recovered = MusicPiece.fromJson(jsonString);\r\n   */\r\n  toJson (pretty = false) {\r\n    const _this = {\r\n      ...this,\r\n      tracks: this.tracks.map(d => d.toObject())\r\n    }\r\n    return JSON.stringify(_this, undefined, pretty ? 2 : 0)\r\n  }\r\n\r\n  /**\r\n   * Returns an array with all notes from all tracks.\r\n   *\r\n   * @deprecated use getNotesFromTracks('all') instead.\r\n   * @param {boolean} sortByTime true: sort notes by time\r\n   * @returns {Note[]} all notes of this piece\r\n   */\r\n  getAllNotes (sortByTime = false) {\r\n    const notes = this.tracks.flatMap(t => t.notes)\r\n    if (sortByTime) {\r\n      notes.sort((a, b) => a.start - b.start)\r\n    }\r\n    return notes\r\n  }\r\n\r\n  /**\r\n   * Returns an array with notes from the specified tracks.\r\n   *\r\n   * @param {'all'|number|number[]} indices either 'all', a number, or an\r\n   *      Array with numbers\r\n   * @param {boolean} sortByTime true: sort notes by time (not needed for a\r\n   *      single track)\r\n   * @returns {Note[]} Array with all notes from the specified tracks\r\n   */\r\n  getNotesFromTracks (indices = 'all', sortByTime = false) {\r\n    let notes = []\r\n    if (indices === 'all') {\r\n      // Return all notes from all tracks\r\n      notes = this.tracks.flatMap(t => t.notes)\r\n    } else if (Array.isArray(indices)) {\r\n      // Return notes from some tracks\r\n      notes = this.tracks\r\n        .filter((d, i) => indices.includes(i))\r\n        .flatMap(t => t.notes)\r\n    } else {\r\n      // Return notes from a single track\r\n      notes = this.tracks[indices].notes\r\n      // Notes in each tracks are already sorted\r\n      sortByTime = false\r\n    }\r\n    if (sortByTime) {\r\n      notes.sort((a, b) => a.start - b.start)\r\n    }\r\n    return notes\r\n  }\r\n\r\n  /**\r\n   * Transposes all or only the specified tracks by the specified number of\r\n   * (semitone) steps.\r\n   * Will return a new MusicPiece instance.\r\n   * Note pitches will be clipped to [0, 127].\r\n   * Will not change playing instructions such as string and fret.\r\n   *\r\n   * @param {number} steps number of semitones to transpose (can be negative)\r\n   * @param {'all'|number|number[]} tracks tracks to transpose\r\n   * @returns {MusicPiece} a new, transposed MusicPiece\r\n   */\r\n  transpose (steps = 0, tracks = 'all') {\r\n    const newTracks = this.tracks.map((track, index) => {\r\n      const change = (\r\n        tracks === 'all' ||\r\n        (Array.isArray(tracks) && tracks.includes(index)) ||\r\n        tracks === index\r\n      )\r\n      const na = new NoteArray(track.notes)\r\n      let tuning = track.tuningPitches\r\n      if (change) {\r\n        // Transpose notes and tuning pitches\r\n        na.transpose(steps)\r\n        tuning = track.tuningPitches.map(d => d + steps)\r\n      }\r\n      return new Track(\r\n        track.name,\r\n        track.instrument,\r\n        na.getNotes(),\r\n        tuning,\r\n        track.measureIndices\r\n      )\r\n    })\r\n    return new MusicPiece(\r\n      this.name,\r\n      [...this.tempos],\r\n      [...this.timeSignatures],\r\n      [...this.keySignatures],\r\n      [...this.measureTimes],\r\n      newTracks\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Used by MusicPiece, should not be used directly\r\n */\r\nexport class Track {\r\n  /**\r\n   * Do not use this constructor, but the static methods Track.fromMidi\r\n   * and Track.fromMusicXml instead.\r\n   *\r\n   * Notes will be sorted by start time.\r\n   *\r\n   * @param {string} name name\r\n   * @param {string} instrument instrument name\r\n   * @param {Note[]} notes notes\r\n   * @param {number[]} [tuningPitches=null] MIDI note numbers of the track's\r\n   *  tuning\r\n   * @param {number[]} [measureIndices=null] note indices where new measures\r\n   *  start\r\n   * @param {Map<number,object>} measureRehearsalMap maps measure index to\r\n   *  rehearsal marks\r\n   * @param {Map<number,object>} noteLyricsMap maps note index to lyrics text\r\n   * @param {number[][]} xmlNoteIndices for each parsed note, the indices of\r\n   *  the XML note elements that correspond to it\r\n   * @throws {'Notes are undefined or not an array'} for invalid notes\r\n   */\r\n  constructor (\r\n    name,\r\n    instrument,\r\n    notes,\r\n    tuningPitches = null,\r\n    measureIndices = null,\r\n    measureRehearsalMap,\r\n    noteLyricsMap,\r\n    xmlNoteIndices = null\r\n  ) {\r\n    name = !name?.length ? 'unnamed' : name.replace('\\u0000', '')\r\n    this.name = name\r\n    this.instrument = instrument\r\n    if (!notes || notes.length === undefined) {\r\n      throw new Error('Notes are undefined or not an array')\r\n    }\r\n    this.notes = notes.sort((a, b) => a.start - b.start)\r\n    this.tuningPitches = tuningPitches\r\n    this.measureIndices = measureIndices\r\n    this.measureRehearsalMap = measureRehearsalMap\r\n    this.noteLyricsMap = noteLyricsMap\r\n    this.xmlNoteIndices = xmlNoteIndices\r\n    // Computed properties\r\n    this.duration = new NoteArray(notes).getDuration()\r\n    this.hasStringFret = false\r\n    for (const note of notes) {\r\n      if (note.string !== undefined && note.fret !== undefined) {\r\n        this.hasStringFret = true\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an object representation of this Track, turns Maps into Arrays\r\n   *  to work with JSON.stringify\r\n   *\r\n   * @returns {object} object represntation\r\n   */\r\n  toObject () {\r\n    return {\r\n      ...this,\r\n      measureRehearsalMap: [...this.measureRehearsalMap],\r\n      noteLyricsMap: [...this.noteLyricsMap]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses an object into a Track, must have same format as the result of\r\n   * Track.toObject().\r\n   *\r\n   * @param {object} object object represntation of a Track\r\n   * @returns {Track} track\r\n   */\r\n  static from (object) {\r\n    const notes = object.notes.map(note => {\r\n      return note.string !== undefined && note.fret !== undefined\r\n        ? GuitarNote.from(note)\r\n        : Note.from(note)\r\n    })\r\n    const measureRehearsalMap = new Map(object.measureRehearsalMap)\r\n    const noteLyricsMap = new Map(object.noteLyricsMap)\r\n    return new Track(\r\n      object.name,\r\n      object.instrument,\r\n      notes,\r\n      object.tuningPitches,\r\n      object.measureIndices,\r\n      measureRehearsalMap,\r\n      noteLyricsMap,\r\n      object.xmlNoteIndices\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Tempo definition\r\n */\r\nexport class TempoDefinition {\r\n  /**\r\n   * @param {number} time in seconds\r\n   * @param {number} bpm tempo in seconds per beat\r\n   */\r\n  constructor (time, bpm) {\r\n    this.time = time\r\n    this.bpm = bpm\r\n    this.string = `${bpm} bpm`\r\n  }\r\n}\r\n\r\n/**\r\n * Time signature definition\r\n */\r\nexport class TimeSignature {\r\n  /**\r\n   * @param {number} time in seconds\r\n   * @param {number[]} signature time signature as [beats, beatType]\r\n   */\r\n  constructor (time, signature) {\r\n    this.time = time\r\n    this.signature = signature\r\n    this.string = signature.join('/')\r\n  }\r\n}\r\n\r\n/**\r\n * Key signature definition\r\n */\r\nexport class KeySignature {\r\n  /**\r\n   * @param {number} time in seconds\r\n   * @param {string} key key e.g. 'C'\r\n   * @param {string} scale scale e.g. 'major'\r\n   */\r\n  constructor (time, key, scale) {\r\n    this.time = time\r\n    this.key = key\r\n    this.scale = scale\r\n    this.string = `${key} ${scale}`\r\n  }\r\n}\r\n\r\nexport default MusicPiece\r\n", "import { max } from 'd3'\nimport Note from '../types/Note.js'\nimport GuitarNote from '../types/GuitarNote.js'\nimport { getMidiNoteByNameAndOctave } from './Midi.js'\nimport { roundToNDecimals } from '../utils/MathUtils.js'\n// import DrumNote from '../types/DrumNote.js';\n\n/**\n * @module fileFormats/MusicXmlParser\n */\n\n// Precision in number of digits when rounding seconds\nconst ROUNDING_PRECISION = 5\n\n/**\n * Converts a collection of MusicXML measures to JavaScript Objects with timing information in seconds.\n * Also calculates the position of measure lines and the total time in seconds.\n *\n * @param {XMLDocument} xml MusicXML document\n * @param {boolean} log set to true to log results etc. to the console\n * @returns {object} parsed document\n */\nexport function preprocessMusicXmlData (xml, log = false) {\n  if (log) {\n    console.groupCollapsed('[MusicXmlParser] Parsing MusicXML')\n    console.log(xml)\n  }\n  // Get part and instrument names\n  const partNameElements = xml.querySelectorAll('part-name')\n  const instruments = xml.querySelectorAll('score-instrument')\n  const partNames = []\n  const instrumentNames = []\n  for (const p of partNameElements) {\n    partNames.push(p.innerHTML)\n  }\n  for (const index of instruments) {\n    instrumentNames.push(index.children[0].innerHTML)\n  }\n  // Get instrument definitions\n  const drumInstrumentMap = getDrumInstrumentMap(xml)\n  // Preprocess notes\n  const parts = xml.querySelectorAll('part')\n  const parsedParts = []\n  for (const part of parts) {\n    parsedParts.push(preprocessMusicXmlPart(part, drumInstrumentMap))\n  }\n  const result = {\n    parts: parsedParts,\n    partNames,\n    instruments: instrumentNames,\n    totalTime: max(parsedParts, d => d.totalTime)\n  }\n  if (log) {\n    console.log(result)\n    console.groupEnd()\n  }\n  return result\n}\n\n/**\n * Converts a collection of MusicXML measures to JavaScript Objects with timing information in seconds.\n * Also calculates the position of measure lines and the total time in seconds.\n *\n * @private\n * @param {HTMLElement} part MusicXML part\n * @param {Map} drumInstrumentMap midiPitch = map.get(partId).get(instrId)\n * @returns {object} parsed measures\n */\nfunction preprocessMusicXmlPart (part, drumInstrumentMap) {\n  // Handle Guitar sheets with stave and tab (so dublicate notes)\n  part = handleStaveAndTab(part)\n  // Handle repetitions by duplicating measures\n  const { resultMeasures: measures, xmlMeasureIndices } = duplicateRepeatedMeasures(part.children)\n\n  // For each parsed note, store the corresponding XML notes\n  const xmlNotes = part.querySelectorAll('note')\n  const xmlNoteIndexMap = new Map([...xmlNotes].map((d, i) => [d, i]))\n  const xmlNoteIndices = []\n\n  let currentTime = 0\n  let divisions\n  let tempo = 120\n  let beats = 4\n  let beatType = 4\n  // Default velocity is 90 https://www.musicxml.com/tutorial/the-midi-compatible-part/sound-suggestions/\n  const defaultVelocity = 90\n  const velocityFactor = 64 / 71\n  let velocity = Math.round(defaultVelocity * velocityFactor)\n\n  // Handle changing tempo and beat type\n  const tempoChanges = []\n  const beatTypeChanges = []\n  const keySignatureChanges = []\n  const noteObjs = []\n  const measureRehearsalMap = new Map()\n  const noteLyricsMap = new Map()\n  // Time in seconds of the start of new measures\n  const measureLinePositions = []\n  // Indices of notes where a new measure starts\n  const measureIndices = []\n  for (const measure of measures) {\n    const currentTimeRounded = roundToNDecimals(currentTime, ROUNDING_PRECISION)\n    // Try to update metrics (if they are not set, keep the old ones)\n    try {\n      const soundElements = measure.querySelectorAll('sound')\n      // eslint-disable-next-line\n      for (const element of soundElements) {\n        const tempoValue = element.getAttribute('tempo')\n        if (tempoValue !== null) {\n          tempo = roundToNDecimals(+tempoValue, 3)\n          tempoChanges.push({\n            time: currentTimeRounded,\n            tempo\n          })\n        }\n        // TODO: this only support one tempo change per measure!\n        // TODO: tempo changes that are not at the measure start will be false\n        // TODO: solution: go trough all children of measure: notes and other children\n        // notes will update the time\n        break\n      }\n    } catch { }\n    try {\n      divisions = +measure.querySelectorAll('divisions')[0].innerHTML\n    } catch { }\n    try {\n      beats = +measure.querySelectorAll('beats')[0].innerHTML\n      beatType = +measure.querySelectorAll('beat-type')[0].innerHTML\n      beatTypeChanges.push({\n        time: currentTimeRounded,\n        beats,\n        beatType\n      })\n    } catch { }\n    const secondsPerBeat = 1 / (tempo / 60)\n    try {\n      const fifths = +measure.querySelectorAll('fifths')[0].innerHTML\n      const { key, scale } = keySignatureMap.get(fifths)\n      keySignatureChanges.push({\n        time: currentTimeRounded,\n        key,\n        scale\n      })\n    } catch { }\n\n    // If measure is empty, still increase currentTime\n    if (measure.querySelectorAll('note').length === 0) {\n      const measureDuration = beats * (beatType / 4) * secondsPerBeat\n      currentTime += measureDuration\n    }\n\n    // Read notes\n    let lastNoteDuration = 0\n    for (const child of measure.children) {\n      if (child.nodeName === 'backup') {\n        // Handle backup, which reduces the current time to handle multiple staves\n        const duration = +child.querySelectorAll('duration')[0].innerHTML\n        const durationInSeconds = getDurationInSeconds(duration, divisions, secondsPerBeat)\n        currentTime -= durationInSeconds\n      } else if (child.nodeName === 'forward') {\n        // Forward is inverse of backward\n        const duration = +child.querySelectorAll('duration')[0].innerHTML\n        const durationInSeconds = getDurationInSeconds(duration, divisions, secondsPerBeat)\n        currentTime += durationInSeconds\n      } else if (child.nodeName === 'direction') {\n        // Handle directions such as dynamics\n        for (const direction of child.children) {\n          if (direction.nodeName === 'sound' && direction.getAttribute('dynamics')) {\n            // Dynamics: convert number...\n            // https://www.musicxml.com/tutorial/the-midi-compatible-part/sound-suggestions/\n            velocity = Math.round(velocityFactor * +direction.getAttribute('dynamics'))\n          }\n          if (child.querySelectorAll('rehearsal').length > 0) {\n            // Reheasal marks (used as section indicators by GuitarPro)\n            const rehearsals = child.querySelectorAll('rehearsal')\n            const marks = []\n            for (const r of rehearsals) {\n              if (r.textContent !== '') {\n                marks.push(r.textContent)\n              }\n            }\n            if (marks.length > 0) {\n              let text = marks.join(' ')\n              const measureIndex = measureIndices.length\n              if (measureRehearsalMap.has(measureIndex)) {\n                const oldText = measureRehearsalMap.get(measureIndex)\n                text = `${oldText} ${text}`\n              }\n              measureRehearsalMap.set(measureIndex, text)\n            }\n          }\n          // TODO: handle others, e.g. tempo\n          // if (direction.nodeName === 'sound' && direction.getAttribute('tempo')) {\n          //     const tempoValue = Math.round(+direction.getAttribute('tempo'));\n          //     tempo = roundToNDecimals(tempoValue, 3);\n          //     tempoChanges.push({\n          //         time: roundToNDecimals(currentTime, ROUNDING_PRECISION),\n          //         tempo,\n          //     });\n          // }\n        }\n      } else if (child.nodeName === 'note') {\n        const note = child\n\n        try {\n          // Get note duration in seconds\n          let durationInSeconds\n          // Handle grace notes\n          if (note.querySelectorAll('grace').length > 0) {\n            // Take duration from type\n            const type = note.querySelectorAll('type').textContent\n            if (type === '64th') {\n              durationInSeconds = secondsPerBeat / 16\n            } else if (type === '32nd') {\n              durationInSeconds = secondsPerBeat / 8\n            } else if (type === '16th') {\n              durationInSeconds = secondsPerBeat / 4\n            } else if (type === 'eighth') {\n              durationInSeconds = secondsPerBeat / 2\n            } else if (type === 'quarter') {\n              durationInSeconds = secondsPerBeat\n            } else if (type === 'half') {\n              durationInSeconds = secondsPerBeat * 2\n            } else {\n              // TODO: better fallback solution?\n              durationInSeconds = 0.01\n            }\n          } else {\n            const duration = +note.querySelectorAll('duration')[0].innerHTML\n            durationInSeconds = getDurationInSeconds(duration, divisions, secondsPerBeat)\n          }\n\n          // Do not create note object for rests, only increase time\n          const isRest = note.querySelectorAll('rest').length > 0\n          if (isRest) {\n            currentTime += durationInSeconds\n            continue\n          }\n          const isUnpitched = note.querySelectorAll('unpitched').length > 0\n          let pitch\n          if (isUnpitched) {\n            // Handle drum notes\n            const instrumentId = note.querySelectorAll('instrument')[0].id\n            pitch = drumInstrumentMap.get(part.id).get(instrumentId)\n          } else {\n            // Get MIDI pitch\n            // Handle <alter> tag for accidentals\n            const alter = +(note.querySelectorAll('alter')[0]?.innerHTML ?? 0)\n            const step = note.querySelectorAll('step')[0].innerHTML\n            const octave = +note.querySelectorAll('octave')[0].innerHTML\n            pitch = getMidiNoteByNameAndOctave(step, octave).pitch + alter\n          }\n          // TODO: Handle dynamics defined as tag inside a note\n          const dynamicsTag = note.querySelectorAll('dynamics')[0]?.children[0]\n          if (dynamicsTag) {\n            velocity = dynamicsMap.get(dynamicsTag.nodeName)\n          }\n\n          // Is this a chord?\n          // https://www.musicxml.com/tutorial/the-midi-compatible-part/chords/\n          const isChord = note.querySelectorAll('chord').length > 0\n          if (isChord) {\n            currentTime -= lastNoteDuration\n          }\n          // Is this note tied?\n          const tieElement = note.querySelectorAll('tie')[0]\n          if (tieElement && tieElement.getAttribute('type') === 'stop') {\n            const noteEnd = currentTime + durationInSeconds\n            // Find last note with this pitch and update end\n            for (let index = noteObjs.length - 1; index > 0; index--) {\n              const noteObject = noteObjs[index]\n              if (noteObject.pitch === pitch) {\n                noteObject.end = noteEnd\n                // Read lyrics and add to note\n                const lyrics = getLyricsFromNote(note)\n                if (lyrics.length > 0) {\n                  const oldLyrics = noteLyricsMap.get(index) ?? ''\n                  const newLyrics = `${oldLyrics} ${lyrics}`\n                  noteLyricsMap.set(index, newLyrics)\n                }\n                // Save XML note index\n                xmlNoteIndices[index].push(xmlNoteIndexMap.get(note))\n                break\n              }\n            }\n          } else {\n            // Save XML note index\n            xmlNoteIndices.push([xmlNoteIndexMap.get(note)])\n            // Staff is used as note's channel for non-guitar notes\n            const staff = +(note.querySelectorAll('staff')[0]?.innerHTML ?? 1)\n            // TODO: use xml note type?\n            // const type = note.getElementsByTagName('type')[0].innerHTML;\n            const startTime = roundToNDecimals(currentTime, ROUNDING_PRECISION)\n            const endTime = roundToNDecimals(currentTime + durationInSeconds, ROUNDING_PRECISION)\n            // Try to get guitar specific data\n            let string = null\n            let fret = null\n            try {\n              fret = +note.querySelectorAll('fret')[0].innerHTML\n              string = +note.querySelectorAll('string')[0].innerHTML\n            } catch { }\n            if (string !== null && fret !== null) {\n              noteObjs.push(new GuitarNote(\n                pitch,\n                startTime,\n                velocity,\n                string,\n                endTime,\n                string,\n                fret\n              ))\n              // TODO: use drum notes and store part name and action directly\n              // } else if (isUnpitched) {\n              //     const part = '';\n              //     const action = '';\n              //     noteObjs.push(new DrumNote(\n              //         pitch,\n              //         startTime,\n              //         velocity,\n              //         staff - 1,\n              //         endTime,\n              //         part,\n              //         action,\n              //     ));\n            } else {\n              noteObjs.push(new Note(\n                pitch,\n                startTime,\n                velocity,\n                // MusicXML starts with 1 but MIDI with 0\n                staff - 1,\n                endTime\n              ))\n            }\n            // Read lyrics\n            const lyrics = getLyricsFromNote(note)\n            if (lyrics.length > 0) {\n              noteLyricsMap.set(noteObjs.length - 1, lyrics)\n            }\n          }\n          lastNoteDuration = durationInSeconds\n          currentTime += durationInSeconds\n        } catch (error) {\n          console.warn('[MusicXmlParser] Cannot parse MusicXML note', error, note)\n        }\n      }\n    }\n    // Add measure line position\n    measureLinePositions.push(roundToNDecimals(currentTime, ROUNDING_PRECISION))\n    measureIndices.push(noteObjs.length)\n  }\n  // Defaults\n  if (tempoChanges.length === 0 || tempoChanges[0].time > 0) {\n    tempoChanges.unshift({ tempo: 120, time: 0 })\n  }\n  if (beatTypeChanges.length === 0 || beatTypeChanges[0].time > 0) {\n    beatTypeChanges.unshift({ beats: 4, beatType: 4, time: 0 })\n  }\n  if (keySignatureChanges.length === 0 || keySignatureChanges[0].time > 0) {\n    keySignatureChanges.unshift({ key: 'C', scale: 'major', time: 0 })\n  }\n\n  const result = {\n    noteObjs,\n    totalTime: currentTime,\n    measureLinePositions,\n    measureIndices,\n    xmlMeasureIndices,\n    measureRehearsalMap: removeRehearsalRepetitions(measureRehearsalMap),\n    xmlNoteIndices,\n    tempoChanges,\n    beatTypeChanges,\n    keySignatureChanges,\n    tuning: getTuningPitches(measures),\n    noteLyricsMap\n  }\n  // console.log('[MusicXmlParser] Parsed part: ', result);\n  return result\n}\n\n/**\n * Removes duplicates from measureRehearsalMap, which occur when a measure was\n * repeated\n *\n * @param {Map<number,string>} measureRehearsalMap map\n * @returns {Map<number,string>} cleaned map\n */\nfunction removeRehearsalRepetitions (measureRehearsalMap) {\n  const entries = [...measureRehearsalMap]\n  const clean = entries.filter((d, i) => i === 0 || entries[i - 1][1] !== d[1])\n  return new Map(clean)\n}\n\n/**\n * Reads lyrics from a note element\n *\n * @param {HTMLElement} note note element\n * @returns {string} lyrics for this note\n */\nfunction getLyricsFromNote (note) {\n  const lyric = note.querySelectorAll('lyric')\n  const texts = []\n  for (const l of lyric) {\n    texts.push(l.querySelectorAll('text')[0].textContent)\n  }\n  const text = texts.join(' ')\n  return text\n}\n\n/**\n * Calculates the duration in seconds of a note, rest or backup\n *\n * @private\n * @param {number} duration duration of the event in divisions\n * @param {number} divisions MusicXML time divisions value\n * @param {number} secondsPerBeat seconds per beat\n * @returns {number} duration in seconds\n */\nfunction getDurationInSeconds (duration, divisions, secondsPerBeat) {\n  const durationInBeats = duration / divisions\n  const durationInSeconds = durationInBeats * secondsPerBeat\n  return durationInSeconds\n}\n\n/**\n * Resolves repetitions by simply duplicating repeated measures.\n * Handles volta lines (ending one, ending two).\n *\n * @todo handle 3x etc\n * @todo fix alternative endings with more than one measure\n * @todo write tests\n * @see https://www.musicxml.com/tutorial/the-midi-compatible-part/repeats/\n * @private\n * @param {HTMLCollection} measures measures\n * @returns {HTMLAllCollection[]} processed measures\n */\nfunction duplicateRepeatedMeasures (measures) {\n  let resultMeasures = []\n  let currentRepeatedSection = []\n  let isAlternativeEndingOne = false\n  for (const measure of measures) {\n    // Check if this is the first measure of an volta ending 1\n    const endingMarks = measure.querySelectorAll('ending')\n    if (\n      +(endingMarks[0]?.getAttribute('number')) === 1 &&\n      endingMarks[0]?.getAttribute('type') === 'start'\n    ) {\n      isAlternativeEndingOne = true\n    }\n    // Handle repetition marks\n    const repetitionMarks = measure.querySelectorAll('repeat')\n    if (repetitionMarks.length === 2) {\n      // Only this measure is repeated\n      // TODO: volta endings don't make sense here so no need to handle?\n      const times = repetitionMarks[1].getAttribute('times') || 2\n      const repetition = Array.from({ length: +times }).fill(measure)\n      if (currentRepeatedSection.length === 0) {\n        resultMeasures = [...resultMeasures, ...repetition]\n      } else {\n        currentRepeatedSection = [...currentRepeatedSection, ...repetition]\n      }\n    } else if (repetitionMarks.length === 1) {\n      // Repetition either starts or ends here\n      const direction = repetitionMarks[0].getAttribute('direction')\n      if (direction === 'forward') {\n        // Start new repetition\n        currentRepeatedSection.push(measure)\n      } else if (direction === 'backward') {\n        const times = repetitionMarks[0].getAttribute('times') || 2\n        if (currentRepeatedSection.length > 0) {\n          // Finish current repetition\n          if (!isAlternativeEndingOne) {\n            currentRepeatedSection.push(measure)\n            for (let index = 0; index < times; index++) {\n              resultMeasures = [...resultMeasures, ...currentRepeatedSection]\n            }\n          } else {\n            // Only include ending 1 in first repetition\n            const firstRepetition = [...currentRepeatedSection, measure]\n            resultMeasures = [...resultMeasures, ...firstRepetition]\n            for (let index = 1; index < times; index++) {\n              resultMeasures = [...resultMeasures, ...currentRepeatedSection]\n            }\n          }\n          currentRepeatedSection = []\n        } else {\n          // Repetition started at the start of the piece, repeat all\n          // we have until here\n          const allMeasuresUntilHere = [...resultMeasures]\n          for (let index = 1; index < times; index++) {\n            resultMeasures = [...resultMeasures, ...allMeasuresUntilHere]\n          }\n          // resultMeasures = [...resultMeasures, ...resultMeasures];\n        }\n      }\n    } else {\n      if (!isAlternativeEndingOne) {\n        // Measure without repetition marks, but might still be inside a\n        // repetition\n        if (currentRepeatedSection.length === 0) {\n          resultMeasures.push(measure)\n        } else {\n          currentRepeatedSection.push(measure)\n        }\n      }\n    }\n    // Check if this is the last measure of a volta ending 1\n    if (isAlternativeEndingOne) {\n      for (const endingMark of endingMarks) {\n        if (\n          +(endingMark.getAttribute('number')) === 1 &&\n          endingMark.getAttribute('type') === 'stop'\n        ) {\n          isAlternativeEndingOne = false\n        }\n      }\n    }\n  }\n  // Compute mapping from duplicated to original\n  const measureIndexMap = new Map([...measures].map((d, i) => [d, i]))\n  const xmlMeasureIndices = resultMeasures.map(d => measureIndexMap.get(d))\n  return { resultMeasures, xmlMeasureIndices }\n}\n\n/**\n * Handles MusicXML measures that contain both a stave and a tab. Since every\n * note is described twice, we just need to remove those without string, fret\n * information\n * This function also removes <backup> tags which should not be necessary after\n * removing dublicate notes (only if string, fret notes were found).\n *\n * @private\n * @param {HTMLElement} track a MusicXML track, i.e. its measures\n * @returns {HTMLCollection} cleaned-up MusicXML measure\n */\nfunction handleStaveAndTab (track) {\n  const notes = track.querySelectorAll('note')\n  // Check whether this file has notes with string, fret information\n  let hasStringFretNotes = false\n  for (const note of notes) {\n    if (\n      note.querySelectorAll('string').length > 0 &&\n      note.querySelectorAll('fret').length > 0\n    ) {\n      hasStringFretNotes = true\n      break\n    }\n  }\n  // If some notes have string and fret information, remove all the others\n  // Do *not* remove all rests, keep the one in the first voice!\n  if (hasStringFretNotes) {\n    for (const note of notes) {\n      const voice = +(note.querySelectorAll('voice')[0].innerHTML ?? 1)\n      const isFirstVoiceRest = note.querySelectorAll('rest').length > 0 &&\n        voice === 1\n      if (\n        !isFirstVoiceRest &&\n        note.querySelectorAll('fret').length === 0\n      ) {\n        note.remove()\n      }\n    }\n    // Also remove <backup> tags which were only there due to having two\n    // staves\n    const backups = track.querySelectorAll('backup')\n    for (const backup of backups) {\n      backup.remove()\n    }\n  }\n  return track\n}\n\n/**\n * Gets the tuning for a MusicXML part\n *\n * @private\n * @param {HTMLCollection} measures the measures of the parts\n * @returns {number[]} pitches of the tuning or [] if none is found\n */\nfunction getTuningPitches (measures) {\n  for (const measure of measures) {\n    try {\n      const tuningPitches = []\n      const staffTunings = measure.querySelectorAll('staff-tuning')\n      for (const st of staffTunings) {\n        const tuningNote = st.querySelectorAll('tuning-step')[0].innerHTML\n        const tuningOctave = +st.querySelectorAll('tuning-octave')[0].innerHTML\n        // let line = +st.getAttribute('line');\n        // console.log(`String ${line} is tuned to ${tuningNote}${tuningOctave}`);\n        tuningPitches.push(getMidiNoteByNameAndOctave(tuningNote, tuningOctave).pitch)\n      }\n      return tuningPitches\n    } catch { }\n  }\n  return []\n}\n\n/**\n * Extracts information about the XML's parts for different instruments\n *\n * @param {XMLDocument} xml MusicXML\n * @returns {object[]} part definitions\n */\n// function getPartDefinitions (xml) {\n//   const partDefinitions = xml.querySelectorAll('score-part')\n//   const result = []\n//   for (const partDefinition of partDefinitions) {\n//     // Instruments (e.g., drum parts have multiple)\n//     const instruments = new Map()\n//     const instrDefs = partDefinition.querySelectorAll('score-instrument')\n//     for (const instrumentDefinition of instrDefs) {\n//       const id = instrumentDefinition.getAttribute('id')\n//       instruments.set(id, {\n//         id,\n//         name: instrumentDefinition.querySelectorAll('instrument-name')[0].textContent\n//       })\n//     }\n//     const instrMidiDefs = partDefinition.querySelectorAll('midi-instrument')\n//     for (const instrumentDefinition of instrMidiDefs) {\n//       const midiNote = instrumentDefinition.querySelectorAll('midi-unpitched')[0]?.textContent\n//       if (!midiNote) {\n//         continue\n//       }\n//       const id = instrumentDefinition.getAttribute('id')\n//       instruments.get(id).midiNote = +midiNote\n//     }\n//     // Parsed part definitions\n//     result.push({\n//       id: partDefinition.getAttribute('id'),\n//       name: partDefinition.querySelectorAll('part-name')[0].textContent,\n//       abbr: partDefinition.querySelectorAll('part-abbreviation')[0].textContent,\n//       instruments: instruments.size > 0 ? instruments : null\n//     })\n//   }\n//   return result\n// }\n\n/**\n * Returns a map containing maps, such that result.get(partId).get(instrId)\n * gives you the instrument with the ID instrId as defined in the part partId.\n *\n * This is needed to map drum notes to MIDI pitches.\n *\n * @param {XMLDocument} xml MusicXML\n * @returns {Map} map with structure result.get(partId).get(instrId)\n */\nfunction getDrumInstrumentMap (xml) {\n  const partMap = new Map()\n  const scoreParts = xml.querySelectorAll('part-list')[0]?.querySelectorAll('score-part')\n  if (!scoreParts) { return partMap }\n  for (const scorePart of scoreParts) {\n    const partId = scorePart.id\n    const instruMap = new Map()\n    const midiInstrs = scorePart.querySelectorAll('midi-instrument')\n    for (const midiInstr of midiInstrs) {\n      const instrId = midiInstr.id\n      const pitch = midiInstr.querySelectorAll('midi-unpitched')[0]?.innerHTML\n      if (pitch) {\n        instruMap.set(instrId, +pitch)\n      }\n    }\n    partMap.set(partId, instruMap)\n  }\n  return partMap\n}\n\n/**\n * Checks whether a note is palm-muted\n *\n * @param {HTMLElement} note note element\n * @returns {boolean} true if note is palm-muted\n */\n// function isPalmMuted (note) {\n//   const mute = note.querySelectorAll('mute')\n//   if (mute.length > 0 && mute[0].textContent === 'palm') {\n//     return true\n//   }\n//   return false\n// }\n\n/**\n * Checks whether a note is hammer-on\n *\n * @param {HTMLElement} note note element\n * @returns {boolean} true if note is hammer-on\n */\n// function isHammeron (note) {\n//   return note.querySelectorAll('hammer-on').length > 0\n// }\n\n/**\n * Map from fiths to key signature\n *\n * @type {Map<number,object>}\n */\nconst keySignatureMap = new Map([\n  [-7, { key: 'Cb', scale: 'major' }],\n  [-6, { key: 'Gb', scale: 'major' }],\n  [-5, { key: 'Db', scale: 'major' }],\n  [-4, { key: 'Ab', scale: 'major' }],\n  [-3, { key: 'Eb', scale: 'major' }],\n  [-2, { key: 'Bb', scale: 'major' }],\n  [-1, { key: 'F', scale: 'major' }],\n  [0, { key: 'C', scale: 'major' }],\n  [1, { key: 'G', scale: 'major' }],\n  [2, { key: 'D', scale: 'major' }],\n  [3, { key: 'A', scale: 'major' }],\n  [4, { key: 'E', scale: 'major' }],\n  [5, { key: 'B', scale: 'major' }],\n  [6, { key: 'F#', scale: 'major' }],\n  [7, { key: 'C#', scale: 'major' }]\n])\n\n/**\n * Maps dynamics to MIDI velocity numbers, i.e. 'ff' to 102\n *\n * @type {Map<string,number>}\n */\nconst dynamicsMap = new Map([\n  ['ppp', 25],\n  ['pp', 38],\n  ['p', 51],\n  ['mp', 64],\n  ['mf', 76],\n  ['f', 89],\n  ['ff', 102],\n  ['fff', 114]\n])\n", "import { group, max } from 'd3'\r\nimport Note from '../types/Note.js'\r\nimport { bpmToSecondsPerBeat } from '../utils/MusicUtils.js'\r\nimport { roundToNDecimals } from '../utils/MathUtils.js'\r\n\r\n/**\r\n * @module fileFormats/MidiParser\r\n * @todo parse pitch bends\r\n * @todo after tempo changes notes and measure time do not align,\r\n *       see \"[Test] Tempo change.mid\"\r\n */\r\n\r\n// Precision in number of digits when rounding seconds\r\nconst ROUNDING_PRECISION = 5\r\n\r\n/**\r\n * Parses a MIDI JSON file to get Note objects with absolute time in seconds.\r\n *\r\n * @see https://github.com/colxi/midi-parser-js/wiki/MIDI-File-Format-Specifications\r\n * @param {object} data MIDI data in JSON format\r\n * @param {boolean} splitFormat0IntoTracks split MIDI format 0 data into tracks\r\n *      instead of using channels?\r\n * @param {boolean} log set to true to log results etc. to the console\r\n * @returns {object} including an array of note objects and meta information\r\n */\r\nexport function preprocessMidiFileData (data, splitFormat0IntoTracks = true, log = false) {\r\n  if (data === null || data === undefined) {\r\n    return\r\n  }\r\n  if (!data.track) {\r\n    console.warn('[MidiParser] MIDI data has no track')\r\n    return\r\n  }\r\n  if (log) {\r\n    console.groupCollapsed('[MidiParser] Preprocessing MIDI file data')\r\n  }\r\n  // Parse notes\r\n  let parsedTracks = []\r\n  const { tempoChanges, beatTypeChanges, keySignatureChanges } = getSignatureChanges(data.track)\r\n  for (const track of data.track) {\r\n    const t = parseMidiTrack(\r\n      track,\r\n      data.timeDivision,\r\n      tempoChanges,\r\n      beatTypeChanges,\r\n      keySignatureChanges,\r\n      log\r\n    )\r\n    if (t !== null) {\r\n      parsedTracks.push(t)\r\n    }\r\n  }\r\n  // Split MIDI format 0 data into tracks instead of having channels\r\n  if (data.formatType === 0 && splitFormat0IntoTracks && parsedTracks.length === 1) {\r\n    parsedTracks = splitFormat0(parsedTracks)\r\n  }\r\n  // Generate measure lines from tempo and beat type changes\r\n  const totalTime = max(parsedTracks, d => d?.totalTime ?? 0)\r\n  const measureLinePositions = getMeasureLines(tempoChanges, beatTypeChanges, totalTime)\r\n  // Get measure indices, the note's index where a new measure starts, for each track\r\n  for (const track of parsedTracks) {\r\n    track.measureIndices = getMeasureIndices(track.noteObjs, measureLinePositions)\r\n  }\r\n  // Resulting track\r\n  const result = {\r\n    tracks: parsedTracks,\r\n    totalTime,\r\n    tempoChanges,\r\n    beatTypeChanges,\r\n    keySignatureChanges,\r\n    measureLinePositions\r\n  }\r\n  if (log) {\r\n    console.log(`Got ${parsedTracks.length} MIDI tracks`, result)\r\n    console.groupEnd()\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * Parses a single MIDI track and pushes it to parsedTracks if it contains notes\r\n *\r\n * @private\r\n * @param {object} track a MIDI track\r\n * @param {number} timeDivision MIDI time division\r\n * @param {object[]} tempoChanges array with tempo change events\r\n * @param {object[]} beatTypeChanges array with beat type change events\r\n * @param {object[]} keySignatureChanges array with key signature change events\r\n * @param {boolean} log if true, debug info will be logged to the console\r\n * @returns {object} parsed track\r\n */\r\nfunction parseMidiTrack (track, timeDivision, tempoChanges, beatTypeChanges, keySignatureChanges, log) {\r\n  const notes = []\r\n  let tempo = tempoChanges[0]?.tempo ?? 120\r\n  let currentTick = 0\r\n  let currentTime\r\n  let milliSecondsPerTick = getMillisecondsPerTick(tempo, timeDivision)\r\n  let tickOfLastTempoChange = 0\r\n  let timeOfLastTempoChange = 0\r\n  // This map stores note-on note that have not yet been finished by a note-off\r\n  const unfinishedNotes = new Map()\r\n  for (const event of track.event) {\r\n    const type = event.type\r\n    // Ignore delta time if it is a meta event (fixes some parsing issues)\r\n    if (type === EVENT_TYPES.meta) {\r\n      continue\r\n    }\r\n    currentTick += event.deltaTime\r\n    // Update beat type change times\r\n    for (const btc of beatTypeChanges) {\r\n      if (btc.time === undefined && btc.tick <= currentTick) {\r\n        const t = (btc.tick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange\r\n        btc.time = roundToNDecimals(t, ROUNDING_PRECISION)\r\n      }\r\n    }\r\n    // Update key signature change times\r\n    for (const ksc of keySignatureChanges) {\r\n      if (ksc.time === undefined && ksc.tick <= currentTick) {\r\n        const t = (ksc.tick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange\r\n        ksc.time = roundToNDecimals(t, ROUNDING_PRECISION)\r\n      }\r\n    }\r\n    // Handle last tempo change in track differently\r\n    let mostRecentTempoChange\r\n    if (tempoChanges.length > 0 && currentTick > tempoChanges[tempoChanges.length - 1].tick) {\r\n      mostRecentTempoChange = tempoChanges[tempoChanges.length - 1]\r\n    }\r\n    // Get current tempo, as soon as we are too far, 1 step back\r\n    for (let index = 1; index < tempoChanges.length; index++) {\r\n      const tick = tempoChanges[index].tick\r\n      if (tick > currentTick) {\r\n        const change = tempoChanges[index - 1]\r\n        mostRecentTempoChange = change\r\n        break\r\n      }\r\n    }\r\n    // React to tempo changes\r\n    if (mostRecentTempoChange && mostRecentTempoChange.tempo !== tempo) {\r\n      const tick = mostRecentTempoChange.tick\r\n      timeOfLastTempoChange = (tick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange\r\n      tickOfLastTempoChange = tick\r\n      mostRecentTempoChange.time = roundToNDecimals(timeOfLastTempoChange, ROUNDING_PRECISION)\r\n      tempo = mostRecentTempoChange.tempo\r\n      milliSecondsPerTick = getMillisecondsPerTick(tempo, timeDivision)\r\n    }\r\n    // Update current time in seconds\r\n    currentTime = (currentTick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange\r\n    // Skip events that are neither note-on nor note-off\r\n    if (type !== EVENT_TYPES.noteOn && type !== EVENT_TYPES.noteOff) {\r\n      continue\r\n    }\r\n    const [pitch, velocity] = event.data\r\n    const channel = event.channel\r\n    const key = `${pitch} ${channel}`\r\n    if (type === EVENT_TYPES.noteOff || (type === EVENT_TYPES.noteOn && velocity === 0)) {\r\n      // Handle note-off\r\n      if (unfinishedNotes.has(key)) {\r\n        unfinishedNotes.get(key).end = roundToNDecimals(currentTime, ROUNDING_PRECISION)\r\n        unfinishedNotes.delete(key)\r\n      } else {\r\n        if (log) {\r\n          console.warn('Did not find an unfinished note for note-off event!')\r\n          console.log(event)\r\n        }\r\n      }\r\n    } else if (type === EVENT_TYPES.noteOn) {\r\n      // Handle note-on\r\n      const newNote = new Note(\r\n        pitch,\r\n        roundToNDecimals(currentTime, ROUNDING_PRECISION),\r\n        velocity,\r\n        channel\r\n      )\r\n      notes.push(newNote)\r\n      unfinishedNotes.set(key, newNote)\r\n    } else {\r\n      continue\r\n    }\r\n  }\r\n  // Fix missing note ends\r\n  const neededToFix = []\r\n  for (const note of notes) {\r\n    if (note.end === -1) {\r\n      note.end = roundToNDecimals(currentTime, ROUNDING_PRECISION)\r\n      neededToFix.push(note)\r\n    }\r\n  }\r\n  if (neededToFix.length > 0) {\r\n    console.warn(`had to fix ${neededToFix.length} notes`)\r\n    console.log(neededToFix)\r\n  }\r\n  // Save parsed track with meta information\r\n  const { trackName, instrument, instrumentName } = getInstrumentAndTrackName(track)\r\n  if (notes.length > 0) {\r\n    const parsedTrack = {\r\n      noteObjs: notes,\r\n      totalTime: currentTime,\r\n      trackName: trackName ?? 'Track',\r\n      instrument,\r\n      instrumentName: instrumentName ?? 'Unknown instrument'\r\n    }\r\n    return parsedTrack\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Finds out the name of the track and the instrument, if this data is available\r\n *\r\n * @private\r\n * @param {object} track MIDI track\r\n * @returns {{trackName, instrument, instrumentName}} meta data with either\r\n *      values or null when no information found\r\n */\r\nfunction getInstrumentAndTrackName (track) {\r\n  let trackName = null\r\n  let instrument = null\r\n  let instrumentName = null\r\n  for (const event of track.event) {\r\n    if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.trackName) {\r\n      trackName = event.data\r\n    }\r\n    if (event.type === EVENT_TYPES.programChange) {\r\n      instrument = event.data\r\n    }\r\n    if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.instrumentName) {\r\n      instrumentName = event.data\r\n    }\r\n  }\r\n  return {\r\n    trackName,\r\n    instrument,\r\n    instrumentName\r\n  }\r\n}\r\n\r\n/**\r\n * Caclulates the time positions of measure lines by looking at tempo and beat\r\n * type change events\r\n *\r\n * @private\r\n * @param {object[]} tempoChanges tempo change events\r\n * @param {object[]} beatTypeChanges beat type change events\r\n * @param {number} totalTime total time\r\n * @returns {number[]} measure line times in seconds\r\n */\r\nfunction getMeasureLines (tempoChanges, beatTypeChanges, totalTime) {\r\n  const measureLines = []\r\n  // Generate measure lines from tempo and beat type changes\r\n  let tempo = 120\r\n  let beats = 4\r\n  let beatType = 4\r\n  let currentTime = 0\r\n  let currentBeatsInMeasure = 0\r\n  let timeOfLastTempoChange = 0\r\n  let timeSinceLastTempoChange = 0\r\n  while (currentTime < totalTime) {\r\n    // Get current tempo and beat type\r\n    let mostRecentTempoChange\r\n    for (const t of tempoChanges) {\r\n      if (t.time <= currentTime) {\r\n        mostRecentTempoChange = t.tempo\r\n      }\r\n    }\r\n    if (mostRecentTempoChange && mostRecentTempoChange !== tempo) {\r\n      timeOfLastTempoChange = currentTime\r\n      timeSinceLastTempoChange = 0\r\n      tempo = mostRecentTempoChange\r\n    }\r\n    for (const b of beatTypeChanges) {\r\n      if (b.time <= currentTime) {\r\n        beats = b.beats\r\n        beatType = b.beatType\r\n      }\r\n    }\r\n    // Update time and beats\r\n    currentBeatsInMeasure++\r\n    const secondsPerBeat = bpmToSecondsPerBeat(tempo) / (beatType / 4)\r\n    timeSinceLastTempoChange += secondsPerBeat\r\n    currentTime = timeOfLastTempoChange + timeSinceLastTempoChange\r\n    if (currentBeatsInMeasure >= beats) {\r\n      // Measure is full\r\n      currentBeatsInMeasure = 0\r\n      measureLines.push(roundToNDecimals(currentTime, ROUNDING_PRECISION))\r\n    }\r\n  }\r\n  return measureLines\r\n}\r\n\r\n/**\r\n * For the notes of one track, computes the notes' indices where new measures\r\n * start.\r\n *\r\n * @param {Note[]} notes notes of a track\r\n * @param {numer[]} measureTimes times in seconds where new measures start\r\n * @returns {number[]} measure indices\r\n */\r\nfunction getMeasureIndices (notes, measureTimes) {\r\n  const measureIndices = []\r\n  const todo = [...measureTimes]\r\n  for (const [index, note] of notes.entries()) {\r\n    if (note.start >= todo[0]) {\r\n      todo.shift()\r\n      measureIndices.push(index)\r\n    }\r\n  }\r\n  return measureIndices\r\n}\r\n\r\n/**\r\n * Split MIDI format 0 data into tracks instead of having channels,\r\n * creates one track for each channel\r\n *\r\n * @private\r\n * @param {Note[][]} tracks parsed MIDI tracks\r\n * @returns {Note[][]} splitted tracks\r\n */\r\nfunction splitFormat0 (tracks) {\r\n  if (tracks.length > 1) {\r\n    console.warn('Splitting a format 0 file with more than 1 track will result in all but the first beeing lost!')\r\n  }\r\n  // console.log('Splitting format 0 file into tracks based on channel');\r\n  const grouped = group(tracks[0].noteObjs, d => d.channel)\r\n  // All tracks will share the meta infomation of the 0th track\r\n  // Assign the splitted-by-channel notes to their new tracks\r\n  const splittedTracks = []\r\n  for (const notes of grouped.values()) {\r\n    splittedTracks.push({\r\n      ...tracks[0],\r\n      noteObjs: notes\r\n    })\r\n  }\r\n  return splittedTracks\r\n}\r\n\r\n/**\r\n * Given the tempo and time division, returns the number of milliseconds\r\n * each MIDI time tick corresponds to\r\n *\r\n * @private\r\n * @param {number} tempo tempo\r\n * @param {number} timeDivision time division\r\n * @returns {number} milli seconds per tick\r\n */\r\nfunction getMillisecondsPerTick (tempo, timeDivision) {\r\n  const milliSecondsPerBeat = 1 / tempo * 60_000\r\n  const milliSecondsPerTick = milliSecondsPerBeat / timeDivision\r\n  return milliSecondsPerTick\r\n}\r\n\r\n/**\r\n * Retrieves all tempo and beat type changes from a MIDI file's tracks.\r\n *\r\n * @see https://github.com/colxi/midi-parser-js/wiki/MIDI-File-Format-Specifications\r\n * @private\r\n * @param {Array} tracks MIDI JSON file tracks\r\n * @returns {object} {tempoChanges, beatTypeChanges} as arrays of objects, which\r\n *      contain the MIDI tick and the new information\r\n */\r\nfunction getSignatureChanges (tracks) {\r\n  const tempoChanges = []\r\n  const beatTypeChanges = []\r\n  const keySignatureChanges = []\r\n  let currentTick = 0\r\n  let lastTempo = null\r\n  for (const track of tracks) {\r\n    for (const event of track.event) {\r\n      // Get timing of events\r\n      currentTick += event.deltaTime\r\n      // Tempo change\r\n      if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.setTempo) {\r\n        const milliSecondsPerQuarter = event.data / 1000\r\n        const tempo = Math.round(1 / (milliSecondsPerQuarter / 60_000))\r\n        // Ignore tempo changes that don't change the tempo\r\n        if (tempo !== lastTempo) {\r\n          tempoChanges.push({\r\n            tick: currentTick,\r\n            tempo,\r\n            time: currentTick === 0 ? 0 : undefined\r\n          })\r\n          lastTempo = tempo\r\n        }\r\n      }\r\n      // Beat type change\r\n      if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.timeSignature) {\r\n        const d = event.data\r\n        const beats = d[0]\r\n        const beatType = 2 ** d[1]\r\n        const newEntry = {\r\n          tick: currentTick,\r\n          beats,\r\n          beatType\r\n        }\r\n        if (beatTypeChanges.length === 0) {\r\n          beatTypeChanges.push(newEntry)\r\n        } else {\r\n          // If it id not change, do not add\r\n          const last = beatTypeChanges[beatTypeChanges.length - 1]\r\n          if (last.beats !== beats || last.beatType !== beatType) {\r\n            beatTypeChanges.push(newEntry)\r\n          }\r\n        }\r\n        // console.log(`Metro: ${d[2]}`);\r\n        // console.log(`32nds: ${d[3]}`);\r\n      }\r\n      // Key change\r\n      if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.keySignature) {\r\n        // console.log('keychange', event);\r\n        const d = event.data\r\n        if (!KEY_SIG_MAP.has(d)) {\r\n          console.warn('[MidiParser] Invalid key signature', d)\r\n        } else {\r\n          const { key, scale } = KEY_SIG_MAP.get(d)\r\n          const newEntry = {\r\n            tick: currentTick,\r\n            key,\r\n            scale\r\n          }\r\n          if (keySignatureChanges.length === 0) {\r\n            keySignatureChanges.push(newEntry)\r\n          } else {\r\n            // If it id not change, do not add\r\n            const last = keySignatureChanges[keySignatureChanges.length - 1]\r\n            if (last.key !== key || last.scale !== scale) {\r\n              keySignatureChanges.push(newEntry)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // Default values\r\n  if (tempoChanges.length === 0 || tempoChanges[0].time > 0) {\r\n    tempoChanges.unshift({ tempo: 120, time: 0 })\r\n  }\r\n  if (beatTypeChanges.length === 0 || beatTypeChanges[0].time > 0) {\r\n    beatTypeChanges.unshift({ beats: 4, beatType: 4, time: 0 })\r\n  }\r\n  if (keySignatureChanges.length === 0 || keySignatureChanges[0].time > 0) {\r\n    keySignatureChanges.unshift({ key: 'C', scale: 'major', time: 0 })\r\n  }\r\n  return { tempoChanges, beatTypeChanges, keySignatureChanges }\r\n}\r\n\r\n/**\r\n * MIDI event types and meta types and their codes\r\n *\r\n * @see https://github.com/colxi/midi-parser-js/wiki/MIDI-File-Format-Specifications\r\n * Event Type         Value   Value decimal    Parameter 1         Parameter 2\r\n * Note Off           0x8       8              note number         velocity\r\n * Note On            0x9       9              note number         velocity\r\n * Note Aftertouch    0xA      10              note number         aftertouch value\r\n * Controller         0xB      11              controller number   controller value\r\n * Program Change     0xC      12              program number      not used\r\n * Channel Aftertouch 0xD      13              aftertouch value    not used\r\n * Pitch Bend         0xE      14              pitch value (LSB)   pitch value (MSB)\r\n * Meta               0xFF    255                 parameters depend on meta type\r\n * @type {object}\r\n */\r\nconst EVENT_TYPES = {\r\n  noteOff: 0x8,\r\n  noteOn: 0x9,\r\n  noteAftertouch: 0xA,\r\n  controller: 0xB,\r\n  programChange: 0xC,\r\n  channelAftertouch: 0xD,\r\n  pitchBend: 0xE,\r\n  meta: 0xFF\r\n}\r\n/**\r\n * @type {object}\r\n */\r\nconst META_TYPES = {\r\n  sequenceNumber: 0x0,\r\n  textEvent: 0x1,\r\n  copyright: 0x2,\r\n  trackName: 0x3,\r\n  instrumentName: 0x4,\r\n  lyrics: 0x5,\r\n  marker: 0x6,\r\n  cuePoint: 0x7,\r\n  channelPrefix: 0x20,\r\n  endOfTrack: 0x2F,\r\n  setTempo: 0x51,\r\n  smpteOffset: 0x54,\r\n  timeSignature: 0x58,\r\n  keySignature: 0x59,\r\n  sequencerSpecific: 0x7F\r\n}\r\n\r\n/**\r\n * Maps needed for key signature detection from number of sharps / flats\r\n *\r\n * @type {Map<number,object>}\r\n * @see https://www.recordingblogs.com/wiki/midi-key-signature-meta-message\r\n */\r\nconst KEY_SIG_MAP = new Map([\r\n  // major\r\n  [0xF9_00, { key: 'Cb', scale: 'major' }],\r\n  [0xFA_00, { key: 'Gb', scale: 'major' }],\r\n  [0xFB_00, { key: 'Db', scale: 'major' }],\r\n  [0xFC_00, { key: 'Ab', scale: 'major' }],\r\n  [0xFD_00, { key: 'Eb', scale: 'major' }],\r\n  [0xFE_00, { key: 'Bb', scale: 'major' }],\r\n  [0xFF_00, { key: 'F', scale: 'major' }],\r\n  [0x00_00, { key: 'C', scale: 'major' }],\r\n  [0x01_00, { key: 'G', scale: 'major' }],\r\n  [0x02_00, { key: 'D', scale: 'major' }],\r\n  [0x03_00, { key: 'A', scale: 'major' }],\r\n  [0x04_00, { key: 'E', scale: 'major' }],\r\n  [0x05_00, { key: 'B', scale: 'major' }],\r\n  [0x06_00, { key: 'F#', scale: 'major' }],\r\n  [0x07_00, { key: 'C#', scale: 'major' }],\r\n  // minor\r\n  [0xF9_01, { key: 'Ab', scale: 'minor' }],\r\n  [0xFA_01, { key: 'Eb', scale: 'minor' }],\r\n  [0xFB_01, { key: 'Bb', scale: 'minor' }],\r\n  [0xFC_01, { key: 'F', scale: 'minor' }],\r\n  [0xFD_01, { key: 'C', scale: 'minor' }],\r\n  [0xFE_01, { key: 'G', scale: 'minor' }],\r\n  [0xFF_01, { key: 'D', scale: 'minor' }],\r\n  [0x00_01, { key: 'A', scale: 'minor' }],\r\n  [0x01_01, { key: 'E', scale: 'minor' }],\r\n  [0x02_01, { key: 'B', scale: 'minor' }],\r\n  [0x03_01, { key: 'F#', scale: 'minor' }],\r\n  [0x04_01, { key: 'C#', scale: 'minor' }],\r\n  [0x05_01, { key: 'G#', scale: 'minor' }],\r\n  [0x06_01, { key: 'D#', scale: 'minor' }],\r\n  [0x07_01, { key: 'A#', scale: 'minor' }]\r\n])\r\n", "import { countOnesOfBinary, roundToNDecimals } from './MathUtils.js'\r\nimport { binarySearch } from './ArrayUtils.js'\r\n\r\n/**\r\n * @module utils/MusicUtils\r\n */\r\n\r\n/**\r\n * Converts beats per minute to seconds per beat\r\n *\r\n * @param {number} bpm tempo in beats per minute\r\n * @returns {number} seconds per beat\r\n */\r\nexport function bpmToSecondsPerBeat (bpm) {\r\n  return 1 / (bpm / 60)\r\n}\r\n\r\n/**\r\n * Maps any frequency (in Hz) to an approximate MIDI note number. Result can be\r\n * rounded to get to the closest MIDI note or used as is for a sound in between\r\n * two notes.\r\n *\r\n * @param {number} frequency a frequency in Hz\r\n * @returns {number} MIDI note number (not rounded)\r\n */\r\nexport function freqToApproxMidiNr (frequency) {\r\n  return 12 * Math.log2(frequency / 440) + 69\r\n}\r\n\r\n/**\r\n * Maps any MIDI number (can be in-between, like 69.5 for A4 + 50 cents) to its\r\n * frequency.\r\n *\r\n * @param {number} midi MIDI note number\r\n * @returns {number} frequency in Hz\r\n */\r\nexport function midiToFrequency (midi) {\r\n  return 2 ** ((midi - 69) / 12) * 440\r\n}\r\n\r\n/**\r\n * Turns a chord into an integer that uniquely describes the occuring chroma.\r\n * If the same chroma occurs twice this will not make a difference\r\n * (e.g. [C4, E4, G4, C5] will equal [C4, E4, G4])\r\n *\r\n * How it works:\r\n * Chord has C, E, and G\r\n * x = 000010010001\r\n *         G  E   C\r\n *\r\n * @param {Note[]} notes notes\r\n * @returns {number} an integer that uniquely identifies this chord's chroma\r\n */\r\nexport function chordToInteger (notes) {\r\n  let value = 0x0\r\n  for (const note of notes) {\r\n    const chroma = note.pitch % 12\r\n    // eslint-disable-next-line no-bitwise\r\n    const noteInteger = 1 << chroma\r\n    // eslint-disable-next-line no-bitwise\r\n    value = value | noteInteger\r\n  }\r\n  return value\r\n}\r\n\r\n/**\r\n * Takes two chord integer representations from chordToInteger() and computes\r\n * the Jaccard index\r\n *\r\n * @param {number} chord1 chord as integer representation\r\n * @param {number} chord2 chord as integer representation\r\n * @returns {number} Jackard index, from 0 for different to 1 for identical\r\n */\r\nexport function chordIntegerJaccardIndex (chord1, chord2) {\r\n  if (chord1 === chord2) {\r\n    return 1\r\n  }\r\n  // eslint-disable-next-line no-bitwise\r\n  const intersection = chord1 & chord2\r\n  // eslint-disable-next-line no-bitwise\r\n  const union = chord1 | chord2\r\n  const intersectionSize = countOnesOfBinary(intersection)\r\n  const unionSize = countOnesOfBinary(union)\r\n  return intersectionSize / unionSize\r\n}\r\n\r\n/*\r\n * noteTypeDurationRatios\r\n * 1 = whole note, 1/2 = half note, ...\r\n *\r\n * With added dots:\r\n * o. has duration of 1.5, o.. 1.75, ...\r\n */\r\nconst noteTypeDurationRatios = []\r\nconst baseDurations = [2, 1, 1 / 2, 1 / 4, 1 / 8, 1 / 16, 1 / 32, 1 / 64]\r\nfor (const d of baseDurations) {\r\n  for (let dots = 0; dots < 4; dots++) {\r\n    let duration = d\r\n    let toAdd = d\r\n    for (let dot = 0; dot < dots; dot++) {\r\n      // Each dot after the note adds half of the one before\r\n      toAdd /= 2\r\n      duration += toAdd\r\n    }\r\n    noteTypeDurationRatios.push({\r\n      type: d,\r\n      dots,\r\n      duration\r\n    })\r\n  }\r\n}\r\nnoteTypeDurationRatios.sort((a, b) => a.duration - b.duration)\r\n\r\n/**\r\n * Estimates the note type (whole, quarter, ...) and number of dots for dotted\r\n * notes\r\n *\r\n * @todo test if corrrectly 'calibrated'\r\n * @param {number} duration duration of a note\r\n * @param {number} bpm tempo of the piece in bpm\r\n * @returns {object} note type and number of dots\r\n *      e.g. { \"dots\": 0, \"duration\": 1, \"type\": 1 } for a whole note\r\n *      e.g. { \"dots\": 1, \"duration\": 1.5, \"type\": 1 } for a dotted whole note\r\n */\r\nexport function noteDurationToNoteType (duration, bpm) {\r\n  const quarterDuration = bpmToSecondsPerBeat(bpm)\r\n  const ratio = duration / quarterDuration / 4\r\n  // TODO: round to finest representable step?\r\n\r\n  // Binary search\r\n  return binarySearch(noteTypeDurationRatios, ratio, d => d.duration)\r\n}\r\n\r\n/**\r\n * Circle of 5ths as\r\n * [midiNr, noteAsSharp, noteAsFlat, numberOfSharps, numberOfFlats]\r\n *\r\n * @see https://en.wikipedia.org/wiki/Circle_of_fifths\r\n * @type {any[][]}\r\n */\r\nexport const CIRCLE_OF_5THS = [\r\n  [0, 'C', 'C', 0, 0],\r\n  [7, 'G', 'G', 1, 0],\r\n  [2, 'D', 'D', 2, 0],\r\n  [9, 'A', 'A', 3, 0],\r\n  [4, 'E', 'E', 4, 0],\r\n  [11, 'B', 'B', 5, 7],\r\n  [6, 'F#', 'Gb', 6, 6],\r\n  [1, 'C#', 'Db', 7, 5],\r\n  [8, 'G#', 'Ab', 0, 4],\r\n  [3, 'D#', 'Eb', 0, 3],\r\n  [10, 'A#', 'Bb', 0, 2],\r\n  [5, 'F', 'F', 0, 1]\r\n]\r\n\r\n/**\r\n * Maps number of semitones to interval name\r\n * m - minor\r\n * M - major\r\n * P - perfect\r\n * aug - augmented\r\n *\r\n * @type {Map<number,string>}\r\n */\r\nexport const INTERVALS = new Map([\r\n  [1, 'unison'],\r\n  [1, 'm2'],\r\n  [2, 'M2'],\r\n  [3, 'm3'],\r\n  [4, 'M3'],\r\n  [5, 'P4'],\r\n  [6, 'aug4'],\r\n  [7, 'P5'],\r\n  [8, 'm6'],\r\n  [9, 'M6'],\r\n  [10, 'm7'],\r\n  [11, 'M7'],\r\n  [12, 'P8']\r\n])\r\n\r\n/**\r\n * Estimates a difficulty score for playing a set of notes.\r\n * Can be used for an entire piece or measure-by-measure.\r\n *\r\n * @todo different modi, e.g. for piano or guitar (fingering is different)\r\n * @param {Note[]} notes notes\r\n * @param {string} mode mode\r\n * @param {number[]} fingering finger as number for each note, same order\r\n * @returns {number} difficulty, can range within [0, infinity)\r\n * @throws {'Invalid mode parameter'} when mode is invalid\r\n */\r\n// export function estimateDifficulty(notes, mode, fingering) {\r\n//     if (mode === 'noteDensity') {\r\n//         // Naive mode, only look at density of notes\r\n//         const startTimeExtent = extent(notes, d => d.start);\r\n//         return notes.length / startTimeExtent;\r\n//     } else if (mode === 'fingering') {\r\n//         // TODO: check complexity of fingering\r\n//     }\r\n//     throw new Error('Invalid mode parameter');\r\n// }\r\n\r\n/**\r\n * Creates a track of metronome ticks for a given tempo and meter.\r\n *\r\n * @param {number} tempo tempo in bpm, e.g. 120\r\n * @param {number[]} meter e.g. [4, 4]\r\n * @param {number} duration duration of the resulting track in seconds\r\n * @returns {object[]} metronome track with {time: number, accent: boolean}\r\n */\r\nexport function metronomeTrackFromTempoAndMeter (tempo = 120, meter = [4, 4], duration = 60) {\r\n  const track = []\r\n  const secondsPerBeat = bpmToSecondsPerBeat(tempo) / (meter[1] / 4)\r\n  let currentTime = 0\r\n  while (currentTime <= duration) {\r\n    for (let beat = 0; beat < meter[0]; beat++) {\r\n      track.push({\r\n        time: roundToNDecimals(currentTime, 4),\r\n        accent: beat % meter[0] === 0\r\n      })\r\n      currentTime += secondsPerBeat\r\n      if (currentTime > duration) {\r\n        return track\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Creates a track of metronome ticks for a given music piece.\r\n *\r\n * @param {MusicPiece} musicPiece music piece\r\n * @param {number} [tempoFactor=1] rescale the tempo of the metronome, e.g. 2\r\n *      for twice the speed\r\n * @returns {object[]} metronome track with {time: number, accent: boolean}\r\n */\r\nexport function metronomeTrackFromMusicPiece (musicPiece, tempoFactor = 1) {\r\n  const { duration, tempos, timeSignatures } = musicPiece\r\n  const track = []\r\n  let currentTime = 0\r\n  // Time signatures\r\n  const initialTimeSig = timeSignatures[0].signature ?? [4, 4]\r\n  let [beatCount, beatType] = initialTimeSig\r\n  const timeSigsTodo = timeSignatures.slice(1)\r\n  // Tempi\r\n  const initialTempo = tempos[0].bpm ?? 120\r\n  let secondsPerBeat = bpmToSecondsPerBeat(initialTempo) / (beatType / 4)\r\n  const temposTodo = tempos.slice(1)\r\n  while (currentTime <= duration) {\r\n    // Always use the most recent tempo and meter\r\n    const lookahead = currentTime + secondsPerBeat\r\n    if (timeSigsTodo.length > 0 && timeSigsTodo[0].time <= lookahead) {\r\n      // console.log(\r\n      //     'timesig change to', timeSigsTodo[0].signature,\r\n      //     'after', track.length,\r\n      //     'beeps, at', currentTime);\r\n      [beatCount, beatType] = timeSigsTodo[0].signature\r\n      timeSigsTodo.shift()\r\n    }\r\n    if (temposTodo.length > 0 && temposTodo[0].time <= lookahead) {\r\n      // console.log(\r\n      //     'tempo change to', temposTodo[0].bpm,\r\n      //     'after', track.length,\r\n      //     'beeps, at', currentTime);\r\n      secondsPerBeat = bpmToSecondsPerBeat(temposTodo[0].bpm) / (beatType / 4)\r\n      temposTodo.shift()\r\n    }\r\n    for (let beat = 0; beat < beatCount; beat++) {\r\n      track.push({\r\n        time: roundToNDecimals(currentTime / tempoFactor, 3),\r\n        accent: beat === 0\r\n      })\r\n      currentTime += secondsPerBeat\r\n      if (currentTime > duration) {\r\n        return track\r\n      }\r\n    }\r\n  }\r\n  return track\r\n}\r\n", "import { getMidiNoteByNr } from '../fileFormats/Midi.js'\n\n/**\n * Stores a sequence of pitches and provides some methods to simplify and\n * manipulate it.\n *\n * @todo implement keepOnlyHighestConcurrentNotes\n */\nclass PitchSequence {\n  /**\n     * @param {number[]} pitches pitches\n     */\n  constructor (pitches = []) {\n    this._pitches = pitches\n  }\n\n  /**\n     * Creates a pitch sequence from an array of Notes\n     *\n     * @param {Note[]} notes notes\n     * @returns {PitchSequence} pitch sequence\n     */\n  static fromNotes (notes = []) {\n    const pitches = [...notes]\n      .sort((a, b) => {\n        if (a.start === b.start) {\n          return a.pitch - b.pitch\n        }\n        return a.start - b.start\n      })\n      .map(d => d.pitch)\n    return new PitchSequence(pitches)\n  }\n\n  /**\n     * @param {string} string a string of Unicode characters\n     * @returns {PitchSequence} pitch sequence\n     */\n  static fromCharString (string) {\n    if (!string || string.length === 0) { return new PitchSequence() }\n    const pitches = [...string].map((d, index) => string.charCodeAt(index))\n    return new PitchSequence(pitches)\n  }\n\n  /**\n     * @returns {number[]} pitches\n     */\n  getPitches () {\n    return this._pitches\n  }\n\n  /**\n     * @returns {number} number of pitches\n     */\n  length () {\n    return this._pitches.length\n  }\n\n  /**\n     * Turns pitch sequence into a string by turning each  pitch into a character\n     * (based on Unicode index)\n     *\n     * @returns {string} string representation of note pitches\n     */\n  toCharString () {\n    if (!this._pitches || this._pitches.length === 0) {\n      return ''\n    }\n    return String.fromCharCode(...this._pitches)\n  }\n\n  /**\n     * @returns {string} a string with the notes' names\n     */\n  toNoteNameString () {\n    return this._pitches.map(p => getMidiNoteByNr(p).label).join(' ')\n  }\n\n  /**\n     * Reverses the order of pitches in this PitchSequence\n     *\n     * @returns {PitchSequence} this\n     */\n  reverse () {\n    this._pitches = this._pitches.reverse()\n    return this\n  }\n\n  /**\n     * Takes a sequence of MIDI pitches and nomralizes them to be in [0, 11]\n     *\n     * @returns {PitchSequence} this\n     */\n  removeOctaves () {\n    this._pitches = this._pitches.map(d => d % 12)\n    return this\n  }\n\n  /**\n     * Transforms note pitches to intervals, i.e. diffrences between to subsequent\n     * notes: C, C#, C, D => 1, -1, 2\n     *\n     * @returns {number[]} intervals\n     */\n  toIntervals () {\n    const p = this._pitches\n    if (!p || p.length === 0 || p.length < 2) {\n      return []\n    }\n    const result = Array.from({ length: p.length - 1 })\n    for (let index = 1; index < p.length; index++) {\n      result[index - 1] = p[index] - p[index - 1]\n    }\n    return result\n  }\n\n  /**\n     * @returns {PitchSequence} clone\n     */\n  clone () {\n    return new PitchSequence(this._pitches)\n  }\n\n  /**\n     * Returns true if this NoteArray and otherNoteArray have equal attributes.\n     *\n     * @param {NoteArray} otherPitchSequence another NoteArray\n     * @returns {boolean} true if equal\n     */\n  equals (otherPitchSequence) {\n    if (!(otherPitchSequence instanceof PitchSequence)) {\n      return false\n    }\n    const p = otherPitchSequence.getPitches()\n    if (this._pitches.length !== p.length) {\n      return false\n    }\n    for (const [index, element] of p.entries()) {\n      if (this._pitches[index] !== element) {\n        return false\n      }\n    }\n    return true\n  }\n}\n\nexport default PitchSequence\n", "import * as d3 from 'd3'\r\n\r\n/**\r\n * @module graphics/Canvas\r\n * @todo combine multiple canvases into one, by drawing over common background\r\n * @todo save canvas as file https://www.digitalocean.com/community/tutorials/js-canvas-toblob\r\n */\r\n\r\n/**\r\n * Sets up a canvas rescaled to device pixel ratio\r\n *\r\n * @param {HTMLCanvasElement} canvas canvas element\r\n * @returns {CanvasRenderingContext2D} canvas rendering context\r\n */\r\nexport function setupCanvas (canvas) {\r\n  // Fix issues when importing musicvis-lib in Node.js\r\n  if (!window) { return }\r\n  // Get the device pixel ratio, falling back to 1.\r\n  const dpr = window.devicePixelRatio || 1\r\n  // Get the size of the canvas in CSS pixels.\r\n  const rect = canvas.getBoundingClientRect()\r\n  // Give the canvas pixel dimensions of their CSS\r\n  // sizes times the device pixel ratio.\r\n  canvas.width = rect.width * dpr\r\n  canvas.height = rect.height * dpr\r\n  const context = canvas.getContext('2d')\r\n  // Scale all drawing operations by the dpr\r\n  context.scale(dpr, dpr)\r\n  return context\r\n}\r\n\r\n/**\r\n * Draws a stroked straight line.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x1 x coordinate of the start\r\n * @param {number} y1 y coordinate of the start\r\n * @param {number} x2 x coordinate of end\r\n * @param {number} y2 y coordinate of end\r\n * @returns {void}\r\n * @example\r\n *      // Set the strokeStyle first\r\n *      context.strokeStyle = 'black';\r\n *      // Let's draw an X\r\n *      Canvas.drawLine(context, 0, 0, 50, 50);\r\n *      Canvas.drawLine(context, 0, 50, 50, 0);\r\n */\r\nexport function drawLine (context, x1, y1, x2, y2) {\r\n  context.beginPath()\r\n  context.moveTo(x1, y1)\r\n  context.lineTo(x2, y2)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a stroked straight horizontal line.\r\n *\r\n * @deprecated Use context.fillRect(x1, y, x2-x1, strokeWidth)\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x1 x coordinate of the start\r\n * @param {number} y y coordinate of the start\r\n * @param {number} x2 x coordinate of end\r\n * @returns {void}\r\n */\r\nexport function drawHLine (context, x1, y, x2) {\r\n  context.beginPath()\r\n  context.moveTo(x1, y)\r\n  context.lineTo(x2, y)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a stroked straight vertical line.\r\n *\r\n * @deprecated Use context.fillRect(x1, y1, strokeWidth, y2-y1)\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x coordinate of the start\r\n * @param {number} y1 y coordinate of the start\r\n * @param {number} y2 y coordinate of end\r\n * @returns {void}\r\n */\r\nexport function drawVLine (context, x, y1, y2) {\r\n  context.beginPath()\r\n  context.moveTo(x, y1)\r\n  context.lineTo(x, y2)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a line that bows to the right in the direction of travel (looks like a\r\n * left turn), thereby encoding direction. Useful for node-link graphs.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x1 x coordinate of the start\r\n * @param {number} y1 y coordinate of the start\r\n * @param {number} x2 x coordinate of end\r\n * @param {number} y2 y coordinate of end\r\n * @param {number} [strength=0.5] how much the bow deviates from a straight line\r\n *      towards the right, negative values will make bows to the left\r\n */\r\nexport function drawBowRight (context, x1, y1, x2, y2, strength = 0.5) {\r\n  const middleX = (x1 + x2) / 2\r\n  const middleY = (y1 + y2) / 2\r\n  const dx = x2 - x1\r\n  const dy = y2 - y1\r\n  const normalX = -dy\r\n  const normalY = dx\r\n  const cx = middleX + strength * normalX\r\n  const cy = middleY + strength * normalY\r\n  context.beginPath()\r\n  context.moveTo(x1, y1)\r\n  context.bezierCurveTo(cx, cy, cx, cy, x2, y2)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a stroked circle.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x coordinate of center\r\n * @param {number} y y coordinate of center\r\n * @param {number} radius radius\r\n * @returns {void}\r\n */\r\nexport function drawCircle (context, x, y, radius) {\r\n  context.beginPath()\r\n  context.arc(x, y, radius, 0, 2 * Math.PI)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a filled circle.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x coordinate of center\r\n * @param {number} y y coordinate of center\r\n * @param {number} radius radius\r\n * @returns {void}\r\n */\r\nexport function drawFilledCircle (context, x, y, radius) {\r\n  context.beginPath()\r\n  context.arc(x, y, radius, 0, 2 * Math.PI)\r\n  context.fill()\r\n}\r\n\r\n/**\r\n * Draws a filled triangle like this: /\\\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x coordinate of center\r\n * @param {number} y y coordinate of center\r\n * @param {number} halfSize half of the size\r\n * @returns {void}\r\n */\r\nexport function drawTriangle (context, x, y, halfSize) {\r\n  context.beginPath()\r\n  context.moveTo(x - halfSize, y + halfSize)\r\n  context.lineTo(x + halfSize, y + halfSize)\r\n  context.lineTo(x, y - halfSize)\r\n  context.closePath()\r\n  context.fill()\r\n}\r\n\r\n/**\r\n * Draws a diamond like this: <>\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x coordinate of center\r\n * @param {number} y y coordinate of center\r\n * @param {number} halfSize half of the size\r\n * @returns {void}\r\n */\r\nexport function drawDiamond (context, x, y, halfSize) {\r\n  context.beginPath()\r\n  context.moveTo(x - halfSize, y)\r\n  context.lineTo(x, y - halfSize)\r\n  context.lineTo(x + halfSize, y)\r\n  context.lineTo(x, y + halfSize)\r\n  context.closePath()\r\n  context.fill()\r\n}\r\n\r\n/**\r\n * Draws an X\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x coordinate of center\r\n * @param {number} y y coordinate of center\r\n * @param {number} halfSize half of the size\r\n * @returns {void}\r\n */\r\nexport function drawX (context, x, y, halfSize) {\r\n  context.save()\r\n  context.lineWidth = 2\r\n  context.beginPath()\r\n  context.moveTo(x - halfSize, y - halfSize)\r\n  context.lineTo(x + halfSize, y + halfSize)\r\n  context.moveTo(x - halfSize, y + halfSize)\r\n  context.lineTo(x + halfSize, y - halfSize)\r\n  context.stroke()\r\n  context.restore()\r\n}\r\n\r\n/**\r\n * Draws a trapezoid that looks like a rectangle but gets narrower at the right\r\n * end, so better show where one ends and the next begins.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x coordinate of top left\r\n * @param {number} y y coordinate of top left\r\n * @param {number} width width\r\n * @param {number} height height (of left side)\r\n * @param {number} height2 height (of right side)\r\n * @returns {void}\r\n */\r\nexport function drawNoteTrapezoid (context, x, y, width, height, height2) {\r\n  context.beginPath()\r\n  context.moveTo(x, y)\r\n  context.lineTo(x, y + height)\r\n  context.lineTo(x + width, y + (height / 2 + height2 / 2))\r\n  context.lineTo(x + width, y + (height / 2 - height2 / 2))\r\n  context.closePath()\r\n  context.fill()\r\n}\r\n\r\n/**\r\n * Draws a trapezoid that looks like a rectangle but gets narrower at the top\r\n * end, so better show where one ends and the next begins.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x coordinate of bounding rect's top left\r\n * @param {number} y y coordinate of bounding rect's top left\r\n * @param {number} width width (of bounding rect / bottom side)\r\n * @param {number} height height\r\n * @param {number} width2 width (of top side)\r\n * @returns {void}\r\n */\r\nexport function drawNoteTrapezoidUpwards (context, x, y, width, height, width2) {\r\n  context.beginPath()\r\n  context.lineTo(x, y + height)\r\n  context.lineTo(x + width, y + height)\r\n  context.lineTo(x + (width / 2 + width2 / 2), y)\r\n  context.lineTo(x + (width / 2 - width2 / 2), y)\r\n  context.closePath()\r\n  context.fill()\r\n}\r\n\r\n/**\r\n * Draws a rectangle with rounded corners, does not fill or stroke by itself\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x coordinate of bounding rect's top left\r\n * @param {number} y y coordinate of bounding rect's top left\r\n * @param {number} width width\r\n * @param {number} height height\r\n * @param {number} radius rounding radius\r\n * @returns {void}\r\n */\r\nexport function drawRoundedRect (context, x, y, width, height, radius) {\r\n  if (width < 0) { return }\r\n  context.beginPath()\r\n  context.moveTo(x + radius, y)\r\n  context.lineTo(x + width - radius, y)\r\n  context.quadraticCurveTo(x + width, y, x + width, y + radius)\r\n  context.lineTo(x + width, y + height - radius)\r\n  context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height)\r\n  context.lineTo(x + radius, y + height)\r\n  context.quadraticCurveTo(x, y + height, x, y + height - radius)\r\n  context.lineTo(x, y + radius)\r\n  context.quadraticCurveTo(x, y, x + radius, y)\r\n  context.closePath()\r\n}\r\n\r\n/**\r\n * Draws a horizontal, then vertical line to connect two points (or the other\r\n * way round when xFirst == false)\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x1 x coordinate of start\r\n * @param {number} y1 y coordinate of start\r\n * @param {number} x2 x coordinate of end\r\n * @param {number} y2 y coordinate of end\r\n * @param {boolean} [xFirst=true] controls whether to go first in x or y direction\r\n */\r\nexport function drawCornerLine (context, x1, y1, x2, y2, xFirst = true) {\r\n  context.beginPath()\r\n  context.moveTo(x1, y1)\r\n  xFirst\r\n    ? context.lineTo(x2, y1)\r\n    : context.lineTo(x1, y2)\r\n  context.lineTo(x2, y2)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a rounded version of drawCornerLine().\r\n * Only works for dendrograms drawn from top-dowm, use\r\n * drawRoundedCornerLineRightLeft for right-to-left dendrograms.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x1 x coordinate of start\r\n * @param {number} y1 y coordinate of start\r\n * @param {number} x2 x coordinate of end\r\n * @param {number} y2 y coordinate of end\r\n * @param {number} [maxRadius=25] maximum radius, fixes possible overlaps\r\n */\r\nexport function drawRoundedCornerLine (context, x1, y1, x2, y2, maxRadius = 25) {\r\n  const xDist = Math.abs(x2 - x1)\r\n  const yDist = Math.abs(y2 - y1)\r\n  const radius = Math.min(xDist, yDist, maxRadius)\r\n  const cx = x1 < x2 ? x2 - radius : x2 + radius\r\n  const cy = y1 < y2 ? y1 + radius : y1 - radius\r\n  context.beginPath()\r\n  context.moveTo(x1, y1)\r\n  if (x1 < x2) {\r\n    context.arc(cx, cy, radius, 1.5 * Math.PI, 2 * Math.PI)\r\n  } else {\r\n    context.arc(cx, cy, radius, 1.5 * Math.PI, Math.PI, true)\r\n  }\r\n  context.lineTo(x2, y2)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a rounded version of drawRoundedCornerLine for right-to-left\r\n * dendrograms.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x1 x coordinate of start\r\n * @param {number} y1 y coordinate of start\r\n * @param {number} x2 x coordinate of end\r\n * @param {number} y2 y coordinate of end\r\n * @param {number} [maxRadius=25] maximum radius, fixes possible overlaps\r\n */\r\nexport function drawRoundedCornerLineRightLeft (\r\n  context,\r\n  x1,\r\n  y1,\r\n  x2,\r\n  y2,\r\n  maxRadius = 25\r\n) {\r\n  const xDist = Math.abs(x2 - x1)\r\n  const yDist = Math.abs(y2 - y1)\r\n  const radius = Math.min(xDist, yDist, maxRadius)\r\n  const cx = x1 < x2 ? x1 + radius : x1 - radius\r\n  const cy = y1 < y2 ? y2 - radius : y2 + radius\r\n  context.beginPath()\r\n  context.moveTo(x1, y1)\r\n  if (y1 < y2) {\r\n    context.arc(cx, cy, radius, 0, 0.5 * Math.PI)\r\n  } else {\r\n    context.arc(cx, cy, radius, 0, 1.5 * Math.PI, true)\r\n  }\r\n  context.lineTo(x2, y2)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a hexagon, call context.fill() or context.stroke() afterwards.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} cx center x\r\n * @param {number} cy center y\r\n * @param {number} radius radius of the circle on which the points are placed\r\n */\r\nexport function drawHexagon (context, cx, cy, radius) {\r\n  context.beginPath()\r\n  for (let index = 0; index < 6; index++) {\r\n    // Start at 30\u00B0 TODO: allow to specify\r\n    const angle = (60 * index + 30) / 180 * Math.PI\r\n    const x = cx + Math.cos(angle) * radius\r\n    const y = cy + Math.sin(angle) * radius\r\n    if (index === 0) {\r\n      context.moveTo(x, y)\r\n    } else {\r\n      context.lineTo(x, y)\r\n    }\r\n  }\r\n  context.closePath()\r\n}\r\n\r\n/**\r\n * Draws a Bezier curve to connect to points in X direction.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x1 x coordinate of the first point\r\n * @param {number} y1 y coordinate of the first point\r\n * @param {number} x2 x coordinate of the second point\r\n * @param {number} y2 y coordinate of the second point\r\n */\r\nexport function drawBezierConnectorX (context, x1, y1, x2, y2) {\r\n  const deltaX = (x2 - x1) / 2\r\n  context.beginPath()\r\n  context.moveTo(x1, y1)\r\n  context.bezierCurveTo(x1 + deltaX, y1, x1 + deltaX, y2, x2, y2)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a Bezier curve to connect to points in Y direction.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x1 x coordinate of the first point\r\n * @param {number} y1 y coordinate of the first point\r\n * @param {number} x2 x coordinate of the second point\r\n * @param {number} y2 y coordinate of the second point\r\n */\r\nexport function drawBezierConnectorY (context, x1, y1, x2, y2) {\r\n  const deltaY = (y2 - y1) / 2\r\n  context.beginPath()\r\n  context.moveTo(x1, y1)\r\n  context.bezierCurveTo(x1, y1 + deltaY, x2, y1 + deltaY, x2, y2)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a rounded corner, requires x and y distances between points to be\r\n * equal.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x1 x coordinate of the first point\r\n * @param {number} y1 y coordinate of the first point\r\n * @param {number} x2 x coordinate of the second point\r\n * @param {number} y2 y coordinate of the second point\r\n * @param {boolean} turnLeft true for left turn, false for right turn\r\n * @param {number} roundness corner roundness between 0 (sharp) and 1 (round)\r\n */\r\nexport function drawRoundedCorner (context, x1, y1, x2, y2, turnLeft = true, roundness = 1) {\r\n  context.beginPath()\r\n  context.moveTo(x1, y1)\r\n  if (x1 === x2 || y1 === y2) {\r\n    context.lineTo(x2, y2)\r\n    context.stroke()\r\n    return\r\n  }\r\n  const radius = Math.abs(x2 - x1) * roundness\r\n  let cx\r\n  let cy\r\n  if (turnLeft) {\r\n    if (x1 < x2 && y1 < y2) {\r\n      cx = x1 + radius\r\n      cy = y2 - radius\r\n      context.arc(cx, cy, radius, 1 * Math.PI, 0.5 * Math.PI, true)\r\n    } else if (x1 > x2 && y1 < y2) {\r\n      cx = x2 + radius\r\n      cy = y1 + radius\r\n      context.arc(cx, cy, radius, 1.5 * Math.PI, 1 * Math.PI, true)\r\n    } else if (x1 > x2 && y1 > y2) {\r\n      cx = x1 - radius\r\n      cy = y2 + radius\r\n      context.arc(cx, cy, radius, 0, 1.5 * Math.PI, true)\r\n    } else {\r\n      cx = x2 - radius\r\n      cy = y1 - radius\r\n      context.arc(cx, cy, radius, 0.5 * Math.PI, 0, true)\r\n    }\r\n  } else {\r\n    if (x1 < x2 && y1 < y2) {\r\n      cx = x2 - radius\r\n      cy = y1 + radius\r\n      context.arc(cx, cy, radius, 1.5 * Math.PI, 0)\r\n    } else if (x1 > x2 && y1 < y2) {\r\n      cx = x1 - radius\r\n      cy = y2 - radius\r\n      context.arc(cx, cy, radius, 0, 0.5 * Math.PI)\r\n    } else if (x1 > x2 && y1 > y2) {\r\n      cx = x2 + radius\r\n      cy = y1 - radius\r\n      context.arc(cx, cy, radius, 0.5 * Math.PI, 1 * Math.PI, false)\r\n    } else {\r\n      cx = x1 + radius\r\n      cy = y2 + radius\r\n      context.arc(cx, cy, radius, Math.PI, 1.5 * Math.PI, false)\r\n    }\r\n  }\r\n  context.lineTo(x2, y2)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws an arc that connects similar parts.\r\n * Both parts must have the same width in pixels.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} startX1 x coordinate of the start of the first part\r\n * @param {number} startX2 x coordinate of the start of the second part\r\n * @param {number} length length in pixels of the parts\r\n * @param {number} yBottom bottom baseline y coordinate\r\n */\r\nexport function drawArc (context, startX1, startX2, length, yBottom) {\r\n  // Get center and radius\r\n  const radius = (startX2 - startX1) / 2\r\n  const cx = startX1 + radius + length / 2\r\n  context.lineWidth = length\r\n  context.beginPath()\r\n  context.arc(cx, yBottom, radius, Math.PI, 2 * Math.PI)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a more complex path and fills it.\r\n * Two arcs: One from startX1 to endX2 on the top, one from endX1 to startX2\r\n * below it.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} startX1 x coordinate of the start of the first part\r\n * @param {number} endX1 x coordinate of the end of the first part\r\n * @param {number} startX2 x coordinate of the start of the second part\r\n * @param {number} endX2 x coordinate of the end of the second part\r\n * @param {number} yBottom bottom baseline y coordinate\r\n */\r\nexport function drawAssymetricArc (context, startX1, endX1, startX2, endX2, yBottom) {\r\n  // Get center and radius\r\n  const radiusTop = (endX2 - startX1) / 2\r\n  if (radiusTop < 0) {\r\n    return\r\n  }\r\n  let radiusBottom = (startX2 - endX1) / 2\r\n  if (radiusBottom < 0) {\r\n    radiusBottom = 0\r\n  }\r\n  const cxTop = startX1 + radiusTop\r\n  const cxBottom = endX1 + radiusBottom\r\n  context.beginPath()\r\n  context.moveTo(startX1, yBottom)\r\n  context.arc(cxTop, yBottom, radiusTop, Math.PI, 2 * Math.PI)\r\n  context.lineTo(startX2, yBottom)\r\n  context.arc(cxBottom, yBottom, radiusBottom, 2 * Math.PI, Math.PI, true)\r\n  context.closePath()\r\n  context.fill()\r\n}\r\n\r\n/**\r\n * Draws a horizontal bracket like this |_____| (bottom)\r\n * or this |\"\"\"\"\"\"| (top).\r\n * Use a positive h for bottom and a negative one for top.\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number} x x position of the bracket's horizontal lines\r\n * @param {number} y y position of the bracket's horizontal lines\r\n * @param {number} w width of the bracket's horizontal lines\r\n * @param {number} h height of the bracket's vertical ticks\r\n */\r\nexport function drawBracketH (context, x, y, w, h) {\r\n  context.beginPath()\r\n  context.moveTo(x, y + h)\r\n  context.lineTo(x, y)\r\n  context.lineTo(x + w, y)\r\n  context.lineTo(x + w, y + h)\r\n  context.stroke()\r\n}\r\n\r\n/**\r\n * Draws a quadratic matrix onto a canvas\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {number[][]} matrix matrix\r\n * @param {number} [x=0] x position of the top left corner\r\n * @param {number} [y=0] y position of the top left corner\r\n * @param {number} [size=400] width and height in pixel\r\n * @param {Function} colorMap colormap from [min, max] to a color\r\n */\r\nexport function drawMatrix (\r\n  context,\r\n  matrix,\r\n  x = 0,\r\n  y = 0,\r\n  size = 400,\r\n  colorScale,\r\n  colorMap = d3.interpolateViridis\r\n) {\r\n  const cellSize = size / matrix.length\r\n  const paddedSize = cellSize * 1.01\r\n  colorScale = colorScale || d3\r\n    .scaleLinear()\r\n    .domain(d3.extent(matrix.flat()))\r\n    .range([1, 0])\r\n  for (let row = 0; row < matrix.length; row++) {\r\n    for (let col = 0; col < matrix.length; col++) {\r\n      context.fillStyle = colorMap(colorScale(matrix[row][col]))\r\n      context.fillRect(x, y, paddedSize, paddedSize)\r\n      x += cellSize\r\n    }\r\n    y += cellSize\r\n  }\r\n}\r\n\r\n/**\r\n * Draws a color ramp\r\n *\r\n * @param {CanvasRenderingContext2D} context canvas rendering context\r\n * @param {Function} colorMap colormap from [min, max] to a color\r\n */\r\nexport function drawColorRamp (context, w = 100, h = 10, colorMap = d3.interpolateRainbow) {\r\n  const scaleColor = d3.scaleLinear().domain([0, w])\r\n  for (let x = 0; x < w; ++x) {\r\n    context.fillStyle = colorMap(scaleColor(x))\r\n    context.fillRect(x, 0, 1.1, h)\r\n  }\r\n}\r\n", "/**\r\n * Allows to record audio blobs.\r\n *\r\n * @module input/AudioRecorder\r\n * @example <caption>Usage (only in async functions)</caption>\r\n *     const recorder = await recordAudio();\r\n *     recorder.start();\r\n *     // ...\r\n *     const audio = await recorder.stop();\r\n * stop() returns a Blob with audio data\r\n * @see https://medium.com/@bryanjenningz/how-to-record-and-play-audio-in-javascript-faa1b2b3e49b\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder\r\n * @returns {Promise} audio recorder\r\n */\r\nexport const recordAudio = () => {\r\n  // eslint-disable-next-line\r\n  return new Promise(async resolve => {\r\n    let stream\r\n    try {\r\n      stream = await navigator.mediaDevices.getUserMedia({ audio: true })\r\n    } catch (error) {\r\n      console.warn('[AudioInput] Cannot access audio', error)\r\n      return\r\n    }\r\n    const options = {\r\n      audioBitsPerSecond: 128_000\r\n    }\r\n    const mediaRecorder = new MediaRecorder(stream, options)\r\n    let audioChunks = []\r\n    // Add new data when it arrives\r\n    mediaRecorder.addEventListener('dataavailable', event => {\r\n      audioChunks.push(event.data)\r\n    })\r\n    // Starts recording\r\n    const start = () => {\r\n      if (!mediaRecorder) {\r\n        console.warn('[AudioInput] Cannot record audio, no microphone?')\r\n        return\r\n      }\r\n      if (mediaRecorder.state === 'recording') { return }\r\n      console.log(`[AudioInput] Recording @ ${mediaRecorder.audioBitsPerSecond} b/s`)\r\n      audioChunks = []\r\n      mediaRecorder.start()\r\n    }\r\n    // Stops recording\r\n    const stop = () =>\r\n      new Promise(resolve => {\r\n        if (!mediaRecorder) { return }\r\n        console.log('[AudioInput] Stopping audio recording')\r\n        mediaRecorder.addEventListener('stop', () => {\r\n          // Audio blob contains the data to store on the server\r\n          const blobOptions = { type: mediaRecorder.mimeType }\r\n          const audioBlob = new Blob(audioChunks, blobOptions)\r\n          // console.log(audioBlob);\r\n          resolve(audioBlob)\r\n        })\r\n        mediaRecorder.stop()\r\n      })\r\n    resolve({ start, stop })\r\n  })\r\n}\r\n", "import Note from '../types/Note.js'\n\n/**\n * Records incoming MIDI messages from a MIDI device.\n *\n * @param {Function} [onMessage] a callback function to get notfied of incoming\n *      messages\n * @module input/MidiRecorder\n * @example <caption>Usage (only in async functions)</caption>\n *     const recorder = await recordMidi();\n *     recorder.start();\n *     const notes = recorder.stop();\n * @returns {Promise} MIDI recorder\n */\nexport const recordMidi = (onMessage) => {\n  // eslint-disable-next-line\n  return new Promise(async resolve => {\n    let midiAccess\n    try {\n      midiAccess = await navigator.requestMIDIAccess()\n    } catch (error) {\n      console.warn('[MidiInput] Cannot access MIDI', error)\n      return\n    }\n    let messages = []\n    // Add new data when it arrives\n    const addMessage = (message) => {\n      if (onMessage) {\n        onMessage(message)\n      }\n      messages.push(message)\n    }\n    // Starts recording\n    const start = () => {\n      if (!midiAccess) {\n        console.warn('[MidiInput] Cannot record MIDI')\n        return\n      }\n      // Do this here, in case devices changed\n      for (const input of midiAccess.inputs.values()) {\n        input.onmidimessage = addMessage\n      }\n      console.log('[MidiInput] Starting recording')\n      messages = []\n    }\n    // Stops recording\n    const stop = () => {\n      if (!midiAccess) { return }\n      console.log('[MidiInput] Stopping recording')\n      // Process messages\n      const notes = processMidiMessagesToNotes(messages)\n      return notes\n    }\n    resolve({ start, stop })\n  })\n}\n\n/**\n * Parses MIDI messages to Notes\n *\n * @private\n * @param {Oject[]} messages MIDI messages as they come from the WebMidi API\n * @returns {Note[]} notes\n */\nfunction processMidiMessagesToNotes (messages) {\n  // Keep track of currently sounding notes\n  const currentNotes = new Map()\n  const notes = []\n  for (const message of messages) {\n    const device = message.target.name\n    const time = message.timeStamp\n    const commandAndChannel = message.data[0]\n    const channel = commandAndChannel % 16\n    const command = commandAndChannel - channel\n    const pitch = message.data[1]\n    // A velocity value might not be included with a noteOff command\n    const velocity = (message.data.length > 2) ? message.data[2] : 0\n    switch (command) {\n      case 128:\n        noteOff(notes, currentNotes, device, time, pitch, channel)\n        break\n      case 144:\n        if (velocity > 0) {\n          noteOn(currentNotes, device, time, pitch, channel, velocity)\n        } else {\n          noteOff(notes, currentNotes, device, time, pitch, channel)\n        }\n        break\n      case 224:\n        // TODO: handle pitch wheel?\n        break\n      default:\n      // TODO: handle other commands?\n    }\n  }\n  // Look for unfinished notes\n  if (currentNotes.size > 0) {\n    console.warn(`[MidiInput] Got ${currentNotes.size} unfinished notes`)\n  }\n  notes.sort((a, b) => a.start - b.start)\n  return notes\n}\n\n/**\n * Handles note-on messages\n *\n * @private\n * @param {Map} currentNotes Map with started but not yet ended notes\n * @param {string} device device name\n * @param {number} time time stamp of the message\n * @param {number} pitch MIDI pitch in [0, 127]\n * @param {number} channel MIDI channel\n * @param {number} velocity MIDI velocity\n */\nfunction noteOn (currentNotes, device, time, pitch, channel, velocity) {\n  const note = new Note(pitch, time / 1000, velocity, channel)\n  const key = `${device}-${channel}-${pitch}`\n  currentNotes.set(key, note)\n}\n\n/**\n * Handles note-off messages\n *\n * @private\n * @param {Note[]} notes finished notes\n * @param {Map} currentNotes Map with started but not yet ended notes\n * @param {string} device device name\n * @param {number} time time stamp of the message\n * @param {number} pitch MIDI pitch in [0, 127]\n * @param {number} channel MIDI channel\n */\nfunction noteOff (notes, currentNotes, device, time, pitch, channel) {\n  // Look for note start\n  const key = `${device}-${channel}-${pitch}`\n  if (!currentNotes.has(key)) {\n    console.warn(`[MidiInput] Missing note-on for note-off with key ${key}`)\n    return\n  }\n  const note = currentNotes.get(key)\n  note.end = time / 1000\n  notes.push(note)\n  currentNotes.delete(key)\n}\n", "import Note from '../types/Note.js'\n\n/**\n * Handles incoming MIDI messages from a MIDI device.\n *\n * @module input/MidiInputManager\n */\nclass MidiInputManager {\n  /**\n       * Constructor with callback functions\n       *\n       * @param {Function} getMidiLiveData a function called by this object to get\n       *      the currently recorded MIDI notes from App.js, where the\n       *      MidiInputManager instance should be created\n       *      Example for how to defined getMidiLiveData as method in App.js:\n       *          getMidiLiveData = () => this.state.midiLiveData;\n       * @param {Function} setMidiLiveData a function called by this object to\n       *      update the currently MIDI notes in App.js\n       *      Example:\n       *          setMidiLiveData = (data) => {\n       *              // Work-around so note_off event handling can\n       *              // immediately find the note_on event\n       *              this.state.midiLiveData = data;\n       *              this.setState({ midiLiveData: data });\n       *          };\n       * @param {Function} addCurrentNote a function called by this object to add\n       *      a currently played note (e.g. currently pressed piano key)\n       *      Example:\n       *          addCurrentNote = (note) => {\n       *              const newMap = new Map(this.state.currentNotes).set(note.pitch, note);\n       *              this.setState({ currentNotes: newMap });\n       *          }\n       * @param {Function} removeCurrentNote a function called by this object to\n       *      remove a currently played note\n       *      Example:\n       *          removeCurrentNote = (pitch) => {\n       *              const newMap = new Map(this.state.currentNotes).delete(pitch);\n       *              this.setState({ currentNotes: newMap });\n       *          }\n       */\n  constructor (\n    getMidiLiveData,\n    setMidiLiveData,\n    addCurrentNote = () => { },\n    removeCurrentNote = () => { }\n  ) {\n    this._getMidiLiveData = getMidiLiveData\n    this._setMidiLiveData = setMidiLiveData\n    this._addCurrentNote = addCurrentNote\n    this._removeCurrentNote = removeCurrentNote\n    // Request MIDI access\n    if (navigator.requestMIDIAccess) {\n      navigator.requestMIDIAccess().then(this._onMIDISuccess, this._onMIDIFailure)\n    } else {\n      console.error('[MidiInput] WebMIDI is not supported in this browser.')\n      throw new Error('Browser does not support WebMIDI')\n    }\n  }\n\n  /**\n       * Handles a successful MIDI access request\n       *\n       * @private\n       * @param {*} midiAccess MIDI access\n       */\n  _onMIDISuccess (midiAccess) {\n    // console.log(midiAccess);\n    console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} input devices`)\n    for (const input of midiAccess.inputs.values()) {\n      console.log(` - ${input.name}`)\n      input.onmidimessage = this._handleMIDIMessage\n    }\n    console.groupEnd()\n    // console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} output devices`);\n    // for (let output of midiAccess.outputs.values()) {\n    //     console.log(` - ${output.name}`);\n    // }\n    // console.groupEnd();\n  };\n\n  /**\n       * Handles MIDI access errors\n       *\n       * @private\n       * @param {*} error error\n       */\n  _onMIDIFailure (error) {\n    console.error('[MidiInput] Cannot access MIDI devices.', error)\n  }\n\n  /**\n       * Handles incoming MIDI messages\n       *\n       * @private\n       * @param {*} message MIDI message\n       */\n  _handleMIDIMessage (message) {\n    // console.log(message);\n    const device = message.target.name\n    const commandAndChannel = message.data[0]\n    const channel = commandAndChannel % 16\n    const command = commandAndChannel - channel\n    const time = message.timeStamp\n    const pitch = message.data[1]\n    // A velocity value might not be included with a noteOff command\n    const velocity = (message.data.length > 2) ? message.data[2] : 0\n    switch (command) {\n      case 128:\n        this._noteOff(device, time, pitch, channel)\n        break\n      case 144:\n        if (velocity > 0) {\n          this._noteOn(device, time, pitch, channel, velocity)\n        } else {\n          this._noteOff(device, time, pitch, channel)\n        }\n        break\n      case 224:\n        // TODO: handle pitch wheel?\n        break\n      default:\n      // TODO: handle other commands?\n    }\n  };\n\n  /**\n       * Handles note-on messages\n       *\n       * @private\n       * @param {string} device device name\n       * @param {number} time time stamp of the message\n       * @param {number} pitch MIDI pitch in [0, 127]\n       * @param {number} channel MIDI channel\n       * @param {number} velocity MIDI velocity\n       */\n  _noteOn (device, time, pitch, channel, velocity) {\n    const note = new Note(pitch, time / 1000, velocity, channel)\n    // Add current note\n    this._addCurrentNote(note)\n    // Update recorded MIDI data\n    // TODO: probably better to only update on note-off,\n    // Then we need internal cache\n    // But this might be good, since only 'unfinished' notes need to be checked on note-off,\n    // so we can remove finished notes from the cache\n    let midiData = this._getMidiLiveData()\n    midiData = [...midiData, note]\n    this._setMidiLiveData(midiData)\n  }\n\n  /**\n       * Handles note-off messages by updating the end time of the corresponding\n       * note\n       *\n       * @private\n       * @param {string} device device name\n       * @param {number} time time stamp of the message\n       * @param {number} pitch MIDI pitch in [0, 127]\n       * @param {number} channel MIDI channel\n       */\n  _noteOff (device, time, pitch, channel) {\n    const midiData = this._getMidiLiveData()\n    if (midiData.length === 0) {\n      // If we have to wait for the setState to process, try again\n      setTimeout(() => this._noteOff(time, pitch), 10)\n    }\n    // Go back to latest note with the same pitch and channel and add the end time\n    let index = midiData.length - 1\n    // TODO: if there are multiple instruments or channels, check also for those\n    while (midiData[index].pitch !== pitch || midiData[index].channel !== channel) {\n      index--\n      if (index < 0) {\n        console.warn('[MidiInput] Did not find note-on event for note-off event!')\n        break\n      }\n    }\n    if (index >= 0) {\n      // Note successfully found, update data\n      midiData[index].end = time / 1000\n      this._setMidiLiveData(midiData)\n      this._removeCurrentNote(pitch)\n    }\n  }\n}\n\nexport default MidiInputManager\n", "import { randomNormal, randomInt, group } from 'd3'\r\nimport { choose, randFloat } from '../utils/MathUtils.js'\r\nimport Note from '../types/Note.js'\r\n\r\n/**\r\n * @module instruments/Drums\r\n */\r\n\r\n/**\r\n * Drum parts\r\n *\r\n * @type {object}\r\n */\r\nexport const DRUM_PARTS = {\r\n  Agogo: 'DRUM_PARTS.Agogo',\r\n  Cabasa: 'DRUM_PARTS.Cabasa',\r\n  Castanets: 'DRUM_PARTS.Castanets',\r\n  China: 'DRUM_PARTS.China',\r\n  Claves: 'DRUM_PARTS.Claves',\r\n  Conga: 'DRUM_PARTS.Conga',\r\n  Cowbell: 'DRUM_PARTS.Cowbell',\r\n  Crash: 'DRUM_PARTS.Crash',\r\n  Cuica: 'DRUM_PARTS.Cuica',\r\n  Cymbal: 'DRUM_PARTS.Cymbal',\r\n  Golpe: 'DRUM_PARTS.Golpe',\r\n  Grancassa: 'DRUM_PARTS.Grancassa',\r\n  Guiro: 'DRUM_PARTS.Guiro',\r\n  Hand_Clap: 'DRUM_PARTS.Hand Clap',\r\n  Hand: 'DRUM_PARTS.Hand',\r\n  Hi_Hat: 'DRUM_PARTS.Hi Hat',\r\n  High_Floor_Tom: 'DRUM_PARTS.High Floor Tom',\r\n  High_Tom: 'DRUM_PARTS.High Tom',\r\n  Kick: 'DRUM_PARTS.Kick',\r\n  Low_Floor_Tom: 'DRUM_PARTS.Low Floor Tom',\r\n  Low_Tom: 'DRUM_PARTS.Low Tom',\r\n  Mid_Tom: 'DRUM_PARTS.Mid Tom',\r\n  Pedal_Hi_Hat: 'DRUM_PARTS.Pedal Hi Hat',\r\n  Ride: 'DRUM_PARTS.Ride',\r\n  Right_Maraca: 'DRUM_PARTS.Right Maraca',\r\n  Shaker: 'DRUM_PARTS.Shaker',\r\n  Snare: 'DRUM_PARTS.Snare',\r\n  Splash: 'DRUM_PARTS.Splash',\r\n  Surdo: 'DRUM_PARTS.Surdo',\r\n  Timbale: 'DRUM_PARTS.Timbale',\r\n  Tinkle_Bell: 'DRUM_PARTS.Tinkle Bell',\r\n  Triangle: 'DRUM_PARTS.Triangle',\r\n  Vibraslap: 'DRUM_PARTS.Vibraslap',\r\n  Whistle_high: 'DRUM_PARTS.Whistle high',\r\n  Whistle_low: 'DRUM_PARTS.Whistle low',\r\n  Woodblock_high: 'DRUM_PARTS.Woodblock high',\r\n  Woodblock_low: 'DRUM_PARTS.Woodblock low'\r\n}\r\n\r\n/**\r\n * Drum actions\r\n *\r\n * @type {object}\r\n */\r\nexport const DRUM_ACTIONS = {\r\n  choke: 'DRUM_ACTIONS.choke',\r\n  finger: 'DRUM_ACTIONS.finger',\r\n  hit: 'DRUM_ACTIONS.hit',\r\n  mute: 'DRUM_ACTIONS.mute',\r\n  return: 'DRUM_ACTIONS.return',\r\n  scrapReturn: 'DRUM_ACTIONS.scrapReturn',\r\n  sideStick: 'DRUM_ACTIONS.sideStick',\r\n  slap: 'DRUM_ACTIONS.slap'\r\n}\r\n\r\n/**\r\n * Drum parts and actions\r\n *\r\n * @todo still incomplete\r\n * @type {object}\r\n */\r\nexport const DRUM_PARTS_ACTIONS = {\r\n  Agogo_high_hit: 'DRUM_PARTS_ACTIONS.Agogo high (hit)',\r\n  Agogo_low_hit: 'DRUM_PARTS_ACTIONS.Agogo low (hit)',\r\n  Cabasa_return: 'DRUM_PARTS_ACTIONS.Cabasa (return)',\r\n  Castanets_hit: 'DRUM_PARTS_ACTIONS.Castanets (hit)',\r\n  China_choke: 'DRUM_PARTS_ACTIONS.China (choke)',\r\n  Claves_hit: 'DRUM_PARTS_ACTIONS.Claves (hit)',\r\n  Conga_high_slap: 'DRUM_PARTS_ACTIONS.Conga high (slap)',\r\n  Conga_low_mute: 'DRUM_PARTS_ACTIONS.Conga low (mute)',\r\n  Cowbell_high_tip: 'DRUM_PARTS_ACTIONS.Cowbell high (tip)',\r\n  Crash_medium_choke: 'DRUM_PARTS_ACTIONS.Crash medium (choke)',\r\n  Cuica_mute: 'DRUM_PARTS_ACTIONS.Cuica (mute)',\r\n  Cuica_open: 'DRUM_PARTS_ACTIONS.Cuica (open)',\r\n  Cymbal_hit: 'DRUM_PARTS_ACTIONS.Cymbal (hit)',\r\n  Golpe_finger: 'DRUM_PARTS_ACTIONS.Golpe (finger)',\r\n  Grancassa_hit: 'DRUM_PARTS_ACTIONS.Grancassa (hit)',\r\n  Guiro_hit: 'DRUM_PARTS_ACTIONS.Guiro (hit)',\r\n  Guiro_scrap_return: 'DRUM_PARTS_ACTIONS.Guiro (scrap-return)',\r\n  Hand_Clap_hit: 'DRUM_PARTS_ACTIONS.Hand Clap (hit)',\r\n  Hand_slap: 'DRUM_PARTS_ACTIONS.Hand (slap)',\r\n  Hi_Hat_closed: 'DRUM_PARTS_ACTIONS.Hi-Hat (closed)',\r\n  Hi_Hat_open: 'DRUM_PARTS_ACTIONS.Hi-Hat (open)',\r\n  High_Floor_Tom_hit: 'DRUM_PARTS_ACTIONS.High Floor Tom (hit)',\r\n  High_Tom_hit: 'DRUM_PARTS_ACTIONS.High Tom (hit)',\r\n  Kick_hit: 'DRUM_PARTS_ACTIONS.Kick (hit)',\r\n  Low_Floor_Tom_hit: 'DRUM_PARTS_ACTIONS.Low Floor Tom (hit)',\r\n  Low_Tom_hit: 'DRUM_PARTS_ACTIONS.Low Tom (hit)',\r\n  Mid_Tom_hit: 'DRUM_PARTS_ACTIONS.Mid Tom (hit)',\r\n  Pedal_Hi_Hat_hit: 'DRUM_PARTS_ACTIONS.Pedal Hi-Hat (hit)',\r\n  Ride_choke: 'DRUM_PARTS_ACTIONS.Ride (choke)',\r\n  Right_Maraca_return: 'DRUM_PARTS_ACTIONS.Right Maraca (return)',\r\n  Shaker_return: 'DRUM_PARTS_ACTIONS.Shaker (return)',\r\n  Snare_hit: 'DRUM_PARTS_ACTIONS.Snare (hit)',\r\n  Snare_side_stick: 'DRUM_PARTS_ACTIONS.Snare (side stick)',\r\n  Splash_choke: 'DRUM_PARTS_ACTIONS.Splash (choke)',\r\n  Surdo_hit: 'DRUM_PARTS_ACTIONS.Surdo (hit)',\r\n  Surdo_mute: 'DRUM_PARTS_ACTIONS.Surdo (mute)',\r\n  Timbale_high_hit: 'DRUM_PARTS_ACTIONS.Timbale high (hit)',\r\n  Timbale_low_hit: 'DRUM_PARTS_ACTIONS.Timbale low (hit)',\r\n  Tinkle_Bell_hit: 'DRUM_PARTS_ACTIONS.Tinkle Bell (hit)',\r\n  Triangle_hit: 'DRUM_PARTS_ACTIONS.Triangle (hit)',\r\n  Triangle_mute: 'DRUM_PARTS_ACTIONS.Triangle (mute)',\r\n  Vibraslap_hit: 'DRUM_PARTS_ACTIONS.Vibraslap (hit)',\r\n  Whistle_high_hit: 'DRUM_PARTS_ACTIONS.Whistle high (hit)',\r\n  Whistle_low_hit: 'DRUM_PARTS_ACTIONS.Whistle low (hit)',\r\n  Woodblock_high_hit: 'DRUM_PARTS_ACTIONS.Woodblock high (hit)',\r\n  Woodblock_low_hit: 'DRUM_PARTS_ACTIONS.Woodblock low (hit)'\r\n}\r\n\r\n/**\r\n * Pitches that are mapped onto themselves are included for other information.\r\n * Millenium MPS-850 https://www.thomann.de/de/millenium_mps_850_e_drum_set.htm\r\n *\r\n * Notation info (line and shape of symbol) so drum notation can generate a lookup from this\r\n * https://en.wikipedia.org/wiki/Percussion_notation#/media/File:Sibelius_drum_legend.png\r\n * Lines start with 0 at the top above the top most horizontal notation line,\r\n * using incremental integers for every possible position, i.e. for on and between lines\r\n *\r\n * Legend:\r\n *  Map key: The orignal pitch from the input data\r\n *  repPitch: Replacement pitch, used to simplify multiple zones into one\r\n *  zone: Zone of the instrument this pitch comes from\r\n *  order: visual order ranking of this intrumentin the UI (top-bottom or left-right)\r\n *  line: y position in the drum notation (using integers for every possible position)\r\n *  shape: Note shape in notation: triangle, <>, x, o, ostroke, xstroke\r\n *  label: Short label for this intrument\r\n *  name: Full name of this instrument\r\n *\r\n * @type {Map<number,object>}\r\n */\r\nexport const drumPitchReplacementMapMPS850 = new Map([\r\n  // Crash 1\r\n  [49, { repPitch: 49, zone: 1, order: 10, line: -1, shape: 'o', label: 'CC1', name: 'Crash Cymbal 1' }],\r\n  [55, { repPitch: 49, zone: 2, order: 11, line: -1, shape: 'o', label: 'CC1', name: 'Crash Cymbal 1' }],\r\n  // Crash 2\r\n  [52, { repPitch: 57, zone: 1, order: 20, line: 0, shape: 'o', label: 'CC2', name: 'Crash Cymbal 2' }],\r\n  [57, { repPitch: 57, zone: 2, order: 21, line: 0, shape: 'o', label: 'CC2', name: 'Crash Cymbal 2' }],\r\n  // Hi-hat stick\r\n  [22, { repPitch: 46, zone: 1, order: 30, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\r\n  [26, { repPitch: 46, zone: 2, order: 31, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\r\n  [42, { repPitch: 46, zone: 3, order: 32, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\r\n  [46, { repPitch: 46, zone: 4, order: 33, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\r\n  // Hi-hat pedal\r\n  [44, { repPitch: 44, zone: 1, order: 40, line: 9, shape: 'o', label: 'HHP', name: 'Hi-Hat Pedal' }],\r\n  // Ride\r\n  [51, { repPitch: 51, zone: 1, order: 50, line: 1, shape: 'x', label: 'Rd', name: 'Ride Cymbal' }],\r\n  [53, { repPitch: 51, zone: 2, order: 51, line: 1, shape: 'x', label: 'Rd', name: 'Ride Cymbal' }],\r\n  [59, { repPitch: 51, zone: 3, order: 52, line: 1, shape: 'x', label: 'Rd', name: 'Ride Cymbal' }],\r\n  // Snare\r\n  [38, { repPitch: 38, zone: 1, order: 60, line: 4, shape: 'o', label: 'SN', name: 'Snare' }],\r\n  [40, { repPitch: 38, zone: 2, order: 61, line: 4, shape: 'o', label: 'SN', name: 'Snare' }],\r\n  // Tom 1\r\n  [48, { repPitch: 48, zone: 1, order: 90, line: 2, shape: 'o', label: 'T1', name: 'Tom 1' }],\r\n  [50, { repPitch: 48, zone: 2, order: 91, line: 2, shape: 'o', label: 'T1', name: 'Tom 1' }],\r\n  // Tom 2\r\n  [45, { repPitch: 45, zone: 1, order: 100, line: 3, shape: 'o', label: 'T2', name: 'Tom 2' }],\r\n  [47, { repPitch: 45, zone: 2, order: 101, line: 3, shape: 'o', label: 'T2', name: 'Tom 2' }],\r\n  // Stand tom 1\r\n  [43, { repPitch: 43, zone: 1, order: 70, line: 5, shape: 'o', label: 'ST1', name: 'Stand Tom 1' }],\r\n  [58, { repPitch: 43, zone: 2, order: 71, line: 5, shape: 'o', label: 'ST1', name: 'Stand Tom 1' }],\r\n  // Stand tom 2\r\n  [39, { repPitch: 41, zone: 1, order: 80, line: 6, shape: 'o', label: 'ST2', name: 'Stand Tom 2' }],\r\n  [41, { repPitch: 41, zone: 2, order: 81, line: 6, shape: 'o', label: 'ST2', name: 'Stand Tom 2' }],\r\n  // Bass drum\r\n  [35, { repPitch: 36, zone: 1, order: 110, line: 8, shape: 'o', label: 'BD', name: 'Bass Drum' }],\r\n  [36, { repPitch: 36, zone: 2, order: 111, line: 8, shape: 'o', label: 'BD', name: 'Bass Drum' }]\r\n])\r\n\r\n/**\r\n * Generates a variation of an array of notes by adding, removing or changing notes\r\n *\r\n * @param {Note[]} data array of notes\r\n * @param {number} deviation width of the Gauss kernel\r\n * @param {number} pAdd probability of adding a note after each note\r\n * @param {number} pRemove probability of removing each note\r\n * @returns {Note[]} variated Note array\r\n */\r\nexport function generateDrumVariation (data, deviation = 1, pAdd = 0.1, pRemove = 0.1) {\r\n  // Only use pitches that occur in the GT data\r\n  const usedPitches = new Set()\r\n  for (const note of data) {\r\n    usedPitches.add(note.pitch)\r\n  }\r\n  const pitches = [...usedPitches]\r\n  // Create variation by adding, removing, and shifting notes\r\n  const randVelocity = randomInt(15, 128)\r\n  const randTime = randomNormal(0, deviation)\r\n  const variation = []\r\n  for (const note of data) {\r\n    // Add and remove notes at random\r\n    if (randFloat(0, 1) < pAdd) {\r\n      // Add another note\r\n      const start = note.start + randFloat(0, 1)\r\n      const end = start + randFloat(0, 1)\r\n      const velocity = randVelocity()\r\n      const pitch = choose(pitches)\r\n      variation.push(new Note(\r\n        pitch,\r\n        start,\r\n        velocity,\r\n        0,\r\n        end\r\n      ))\r\n    }\r\n    if (randFloat(0, 1) < pRemove) {\r\n      // Remove note (just add nothing to varation)\r\n    } else {\r\n      // Shift timings at random\r\n      const start = note.start + randTime()\r\n      const end = note.end + randTime()\r\n      // Get new note\r\n      const newNote = Note.from(note)\r\n      newNote.start = Math.min(start, end)\r\n      newNote.end = Math.max(start, end)\r\n      variation.push(newNote)\r\n    }\r\n  }\r\n  // Sort notes by start just in case\r\n  variation.sort((a, b) => a.start - b.start)\r\n  return variation\r\n}\r\n\r\n/**\r\n * Replaces pitches based on replacementMap\r\n *\r\n * @param {Note[]} notes notes\r\n * @param {Map} replacementMap a map pitch->replacementPitch\r\n * @returns {Notes[]} notes with replaced pitches\r\n * @throws {'No replacement map given!'} when replacementMap is missing\r\n */\r\nexport function simplifyDrumPitches (notes, replacementMap) {\r\n  if (!replacementMap || !(replacementMap instanceof Map)) {\r\n    throw new Error('No replacement map given!')\r\n  }\r\n  const errors = new Set()\r\n  const simplified = notes.map(note => {\r\n    const oldPitch = note.pitch\r\n    let newPitch = oldPitch\r\n    if (!replacementMap.has(oldPitch)) {\r\n      errors.add(oldPitch)\r\n    } else {\r\n      newPitch = replacementMap.get(oldPitch).repPitch\r\n    }\r\n    const newNote = Note.from({ ...note, pitch: newPitch })\r\n    return newNote\r\n  })\r\n  // TODO: return errors, do not log! also easier to test\r\n  // if (errors.size > 0) {\r\n  //     console.warn(`Cannot replace all pitches, replacementMap misses entry for these pitches:`);\r\n  //     console.log(Array.from(errors));\r\n  // }\r\n  return simplified\r\n  // return { simplified, errors };\r\n}\r\n\r\n/**\r\n * Returns a Map:pitch->yPosIndex for views to lookup which row\r\n * a pitch has to be drawn in\r\n *\r\n * @param {Map} replacementMap a pitch replacement map\r\n * @returns {Map} Map:pitch->yPosIndex\r\n */\r\nexport function getPitch2PositionMap (replacementMap) {\r\n  const result = new Map()\r\n  const uniqeRows = [...group([...replacementMap], d => d[1].repPitch)]\r\n  uniqeRows.sort((a, b) => a[1][0][1].order - b[1][0][1].order)\r\n  for (const [index, d] of uniqeRows.entries()) {\r\n    result.set(d[0], index)\r\n  }\r\n  return result\r\n}\r\n", "import { randomInt, extent } from 'd3'\r\nimport { randFloat } from '../utils/MathUtils.js'\r\nimport { getMidiNoteByNr, getMidiNoteByLabel } from '../fileFormats/Midi.js'\r\nimport GuitarNote from '../types/GuitarNote.js'\r\nimport { arrayShallowEquals } from '../utils/ArrayUtils.js'\r\n\r\n/**\r\n * @module instruments/Guitar\r\n */\r\n\r\n/**\r\n * Represents a tuning of a fretted string instrument.\r\n */\r\nexport class StringedTuning {\r\n  /**\r\n     * Represents a tuning of a fretted string instrument.\r\n     *\r\n     * @param {string} name name\r\n     * @param {string[]} notes array of notes, e.g. ['E2', 'A2', 'D3', ...]\r\n     */\r\n  constructor (name, notes) {\r\n    this.name = name\r\n    this.notes = notes\r\n    this.short = notes.join(' ')\r\n    this.pitches = notes.map(note => getMidiNoteByLabel(note).pitch)\r\n    this.stringCount = notes.length\r\n  }\r\n}\r\n\r\n/**\r\n * Maps from instrument to string number to list of tunings.\r\n * Defaults are at the top.\r\n *\r\n * @todo add more? https://en.wikipedia.org/wiki/List_of_guitar_tunings\r\n * @todo https://github.com/PirtleShell/string-tunings/blob/master/tunings.json\r\n * @todo replace arrays by maps? tuning name - tuning\r\n * @type {Map<string,Map<number,StringedTuning>>}\r\n * @example\r\n *      stringedTunings.get('Guitar').get(6) for 6-string guitar tunings\r\n */\r\nexport const stringedTunings = new Map([\r\n  ['Guitar', new Map([\r\n    [6, [\r\n      new StringedTuning('E stand.', ['E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n      new StringedTuning('Drop D', ['D2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n      new StringedTuning('Drop C', ['C2', 'G2', 'C3', 'F3', 'A3', 'D4']),\r\n      new StringedTuning('1/2 down', ['D#2', 'G#2', 'C#3', 'F#3', 'A#3', 'D#4']),\r\n      new StringedTuning('1 down', ['D2', 'G2', 'C3', 'F3', 'A3', 'D4']),\r\n      new StringedTuning('1 1/2 down', ['C#2', 'F#2', 'B2', 'E3', 'G#3', 'C#4']),\r\n      new StringedTuning('2 down', ['C2', 'F2', 'A#2', 'D#3', 'G3', 'C4']),\r\n      new StringedTuning('DADGAG', ['D2', 'A2', 'D3', 'G3', 'A3', 'D4'])\r\n    ]],\r\n    [7, [\r\n      new StringedTuning('B stand.', ['B1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n      new StringedTuning('Drop A', ['A1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n      new StringedTuning('1/2 down', ['A#1', 'D#2', 'G#2', 'C#3', 'F#3', 'A#3', 'D#4']),\r\n      new StringedTuning('1 down', ['A1', 'D2', 'G2', 'C3', 'F3', 'A3', 'D4']),\r\n      new StringedTuning('1 1/2 down', ['G#1', 'C#2', 'F#2', 'B2', 'E3', 'G#3', 'C#4']),\r\n      new StringedTuning('2 down', ['G1', 'C2', 'F2', 'A#2', 'D#3', 'G3', 'C4'])\r\n    ]],\r\n    [8, [\r\n      new StringedTuning('F# stand.', ['F#1', 'B1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n      new StringedTuning('Drop E', ['E1', 'B1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n      new StringedTuning('1/2 down', ['F1', 'A#1', 'D#2', 'G#2', 'C#3', 'F#3', 'A#3', 'D#4']),\r\n      new StringedTuning('1 down', ['E1', 'A1', 'D2', 'G2', 'C3', 'F3', 'A3', 'D4']),\r\n      new StringedTuning('1 1/2 down', ['D#1', 'G#1', 'C#2', 'F#2', 'B2', 'E3', 'G#3', 'C#4']),\r\n      new StringedTuning('2 down', ['D1', 'G1', 'C2', 'F2', 'A#2', 'D#3', 'G3', 'C4'])\r\n    ]]\r\n  ])],\r\n  ['Bass', new Map([\r\n    [4, [\r\n      new StringedTuning('E stand.', ['E1', 'A1', 'D2', 'G2']),\r\n      new StringedTuning('Drop D', ['D1', 'A1', 'D2', 'G2']),\r\n      new StringedTuning('1/2 down', ['D#1', 'G#1', 'C#2', 'F#2']),\r\n      new StringedTuning('1 down', ['D1', 'G1', 'C2', 'F2']),\r\n      new StringedTuning('1 1/2 down', ['C#1', 'F#1', 'B1', 'E2']),\r\n      new StringedTuning('2 down', ['C1', 'F1', 'A#1', 'D#2'])\r\n    ]],\r\n    [5, [\r\n      new StringedTuning('B stand.', ['B0', 'E1', 'A1', 'D2', 'G2']),\r\n      new StringedTuning('Drop A', ['A0', 'D1', 'A1', 'D2', 'G2']),\r\n      new StringedTuning('1/2 down', ['A#0', 'D#1', 'G#1', 'C#2', 'F#2']),\r\n      new StringedTuning('1 down', ['A0', 'D1', 'G1', 'C2', 'F2']),\r\n      new StringedTuning('1 1/2 down', ['G#0', 'C#1', 'F#1', 'B1', 'E2']),\r\n      new StringedTuning('2 down', ['G0', 'C1', 'F1', 'A#1', 'D#2'])\r\n    ]],\r\n    [6, [\r\n      new StringedTuning('F# stand.', ['F#0', 'B0', 'E1', 'A1', 'D2', 'G2']),\r\n      new StringedTuning('Drop E', ['E0', 'A0', 'D1', 'A1', 'D2', 'G2']),\r\n      new StringedTuning('1/2 down', ['F0', 'A#0', 'D#1', 'G#1', 'C#2', 'F#2']),\r\n      new StringedTuning('1 down', ['E1', 'A0', 'D1', 'G1', 'C2', 'F2']),\r\n      new StringedTuning('1 1/2 down', ['D#0', 'G#0', 'C#1', 'F#1', 'B1', 'E2']),\r\n      new StringedTuning('2 down', ['D0', 'G0', 'C1', 'F1', 'A#1', 'D#2'])\r\n    ]]\r\n  ])],\r\n  ['Ukulele', new Map([\r\n    [4, [\r\n      new StringedTuning('Hawaii', ['G4', 'C4', 'E4', 'A4']),\r\n      new StringedTuning('Low G', ['G3', 'C4', 'E4', 'A4']),\r\n      new StringedTuning('D-tuning', ['A4', 'D4', 'F#4', 'B4']),\r\n      new StringedTuning('Canadian', ['A3', 'D4', 'F#4', 'B4']),\r\n      new StringedTuning('Bariton', ['D3', 'G3', 'B3', 'E4'])\r\n    ]]\r\n  ])]\r\n])\r\n\r\n/**\r\n * For Notes that have a guitar string encoded in their channel, this function\r\n * allows to convert them to a GuitarNote.\r\n *\r\n * @param {Note} note a Note that has the guitar string stored in its channel\r\n *      e.g. 0 to 5 for a six string\r\n * @param {StringedTuning} tuning tuning\r\n * @returns {GuitarNote} a GuitarNote\r\n */\r\nexport function guitarNoteFromNote (note, tuning) {\r\n  const string = note.channel\r\n  const reversedString = tuning.stringCount - string - 1\r\n  const fret = note.pitch - tuning.pitches[reversedString]\r\n  return GuitarNote.fromNote(note, string, fret)\r\n}\r\n\r\n/**\r\n * Returns a tuning with the specified pitches or null if none found.\r\n *\r\n * @param {number[]} pitches pitches of the tuning, same order as in\r\n *      Guitar.js' stringedTunings, i.e. low to high notes\r\n * @returns {StringedTuning|null} the found tuning or null\r\n */\r\nexport function getTuningFromPitches (pitches) {\r\n  const stringCount = pitches.length\r\n  for (const stringCountMap of stringedTunings.values()) {\r\n    if (stringCountMap.has(stringCount)) {\r\n      const tunings = stringCountMap.get(stringCount)\r\n      for (const t of tunings) {\r\n        if (arrayShallowEquals(t.pitches, pitches)) {\r\n          return t\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\n/**\r\n * Returns the pitch range of a tuning, given the number of frets.\r\n *\r\n * @param {StringedTuning} tuning tuning\r\n * @param {number} fretCount number of frets the instrument has (default: 24)\r\n * @returns {number[]} [minPitch, maxPitch]\r\n */\r\nexport function getTuningPitchRange (tuning, fretCount = 24) {\r\n  // const openExtent = extent(tuning.pitches);\r\n  const openMax = tuning.pitches[tuning.stringCount - 1]\r\n  const openMin = tuning.pitches[0]\r\n  return [openMin, openMax + fretCount]\r\n}\r\n\r\n/**\r\n * Colors for guitar strings, acces via stringColor[string]\r\n * where string in [1, 8].\r\n *\r\n * @type {string[]}\r\n */\r\nexport const stringColors = [\r\n  '#888',\r\n  '#d122e9',\r\n  '#31eb1c',\r\n  '#f37c14',\r\n  '#10edfc',\r\n  '#ffeb09',\r\n  '#ff210d',\r\n  'silver',\r\n  'gold'\r\n]\r\n\r\n/**\r\n * Returns the pitch of a note at a given fretboard position.\r\n *\r\n * @param {number} string string\r\n * @param {number} fret fret\r\n * @param {StringedTuning} tuning tuning\r\n * @returns {number} pitch\r\n */\r\nexport function getPitchFromFretboardPos (string, fret, tuning) {\r\n  // Order is reversed, since tunings are named from bass to treble\r\n  // but strings are numbered the other direction...\r\n  const reversedString = tuning.stringCount - string + 1\r\n  const openPitch = tuning.pitches[reversedString - 1]\r\n  return openPitch + fret\r\n}\r\n\r\n/**\r\n * Returns MIDI attributes of a note at a given fretboard position, e.g. C#\r\n *\r\n * @param {number} string string\r\n * @param {number} fret fret\r\n * @param {StringedTuning} tuning tuning\r\n * @returns {object} note info, e.g. { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\r\n */\r\nexport function getNoteInfoFromFretboardPos (string, fret, tuning) {\r\n  const pitch = getPitchFromFretboardPos(string, fret, tuning)\r\n  return getMidiNoteByNr(pitch)\r\n}\r\n\r\n/**\r\n * Finds all fretboard positions with this exact pitch.\r\n *\r\n * @param {number} pitch MIDI pitch\r\n * @param {StringedTuning} tuning tuning\r\n * @param {number} fretCount number of frets the instrument has\r\n * @returns {object[]} positions\r\n */\r\nexport function getFretboardPositionsFromPitch (pitch, tuning, fretCount) {\r\n  const positions = []\r\n  const stringCount = tuning.stringCount\r\n  for (let string = 0; string < stringCount; string++) {\r\n    const openPitch = tuning.pitches[string]\r\n    // Rule out strings where pitch is lower than open string\r\n    if (pitch < openPitch) {\r\n      continue\r\n    }\r\n    // Rule out strings where pitch is higher than highest fret\r\n    if (pitch > openPitch + fretCount) {\r\n      continue\r\n    }\r\n    positions.push({\r\n      // Convert so string 1 is treble\r\n      string: stringCount - string,\r\n      fret: pitch - openPitch\r\n    })\r\n  }\r\n  return positions\r\n}\r\n\r\n/**\r\n * Finds all fretboard positions with this note in all octaves.\r\n *\r\n * @param {string} name note name, e.g. 'C#'\r\n * @param {StringedTuning} tuning tuning\r\n * @param {number} fretCount number of frets the instrument has\r\n * @returns {object[]} positions\r\n */\r\nexport function getFretboardPositionsFromNoteName (name, tuning, fretCount = 24) {\r\n  const n = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']\r\n  if (!n.includes(name)) { return null }\r\n  const positions = []\r\n  const lowestPitch = n.indexOf(name)\r\n  const stringCount = tuning.stringCount\r\n  for (let string = 0; string < stringCount; string++) {\r\n    // First fret where this note appears\r\n    const openPitch = tuning.pitches[string]\r\n    let fret = lowestPitch - (openPitch % 12)\r\n    if (fret < 0) {\r\n      fret += 12\r\n    }\r\n    while (fret <= fretCount) {\r\n      positions.push({\r\n        // Convert so string 1 is treble\r\n        string: stringCount - string,\r\n        fret\r\n      })\r\n      // Go to next octave\r\n      fret += 12\r\n    }\r\n  }\r\n  return positions\r\n}\r\n\r\n/**\r\n * Generates example MIDI-like data (preprocessed MIDI).\r\n *\r\n * @param {number} startTime start tick\r\n * @param {number} count number of notes to generate\r\n * @param {StringedTuning} tuning tuning\r\n * @returns {GuitarNote[]} notes\r\n */\r\nexport function generateExampleData (startTime = 0, count = 50, tuning) {\r\n  let currentTime = startTime\r\n  return Array.from({ length: count })\r\n    .map(() => {\r\n      const start = currentTime + randFloat(0, 1)\r\n      currentTime = start + randFloat(0, 1)\r\n      const string = randomInt(1, 7)()\r\n      const fret = randomInt(0, 25)()\r\n      const pitch = getPitchFromFretboardPos(string, fret, tuning)\r\n      const velocity = randomInt(15, 127)()\r\n      return new GuitarNote(\r\n        pitch,\r\n        start,\r\n        velocity,\r\n        string,\r\n        currentTime,\r\n        string,\r\n        fret\r\n      )\r\n    })\r\n}\r\n\r\n/**\r\n * Estimates the fretboard position from MIDI notes\r\n *\r\n * @todo does not work well yet\r\n * @param {Note[]} notes notes with only MIDI information\r\n * @param {StringedTuning} tuning tuning\r\n * @param {number} fretCount number of frets the instrument has\r\n * @returns {GuitarNote[]} GuitarNotes with fretboard positions\r\n */\r\nexport function fretboardPositionsFromMidi (notes, tuning, fretCount = 24) {\r\n  if (!notes || notes.length === 0) { return [] }\r\n  if (!tuning || !tuning.pitches) {\r\n    console.warn('Invalid tuning parameter!')\r\n    return []\r\n  }\r\n  // Sort notes that cannot be played out in advance for better performance\r\n  const [minPitch, maxPitch] = getTuningPitchRange(tuning, fretCount)\r\n  const possibleNotes = []\r\n  const errorPitches = []\r\n  for (const note of notes) {\r\n    if (note.pitch < minPitch || note.pitch > maxPitch) {\r\n      errorPitches.push(note.pitch)\r\n    } else {\r\n      possibleNotes.push(note)\r\n    }\r\n  }\r\n  const result = []\r\n  for (const note of possibleNotes) {\r\n    const positions = getFretboardPositionsFromPitch(note.pitch, tuning, 24)\r\n    // Choose best position\r\n    // TODO: improve this to make it easier to play, take closest postion to prior one\r\n    let bestPos = positions[0]\r\n    for (const pos of positions) {\r\n      if (pos.fret < bestPos.fret) {\r\n        bestPos = pos\r\n      }\r\n    }\r\n    const { string, fret } = bestPos\r\n    result.push(GuitarNote.fromNote(note, string, fret))\r\n  }\r\n  // Give advice on transposing for better results\r\n  if (errorPitches.length > 0) {\r\n    const [minDataPitch, maxDataPitch] = extent(notes, d => d.pitch)\r\n    let advice = ''\r\n    if (minDataPitch < minPitch) {\r\n      advice += `Transpose by ${minPitch - minDataPitch} semitones`\r\n    }\r\n    if (maxPitch < maxDataPitch) {\r\n      advice += `Transpose by ${maxPitch - maxDataPitch} semitones`\r\n    }\r\n    console.warn(\r\n      `Cannot find a fretboard position for ${errorPitches.length} pitches, try another tuning instead:\\n`,\r\n      errorPitches,\r\n      `\\nCurrent tuning's pitch range is ${minPitch} - ${maxPitch}`,\r\n      `\\ndata pitch range is ${minDataPitch} - ${maxDataPitch}\\n`,\r\n      advice\r\n    )\r\n  }\r\n  return result\r\n}\r\n\r\n// /**\r\n//  * @todo chords always? use 4-fret-blocks\r\n//  * @param {GuitarNote[]} notes notes with fretboard positions\r\n//  * @returns {?} fingering information\r\n//  */\r\n// export function fingeringFromFretboardPositions(notes) {\r\n//     // TODO: detect chords first?\r\n//     // TODO: then lookup chords' fingerings from a lookup table\r\n\r\n//     // TODO: alternatively (as fallback) use heuristics\r\n\r\n//     // TODO: or try to do it like humans do when playing\r\n\r\n//     // TODO: consider prior and following notes/chords!\r\n\r\n// }\r\n", "import { difference, extent, intersection, max } from 'd3'\r\nimport { getMidiNoteByLabel, getMidiNoteByNr } from '../fileFormats/Midi.js'\r\nimport { detectChordsByExactStart } from '../chords/Chords.js'\r\nimport Note from '../types/Note.js'\r\nimport { bpmToSecondsPerBeat } from '../utils/MusicUtils.js'\r\n\r\n/**\r\n * @module instruments/Lamellophone\r\n */\r\n\r\n/**\r\n * Represents Lamellophone tunings\r\n */\r\nexport class LamellophoneTuning {\r\n  /**\r\n     * Represents a tuning of lamellophone.\r\n     *\r\n     * @param {string} name name\r\n     * @param {string[]} notes array of notes, same order as on instrument\r\n     *      e.g. [..., 'D4','C4', 'F#4', ...]\r\n     */\r\n  constructor (name, notes) {\r\n    this.name = name\r\n    this.notes = notes\r\n    this.short = notes.join(' ')\r\n    this.pitches = notes.map(note => getMidiNoteByLabel(note).pitch)\r\n    this.pitchesSorted = [...this.pitches]\r\n      .sort((a, b) => a - b)\r\n    this.keyCount = notes.length\r\n  }\r\n\r\n  /**\r\n     * Returns an array of the tuning's notes as number representation:\r\n     * Tuning notes:  C4, D4, ... C5, D5, ... C6,  D6\r\n     * Number format: 1,  2,  ... 1\u00B0, 2\u00B0, ... 1\u00B0\u00B0, 2\u00B0\u00B0\r\n     *\r\n     * @returns {string[]} array with tuning notes in number representation\r\n     */\r\n  getNumbers () {\r\n    const pitches = this.pitchesSorted\r\n    const numbers = new Map()\r\n    for (const [index, pitch] of pitches.entries()) {\r\n      let number = index + 1\r\n      let ending = ''\r\n      let lowerOctave = pitch - 12\r\n      while (lowerOctave > 0 && numbers.has(lowerOctave)) {\r\n        number = numbers.get(lowerOctave).number\r\n        ending += '\u00B0'\r\n        lowerOctave -= 12\r\n      }\r\n      numbers.set(pitch, { number, numberString: `${number}${ending}` })\r\n    }\r\n    return [...numbers.values()]\r\n      .map(d => d.numberString)\r\n  }\r\n\r\n  /**\r\n     * Returns an array of the tuning's notes as letter representation:\r\n     * Tuning notes:  C4, D4, ... C5, D5, ... C6,  D6\r\n     * Number format: C,  D,  ... C\u00B0, D\u00B0, ... C\u00B0\u00B0, D\u00B0\u00B0\r\n     *\r\n     * @returns {string[]} array with tuning notes in letter representation\r\n     */\r\n  getLetters () {\r\n    const pitches = this.pitchesSorted\r\n    const numbers = new Map()\r\n    for (const [index, pitch] of pitches.entries()) {\r\n      let number = index + 1\r\n      let ending = ''\r\n      let lowerOctave = pitch - 12\r\n      while (lowerOctave > 0 && numbers.has(lowerOctave)) {\r\n        number = numbers.get(lowerOctave).number\r\n        ending += '\u00B0'\r\n        lowerOctave -= 12\r\n      }\r\n      const letter = getMidiNoteByNr(pitch).name\r\n      numbers.set(pitch, { number, letterString: `${letter}${ending}` })\r\n    }\r\n    return [...numbers.values()].map(d => d.letterString)\r\n  }\r\n}\r\n\r\n/**\r\n * Tunings.\r\n * Notes are in the same order as on the instrument\r\n *\r\n * @type {Map<string,Map<string,LamellophoneTuning>>}\r\n */\r\nexport const lamellophoneTunings = new Map([\r\n  ['Kalimba', new Map([\r\n    [\r\n      '9 A Major',\r\n      new LamellophoneTuning('9 A Major', ['A5', 'C#6', 'C#5', 'A5', 'A4', 'F#5', 'E5', 'E6', 'B5'])\r\n    ],\r\n    [\r\n      '9 A Minor',\r\n      new LamellophoneTuning('9 A Minor', ['A5', 'C6', 'C5', 'A5', 'A4', 'F5', 'E5', 'E6', 'B5'])\r\n    ],\r\n    [\r\n      '9 A Minor 7',\r\n      new LamellophoneTuning('9 A Minor 7', ['A5', 'C6', 'C5', 'A5', 'A4', 'F#5', 'E5', 'E6', 'B5'])\r\n    ],\r\n    [\r\n      '9 A Ake Bono',\r\n      new LamellophoneTuning('9 A Ake Bono', ['A5', 'D6', 'D5', 'A5', 'A4', 'F5', 'E5', 'E6', 'A#5'])\r\n    ],\r\n    [\r\n      '9 A Hijaz',\r\n      new LamellophoneTuning('9 A Hijaz', ['G5', 'D6', 'D5', 'A5', 'A4', 'F#5', 'D#5', 'D#6', 'A#5'])\r\n    ],\r\n    [\r\n      '9 A Pygmy',\r\n      new LamellophoneTuning('9 A Pygmy', ['G5', 'C6', 'C5', 'G5', 'G4', 'D#5', 'D5', 'D#6', 'A#5'])\r\n    ],\r\n    [\r\n      '17 C Major',\r\n      new LamellophoneTuning('17 C Major', ['D6', 'B5', 'G5', 'E5', 'C5', 'A4', 'F4', 'D4', 'C4', 'E4', 'G4', 'B4', 'D5', 'F5', 'A5', 'C6', 'E6'])\r\n    ],\r\n    [\r\n      '21 C Major',\r\n      new LamellophoneTuning('21 C Major', ['D6', 'B5', 'G5', 'E5', 'C5', 'A4', 'F4', 'D4', 'B3', 'G3', 'F3', 'A3', 'C4', 'E4', 'G4', 'B4', 'D5', 'F5', 'A5', 'C6', 'E6'])\r\n    ]\r\n  ])]\r\n])\r\n\r\n/**\r\n * Parses a tab into notes\r\n *\r\n * @param {string} tab in letter format\r\n * @param {LamellophoneTuning} tuning tuning\r\n * @param {number} tempo tempo in bpm\r\n * @returns {Note[]} notes\r\n */\r\nexport function convertTabToNotes (tab, tuning, tempo = 120) {\r\n  if (!tab || tab.length === 0) { return [] }\r\n  // Create a mapping symbol->pitch\r\n  const symbolToPitchMap = new Map()\r\n  const symbols = tuning.getLetters()\r\n  for (let index = 0; index < tuning.keyCount; index++) {\r\n    symbolToPitchMap.set(symbols[index], tuning.pitchesSorted[index])\r\n  }\r\n  // Parse tab to notes\r\n  const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B']\r\n  const noteNamesSet = new Set(noteNames)\r\n  const lowestNote = tuning.pitchesSorted[0]\r\n  const startOct = getMidiNoteByNr(lowestNote).octave\r\n  const secondsPerBeat = bpmToSecondsPerBeat(tempo)\r\n  let insideChord = false\r\n  let insideNote = false\r\n  let currentTime = 0\r\n  let currentPitch = 0\r\n  let currentOctOffset = 0\r\n  const notes = []\r\n  tab = `${tab.toUpperCase().replaceAll('\\n', ' \\n')} `\r\n  // This is needed more often\r\n  const finishNote = () => {\r\n    try {\r\n      notes.push(Note.from({\r\n        pitch: currentPitch + 12 * (startOct + 1 + currentOctOffset),\r\n        start: currentTime,\r\n        end: currentTime + secondsPerBeat\r\n      }))\r\n      currentOctOffset = 0\r\n      if (!insideChord) {\r\n        currentTime += secondsPerBeat\r\n      }\r\n    } catch {\r\n      console.log(currentPitch)\r\n    }\r\n    insideNote = false\r\n  }\r\n  for (const char of tab) {\r\n    if (char === '(') {\r\n      // Start chord (but finish current if any)\r\n      if (insideChord) {\r\n        insideChord = false\r\n      }\r\n      if (insideNote) {\r\n        finishNote()\r\n      }\r\n      insideChord = true\r\n    } else if (noteNamesSet.has(char)) {\r\n      // Start note (but finish current if any)\r\n      if (insideNote) {\r\n        finishNote()\r\n      }\r\n      insideNote = true\r\n      currentPitch = noteNames.indexOf(char)\r\n    } else if (char === '#') {\r\n      // Sharpen note\r\n      currentPitch++\r\n    } else if (char === '\u00B0') {\r\n      // Increase ocatve\r\n      currentOctOffset++\r\n    } else if (char === ' ' || char === '\\n' || char === ')') {\r\n      // End chord and note if inside\r\n      if (char === ')') {\r\n        insideChord = false\r\n      }\r\n      if (char === '\\n') {\r\n        insideChord = false\r\n        currentTime += secondsPerBeat\r\n      }\r\n      if (insideNote) {\r\n        finishNote()\r\n      }\r\n    }\r\n  }\r\n  return notes\r\n}\r\n\r\n/**\r\n * Converts an array of notes into a text tab\r\n *\r\n * @param {Note[]} notes notes\r\n * @param {LamellophoneTuning} tuning tuning\r\n * @param {'letter'|'number'} mode mode\r\n * @param {number} restSize number of seconds for a gap between chords to insert\r\n *     a line break\r\n * @returns {string} text tab\r\n */\r\nexport function convertNotesToTab (notes, tuning, mode = 'letter', restSize = 0.1) {\r\n  if (!notes || notes.length === 0) { return [] }\r\n  // Create a mapping pitch->symbol\r\n  const pitchToSymbolMap = new Map()\r\n  const symbols = mode === 'letter' ? tuning.getLetters() : tuning.getNumbers()\r\n  for (let index = 0; index < tuning.keyCount; index++) {\r\n    pitchToSymbolMap.set(tuning.pitchesSorted[index], symbols[index])\r\n  }\r\n  // Get chords\r\n  const chords = detectChordsByExactStart(notes)\r\n  // Create tab\r\n  let tab = ''\r\n  let previousEnd = 0\r\n  for (const chord of chords) {\r\n    // Format chord's notes\r\n    let chordString = chord\r\n      .map(note => {\r\n        if (pitchToSymbolMap.has(note.pitch)) {\r\n          return pitchToSymbolMap.get(note.pitch) || `[${note.pitch}]`\r\n        } else {\r\n          return mode === 'letter' ? getMidiNoteByNr(note.pitch)?.name ?? note.pitch : note.pitch\r\n        }\r\n      })\r\n      .join(' ')\r\n    if (chord.length > 1) {\r\n      // Mark chords with backets (for multiple notes)\r\n      chordString = `(${chordString})`\r\n    }\r\n    tab = chord[0].start - previousEnd > restSize ? `${tab}\\n${chordString}` : `${tab} ${chordString}`\r\n    // Update last end time of chord\r\n    previousEnd = max(chord, n => n.end)\r\n  }\r\n  // Remove leading space\r\n  return tab.slice(1)\r\n}\r\n\r\n/**\r\n * Converts an array of notes into an HTML tab with colored notes\r\n *\r\n * @param {Note[]} notes notes\r\n * @param {LamellophoneTuning} tuning tuning\r\n * @param {'letter'|'number'} mode mode\r\n * @param {number} restSize number of seconds for a gap between chords to insert\r\n *     a line break\r\n * @param {Function} colormap color map function: pitch to color\r\n * @returns {string} HTML tab\r\n */\r\nexport function convertNotesToHtmlTab (\r\n  notes,\r\n  tuning,\r\n  mode = 'letter',\r\n  restSize = 0.1,\r\n  colormap = () => 'black'\r\n) {\r\n  if (!notes || notes.length === 0) { return [] }\r\n  // Create a mapping pitch->symbol\r\n  const pitchToSymbolMap = new Map()\r\n  const symbols = mode === 'letter' ? tuning.getLetters() : tuning.getNumbers()\r\n  for (let index = 0; index < tuning.keyCount; index++) {\r\n    pitchToSymbolMap.set(tuning.pitches[index], symbols[index])\r\n  }\r\n  // Get chords\r\n  const chords = detectChordsByExactStart(notes)\r\n  // Create tab\r\n  let tab = ''\r\n  let previousEnd = 0\r\n  for (const chord of chords) {\r\n    // Format chord's notes\r\n    let chordString = chord\r\n      .map(note => {\r\n        let string\r\n        if (pitchToSymbolMap.has(note.pitch)) {\r\n          string = pitchToSymbolMap.get(note.pitch) || `[${note.pitch}]`\r\n        } else {\r\n          string = mode === 'letter' ? getMidiNoteByNr(note.pitch)?.name ?? note.pitch : note.pitch\r\n        }\r\n        const color = colormap(note.pitch)\r\n        return `<span class='note' style='background-color: ${color}'>${string}</span>`\r\n      })\r\n      .join('\\n')\r\n    if (chord.length > 1) {\r\n      // Mark chords with backets (for multiple notes)\r\n      chordString = `<span class='chord'>${chordString}</span>`\r\n    }\r\n    tab = chord[0].start - previousEnd > restSize ? `${tab}<br/>${chordString}` : `${tab}${chordString}`\r\n    // Update last end time of chord\r\n    previousEnd = max(chord, n => n.end)\r\n  }\r\n  return tab\r\n}\r\n\r\n/**\r\n * Converts a number-based tab to note letter format\r\n *\r\n * @param {string} numberTab tab text with number format\r\n * @param {Map<number, string>} numberLetterMap maps numbers to letters\r\n * @returns {string} tab in letter format\r\n */\r\nexport function convertNumbersToLetters (numberTab, numberLetterMap) {\r\n  if (!numberTab || numberTab.length === 0) { return '' }\r\n  // Normalize to \u00B0\r\n  numberTab = numberTab.replaceAll('\\'', '\u00B0')\r\n  numberTab = numberTab.replaceAll('\u2019', '\u00B0')\r\n  numberTab = numberTab.replaceAll('*', '\u00B0')\r\n  numberTab = numberTab.replaceAll('\u00BA', '\u00B0')\r\n  numberTab = numberTab.replaceAll('^', '\u00B0')\r\n  for (const [key, value] of numberLetterMap.entries()) {\r\n    numberTab = numberTab.replaceAll(key, value)\r\n  }\r\n  return numberTab\r\n}\r\n\r\n/**\r\n * Tries to find a transposition s.t. the tuning is able to play all notes.\r\n * If not not possible, return the transposition that requires the least keys to\r\n * be retuned.\r\n *\r\n * @todo tests fail\r\n * @param {Note[]} notes notes\r\n * @param {LamellophoneTuning} tuning tuning\r\n * @returns {object} {transpose: number, retune: Map}\r\n */\r\nexport function bestTransposition (notes, tuning) {\r\n  if (!notes || notes.length === 0) {\r\n    return { transpose: 0, retune: new Map() }\r\n  }\r\n\r\n  const occuringPitches = new Set(notes.map(n => n.pitch))\r\n  if (occuringPitches.size > tuning.keyCount) {\r\n    // Cannot play all notes, no matter the transp. and tuning\r\n    // TODO:\r\n    // just choose best approx?\r\n\r\n  }\r\n  const notePitches = [...occuringPitches]\r\n\r\n  // Already perfect? return now\r\n  if (difference(notePitches, tuning.pitches).size === 0) {\r\n    return { transpose: 0, retune: new Map() }\r\n  }\r\n\r\n  const [minPitch, maxPitch] = extent(notePitches)\r\n  const transpose = (array, steps) => array.map(d => d + steps)\r\n\r\n  // Just brute force through all transpositions\r\n  let bestSteps = 0\r\n  let bestTransposed\r\n  let commonPitches\r\n  for (let steps = -minPitch; steps <= 127 - maxPitch; steps++) {\r\n    const transposed = transpose(notePitches, steps)\r\n    const common = intersection(transposed, tuning.pitches)\r\n    if (!commonPitches || common.size > commonPitches.size) {\r\n      bestSteps = steps\r\n      bestTransposed = transposed\r\n    }\r\n  }\r\n  bestTransposed = new Set(bestTransposed)\r\n\r\n  // Get pitches in tuning but not in notes and other way round\r\n  const uncommon = difference(bestTransposed, tuning.pitches)\r\n  console.log(uncommon)\r\n\r\n  const freePitches = new Set()\r\n  const neededPitches = []\r\n  for (const p of uncommon) {\r\n    if (bestTransposed.has(p)) {\r\n      neededPitches.push(p)\r\n    } else {\r\n      freePitches.add(p)\r\n    }\r\n  }\r\n  console.log(neededPitches)\r\n  console.log(freePitches)\r\n\r\n  if (neededPitches.length === 0) {\r\n    // Everything is fine!\r\n    return {\r\n      transpose: bestSteps,\r\n      retune: new Map()\r\n    }\r\n  }\r\n  if (freePitches.size === 0) {\r\n    // Cannot solve this!\r\n    return {\r\n      transpose: bestSteps,\r\n      retune: new Map()\r\n    }\r\n  }\r\n\r\n  // Get closest free pitch for each needed one\r\n  const retune = new Map()\r\n  for (const neededPitch of neededPitches) {\r\n    let bestMatch = null\r\n    const bestDiff = Number.POSITIVE_INFINITY\r\n    let freePitch\r\n    for (freePitch of freePitches) {\r\n      const diff = Math.abs(neededPitch - freePitch)\r\n      if (diff < bestDiff) {\r\n        bestMatch = freePitch\r\n      }\r\n    }\r\n    freePitches.delete(bestMatch)\r\n    retune.set(freePitch, neededPitch)\r\n  }\r\n\r\n  return {\r\n    transpose: bestSteps,\r\n    retune\r\n  }\r\n}\r\n", "import { group } from 'd3'\r\nimport { Chord } from '@tonaljs/tonal'\r\nimport { arrayShallowEquals } from '../utils/ArrayUtils.js'\r\nimport Note from '../types/Note.js' /* eslint-disable-line no-unused-vars */\r\n\r\n/**\r\n * @module Chords\r\n */\r\n\r\n/**\r\n * Detects chords as those notes that have the exact same start time, only works\r\n * for ground truth (since recordings are not exact)\r\n * Does only work if ground truth is aligned! TuxGuitar produces unaligned MIDI.\r\n *\r\n * @param {Note[]} notes notes\r\n * @returns {Note[][]} array of chord arrays\r\n */\r\nexport function detectChordsByExactStart (notes) {\r\n  const grouped = group(notes, d => d.start)\r\n  const chords = [...grouped]\r\n    .map(d => d[1])\r\n    // Sort chords by time\r\n    .sort((a, b) => a[0].start - b[0].start)\r\n    // Sort notes in each chord by pitch\r\n    .map(chord => chord.sort((a, b) => a.pitch - b.pitch))\r\n  return chords\r\n}\r\n\r\n/**\r\n * Detects chords by taking a note as new chord then adding all notes close\r\n * after it to the chord, until the next note is farther away than the given\r\n * `threshold`. Then, the next chord is started with this note.\r\n *\r\n * @param {Note[]} notes notes\r\n * @param {number} threshold threshold\r\n * @returns {Note[][]} chords\r\n */\r\nexport function detectChordsBySimilarStart (notes, threshold = 0.02) {\r\n  const chords = []\r\n  let currentChord = []\r\n  let currentChordStartTime = 0\r\n  let currentChordPitches = new Set()\r\n  for (const note of notes) {\r\n    // Note belongs to current chord\r\n    if (note.start - currentChordStartTime <= threshold) {\r\n      // Do not allow the same note twice in a chord\r\n      if (!currentChordPitches.has(note.pitch)) {\r\n        currentChord.push(note)\r\n        currentChordPitches.add(note.pitch)\r\n      }\r\n    } else {\r\n      // Start new chord\r\n      if (currentChord.length > 0) {\r\n        chords.push(currentChord)\r\n      }\r\n      currentChord = [note]\r\n      currentChordStartTime = note.start\r\n      currentChordPitches = new Set([note.pitch])\r\n    }\r\n  }\r\n  if (currentChord.length > 0) {\r\n    chords.push(currentChord)\r\n  }\r\n  return chords\r\n}\r\n\r\n/**\r\n * Detects chords, by simply looking for notes that overlap each other in time.\r\n * Example:\r\n *    =======\r\n *       =========\r\n *         ========\r\n * Important: Notes must be sorted by start time for this to work correctly.\r\n *\r\n * @todo not used yet\r\n * @todo optional minimum overlap ratio\r\n * @todo new definition of chord? i.e. notes have to start 'together'\r\n * @param {Note[]} notes array of Note objects\r\n * @param {boolean} sortByPitch sort chords by pitch? (otherwise sorted\r\n *      by note start time)\r\n * @returns {Note[][]} array of chord arrays\r\n */\r\nexport function detectChordsByOverlap (notes, sortByPitch = true) {\r\n  if (!notes || notes.length === 0) { return [] }\r\n  if (notes.length === 1) { return [[notes[0]]] }\r\n  const sorted = [...notes].sort((a, b) => a.start !== b.start ? (a.start - b.start) : a.pitch - b.pitch)\r\n  const notesTodo = new Set(sorted)\r\n  const chords = []\r\n  // Find all overlaps with brute force\r\n  while (notesTodo.size > 0) {\r\n    // Take a new note and make a new chord\r\n    const note1 = notesTodo.values().next().value\r\n    notesTodo.delete(note1)\r\n    let chord = [note1]\r\n    // Add all notes that overap note1\r\n    for (const note2 of notesTodo.values()) {\r\n      if (note1.overlapInSeconds(note2) >= 0.5 * note1.getDuration()) {\r\n        chord.push(note2)\r\n        notesTodo.delete(note2)\r\n      }\r\n    }\r\n    if (sortByPitch) {\r\n      chord = chord.sort((a, b) => a.pitch - b.pitch)\r\n    }\r\n    chords.push(chord)\r\n  }\r\n  return chords\r\n}\r\n// export function detectChordsByOverlap(notes, sortByPitch = true) {\r\n//     if (!notes || !notes.length) { return []; }\r\n//     if (notes.length === 1) { return [[notes[0]]]; }\r\n//     const chords = [];\r\n//     let currentChord = [notes[0]];\r\n//     for (let i = 1; i < notes.length; i++) {\r\n//         const note = notes[i];\r\n//         console.log(i);\r\n//         console.log(currentChord);\r\n//         console.log(note);\r\n\r\n//         // Check for overlap with current chord\r\n//         let overlaps = false;\r\n//         for (let note2 of currentChord) {\r\n//             if (note.overlapsInTime(note2)) {\r\n//                 overlaps = true;\r\n//                 break;\r\n//             }\r\n//         }\r\n//         console.log(overlaps);\r\n//         if (overlaps) {\r\n//             currentChord.push(note);\r\n//             // TODO: also check the distance from the first note of the chord!\r\n//             // TODO:jump ahead to not count the cord multiple times (partially)\r\n//         } else {\r\n//             // If not, the previous chord is finished\r\n//             // Sort chord by pitch?\r\n//             if (sortByPitch) {\r\n//                 currentChord = currentChord.sort((a, b) => a.pitch - b.pitch);\r\n//             }\r\n//             chords.push(currentChord);\r\n//             // Start new chord\r\n//             if (i < notes.length - 1) {\r\n//                 currentChord = [notes[i + 1]];\r\n//                 i++;\r\n//             }\r\n//         }\r\n//     }\r\n//     // finish last chord\r\n//     chords.push(currentChord);\r\n//     return chords;\r\n// }\r\n\r\n/*\r\n * Maps number of steps (number of notes -1) to possible chord types\r\n */\r\nconst chordTypes = new Map([\r\n  [\r\n    1,\r\n    [\r\n      // TODO: how to handle inversions?\r\n      { steps: [5], name: 'Inverted power chord', suffix: '?' },\r\n      { steps: [7], name: 'Power chord', suffix: '5' }\r\n    ]\r\n  ],\r\n  [\r\n    2,\r\n    [\r\n      { steps: [2, 7], name: 'Suspended second', suffix: 'sus2' },\r\n      { steps: [3, 6], name: 'Diminished', suffix: 'dim' },\r\n      { steps: [3, 7], name: 'Minor', suffix: 'min' },\r\n      { steps: [4, 10], name: 'Seventh', suffix: '7' },\r\n      { steps: [4, 7], name: 'Major', suffix: '' },\r\n      { steps: [4, 8], name: 'Augmented', suffix: 'aug' },\r\n      { steps: [4, 9], name: 'Sixth', suffix: '6' },\r\n      { steps: [5, 7], name: 'Suspended fourth', suffix: 'sus4' }\r\n    ]\r\n  ],\r\n  [\r\n    3,\r\n    [\r\n      { steps: [2, 3, 7], name: 'Minor, added ninth', suffix: 'm(add9)' },\r\n      { steps: [2, 4, 7], name: 'Added ninth', suffix: 'add9' },\r\n      { steps: [3, 6, 10], name: 'Minor seventh, flat fifth', suffix: 'm7b5' },\r\n      { steps: [3, 7, 10], name: 'Minor seventh', suffix: 'm7' },\r\n      { steps: [3, 7, 11], name: 'Minor, major seventh', suffix: 'm(Maj7)' },\r\n      { steps: [3, 7, 8], name: 'Minor, flat sixth', suffix: 'mb6' },\r\n      { steps: [3, 7, 9], name: 'Minor sixth', suffix: 'm6' },\r\n      { steps: [4, 5, 11], name: 'Major eleventh (no fifth, no ninth)', suffix: 'Maj11' },\r\n      { steps: [4, 5, 7], name: 'Added fourth', suffix: 'add4' },\r\n      { steps: [4, 7, 10], name: 'Dominant seventh', suffix: '7' },\r\n      { steps: [4, 7, 11], name: 'Major seventh', suffix: 'Maj7' },\r\n      { steps: [4, 7, 9], name: 'Major Sixth', suffix: 'Maj6' }\r\n    ]\r\n  ],\r\n  [\r\n    4,\r\n    [\r\n      { steps: [2, 3, 6, 10], name: 'Minor ninth flat fifth', suffix: 'm9b5' },\r\n      { steps: [2, 3, 7, 10], name: 'Minor ninth', suffix: 'm9' },\r\n      { steps: [2, 3, 7, 11], name: 'Minor ninth, major seventh', suffix: 'm9(Maj7)' },\r\n      { steps: [2, 3, 7, 9], name: 'Minor sixth, added ninth', suffix: 'm6/9' },\r\n      { steps: [2, 4, 7, 11], name: 'Major ninth', suffix: 'Maj9' },\r\n      { steps: [2, 4, 7, 9], name: 'Sixth, added ninth', suffix: '6/9' },\r\n      { steps: [4, 5, 7, 11], name: 'Major eleventh (no ninth)', suffix: 'Maj11' },\r\n      { steps: [4, 6, 7, 10], name: 'Seventh, sharp eleventh', suffix: '7#11' },\r\n      { steps: [4, 6, 7, 11], name: 'Major seventh, sharp eleventh', suffix: 'Maj7#11' }\r\n    ]\r\n  ],\r\n  [\r\n    5,\r\n    [\r\n      { steps: [2, 4, 5, 7, 11], name: 'Major eleventh', suffix: 'Maj11' },\r\n      { steps: [2, 4, 7, 9, 11], name: 'Major thirteen', suffix: 'Maj13' }\r\n    ]\r\n  ],\r\n  [\r\n    6,\r\n    [\r\n      { steps: [2, 3, 4, 6, 7, 10], name: 'Minor thirteen', suffix: 'm13' }\r\n    ]\r\n  ]\r\n])\r\n\r\n/**\r\n * Returns chord type, e.g. 'Major', 'Diminished', ...\r\n * Important: Notes must be sorted by pitch ascending\r\n *\r\n * @todo some chords might be multiple types\r\n * @param {Note[]} notes notes (sorted by pitch asc.)\r\n * @returns {string} chord type\r\n */\r\nexport function getChordType (notes) {\r\n  if (!notes || notes.length === 0) { return { name: 'No note' } }\r\n  if (notes.length === 1) { return { name: 'Single note' } }\r\n  // Get distances in semitones\r\n  let steps = []\r\n  const lowest = notes[0].pitch\r\n  for (let index = 1; index < notes.length; index++) {\r\n    steps.push(notes[index].pitch - lowest)\r\n  }\r\n  // Normalize higher than octave\r\n  steps = steps.map(d => d % 12)\r\n  // Filter doubles\r\n  steps = [...new Set(steps)]\r\n  // Filter octaves\r\n  steps = steps.filter(d => d !== 0)\r\n  if (steps.length === 0) { return { name: 'Octave' } }\r\n  steps.sort((a, b) => a - b)\r\n\r\n  // Now get the chord type\r\n  const candidates = chordTypes.get(steps.length)\r\n  if (candidates) {\r\n    for (const cand of candidates) {\r\n      if (arrayShallowEquals(steps, cand.steps)) {\r\n        return cand\r\n      }\r\n    }\r\n  }\r\n  return { name: 'Unknown chord type' }\r\n}\r\n\r\n/**\r\n * https://github.com/tonaljs/tonal/tree/master/packages/chord\r\n * Detected chords can be used with https://github.com/tonaljs/tonal/tree/master/packages/chord-type\r\n *\r\n * @param {Note[]} notes notes\r\n * @returns {string[]} possible chord types\r\n */\r\nexport function getChordName (notes) {\r\n  const noteLetters = notes\r\n    .sort((a, b) => a.pitch - b.pitch)\r\n    .map(d => d.getLetter())\r\n  const chords = Chord.detect(noteLetters)\r\n  return chords\r\n}\r\n\r\n// /**\r\n//  * Estimates the name of a given chord of notes\r\n//  *\r\n//  * @param {string} chord name\r\n//  * @return {Note[]} notes array of Note objects\r\n//  * @todo use tonaljs\r\n//  * @todo use this https://github.com/greird/chordictionaryjs\r\n//  */\r\n// export function getNotesFromChordName(name, length = 1, start = 0) {\r\n//     console.error('NIY');\r\n// }\r\n", "/**\n * @module instruments/Piano\n */\n\n/**\n * Map:keyCount->pitchRange\n * pitchRange is {minPitch:number, maxPitch:number}\n *\n * @type {Map<number,object>}\n */\nexport const pianoPitchRange = new Map([\n  [72, { minPitch: 24, maxPitch: 95 }],\n  [88, { minPitch: 21, maxPitch: 108 }],\n  [128, { minPitch: 0, maxPitch: 127 }]\n])\n\n/**\n *\n * @param {Note[]} notes notes with only MIDI information\n * @returns {?} notes with fingering information\n */\n// export function fingeringFromMidi(notes) {\n// TODO: detect chords first?\n// TODO: then lookup chords' fingerings from a lookup table\n\n// TODO: alternatively (as fallback) use heuristics\n\n// TODO: or try to do it like humans do when playing\n\n// }\n", "import { matchGtAndRecordingNotes } from '../comparison/Matching.js'\r\nimport { randomInt, randomLcg, randomUniform, median } from 'd3'\r\nimport * as Drums from '../instruments/Drums.js'\r\nimport Note from '../types/Note.js'\r\nimport NoteArray from '../types/NoteArray.js'\r\n\r\n/**\r\n * @module Alignment\r\n */\r\n\r\n/**\r\n * Given two NoteArrays, shift the second one in time such that they are aligned\r\n *\r\n * @todo use https://en.wikipedia.org/wiki/Smith%E2%80%93Waterman_algorithm\r\n *      to find note alignment, then only use those for force calculation\r\n * @param {NoteArray} gt a NoteArray, e.g. the ground truth\r\n * @param {NoteArray} rec a NoteArray to align to a\r\n * @returns {NoteArray} an aligned copy of b\r\n */\r\nexport function alignNoteArrays (gt, rec) {\r\n  rec = rec.clone()\r\n  const f = alignmentForce(gt.getNotes(), rec.getNotes())\r\n  rec = rec.shiftTime(f)\r\n  // console.log(`Aligned recording via shifting by ${f.toFixed(3)} seconds`);\r\n  return {\r\n    aligned: rec,\r\n    timeDifference: f\r\n  }\r\n}\r\n\r\n/**\r\n * Given two NoteArrays, shift the second one in time such that they are aligned\r\n *\r\n * @param {NoteArray} gt a NoteArray, e.g. the ground truth\r\n * @param {NoteArray} rec a NoteArray to align to a\r\n * @returns {NoteArray} an aligned copy of b\r\n */\r\nexport function alignNoteArrays2 (gt, rec) {\r\n  let timeDifference = 0\r\n  let tries = 0\r\n  rec = rec.clone()\r\n  while (tries < 25) {\r\n    // Get a 1-to-1 matching between gt and rec notes so noise has less impact\r\n    const matching = matchGtAndRecordingNotes(rec.getNotes(), gt.getNotes())\r\n    // Get average time difference between matched notes\r\n    let timeDiff = 0\r\n    let count = 0\r\n    for (const m of matching.values()) {\r\n      const { gtRecMap } = m\r\n      for (const [gtStart, matchedRecNote] of gtRecMap.entries()) {\r\n        if (matchedRecNote !== null) {\r\n          count++\r\n          timeDiff += gtStart - matchedRecNote.start\r\n        }\r\n      }\r\n    }\r\n    timeDiff /= count\r\n    // Shift recording\r\n    rec.shiftTime(timeDiff)\r\n    timeDifference += timeDiff\r\n    // console.log(`${tries} shifting by ${timeDiff.toFixed(3)} seconds`);\r\n    // Stop while loop when finished\r\n    if (Math.abs(timeDiff) < 0.0005) {\r\n      break\r\n    }\r\n    tries++\r\n  }\r\n  return {\r\n    aligned: rec,\r\n    timeDifference\r\n  }\r\n}\r\n\r\n/**\r\n * Given two NoteArrays, shift the second one in time such that they are aligned\r\n *\r\n * @todo use median instead of average?\r\n * @param {NoteArray} gt a NoteArray, e.g. the ground truth\r\n * @param {NoteArray} rec a NoteArray to align to a\r\n * @returns {NoteArray} an aligned copy of b\r\n */\r\nexport function alignNoteArrays3 (gt, rec) {\r\n  let timeDifference = 0\r\n  let tries = 0\r\n  rec = rec.clone()\r\n  while (tries < 25) {\r\n    // Get a 1-to-1 matching between gt and rec notes so noise has less impact\r\n    const matching = matchGtAndRecordingNotes(rec.getNotes(), gt.getNotes())\r\n    // Get time differences\r\n    const timeDiffs = []\r\n    for (const m of matching.values()) {\r\n      for (const [gtStart, matchedRecNote] of m.gtRecMap.entries()) {\r\n        if (matchedRecNote !== null) {\r\n          timeDiffs.push(gtStart - matchedRecNote.start)\r\n        }\r\n      }\r\n    }\r\n    const shift = median(timeDiffs)\r\n    // Shift recording\r\n    rec.shiftTime(shift)\r\n    timeDifference += shift\r\n    // console.log(`${tries} shifting by ${shift.toFixed(3)} seconds`);\r\n    // Stop while loop when finished\r\n    if (Math.abs(shift) < 0.0001) {\r\n      break\r\n    }\r\n    tries++\r\n  }\r\n  return {\r\n    aligned: rec,\r\n    timeDifference\r\n  }\r\n}\r\n\r\n/**\r\n * Calculates the mean difference between all notes in a and the nearest same-\r\n * pitched notes in b\r\n *\r\n * @param {Note[]} a array with notes\r\n * @param {Note[]} b array with notes\r\n * @returns {number} mean time difference\r\n */\r\nfunction alignmentForce (a, b) {\r\n  let difference = 0\r\n  let count = 0\r\n  // For each note in a, search the closest note in b with the same pitch and calculate the distance\r\n  for (const noteA of a) {\r\n    let distance = Number.POSITIVE_INFINITY\r\n    let diff = Number.POSITIVE_INFINITY\r\n    for (const noteB of b) {\r\n      if (noteA.pitch === noteB.pitch) {\r\n        const dist = Math.abs(noteA.start - noteB.start)\r\n        if (dist < distance) {\r\n          distance = dist\r\n          diff = noteA.start - noteB.start\r\n          // TODO: Larger distances might be errors\r\n          // if (diff > 1) {\r\n          //     diff = Math.sqrt(diff);\r\n          // }\r\n        }\r\n      }\r\n    }\r\n    // (If not found, this does not change alignment)\r\n    if (distance < Number.POSITIVE_INFINITY) {\r\n      difference += diff\r\n      count++\r\n    }\r\n  }\r\n  return difference / count\r\n}\r\n\r\n/**\r\n * Test function\r\n *\r\n * @todo move to test\r\n */\r\nexport function testAlignment () {\r\n  const test = (a, b, title) => {\r\n    console.log(title)\r\n    console.log(b.getNotes().map(n => n.start))\r\n    const aligned = alignNoteArrays(a, b)\r\n    console.log(aligned.getNotes().map(n => n.start))\r\n  }\r\n  const a = new NoteArray([\r\n    new Note(69, 0, 127, 0, 1),\r\n    new Note(70, 1, 127, 0, 2),\r\n    new Note(71, 2, 127, 0, 3)\r\n  ])\r\n  console.log(a.getNotes().map(n => n.start))\r\n\r\n  let b\r\n\r\n  b = a.clone().shiftTime(2)\r\n  test(a, b, 'shifted by 2')\r\n\r\n  b = a.clone().shiftTime(-2)\r\n  test(a, b, 'shifted by -2')\r\n\r\n  b = a.clone()\r\n    .shiftTime(3)\r\n    .addNotes([new Note(72, 2, 127, 0, 3)])\r\n  test(a, b, 'shifted by 3, added note')\r\n\r\n  b = a.clone().repeat(2)\r\n  test(a, b, 'repeated')\r\n\r\n  b = a.clone()\r\n    .repeat(2)\r\n    .shiftTime(3)\r\n  test(a, b, 'repeated, shifted by 3')\r\n}\r\n\r\n/**\r\n * @todo Benchmark different aligment functions on a randomly generated test set\r\n * This allows to check the calculated alignment against a known ground truth\r\n */\r\nexport function alignmentBenchmark () {\r\n  // Use random seed for reproducability\r\n  const seed = 0.448_715_738_882_824_23 // any number in [0, 1)\r\n  const rand127 = randomInt.source(randomLcg(seed))(0, 127)\r\n  const maxTime = 500\r\n  const randTime = randomUniform.source(randomLcg(seed))(0, maxTime)\r\n  const randDuration = randomUniform.source(randomLcg(seed))(1 / 64, 2)\r\n\r\n  // Create random notes\r\n  const randomNotes = Array.from({ length: 200 }).fill(0).map(() => {\r\n    const start = randTime()\r\n    return new Note(\r\n      rand127(),\r\n      start,\r\n      127,\r\n      0,\r\n      start + randDuration()\r\n    )\r\n  })\r\n  const notes = new NoteArray(randomNotes).sortByTime()\r\n  console.log('true notes', notes.getNotes())\r\n\r\n  // Shift notes by some amount of seconds (this is what alignment should calculate!)\r\n  const shift = 3\r\n  const shifted = notes.clone().shiftTime(shift)\r\n  console.log('shifted', shifted)\r\n\r\n  // Introduce errors, as a human would\r\n  const deviation = 0.1\r\n  const pAdd = 0.1\r\n  const pRemove = 0.1\r\n  let variation = Drums.generateDrumVariation(shifted.getNotes(), deviation, pAdd, pRemove)\r\n  variation = new NoteArray(variation)\r\n  console.log('variation', variation)\r\n\r\n  // Run all functions\r\n  const funcs = [alignNoteArrays, alignNoteArrays2, alignNoteArrays3]\r\n  console.log(`True time shift: ${shift} seconds`)\r\n\r\n  console.log('Only shifted')\r\n  for (const f of funcs) {\r\n    const { timeDifference } = f(notes, shifted)\r\n    const error = Math.abs(timeDifference - -shift)\r\n    console.log(`${f.name}\\nshift: ${timeDifference.toFixed(3)} \\nError ${error.toFixed(3)}`)\r\n  }\r\n\r\n  console.log('Shifted & variation')\r\n  for (const f of funcs) {\r\n    const { timeDifference } = f(notes, variation)\r\n    const error = Math.abs(timeDifference - -shift)\r\n    console.log(`${f.name}\\nshift: ${timeDifference.toFixed(3)} \\nError ${error.toFixed(3)}`)\r\n  }\r\n}\r\n", "import { group } from 'd3'\nimport * as Utils from '../utils/index.js'\nimport Note from '../types/Note.js' /* eslint-disable-line no-unused-vars */\n\n/**\n * @module comparison/Matching\n */\n\n/**\n * For one recording, separately for each pitch,\n * matches each recorded note to its closest ground truth note.\n * If there are multiple matches, the best (smallest time difference)\n * will be kept and others will be regarded as additional notes.\n * Ground truth notes without match will be regarded as missing notes.\n *\n * Result format (separated by pitch in a Map):\n * Map:pitch->{\n *    gtRecMap           matched rec. note for each GT note Map:gtNoteStart->recNote,\n *    additionalNotes:   rec. notes without matched GT note\n *    missingNotes:      GT notes without matched rec. note\n *    gtNotes:           all GT notes\n * }\n *\n * @todo add max distance?\n * @param {Note[]} recNotes recorded notes of a single recording\n * @param {Note[]} gtNotes ground truth notes\n * @returns {Map} result\n */\nexport function matchGtAndRecordingNotes (recNotes, gtNotes) {\n  const groupedByPitch = group(gtNotes, d => d.pitch)\n  const groupedByPitchRec = group(recNotes, d => d.pitch)\n  const result = new Map()\n  // For each pitch, map recorded notes to GT notes\n  for (const [pitch, gtNotes] of groupedByPitch.entries()) {\n    const gtRecMap = new Map()\n    const additionalNotes = []\n    const missingNotes = []\n    for (const n of gtNotes) {\n      gtRecMap.set(n.start, null)\n    }\n    // Recording might be missing this pitch, then all notes are missing\n    if (!groupedByPitchRec.has(pitch)) {\n      result.set(pitch, {\n        gtRecMap: new Map(),\n        additionalNotes: [],\n        missingNotes: gtNotes,\n        gtNotes\n      })\n      continue\n    }\n    const recNotes = groupedByPitchRec.get(pitch)\n    for (const r of recNotes) {\n      // Match each recorded note to the closest ground truth note\n      const nearest = Utils.findNearest(gtNotes, r)\n      const currentEntry = gtRecMap.get(nearest.start)\n      if (currentEntry === null) {\n        // If empty, take\n        gtRecMap.set(nearest.start, r)\n      } else {\n        // If it is taken, overtake it if the new match is closer\n        if (Math.abs(nearest.start - r.start) < Math.abs(currentEntry.start - r.start)) {\n          // If it can overtake, add the old note to 'wrong additional notes' list\n          gtRecMap.set(nearest.start, r)\n          additionalNotes.push(currentEntry)\n        } else {\n          // If it cannot overtake, add note to 'wrong additional notes' list\n          additionalNotes.push(r)\n        }\n      }\n    }\n    // Go trough all GT notes, those that have no recording assigned to it are missing notes\n    for (const n of gtNotes) {\n      if (gtRecMap.get(n.start) === null) {\n        missingNotes.push(n)\n      }\n    }\n    // Store result in map pitch->groupings\n    result.set(pitch, {\n      gtRecMap,\n      additionalNotes,\n      missingNotes,\n      gtNotes\n    })\n  }\n  // If a recording has a pitch that GT has not, all those notes are additional notes\n  for (const [pitch, recNotes] of groupedByPitchRec.entries()) {\n    if (!groupedByPitch.has(pitch)) {\n      result.set(pitch, {\n        gtRecMap: new Map(),\n        additionalNotes: recNotes,\n        missingNotes: [],\n        gtNotes: []\n      })\n    }\n  }\n  // console.log(result);\n  return result\n}\n\n/**\n * Matches all recorded notes from multiple recordings to the nearest\n * ground truth (GT) note.\n * Contrary to the matching created by matchGtAndRecordingNotes()\n * missing and additional notes are not considered, so multiple notes\n * from a single recording can be matched to the same GT note.\n *\n * Result format:\n * Map:pitch->Map:gtStart->arrayOfMatchedRecNotes\n *\n * @param {Recording[]} recordings recordings\n * @param {Note[]} gtNotes ground truth notes\n * @returns {Map} matching\n */\nexport function matchGtAndMultipleRecordings (recordings, gtNotes) {\n  const allRecNotes = recordings.flatMap(d => d.notes)\n  const groupedByPitch = group(gtNotes, d => d.pitch)\n  const groupedByPitchRec = group(allRecNotes, d => d.pitch)\n  const result = new Map()\n  // For each pitch, map recorded notes to GT notes and keep track of misses\n  for (const [pitch, gtNotes] of groupedByPitch.entries()) {\n    const gtRecMap = new Map()\n    for (const n of gtNotes) {\n      gtRecMap.set(n.start, [])\n    }\n    // Recording might be missing this pitch, then match is empty\n    if (!groupedByPitchRec.has(pitch)) {\n      result.set(pitch, new Map())\n      continue\n    }\n    const recNotes = groupedByPitchRec.get(pitch)\n    for (const r of recNotes) {\n      // Match each recorded note to the closest ground truth note\n      const nearest = Utils.findNearest(gtNotes, r)\n      const currentEntry = gtRecMap.get(nearest.start)\n      currentEntry.push(r)\n      gtRecMap.set(nearest.start, currentEntry)\n    }\n    // Store result in map pitch->groupings\n    result.set(pitch, gtRecMap)\n  }\n  // console.log(result);\n  return result\n}\n\n/**\n * Calculates (for each pitch) the average error for each GT note (averaged\n * over all matched notes in the recordings),\n * as well as the maximum of all those average errors.\n * GT notes that have no matched recorded notes will have an error of 0.\n *\n * @param {Map} multiMatching matching with a GT and multiple recordings\n * @param {number} errorThreshold number seconds of deviation above which\n *      to exclude an error\n * @returns {Map} error summary Map:pitch->{gtErrorMap, maxError},\n *      gtErrorMap is Map:gtStart->error (error is average over all time\n *      differences between the GT note and matched recNotes)\n */\nexport function getMultiMatchingErrorPerNote (multiMatching, errorThreshold = 3) {\n  const result = new Map()\n  for (const [pitch, gtRecMap] of multiMatching.entries()) {\n    const gtErrorMap = new Map()\n    let maxError = 0\n    // Go through all gtStart and matched notes\n    for (const [gtStart, matchedRecNotes] of gtRecMap.entries()) {\n      let error = 0\n      if (matchedRecNotes.length > 0) {\n        for (const note of matchedRecNotes) {\n          const error_ = Math.abs(note.start - gtStart)\n          if (error_ <= errorThreshold) {\n            error += error_\n          }\n        }\n        error /= matchedRecNotes.length\n        if (error > maxError) {\n          maxError = error\n        }\n      }\n      gtErrorMap.set(gtStart, error)\n    }\n    result.set(pitch, {\n      gtErrorMap,\n      maxError\n    })\n  }\n  return result\n}\n\n/**\n * Calculates the error of a matching by applying penalties and summing up\n *\n * @param {Map} matching a matching created by matchGtAndRecordingNotes\n * @param {number} addPenalty penalty for each additonal note\n * @param {number} missPenalty penalty for each missing note\n * @param {number} timingPenalty penalty for note timing differences in seconds\n * @param {number} timeThreshold timing errors below it (absolute) are ignored\n * @returns {object} errors by category\n */\nexport function getMatchingError (matching, addPenalty, missPenalty, timingPenalty, timeThreshold = 0) {\n  const result = {\n    total: 0,\n    totalAdd: 0,\n    totalMiss: 0,\n    totalCorrect: 0,\n    totalTime: 0,\n    totalNumberOfGtNotes: 0,\n    perPitch: new Map()\n  }\n  for (const [pitch, m] of matching.entries()) {\n    const { gtRecMap, additionalNotes, missingNotes, gtNotes } = m\n    const addError = additionalNotes.length * addPenalty\n    const missError = missingNotes.length * missPenalty\n    let correct = 0\n    let timeError = 0\n    for (const [gtStart, matchedRecNote] of gtRecMap.entries()) {\n      // If it is null, this is handled in missingNotes\n      if (matchedRecNote !== null) {\n        correct++\n        const error = Math.abs(matchedRecNote.start - gtStart)\n        if (error > timeThreshold) {\n          timeError += error\n        }\n      }\n    }\n    const total = addError + missError + timeError * timingPenalty\n    result.perPitch.set(pitch, {\n      total,\n      addError,\n      missError,\n      correct,\n      timeError,\n      numberOfGtNotes: gtNotes.length\n    })\n    // Update total\n    result.totalAdd += addError\n    result.totalMiss += missError\n    result.totalCorrect += correct\n    result.totalTime += timeError\n    result.total += total\n    result.totalNumberOfGtNotes += gtNotes.length\n  }\n  return result\n}\n\n/**\n * Cuts a section from a matching by filtering on the start times\n * of ground truth, missing, and additonal notes\n *\n * @param {Map} matching matching\n * @param {number} start start time (inclusive)\n * @param {number} end end time (exclusive)\n * @returns {Map} section of matching\n */\nexport function getMatchingSection (matching, start, end) {\n  const result = new Map()\n  for (const [pitch, m] of matching.entries()) {\n    const { gtRecMap, additionalNotes, missingNotes, gtNotes } = m\n    const newGtRecMap = new Map()\n    for (const [gtStart, matchedRecNote] of gtRecMap.entries()) {\n      // If it is null, this is handled in missingNotes\n      if (matchedRecNote !== null && gtStart >= start && gtStart < end) {\n        newGtRecMap.set(gtStart, matchedRecNote)\n      }\n    }\n    result.set(pitch, {\n      gtRecMap: newGtRecMap,\n      additionalNotes: additionalNotes.filter(d => d.start >= start && d.start < end),\n      missingNotes: missingNotes.filter(d => d.start >= start && d.start < end),\n      gtNotes\n    })\n  }\n  return result\n}\n\n/**\n * Shortcut for getMatchingSection and getMatchingError,\n * see them for parameter details.\n *\n * @param {Map} matching matching\n * @param {number} start start time (inclusive)\n * @param {number} end end time (exclusive)\n * @param {number} addPenalty penalty for each additonal note\n * @param {number} missPenalty penalty for each missing note\n * @param {number} timingPenalty penalty for note timing differences in seconds\n * @returns {object} error by category\n */\nexport function getMatchingSliceError (matching, start, end, addPenalty, missPenalty, timingPenalty) {\n  const section = getMatchingSection(matching, start, end)\n  const error = getMatchingError(section, addPenalty, missPenalty, timingPenalty)\n  return error\n}\n", "export * from './ArrayUtils.js'\r\nexport * from './BlobUtils.js'\r\nexport * from './ColorUtils.js'\r\nexport * from './FormattingUtils.js'\r\nexport * from './LocalStorageUtils.js'\r\nexport * from './MathUtils.js'\r\nexport * from './MiscUtils.js'\r\nexport * from './MusicUtils.js'\r\nexport * from './NoteColorUtils.js'\r\nexport * from './RecordingsUtils.js'\r\nexport * from './StatisticsUtils.js'\r\nexport * from './WebMidiUtils.js'\r\n\r\n/**\r\n * @module utils\r\n */\r\n", "/**\n * @module utils/BlobUtils\n */\n\n/**\n * Converts a Blob to a base64 string\n *\n * @param {Blob} blob Blob\n * @returns {Promise<string,undefined>} base64 string\n */\nexport function blobToBase64 (blob) {\n  return new Promise((resolve) => {\n    const reader = new FileReader()\n    reader.onloadend = () => resolve(reader.result)\n    reader.readAsDataURL(blob)\n  })\n}\n\n/**\n * Extracts the file extension from a Blob, so it can be saved as a file with\n * an appropriate extension.\n *\n * @param {Blob} blob Blob\n * @returns {string} file extension\n */\nexport function blobToFileExtension (blob) {\n  return blob.type.split('/')[1].split(';')[0]\n}\n", "import * as d3 from 'd3'\n\n/**\n * Determines the perceptual lightness of an HTML color\n *\n * @see https://stackoverflow.com/a/596241 (but normalizing to 0, 100)\n * @param {string} color HTML color specifier\n * @returns {number} lightness in [0, 100]\n */\nexport function getColorLightness (color) {\n  const { r, g, b } = d3.color(color).rgb()\n  // eslint-disable-next-line no-bitwise\n  const Y = (r + r + r + b + g + g + g + g) >> 3\n  return Y / 2.55\n}\n\n/**\n * Determines the average of mutliple given colors\n *\n * @param {string[]} colors HTML color specifiers\n * @returns {string} average as RGB string\n */\nexport function averageColor (colors) {\n  let mR = 0\n  let mG = 0\n  let mB = 0\n  for (const c of colors) {\n    const { r, g, b } = d3.color(c).rgb()\n    mR += r\n    mG += g\n    mB += b\n  }\n  mR = Math.round(mR / colors.length)\n  mG = Math.round(mG / colors.length)\n  mB = Math.round(mB / colors.length)\n  return `rgb(${mR}, ${mG}, ${mB})`\n}\n\n/**\n * Sets a color's opacity.\n * Does not support colors in rgba format.\n *\n * @param {string} color valid HTML color identifier\n * @param {number} [opacity=1] opacity from 0 to 1\n * @returns {string} color as RGBA string\n */\nexport function setOpacity (color, opacity = 1) {\n  const { r, g, b } = d3.color(color).rgb()\n  return `rgba(${r}, ${g}, ${b}, ${opacity})`\n}\n", "/**\n * @module utils/FormattingUtils\n */\n\n/**\n * Formats a time in seconds to <minutes>:<seconds>.<milliseconds>\n *\n * @param {number|null} seconds in seconds\n * @param {boolean} includeMillis include milli seconds in string?\n * @returns {string} 0-padded time string <minutes>:<seconds>.<milliseconds>\n */\nexport function formatTime (seconds, includeMillis = true) {\n  if (seconds === undefined || seconds === null) {\n    return includeMillis ? '--:--.---' : '--:--'\n  }\n  const s = Math.floor(seconds)\n  let min = (Math.floor(s / 60)).toString()\n  let sec = (s % 60).toString()\n  min = min.length < 2 ? `0${min}` : min\n  sec = sec.length < 2 ? `0${sec}` : sec\n  if (!includeMillis) {\n    return `${min}:${sec}`\n  }\n  let ms = (Math.round((seconds - s) * 1000)).toString()\n  if (ms.length < 2) {\n    ms = `00${ms}`\n  } else if (ms.length < 3) {\n    ms = `0${ms}`\n  }\n  return `${min}:${sec}.${ms}`\n}\n\n/**\n * Formats a Date to a string with format\n *      YYYY-mm-DDTHH:MM:SS\n * or when replaceT == true\n *      YYYY-mm-DD HH:MM:SS\n *\n * @param {Date} date date\n * @param {boolean} replaceT replace the 'T'?\n * @param {boolean} keepMillis keep milliseconds?\n * @returns {string} formatted date\n */\nexport function formatDate (date, replaceT = false, keepMillis = true) {\n  let string = date.toISOString()\n    .split(':')\n    .join('-')\n  if (!keepMillis) {\n    string = string.slice(0, string.indexOf('.'))\n  }\n  if (replaceT) {\n    string = string.replace('T', ' ')\n  }\n  return string\n}\n\n/**\n * Formats the song title (e.g. remove file extension and shorten)\n *\n * @param {string} title song title\n * @param {number} maxLength shorten to this length\n * @returns {string} formatted song title\n */\nexport function formatSongTitle (title, maxLength = 30) {\n  if (!title) {\n    return '[No Song]'\n  }\n  // Remove file extension\n  if (title.lastIndexOf('.') !== -1) {\n    title = title.slice(0, title.lastIndexOf('.'))\n  }\n  // Shorten\n  if (title.length > maxLength) {\n    title = `${title.slice(0, maxLength - 3)}...`\n  }\n  return title\n}\n", "/**\n * @module utils/LocalStorageUtils\n */\n\n/**\n * Stringifies an object and stores it in the localStorage\n *\n * @param {string} key key\n * @param {object} object JSON compatible object\n */\nexport function storeObjectInLocalStorage (key, object) {\n  const string = JSON.stringify(object)\n  localStorage.setItem(key, string)\n}\n\n/**\n * Retrieves a stringified object from the localStorage and parses it.\n *\n * @param {string} key key\n * @returns {object|null} object or null of not possible\n */\nexport function getObjectFromLocalStorage (key) {\n  const string = localStorage.getItem(key)\n  if (string === null) {\n    // console.warn(`LocalStorage has no key ${key}`);\n    return null\n  }\n  try {\n    return JSON.parse(string)\n  } catch {\n    return null\n  }\n}\n", "import * as d3 from 'd3'\r\n\r\n/**\r\n * @module utils/MiscUtils\r\n */\r\n\r\n/**\r\n * Clones a map where the values are flat objects,\r\n * i.e. values do not contain objects themselfes.\r\n *\r\n * @param {Map} map a map with object values\r\n * @returns {Map} a copy of the map with copies of the value objects\r\n */\r\nexport function deepCloneFlatObjectMap (map) {\r\n  const result = new Map()\r\n  for (const [key, value] of map.entries()) {\r\n    result.set(key, { ...value })\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * Groups the Notes from multiple tracks\r\n *\r\n * @param {Note[][]} tracks array of arrays of Note objects\r\n * @returns {Map} grouping\r\n */\r\nexport function groupNotesByPitch (tracks) {\r\n  const allNotes = tracks.flat()\r\n  if (allNotes.length === 0) {\r\n    return new Map()\r\n  }\r\n  return d3.group(allNotes, d => d.pitch)\r\n}\r\n\r\n/**\r\n * Reverses a given string.\r\n *\r\n * @param {string} s string\r\n * @returns {string} reversed string\r\n */\r\nexport function reverseString (s) {\r\n  return [...s].reverse().join('')\r\n}\r\n\r\n/**\r\n * Given some notes and a target note, finds\r\n * the note that has its start time closest to\r\n * the one of targetNote\r\n *\r\n * @todo replace by d3 argmin or sth?\r\n * @param {Note[]} notes notes\r\n * @param {Note} targetNote target note\r\n * @returns {Note} closest note to targetNote\r\n */\r\nexport function findNearest (notes, targetNote) {\r\n  if (!notes || notes.length === 0 || !targetNote) {\r\n    return null\r\n  }\r\n  let nearest = null\r\n  let dist = Number.POSITIVE_INFINITY\r\n  const targetStart = targetNote.start\r\n  for (const n of notes) {\r\n    const newDist = Math.abs(n.start - targetStart)\r\n    if (newDist < dist) {\r\n      dist = newDist\r\n      nearest = n\r\n    }\r\n  }\r\n  return nearest\r\n}\r\n\r\n/**\r\n * Allows to wait for a number of seconds with async/await\r\n * IMPORTANT: This it not exact, it will at *least* wait for X seconds\r\n *\r\n * @param {number} seconds number of seconds to wait\r\n * @returns {Promise} empty Promise that will resolve after the specified amount\r\n *      of seconds\r\n */\r\nexport function delay (seconds) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, seconds * 1000)\r\n  })\r\n}\r\n", "import * as d3 from 'd3'\n\n/**\n * @module utils/NoteColorUtils\n */\n\n// TODO: move to colors/ folder?\n\n/**\n * Maps each note to a color\n * Colors from https://www.svpwiki.com/music+note+or+sound+colors\n * Order is C, C#, ... B\n *\n * @type {string[]}\n */\nconst noteColormap = [\n  '#ff0000',\n  '#ff4e00',\n  '#db7b00',\n  '#ffcc00',\n  '#e4ed00',\n  '#81d700',\n  '#00ffb4',\n  '#00ffea',\n  '#00baff',\n  '#3c00ff',\n  '#a800ff',\n  '#ff00fd'\n].map(d => {\n  // Make colors less saturated\n  const c = d3.hsl(d)\n  c.s = 0.5\n  return c.toString()\n})\n/**\n * Colorblind save colors from\n * Malandrino et al. - Visualization and Music Harmony: Design, Implementation,\n * and Evaluation https://ieeexplore.ieee.org/abstract/document/8564210\n * Order is C, C#, ... B\n *\n * @type {string[]}\n */\n// export const noteColormapAccessible = new Map([\n//     ['C', '#9aebff'],\n//     ['C#', '#add5ff'],\n//     ['D', '#d6d6ff'],\n//     ['D#', '#ebd5ff'],\n//     ['E', '#ffc2eb'],\n//     ['F', '#ffcbcc'],\n//     ['F#', '#ffd5c2'],\n//     ['G', '#ffebc2'],\n//     ['G#', '#ebffc2'],\n//     ['A', '#c2d599'],\n//     ['A#', '#99ebbe'],\n//     ['B', '#adebeb'],\n// ]);\nconst noteColormapAccessible = [\n  '#6699ff',\n  '#66ffff',\n  '#000000',\n  '#647878',\n  '#993366',\n  '#ff0000',\n  '#ffcc99',\n  '#ffff01',\n  '#ff9900',\n  '#009900',\n  '#66ff99',\n  '#0000cc'\n]\n\nconst colorInterpolator = d3.interpolateRgb('black', 'steelblue')\n/**\n * Gradient color map from black to steelblue\n *\n * @type {string[]}\n */\nconst noteColormapGradientArray = Array.from({ length: 12 })\n  .map((d, index) => colorInterpolator(index / 11))\n\n/**\n * Returns the note color depending on the given pitch.\n * (Simplifies note color lookup by looking up the color for pitch%12.)\n *\n * @param {number} pitch MIDI pitch in [0, 127]\n * @param {string} colormap one of 'default', 'accessible', 'gradient'\n * @returns {string} color code\n */\nexport function noteColorFromPitch (pitch, colormap = 'default') {\n  switch (colormap) {\n    case 'accessible':\n      return noteColormapAccessible[pitch % 12]\n    case 'gradient':\n      return noteColormapGradientArray[pitch % 12]\n    default:\n      return noteColormap[pitch % 12]\n  }\n}\n", "import * as d3 from 'd3'\r\nimport Note from '../types/Note.js'\r\nimport { bpmToSecondsPerBeat } from './MusicUtils.js'\r\nimport { kernelDensityEstimator, kernelEpanechnikov } from './StatisticsUtils.js'\r\nimport { findLocalMaxima } from './MathUtils.js'\r\nimport Recording from '../types/Recording.js' /* eslint-disable-line no-unused-vars */\r\n\r\n/**\r\n * @module utils/RecordingsUtils\r\n */\r\n\r\n/**\r\n * Filters notes of a recording to remove noise from the MIDI device or pickup\r\n *\r\n * @todo detect gaps and fill them\r\n * @param {Recording} recording a recording\r\n * @param {number} velocityThreshold notes with velocity < velocityThreshold\r\n *      are removed\r\n * @param {number} durationThreshold notes with duration < velocityThreshold\r\n *      are removed (value in seconds)\r\n * @returns {Recording} clone of the recording with filtered notes\r\n */\r\nexport function filterRecordingNoise (recording, velocityThreshold = 0, durationThreshold = 0) {\r\n  const result = recording\r\n    .clone()\r\n    .filter(note => {\r\n      if (note.velocity < velocityThreshold) {\r\n        return false\r\n      }\r\n      if (note.getDuration() < durationThreshold) {\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n    // console.log(`Filtered recording, ${result.length()} of ${recording.length()} notes left`);\r\n  return result\r\n}\r\n\r\n/**\r\n * Removes notes from a recordings which are outside the range of the ground\r\n * truth and therefore likely noise.\r\n * Looks up the pitch range from the track of the GT that the recording was made\r\n * for.\r\n *\r\n * @param {Recording[]} recordings recordings\r\n * @param {Note[][]} groundTruth ground truth\r\n * @returns {Recording[]} filtered recordings\r\n */\r\nexport function clipRecordingsPitchesToGtRange (recordings, groundTruth) {\r\n  // Speed up by getting range only once for all tracks\r\n  const pitchRanges = new Map()\r\n  for (const [index, part] of groundTruth.entries()) {\r\n    const pitchExtent = d3.extent(part, d => d.pitch)\r\n    pitchRanges.set(index, pitchExtent)\r\n  }\r\n  return recordings.map(recording => {\r\n    const track = recording.selectedTrack\r\n    const [minPitch, maxPitch] = pitchRanges.get(track)\r\n    return recording.clone().filter(note => note.pitch >= minPitch && note.pitch <= maxPitch)\r\n  })\r\n}\r\n\r\n/**\r\n * Removes notes from a recordings which are outside the fretboard range of the\r\n * ground truth and therefore likely noise.\r\n * Looks up the fretboard position range from the track of the GT that the\r\n * recording was made for.\r\n *\r\n * @param {Recording[]} recordings recordings\r\n * @param {Note[][]} groundTruth ground truth\r\n * @param {'exact'|'area'} [mode=exact] mode for which fretboard positions to\r\n *      include: exact will only keep notes that have positions that occur in\r\n *      the GT, area will get a rectangular area of the fretboard that contains\r\n *      all GT positions and fill filter on that.\r\n * @returns {Recording[]} filtered recordings\r\n */\r\nexport function clipRecordingsPitchesToGtFretboardRange (recordings, groundTruth, mode = 'exact') {\r\n  if (mode === 'exact') {\r\n    // Speed up by getting range only once for all tracks\r\n    const occuringPositions = new Map()\r\n    for (const [index, part] of groundTruth.entries()) {\r\n      const positions = new Set(part.map(note => `${note.string} ${note.fret}`))\r\n      occuringPositions.set(index, positions)\r\n    }\r\n    return recordings.map(recording => {\r\n      const track = recording.selectedTrack\r\n      const validPositions = occuringPositions.get(track)\r\n      return recording.clone().filter(note => validPositions.has(`${note.string} ${note.fret}`))\r\n    })\r\n  } else {\r\n    // Speed up by getting range only once for all tracks\r\n    const positionRanges = new Map()\r\n    for (const [index, part] of groundTruth.entries()) {\r\n      const stringExtent = d3.extent(part, d => d.string)\r\n      const fretExtent = d3.extent(part, d => d.fret)\r\n      positionRanges.set(index, { stringExtent, fretExtent })\r\n    }\r\n    return recordings.map(recording => {\r\n      const track = recording.selectedTrack\r\n      const { stringExtent, fretExtent } = positionRanges.get(track)\r\n      const [minString, maxString] = stringExtent\r\n      const [minFret, maxFret] = fretExtent\r\n      return recording.clone().filter(note => {\r\n        return note.string >= minString && note.string <= maxString &&\r\n                    note.fret >= minFret && note.fret <= maxFret\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Aligns notes to a rhythmic pattern\r\n *\r\n * @todo not used\r\n * @param {Note[]} notes notes\r\n * @param {number} bpm e.g. 120 for tempo 120\r\n * @param {number} timeDivision e.g. 16 for 16th note steps\r\n * @returns {Note[]} aligned notes\r\n */\r\nexport function alignNotesToBpm (notes, bpm, timeDivision = 16) {\r\n  const secondsPerBeat = bpmToSecondsPerBeat(bpm)\r\n  const secondsPerDivision = secondsPerBeat / timeDivision\r\n  return notes.map(note => {\r\n    const n = note.clone()\r\n    n.start = Math.round(n.start / secondsPerDivision) * secondsPerDivision\r\n    n.end = Math.round(n.end / secondsPerDivision) * secondsPerDivision\r\n    return n\r\n  })\r\n}\r\n\r\n/**\r\n * Calculates a heatmap either pitch- or channel-wise.\r\n * Pitch-time heatmap:\r\n * Calculates a heatmap of multiple recordings, to see the note density in the\r\n * pitch-time-space.\r\n * Channel-time heatmap:\r\n * Calculates a heatmap of multiple recordings, to see the note density in the\r\n * channel-time-space. Channel could be a guitar string or left and right hand\r\n * for example.\r\n *\r\n * @param {Note[]} recNotes recordings\r\n * @param {number} nRecs number of recordings\r\n * @param {number} binSize time bin size in milliseconds\r\n * @param {string} attribute 'pitch' | 'channel'\r\n * @returns {Map} pitch->heatmap; heatmap is number[] for all time slices\r\n */\r\nexport function recordingsHeatmap (recNotes, nRecs, binSize = 10, attribute = 'pitch') {\r\n  let groupedByAttribute\r\n  if (attribute === 'pitch') {\r\n    groupedByAttribute = d3.group(recNotes, d => d.pitch)\r\n  } else if (attribute === 'channel') {\r\n    groupedByAttribute = d3.group(recNotes, d => d.channel)\r\n  } else {\r\n    console.warn(`Invalid attribute parameter '${attribute}'`)\r\n  }\r\n\r\n  const heatmapByAttribute = new Map()\r\n  for (const [attribute_, notes] of groupedByAttribute.entries()) {\r\n    // Calculate heatmap\r\n    const maxTime = d3.max(notes, d => d.end)\r\n    const nBins = Math.ceil((maxTime * 1000) / binSize) + 1\r\n    const heatmap = Array.from({ length: nBins }).fill(0)\r\n    for (const note of notes) {\r\n      const start = Math.round(note.start * 1000 / binSize)\r\n      const end = Math.round(note.end * 1000 / binSize)\r\n      for (let bin = start; bin <= end; bin++) {\r\n        heatmap[bin] += 1\r\n      }\r\n    }\r\n    // Normalize\r\n    for (let bin = 0; bin < heatmap.length; bin++) {\r\n      heatmap[bin] /= nRecs\r\n    }\r\n    heatmapByAttribute.set(attribute_, heatmap)\r\n  }\r\n  return heatmapByAttribute\r\n}\r\n\r\n/**\r\n * 'Averages' multiple recordings of the same piece to get an approximation of\r\n * the ground truth.\r\n *\r\n * @todo use velocity?\r\n * @param {Map} heatmapByPitch haetmap from recordingsHeatmap()\r\n * @param {number} binSize size of time bins in milliseconds\r\n * @param {number} threshold note is regarded as true when this ratio of\r\n *      recordings has a note there\r\n * @returns {Note[]} approximated ground truth notes\r\n */\r\nexport function averageRecordings (heatmapByPitch, binSize, threshold = 0.8) {\r\n  const newNotes = []\r\n  for (const [pitch, heatmap] of heatmapByPitch.entries()) {\r\n    // Threshold to get note timespans -> array with booleans (is note here?)\r\n    // TODO: use Canny Edge Detector? Fill Gaps?\r\n    for (let bin = 0; bin < heatmap.length; bin++) {\r\n      heatmap[bin] = heatmap[bin] > threshold\r\n    }\r\n    // Extract notes\r\n    let currentNote = null\r\n    for (let bin = 0; bin < heatmap.length; bin++) {\r\n      // Detect note start\r\n      if (!currentNote && heatmap[bin]) {\r\n        const time = bin * binSize / 1000\r\n        currentNote = new Note(pitch, time, 127, 0)\r\n      }\r\n      // Detect note end or end of array\r\n      if (currentNote && (!heatmap[bin] || bin === heatmap.length - 1)) {\r\n        const time = bin * binSize / 1000\r\n        currentNote.end = time\r\n        newNotes.push(currentNote)\r\n        currentNote = null\r\n      }\r\n    }\r\n  }\r\n  // Sort new notes\r\n  newNotes.sort((a, b) => a.start - b.start)\r\n  return newNotes\r\n}\r\n\r\n/**\r\n * Extracts a probable ground truth from multiple recordings. Uses one KDE for\r\n * each note starts and ends, detects maxima in the KDE and thresholds them.\r\n * Then uses alternating start end end candidates to create notes.\r\n *\r\n * @param {Note[]} recNotes recordings notes\r\n * @param {number} bandwidth kernel bandwidth\r\n * @param {number} ticksPerSecond number of ticks per second\r\n * @param {number} threshold threshold\r\n * @returns {Note[]} new notes\r\n */\r\nexport function averageRecordings2 (recNotes, bandwidth = 0.01, ticksPerSecond, threshold) {\r\n  const groupedByPitch = d3.group(recNotes, d => d.pitch)\r\n  const newNotes = []\r\n  for (const [pitch, notes] of groupedByPitch.entries()) {\r\n    const starts = notes.map(d => d.start)\r\n    const ends = notes.map(d => d.end)\r\n    // Create KDE\r\n    const duration = d3.max(ends)\r\n    const ticks = Math.ceil(ticksPerSecond * duration)\r\n    const x = d3.scaleLinear()\r\n      .domain([0, duration])\r\n      .range([0, duration])\r\n    const kde = kernelDensityEstimator(kernelEpanechnikov(bandwidth), x.ticks(ticks))\r\n    const estimateStarts = kde(starts)\r\n    const estimateEnds = kde(ends)\r\n    // Search for density maxima\r\n    const maximaStarts = findLocalMaxima(estimateStarts.map(d => d[1]))\r\n    const maximaEnds = findLocalMaxima(estimateEnds.map(d => d[1]))\r\n    // If density value > threshold, update note state\r\n    const chosenStarts = maximaStarts\r\n      .filter(d => estimateStarts[d][1] > threshold)\r\n      .map(d => estimateStarts[d][0])\r\n    const chosenEnds = maximaEnds\r\n      .filter(d => estimateEnds[d][1] > threshold)\r\n      .map(d => estimateEnds[d][0])\r\n    // Create notes\r\n    while (chosenStarts.length > 0) {\r\n      const nextStart = chosenStarts.shift()\r\n      // Remove ends before nextStart\r\n      while (chosenEnds.length > 0 && chosenEnds[0] < nextStart) {\r\n        chosenEnds.shift()\r\n      }\r\n      const nextEnd = chosenEnds.shift()\r\n      // Remove starts before nextEnd\r\n      while (chosenStarts.length > 0 && chosenStarts[0] < nextEnd) {\r\n        chosenStarts.shift()\r\n      }\r\n      newNotes.push(new Note(pitch, nextStart, 127, 0, nextEnd))\r\n    }\r\n  }\r\n  // Sort new notes\r\n  newNotes.sort((a, b) => a.start - b.start)\r\n  return newNotes\r\n}\r\n\r\n/**\r\n * Returns a Map: pitch->differenceMap, differenceMap is an Array with time bins\r\n * and each bin is either\r\n *      0 (none, neither GT nor rec have a note here)\r\n *      1 (missing, only GT has a note here)\r\n *      2 (additional, only rec has a note here)\r\n *      3 (both, both have a note here)\r\n *\r\n * @todo move to comparison\r\n * @param {Note[]} gtNotes ground truth notes\r\n * @param {Note[]} recNotes recrodings notes\r\n * @param {number} binSize size of a time bin in milliseconds\r\n * @returns {Map} pitch->differenceMap; differenceMap is number[] for all time slices\r\n * @example\r\n *      const diffMap = differenceMap(gtNotes, recNotes, 10);\r\n */\r\nexport function differenceMap (gtNotes, recNotes, binSize) {\r\n  const recHeatmap = recordingsHeatmap(recNotes, 1, binSize)\r\n  const gtHeatmap = recordingsHeatmap(gtNotes, 1, binSize)\r\n  const allPitches = [...new Set([\r\n    ...recHeatmap.keys(),\r\n    ...gtHeatmap.keys()\r\n  ])]\r\n  const resultMap = new Map()\r\n  for (const pitch of allPitches) {\r\n    let result\r\n    // Handle pitches that occur only in one of both\r\n    if (!recHeatmap.has(pitch)) {\r\n      // All notes are missing\r\n      result = gtHeatmap.get(pitch).map(d => d !== 0 ? 1 : 0)\r\n    } else if (!gtHeatmap.has(pitch)) {\r\n      // All notes are additional\r\n      result = recHeatmap.get(pitch).map(d => d !== 0 ? 2 : 0)\r\n    } else {\r\n      // Compare both bins for each time slice\r\n      const recH = recHeatmap.get(pitch)\r\n      const gtH = gtHeatmap.get(pitch)\r\n      const nBins = Math.max(recH.length, gtH.length)\r\n      result = Array.from({ length: nBins }).fill(0)\r\n      for (let index = 0; index < result.length; index++) {\r\n        const gtValue = gtH[index] || 0\r\n        const recValue = recH[index] || 0\r\n        if (gtValue === 0 && recValue === 0) {\r\n          // None\r\n          result[index] = 0\r\n        }\r\n        if (gtValue !== 0 && recValue === 0) {\r\n          // Missing\r\n          result[index] = 1\r\n        }\r\n        if (gtValue === 0 && recValue !== 0) {\r\n          // Additional\r\n          result[index] = 2\r\n        }\r\n        if (gtValue !== 0 && recValue !== 0) {\r\n          // Both\r\n          result[index] = 3\r\n        }\r\n      }\r\n    }\r\n    resultMap.set(pitch, result)\r\n  }\r\n  return resultMap\r\n}\r\n\r\n/**\r\n * Computes the 'area' of error from a differenceMap normalized by total area.\r\n * The area is simply the number of bins with each value, total area is max.\r\n * number of bins in all pitches * the number of pitches.\r\n *\r\n * @todo move to comparison\r\n * @todo not used or tested yet\r\n * @todo add threshold for small errors (i.e. ignore area left and right of notes' start and end (masking?)))\r\n * @param {Map} differenceMap differenceMap from differenceMap()\r\n * @returns {object} {missing, additional, correct} area ratios\r\n * @example\r\n *      const diffMap = differenceMap(gtNotes, recNotes, 10);\r\n *      const diffMapErrors = differenceMapErrorAreas(diffMap);\r\n *      const {missing, additional, correct} = diffMapErrors;\r\n */\r\nexport function differenceMapErrorAreas (differenceMap) {\r\n  // Count bins for each error type\r\n  let missingBins = 0\r\n  let additionalBins = 0\r\n  let correctBins = 0\r\n\r\n  for (const diffMap of differenceMap.values()) {\r\n    for (const bin of diffMap) {\r\n      if (bin === 1) { missingBins++ } else if (bin === 2) { additionalBins++ } else if (bin === 3) { correctBins++ }\r\n    }\r\n  }\r\n\r\n  // Normalize\r\n  const maxLength = d3.max([...differenceMap], d => d[1].length)\r\n  const totalArea = differenceMap.size * maxLength\r\n\r\n  return {\r\n    missing: missingBins / totalArea,\r\n    additional: additionalBins / totalArea,\r\n    correct: correctBins / totalArea\r\n  }\r\n}\r\n", "import * as d3 from 'd3'\r\n\r\n/**\r\n * @module utils/StatisticsUtils\r\n */\r\n\r\n/**\r\n * Computes the Pearson correlation\r\n *\r\n * @see https://gist.github.com/matt-west/6500993#gistcomment-3718526\r\n * @param {number[]} x an array of numbers\r\n * @param {number[]} y an array of numbers\r\n * @returns {number} correlation\r\n * @throws {'Invalid data, must be two arrays with same length'} for invalid\r\n *  arguments\r\n * @throws {'Invalid data, length must be >= 2'} for invalid arguments\r\n */\r\nexport function pearsonCorrelation (x, y) {\r\n  if (!x || !y || !x.length || !y.length || x.length !== y.length) {\r\n    throw new Error('Invalid data, must be two arrays with same length')\r\n  }\r\n  if (x.length < 2) {\r\n    throw new Error('Invalid data, length must be >= 2')\r\n  }\r\n  let n = x.length\r\n  let nn = 0\r\n  for (let i = 0; i < n; i++, nn++) {\r\n    if ((!x[i] && x[i] !== 0) || (!y[i] && y[i] !== 0)) {\r\n      nn--\r\n      continue\r\n    }\r\n    x[nn] = x[i]\r\n    y[nn] = y[i]\r\n  }\r\n  if (n !== nn) {\r\n    x = x.splice(0, nn)\r\n    y = y.splice(0, nn)\r\n    n = nn\r\n  }\r\n  const meanX = d3.mean(x)\r\n  const meanY = d3.mean(y)\r\n  const calc = (v, mean) =>\r\n    Math.sqrt(v.reduce((s, a) => s + a * a, 0) - n * mean * mean)\r\n  return (\r\n    (x.map((e, i) => ({ x: e, y: y[i] }))\r\n      .reduce((v, a) => v + a.x * a.y, 0) -\r\n      n * meanX * meanY) /\r\n    (calc(x, meanX) * calc(y, meanY))\r\n  )\r\n}\r\n\r\n/**\r\n * Calculates a 95% confidence interval\r\n *\r\n * @see https://www.alchemer.com/resources/blog/how-to-calculate-confidence-intervals/\r\n * @param {numnber[]} values values\r\n * @returns {object} {mean, low, high}\r\n */\r\nexport function confidenceInterval (values) {\r\n  const n = values.length\r\n  const m = d3.mean(values)\r\n  const s = d3.deviation(values)\r\n  const z = 1.96 // 95% CI\r\n  // const z = 2.576; // 99% CI\r\n  const part = z * (s / Math.sqrt(n))\r\n  const low = m - part\r\n  const high = m + part\r\n  return { mean: m, low, high }\r\n}\r\n\r\n/**\r\n * Given an array of numbers, computes the proportions of a boxplot.\r\n *\r\n * @param {number[]} values values\r\n * @returns {object} { q1, q2, q3, r0, r1 }\r\n */\r\nexport function getBoxplotCharacteristics (values) {\r\n  values.sort((a, b) => a - b)\r\n  const minValue = values[0]\r\n  const maxValue = values[values.length - 1]\r\n  const q1 = d3.quantile(values, 0.25)\r\n  const q2 = d3.quantile(values, 0.5)\r\n  const q3 = d3.quantile(values, 0.75)\r\n  const iqr = q3 - q1\r\n  const r0 = Math.max(minValue, q1 - iqr * 1.5)\r\n  const r1 = Math.min(maxValue, q3 + iqr * 1.5)\r\n  return { q1, q2, q3, r0, r1 }\r\n}\r\n\r\n/**\r\n * Returns a kernel desity estimator function.\r\n *\r\n * @see https://www.d3-graph-gallery.com/graph/violin_basicDens.html\r\n * @example\r\n * // With x being a d3.scaleLinear() scale\r\n * const kde = kernelDensityEstimator(kernelEpanechnikov(0.2), x.ticks(50));\r\n * const estimate = kde(data);\r\n * @param {Function} kernel kernel function\r\n * @param {number[]} X domain\r\n * @returns {Function} kernel density estimator\r\n */\r\nexport function kernelDensityEstimator (kernel, X) {\r\n  /**\r\n       * Kernel desity estimator\r\n       * For each value of X it computes the estimated density of the data values\r\n       * in V. The result has the form [ [x1, est1], [x2, est2], ... ]\r\n       *\r\n       * @param {number[]} V values\r\n       * @returns {number[][]} estimates for points of X\r\n       */\r\n  const estimator = (V) => {\r\n    return X.map(x => [\r\n      x,\r\n      d3.mean(V, (v) => kernel(x - v))\r\n    ])\r\n  }\r\n  return estimator\r\n}\r\n\r\n/**\r\n * Epanechnikov kernel\r\n *\r\n * @param {number} k kernel size\r\n * @returns {Function} kernel function with curried k\r\n */\r\nexport function kernelEpanechnikov (k) {\r\n  /**\r\n       * Epanechnokov kernel function\r\n       *\r\n       * @param {number} v value\r\n       * @returns {number} result\r\n       */\r\n  const epKernel = (v) => Math.abs(v /= k) <= 1\r\n    ? 0.75 * (1 - v * v) / k\r\n    : 0\r\n  return epKernel\r\n}\r\n\r\n/**\r\n * Gauss kernel\r\n *\r\n * @param {number} k kernel size\r\n * @returns {Function} kernel function with curried k\r\n */\r\nexport function kernelGauss (k) {\r\n  /**\r\n       * Gaussian kernel function\r\n       *\r\n       * @param {number} v value\r\n       * @returns {number} result\r\n       */\r\n  const gaKernel = (v) => Math.abs(v / k) <= 1\r\n    ? ((1 / Math.sqrt(2 * Math.PI)) * Math.E ** ((-1 / 2) * v * v))\r\n    : 0\r\n  return gaKernel\r\n}\r\n", "/**\n * @module utils/WebMidiUtils\n */\n\n/**\n * Allows to ping a MIDI device that loops back to measure latency.\n * The tool loopMIDI does exactly this:\n *\n * @see https://www.tobias-erichsen.de/software/loopmidi.html.\n * @example pingMidiDevice('loopMIDI Port', 10);\n * @param {string} deviceName name of the MIDI device\n * @param {number} howOften how many times to ping the device\n */\nexport function pingMidiDevice (deviceName, howOften = 1) {\n  if (!navigator.requestMIDIAccess) {\n    console.error('MIDI: WebMIDI is not supported in this browser.')\n  } else {\n    let sentCount = 0\n    let sentTime\n    let totalTime = 0\n    // Start listening for incoming data\n    const receiveFunction = () => {\n      const ping = Date.now() - sentTime\n      totalTime += ping\n      const avg = totalTime / sentCount\n      console.log(`Received MIDI from ${deviceName} after ${ping} ms (avg: ${avg})`)\n    }\n    navigator.requestMIDIAccess().then(midiAccess => {\n      for (const input of midiAccess.inputs.values()) {\n        if (deviceName === input.name) {\n          input.onmidimessage = receiveFunction\n        }\n      }\n      // Get output device\n      let outputDevice = null\n      for (const output of midiAccess.outputs.values()) {\n        if (deviceName === output.name) {\n          outputDevice = output\n        }\n      }\n      if (!outputDevice) {\n        console.error(`Cannot ping output device ${deviceName} because it is not there`)\n      }\n      // Send data once a second\n      const pingFunction = () => {\n        if (sentCount < howOften) {\n          sentCount++\n          console.log(`Ping ${sentCount}/${howOften} Sending MIDI ping to ${deviceName}`)\n          sentTime = new Date()\n          outputDevice.send([0x90, 0x45, 0x7F])\n          setTimeout(pingFunction, 1000)\n        }\n      }\n      setTimeout(pingFunction, 1000)\n    }, () => console.error('Cannot get MIDI access')\n    )\n  }\n}\n", "import NoteArray from '../types/NoteArray.js'\nimport Recording from '../types/Recording.js'\nimport { group, max } from 'd3'\n\n/**\n * @module DiffAlignment\n */\n\n/**\n * Aligns the recording to the best fitting position of the ground truth\n *\n * @param {Note[]} gtNotes ground truth notes\n * @param {Recording} recording a Recording object\n * @param {number} binSize time bin size in milliseconds\n * @returns {Recording} aligned recording\n */\nexport function alignRecordingToBestFit (gtNotes, recording, binSize = 100) {\n  const recNotes = recording.getNotes()\n  const bestFit = alignGtAndRecToMinimizeDiffError(gtNotes, recNotes, binSize)[0]\n  const newRec = recording.clone().shiftToStartAt(bestFit.offsetMilliseconds / 1000)\n  return newRec\n}\n\n/**\n * Splits the recording at gaps > gapDuration and then aligns each section to\n * the best fitting position of the ground truth.\n *\n * @param {Note[]} gtNotes ground truth notes\n * @param {Recording} recording a Recording object\n * @param {number} binSize time bin size in milliseconds\n * @param {number} gapDuration duration of seconds for a gap to be used as\n *      segmenting time\n * @param {'start-start'|'end-start'} gapMode gaps can either be considered as\n *      the maximum time between two note's starts or the end of the first\n *      and the start of the second note\n * @returns {Recording} aligned recording\n */\nexport function alignRecordingSectionsToBestFit (\n  gtNotes,\n  recording,\n  binSize,\n  gapDuration = 3,\n  gapMode = 'start-start'\n) {\n  // Cut into sections when there are gaps\n  const sections = Recording.segmentAtGaps(gapDuration, gapMode)\n\n  const alignedSections = sections.map(section => {\n    // TODO: avoid overlaps?\n    const bestFit = alignGtAndRecToMinimizeDiffError(gtNotes, section, binSize)[0]\n    return bestFit\n  })\n\n  const newRec = recording.clone()\n  newRec.setNotes(alignedSections.flat())\n  return newRec\n}\n\n/**\n * Global alignment.\n *\n * Returns an array with matches sorted by magnitude of agreement.\n * The offsetMilliseconds value describes at what time the first note of the\n * recording should start.\n *\n * Goal: Know which part of ground truth (GT) was played in recording (rec)\n * Assumptions:\n * - Rec has same tempo as GT\n * - Rec does not start before GT\n * - Rec does not repeat something that is not repeated in the GT\n * - Rec does not have gaps\n * Ideas:\n * - Brute-force\n * - Sliding window\n * - Using diff between time-pitch matrix of GT and rec\n * - Only compute agreement (correct diff part) for the current overlap\n * - For each time position save the agreement magnitude\n * - Optionally: repeat around local maxima with finer binSize\n *\n * @param {Note[]} gtNotes ground truth notes\n * @param {Note[]} recNotes recorded notes\n * @param {number} binSize time bin size in milliseconds\n * @returns {object[]} best offsets with agreements\n */\nexport function alignGtAndRecToMinimizeDiffError (gtNotes, recNotes, binSize) {\n  gtNotes = new NoteArray(gtNotes)\n  recNotes = new NoteArray(recNotes).shiftToStartAt(0)\n  const gtDuration = gtNotes.getDuration()\n  const recDuration = recNotes.getDuration()\n  const nBins = Math.ceil((gtDuration * 1000) / binSize) + 1\n  const nRecBins = Math.ceil((recDuration * 1000) / binSize) + 1\n  // TODO: just switch them around?\n  if (nRecBins > nBins) {\n    console.warn('Cannot compare GT and rec if rec is longer')\n  }\n  // Get activation maps\n  const gtActivation = activationMap(gtNotes.getNotes(), binSize)\n  const recActivation = activationMap(recNotes.getNotes(), binSize)\n  // Compare with sliding window\n  const agreementsPerOffset = []\n  for (let offset = 0; offset < nBins - nRecBins + 1; offset++) {\n    const currentAgreement = agreement(gtActivation, recActivation, offset)\n    // console.log(`Comparing gt bins ${offset}...${offset + nRecBins} to rec\\nGot agreement ${currentAgreement}`);\n    agreementsPerOffset.push({\n      offsetBins: offset,\n      offsetMilliseconds: offset * binSize,\n      agreement: currentAgreement\n    })\n  }\n  // Sort by best match\n  const sorted = agreementsPerOffset.sort((a, b) => b.agreement - a.agreement)\n  return sorted\n}\n\n/**\n * Returns an activation map, that maps pitch to an array of time bins.\n * Each bin contains a 0 when there is no note or a 1 when there is one.\n *\n * @param {Note[]} allNotes notes\n * @param {number} binSize time bin size in milliseconds\n * @returns {Map} activation map\n */\nexport function activationMap (allNotes, binSize = 100) {\n  const activationMap = new Map()\n  for (const [pitch, notes] of group(allNotes, d => d.pitch).entries()) {\n    const maxTime = max(notes, d => d.end)\n    const nBins = Math.ceil((maxTime * 1000) / binSize) + 1\n    const pitchActivationMap = Array.from({ length: nBins }).fill(0)\n    // Calculate heatmap by writing 1 where a note is active\n    for (const note of notes) {\n      const start = Math.round(note.start * 1000 / binSize)\n      const end = Math.round(note.end * 1000 / binSize)\n      for (let bin = start; bin <= end; bin++) {\n        pitchActivationMap[bin] = 1\n      }\n    }\n    activationMap.set(pitch, pitchActivationMap)\n  }\n  return activationMap\n}\n\n/**\n * Given two activation maps, simply counts the number of bins [pitch, time]\n * where both have a 1, so an acitve note\n * GT must be longer than rec\n *\n * @todo also count common 0s?\n * @param {Map} gtActivations see activationMap()\n * @param {Map} recActivations see activationMap()\n * @param {number} offset offset for activation2 when comparing\n * @returns {number} agreement\n */\nexport function agreement (gtActivations, recActivations, offset) {\n  const allPitches = [...new Set([\n    ...gtActivations.keys(),\n    ...recActivations.keys()\n  ])]\n  let agreement = 0\n  for (const pitch of allPitches) {\n    // Handle pitches that occur only in one of both\n    if (!gtActivations.has(pitch)) {\n      // All notes are missing\n    } else if (!recActivations.has(pitch)) {\n      // All notes are additional\n    } else {\n      // Compare both bins for each time slice\n      const gtA = gtActivations.get(pitch)\n      const recA = recActivations.get(pitch)\n      // Go through full rec, and compare to current section of GT\n      for (let index = 0; index < recA.length; index++) {\n        const gtValue = gtA[index + offset] || 0\n        const recValue = recA[index] || 0\n        if (gtValue === 1 && recValue === 1) {\n          agreement++\n        }\n      }\n    }\n  }\n  return agreement\n}\n", "import { minIndex } from 'd3'\n\n/**\n * Idea: Like in hierarchical clustering, take the most similar pair out of the\n * set of all possible pairs repeatedly, until one array of items is empty.\n *\n * @template T1\n * @template T2\n * @param {T1[]} itemsA an array with items\n * @param {T2[]} itemsB an array with items\n * @param {function(T1, T2): number} distanceFunction distance function for two\n *      items, must be 0 for equal items and symmetric\n * @returns {Map<number,number>} with the indices of the matched items\n */\nexport function priorityMatching (itemsA, itemsB, distanceFunction) {\n  // Build distance matrix\n  const matrix = Array.from({ length: itemsA.length }).map(\n    () => Array.from({ length: itemsB.length })\n  )\n  for (const [indexA, gtNote] of itemsA.entries()) {\n    for (let indexB = indexA; indexB < itemsB.length; indexB++) {\n      const dist = distanceFunction(gtNote, itemsB[indexB])\n      matrix[indexA][indexB] = dist\n      if (matrix[indexB] !== undefined) {\n        matrix[indexB][indexA] = dist\n      }\n    }\n  }\n  // Compute matching pair by pair\n  const matching = new Map()\n  const numberOfMatches = Math.min(itemsA.length, itemsB.length)\n  for (let match = 0; match < numberOfMatches; match++) {\n    // Find most similar pair, i.e. matrix entry with smallest value\n    const [a, b] = getMatrixMinPosition(matrix)\n    matching.set(a, b)\n    // Remove from matrix (just set to null)\n    if (match >= numberOfMatches - 1) {\n      break\n    }\n    for (let index = 0; index < itemsA.length; index++) {\n      matrix[index][b] = null\n    }\n    for (let index = 0; index < itemsB.length; index++) {\n      matrix[a][index] = null\n    }\n  }\n  return matching\n}\n\n/**\n * First matches GT to rec notes via priorityMatching, then computes the error\n * for each GT note that has been matched using the same distance function.\n * The Map will be undefined for GT notes that have not been matched, they can\n * be considered missing in the recording.\n *\n * @param {Note[]} gtNotes ground truth notes\n * @param {Note[]} recNotes recorded notes\n * @param {function(Note,Note): number} distanceFunction distance function,\n *      taking two notes and returning the 'distance', i.e. how different they\n *      are. See balancedNoteDistance as example.\n * @returns {Map<Note,number>} a Map from GT note to its error\n */\nexport function errorFromPriorityMatching (gtNotes, recNotes, distanceFunction) {\n  const matching = priorityMatching(gtNotes, recNotes, distanceFunction)\n  // Map GT notes to errors\n  const errors = new Map()\n  for (const [gt, rec] of matching.entries()) {\n    const gtNote = gtNotes[gt]\n    const recNote = recNotes[rec]\n    const error = distanceFunction(gtNote, recNote)\n    errors.set(gtNote, error)\n  }\n  return errors\n}\n\n/**\n * Computes a distance (inverse similarity) of two notes, considering pitch,\n * chroma, start, duration, and channel.\n *\n * @param {Note} a a Note\n * @param {Note} b a Note\n * @returns {number} distance\n */\nexport function balancedNoteDistance (a, b) {\n  let dist = 0\n  // Pitch\n  dist += Math.abs(a.pitch - b.pitch)\n  // Chroma\n  dist += Math.abs(a.pitch % 12 - b.pitch % 12)\n  // Start time\n  dist += Math.abs(a.start - b.start)\n  // Duration\n  dist += 0.5 * Math.abs(a.getDuration() - b.getDuration())\n  // Channel\n  dist += Math.abs(a.channel - b.channel)\n  return dist\n}\n\n/**\n * Returns the row and colum indices of the minimum value of the given matrix\n *\n * @param {number[][]} matrix matrix\n * @returns {number[]} [rowIndex, columIndex] of the minimum value\n */\nexport function getMatrixMinPosition (matrix) {\n  // Find most similar pair, i.e. matrix entry with smallest value\n  const minPerRow = matrix.map(row => {\n    const minInd = minIndex(row)\n    return [\n      minInd,\n      row[minInd]\n    ]\n  })\n  const minRowIndex = minIndex(minPerRow, d => d[1])\n  const minColIndex = minPerRow[minRowIndex][0]\n  return [minRowIndex, minColIndex]\n}\n", "import { max, min } from 'd3'\r\n// import DynamicTimeWarping from 'dynamic-time-warping-2';\r\n// eslint-disable-next-line no-unused-vars\r\nimport Note from '../types/Note.js'\r\n\r\n/**\r\n * @module comparison/Similarity\r\n */\r\n\r\n/**\r\n * Given a track, a selected time interval and a threshold,\r\n * this function searches for parts in the track that are\r\n * similar to the selection.\r\n * It uses a sliding window with the size of the selection\r\n * and a stride given as argument.\r\n *\r\n * @param {Note[]} track array of Note objects\r\n * @param {number[]} selectedInterval [startTime, endTime] in seconds\r\n * @param {number} stride stride for the sliding window in number of bins\r\n * @param {number} threshold distance threshold below which parts are considered similar\r\n * @param {number} secondsPerBin time bin size in seconds\r\n * @param {string} distance one of: 'dtw', 'euclidean', 'nearest'\r\n * @returns {object} similar parts\r\n */\r\nexport function getSimilarParts (track, selectedInterval, stride, threshold, secondsPerBin = 1 / 16, distance = 'euclidean') {\r\n  console.log(`Searching for similar parts based on selection, using ${distance}`)\r\n  if (track === undefined || track.length === 0) {\r\n    console.warn('No or empty track given')\r\n    return\r\n  }\r\n  // Discretize track (instead of doing this for every part)\r\n  const minTime = min(track, d => d.start)\r\n  const maxTime = max(track, d => d.end)\r\n  const binCount = Math.ceil((maxTime - minTime) / secondsPerBin)\r\n  const discrTrack = discretizeTime(track, secondsPerBin)\r\n  // Selection\r\n  const startBin = Math.floor((selectedInterval[0] - minTime) / secondsPerBin)\r\n  const endBin = Math.ceil((selectedInterval[1] - minTime) / secondsPerBin)\r\n  const selection = sliceDiscretizedTrack(discrTrack, startBin, endBin)\r\n  const selectionSize = endBin - startBin\r\n  // Sliding window through the track\r\n  const similarParts = []\r\n  for (let pos = 0; pos < binCount - selectionSize; pos += stride) {\r\n    const pos2 = pos + selectionSize\r\n    // Ignore intersections with selection\r\n    if (!(pos >= startBin && pos <= endBin) && !(pos2 >= startBin && pos2 <= endBin)) {\r\n      const part = sliceDiscretizedTrack(discrTrack, pos, pos2)\r\n      const dist = getTrackSimilarity(selection, part, distance)\r\n      if (dist <= threshold) {\r\n        similarParts.push({\r\n          startBin: pos,\r\n          endBin: pos2,\r\n          startTime: minTime + pos * secondsPerBin,\r\n          endTime: minTime + pos2 * secondsPerBin,\r\n          dist\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    selection: {\r\n      startBin,\r\n      endBin,\r\n      startTime: minTime + startBin * secondsPerBin,\r\n      endTime: minTime + endBin * secondsPerBin\r\n    },\r\n    similarParts\r\n  }\r\n}\r\n\r\n/**\r\n * Uses calculates the distance between\r\n * two discretized tracks, for each pitch separately.\r\n * Pitch-wise distances are averaged and a penalty is added to the distance\r\n * for pitches that are not occuring in both tracks\r\n *\r\n * @see https://github.com/GordonLesti/dynamic-time-warping\r\n * @param {Map} discrA discretized track\r\n * @param {Map} discrB discretized track\r\n * @param {string} distance one of: 'euclidean', 'nearest'\r\n * @returns {number} distance\r\n */\r\nexport function getTrackSimilarity (discrA, discrB, distance) {\r\n  // Get common pitches\r\n  const common = []\r\n  for (const key of discrA.keys()) {\r\n    if (discrB.has(key)) {\r\n      common.push(key)\r\n    }\r\n  }\r\n  // Get distance for each pitch and add to weighted average\r\n  let totalDist = 0\r\n  // Get DTW distance for each common pitch\r\n  for (const pitch of common) {\r\n    const binsA = discrA.get(pitch)\r\n    const binsB = discrB.get(pitch)\r\n    let dist\r\n    if (distance === 'dtw') {\r\n      // const dtw = new DynamicTimeWarping(binsA, binsB, (a, b) => Math.abs(a - b));\r\n      // dist = dtw.getDistance();\r\n    } else if (distance === 'euclidean') {\r\n      dist = euclideanDistanceSquared(binsA, binsB)\r\n    } else if (distance === 'nearest') {\r\n      dist = neirestNeighborDistance(binsA, binsB)\r\n    }\r\n    // Get weighted average\r\n    // TODO: How to weight the average?\r\n    const weight = 1\r\n    // const weight = countActiveNoteBins(binsA) + countActiveNoteBins(binsB);\r\n    // const weight = 1 / (countActiveNoteBins(binsA) + countActiveNoteBins(binsB));\r\n    totalDist += weight * dist\r\n  }\r\n  // TODO: add penalty for uncommon pitches\r\n  // Depending on number of 1s?\r\n  let penaltyWeight = 0\r\n  for (const discr of [discrA, discrB]) {\r\n    for (const key of discr.keys()) {\r\n      if (!common.includes(key)) {\r\n        penaltyWeight += countActiveNoteBins(discr.get(key))\r\n      }\r\n    }\r\n  }\r\n  return totalDist + penaltyWeight\r\n}\r\n\r\n/**\r\n * - Normalizes Note times to be between 0 and (maxTime - minTime),\r\n * - discretizes the start and end time by using Math.round to get\r\n * the closest time bin (beat) and\r\n * - Creates one array for each pitch, where each entry contains\r\n * either a 0 (no note at that time bin) or a 1 (note at that time bin)\r\n *\r\n * @param {Note[]} track an array of Note objects\r\n * @param {number} secondsPerBin time bin size in seconds\r\n * @returns {Map} pitch to binArray\r\n */\r\nexport function discretizeTime (track, secondsPerBin) {\r\n  const minTime = min(track, d => d.start)\r\n  const maxTime = max(track, d => d.end)\r\n  const binCount = Math.ceil((maxTime - minTime) / secondsPerBin)\r\n  // Map pitch->timeBinArray\r\n  const result = new Map()\r\n  for (const note of track) {\r\n    const startBin = Math.round((note.start - minTime) / secondsPerBin)\r\n    const endBin = Math.round((note.end - minTime) / secondsPerBin)\r\n    const pitch = note.pitch\r\n    const binArray = result.has(pitch) ? result.get(pitch) : Array.from({ length: binCount }).fill(0)\r\n    for (let bin = startBin; bin <= endBin; bin++) {\r\n      binArray[bin] = 1\r\n    }\r\n    result.set(pitch, binArray)\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * Counts the occurence of 1 in an array\r\n *\r\n * @param {number[]} binArray array\r\n * @returns {number} occurence of 1\r\n */\r\nfunction countActiveNoteBins (binArray) {\r\n  let count = 0\r\n  for (const bin of binArray) {\r\n    if (bin === 1) {\r\n      count++\r\n    }\r\n  }\r\n  return count\r\n}\r\n\r\n/**\r\n * Slices bins out of a discretices track.\r\n * This is done for each pitch separately\r\n *\r\n * @param {Map} trackMap Map pitch->binArray\r\n * @param {number} startBin index of first bin\r\n * @param {number} endBin index of last bin\r\n * @returns {Map} map with sliced arrays\r\n */\r\nfunction sliceDiscretizedTrack (trackMap, startBin, endBin) {\r\n  const slice = new Map()\r\n  for (const [key, value] of trackMap.entries()) {\r\n    slice.set(key, value.slice(startBin, endBin))\r\n  }\r\n  return slice\r\n}\r\n\r\n/**\r\n * Returns sum_{i=0}^{N-1}{(a_i-b_i)^2},\r\n * i.e. Euclidean distance but without square root\r\n *\r\n * @param {number[]} A an array\r\n * @param {number[]} B  another array\r\n * @returns {number} Euclidean distance\r\n */\r\nfunction euclideanDistanceSquared (A, B) {\r\n  const maxBins = Math.max(A.length, B.length)\r\n  let sum = 0\r\n  for (let index = 0; index < maxBins; index++) {\r\n    // If undefined (because one array is shorter)\r\n    // use 0 as padding value\r\n    const a = A[index] || 0\r\n    const b = B[index] || 0\r\n    const diff = a - b\r\n    sum += diff * diff\r\n  }\r\n  return sum\r\n}\r\n\r\n/**\r\n * Given two arrays containing 1s and 0s, this algorithm\r\n * goes through all bins and for each bin where one array\r\n * has a 1 and the other a 0, it searches for the closest 1\r\n * next to the 0.\r\n * The distance is then added to the global distance.\r\n *\r\n * @param {number[]} A an array\r\n * @param {number[]} B  another array\r\n * @returns {number} nearest neighbor distance\r\n */\r\nfunction neirestNeighborDistance (A, B) {\r\n  const maxBins = Math.max(A.length, B.length)\r\n  const maxOffset = Math.round(maxBins / 4)\r\n  let sum = 0\r\n  for (let index = 0; index < maxBins; index++) {\r\n    let offset = 0\r\n    // If undefined (because one array is shorter)\r\n    // use 0 as padding value\r\n    const a = A[index] || 0\r\n    const b = B[index] || 0\r\n    if (a === b) {\r\n      // 0 cost\r\n    } else if (a === 0 && b === 1) {\r\n      // If b == 1, look for the nearest 1 in a\r\n      // Out of bounds does not matter since undefined !== 1\r\n      // while (i - offset > 0 && i + offset < (maxBins-1) && offset <= maxOffset) {\r\n      while (offset <= maxOffset) {\r\n        offset++\r\n        if (a[index - offset] === 1 || a[index + offset === 1]) {\r\n          break\r\n        }\r\n      }\r\n    } else if (a === 1 && b === 0) {\r\n      // If a == 1, look for the nearest 1 in b\r\n      while (offset <= maxOffset) {\r\n        offset++\r\n        if (b[index - offset] === 1 || b[index + offset === 1]) {\r\n          break\r\n        }\r\n      }\r\n    }\r\n    sum += offset\r\n  }\r\n  return sum\r\n}\r\n", "import { levenshtein } from '../stringBased/Levenshtein.js'\nimport PitchSequence from '../types/PitchSequence.js'\n\n/**\n * @module comparison/SimilarSections\n */\n\n/**\n * Turns an array of notes into a string to perform pattern matching search for similar\n * patterns.\n *\n * @param {Note[]} notes notes, must be sorted by Note.start\n * @param {number} startTime start time of the section to search\n * @param {number} endTime end time for the section to search\n * @param {number} threshold threshold for normalized Levenshtein distance in [0, 1]\n * @returns {object[]} {index, distance, startTime, endTime}\n */\nexport function findSimilarNoteSections (notes, startTime, endTime, threshold = 0.5) {\n  const selectedNotes = notes.filter(d => d.start >= startTime && d.end <= endTime)\n  // Convert to string\n  const dataString = PitchSequence.fromNotes(notes).getPitches()\n  const searchString = PitchSequence.fromNotes(selectedNotes).getPitches()\n  const length = searchString.length\n  if (length < 3) {\n    return []\n  }\n  // Find matches\n  const matches = findSimilarStringSections(dataString, searchString, threshold)\n  // Get time spans\n  return matches.map(m => {\n    const { index } = m\n    const note1 = notes[index]\n    const note2 = notes[index + length]\n    return {\n      ...m,\n      startTime: note1.start,\n      endTime: note2.end\n    }\n  })\n}\n\n/**\n * Finds similar sections in a string via Levenshtein distance\n *\n * @param {stringArray} dataString they string to search in\n * @param {stringArray} searchString the string to search for\n * @param {number} threshold threshold for normalized Levenshtein distance in [0, 1]\n * @returns {object[]} {index, distance}\n */\nexport function findSimilarStringSections (dataString, searchString, threshold = 0.5) {\n  const length = searchString.length\n  const matches = []\n  for (let index = 0; index < dataString.length - length; index++) {\n    const slice = dataString.slice(index, index + length)\n    const distance = levenshtein(searchString, slice) / length\n    if (distance < threshold) {\n      matches.push({ index, distance })\n    }\n  }\n  // Filter overlapping matches by removing the ones with larger distances\n  const filtered = []\n  // Therefore, sort by distance ascending and add them one by one\n  matches.sort((a, b) => a.distance - b.distance)\n  // Speed up hit detection by keeping track of indices that are already occupied\n  const occupied = Array.from({ length: dataString.length }).fill(false)\n  for (const m of matches) {\n    const { index } = m\n    // Check if occupied\n    let occ = false\n    for (let i = index; i < index + length; i++) {\n      if (occupied[i]) {\n        occ = true\n        break\n      }\n    }\n    // If not occupied, add and occupy\n    if (!occ) {\n      filtered.push(m)\n      for (let i = index; i < index + length; i++) {\n        occupied[i] = true\n      }\n    }\n  }\n  return filtered\n}\n", "/**\n * @module stringBased/Levenshtein\n */\n\n/**\n * Computes the Levenshtein distance of two strings or arrays.\n *\n * @see https://gist.github.com/andrei-m/982927#gistcomment-1931258\n * @author https://github.com/kigiri, license: MIT\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @param {boolean} normalize when set to true, the distance will be normalized\n *      to [0, 1], by dividing by the longer string's length\n * @returns {number} Levenshtein distance\n */\nexport function levenshtein (a, b, normalize = false) {\n  if (a.length === 0 && b.length === 0) { return 0 }\n  if (a.length === 0) { return normalize ? 1 : b.length }\n  if (b.length === 0) { return normalize ? 1 : a.length }\n  let i, j, previous, value\n  // swap to save some memory O(min(a,b)) instead of O(a)\n  if (a.length > b.length) {\n    const temporary = a\n    a = b\n    b = temporary\n  }\n  // init the row\n  const row = Array.from({ length: a.length + 1 })\n  for (i = 0; i <= a.length; i++) {\n    row[i] = i\n  }\n  // fill in the rest\n  for (i = 1; i <= b.length; i++) {\n    previous = i\n    for (j = 1; j <= a.length; j++) {\n      value = b[i - 1] === a[j - 1]\n        ? row[j - 1]\n        : Math.min(\n          row[j - 1] + 1, // substitution\n          Math.min(\n            previous + 1, // insertion\n            row[j] + 1 // deletion\n          )\n        )\n      row[j - 1] = previous\n      previous = value\n    }\n    row[a.length] = previous\n  }\n  const result = row[a.length]\n  // Normalize?\n  return normalize ? result / Math.max(a.length, b.length) : result\n}\n\n/**\n * Computes the Damerau-Levenshtein distance of two strings or arrays.\n *\n * @see https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @param {boolean} normalize when set to true, the distance will be normalized\n *      to [0, 1], by dividing by the longer string's length\n * @returns {number} Levenshtein distance\n */\nexport function damerauLevenshtein (a, b, normalize = false) {\n  if (a.length === 0 && b.length === 0) { return 0 }\n  if (a.length === 0) { return normalize ? 1 : b.length }\n  if (b.length === 0) { return normalize ? 1 : a.length }\n  const d = Array.from({ length: a.length + 1 })\n    .map(() => Array.from({ length: b.length }))\n  for (let i = 0; i <= a.length; i++) {\n    d[i][0] = i\n  }\n  for (let i = 0; i <= b.length; i++) {\n    d[0][i] = i\n  }\n  let cost\n  for (let i = 1; i <= a.length; i++) {\n    for (let j = 1; j <= b.length; j++) {\n      cost = a[i - 1] === b[j - 1] ? 0 : 1\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1, // deletion\n        d[i][j - 1] + 1, // insertion\n        d[i - 1][j - 1] + cost // substitution\n      )\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        // transposition\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + 1)\n      }\n    }\n  }\n  const result = d[a.length][b.length]\n  // Normalize?\n  return normalize ? result / Math.max(a.length, b.length) : result\n}\n", "export * as Levenshtein from './Levenshtein.js'\r\nexport * as LongestCommonSubsequence from './LongestCommonSubsequence.js'\r\nexport * as Gotoh from './Gotoh.js'\r\nexport * as SuffixTree from './SuffixTree.js'\r\nexport * as NGrams from './NGrams.js'\r\nexport * as ImmediateRepetitionCompression from './ImmediateRepetitionCompression.js'\r\nexport { default as NeedlemanWunsch } from './NeedlemanWunsch.js'\r\n\r\n/**\r\n * @module stringBased\r\n * @todo rename to Sequences\r\n */\r\n", "/**\n * @module stringBased/LongestCommonSubsequence\n */\n\n/**\n * Calculates the longest common subsequence.\n *\n * @see https://rosettacode.org/wiki/Longest_common_subsequence#JavaScript\n * @example\n * const lcs = StringBased.LongestCommonSubsequence.lcs('hello world!', 'world');\n * // world\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {string|Array} the longest common subsequence\n */\nexport function lcs (a, b) {\n  // Make sure shorter string is the column string\n  const m = a.length\n  const n = b.length\n  // Return now if one (or both) empty\n  if (a.length === 0) { return a }\n  if (b.length === 0) { return b }\n  let i; let j; let row = []; let left; let diagonal; let latch\n  const lcs = []\n  const c = []\n  // Build the c-table\n  for (j = 0; j < n; row[j++] = 0);\n  for (i = 0; i < m; i++) {\n    c[i] = row = [...row]\n    for (diagonal = 0, j = 0; j < n; j++, diagonal = latch) {\n      latch = row[j]\n      if (a[i] === b[j]) {\n        row[j] = diagonal + 1\n      } else {\n        left = row[j - 1] || 0\n        if (left > row[j]) {\n          row[j] = left\n        }\n      }\n    }\n  }\n  i--\n  j--\n  // row[j] now contains the length of the lcs\n  // Recover the lcs from the table\n  while (i > -1 && j > -1) {\n    switch (c[i][j]) {\n      // eslint-disable-next-line\n      default:\n        j--\n        lcs.unshift(a[i])\n      case (i && c[i - 1][j]): // eslint-disable-line no-fallthrough\n        i--\n        continue\n      case (j && c[i][j - 1]):\n        j--\n    }\n  }\n  // Only join when x and y are strings\n  return (Array.isArray(a)) || (Array.isArray(b)) ? lcs : lcs.join('')\n}\n\n/**\n * Calculates the *length* of the longest common subsequence.\n * Also works with arrays.\n *\n * @see https://rosettacode.org/wiki/Longest_common_subsequence#JavaScript\n * @example\n * const lcsLength = StringBased.LongestCommonSubsequence.lcs('hello world!', 'world');\n * // 5\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {number} the length of longest common subsequence\n */\nexport function lcsLength (a, b) {\n  // Make sure shorter string is the column string\n  const m = a.length\n  const n = b.length\n  // Return now if one (or both) empty\n  if (a.length === 0) { return 0 }\n  if (b.length === 0) { return 0 }\n  let i; let j; let row = []; let left; let diagonal; let latch\n  const c = []\n  // Build the c-table\n  for (j = 0; j < n; row[j++] = 0);\n  for (i = 0; i < m; i++) {\n    c[i] = row = [...row]\n    for (diagonal = 0, j = 0; j < n; j++, diagonal = latch) {\n      latch = row[j]\n      if (a[i] === b[j]) {\n        row[j] = diagonal + 1\n      } else {\n        left = row[j - 1] || 0\n        if (left > row[j]) {\n          row[j] = left\n        }\n      }\n    }\n  }\n  i--\n  j--\n  // row[j] now contains the length of the lcs\n  return row[j]\n}\n\n/**\n * Normalizes the result of lcsLength() by dividing by the longer string's\n * length.\n *\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {number} normalized length of longest common subsequence\n */\nexport function normalizedLcsLength (a, b) {\n  const longerLength = Math.max(a.length, b.length)\n  if (longerLength === 0) {\n    return 0\n  }\n  return lcsLength(a, b) / longerLength\n}\n", "/**\n * @module stringBased/Gotoh\n */\n\n/**\n * Calculates the SIMILARITY for two strings or arrays.\n * Similar to NeedlemanWunsch but O(n^2) instead of O(n^3)\n * IMPORTANT: This metric is not symmetric!\n *\n * @todo normalize to [0, 1], but how?\n * @todo somehow the the matched sequences and gaps...\n * @see https://de.wikipedia.org/wiki/Gotoh-Algorithmus\n * @param {string|Array} seqA a sequence\n * @param {string|Array} seqB a sequence\n * @param {Function} similarityFunction a function that takes two elements and\n *      returns their similarity score (higher => more similar)\n *      (a:any, b:any):number\n * @param {number} gapPenaltyStart cost for starting a new gap (negative)\n * @param {number} gapPenaltyExtend cost for continuing a gap (negative)\n * @returns {number} similarity score\n */\nexport function gotoh (\n  seqA,\n  seqB,\n  similarityFunction = matchMissmatchSimilarity,\n  gapPenaltyStart = -1,\n  gapPenaltyExtend = -0.1\n) {\n  // check if strings are empty\n  if (seqA.length === 0 && seqB.length === 0) { return 0 }\n  // gap penalty function\n  const gap = (index) => gapPenaltyStart + (index - 1) * gapPenaltyExtend\n  const lengthA = seqA.length\n  const lengthB = seqB.length\n  // initialize matrices\n  const a = Array.from({ length: lengthA + 1 }).map(() => Array.from({ length: lengthB + 1 }))\n  const b = Array.from({ length: lengthA + 1 }).map(() => Array.from({ length: lengthB + 1 }))\n  const c = Array.from({ length: lengthA + 1 }).map(() => Array.from({ length: lengthB + 1 }))\n  a[0][0] = 0\n  b[0][0] = 0\n  c[0][0] = 0\n  for (let i = 1; i <= lengthA; i++) {\n    a[i][0] = c[i][0] = Number.NEGATIVE_INFINITY\n    b[i][0] = gap(i)\n  }\n  for (let i = 1; i <= lengthB; i++) {\n    a[0][i] = b[0][i] = Number.NEGATIVE_INFINITY\n    c[0][i] = gap(i)\n  }\n  // compute matrices\n  for (let i = 1; i <= lengthA; i++) {\n    for (let j = 1; j <= lengthB; j++) {\n      const sim = similarityFunction(seqA[i - 1], seqB[j - 1])\n      a[i][j] = Math.max(\n        a[i - 1][j - 1],\n        b[i - 1][j - 1],\n        c[i - 1][j - 1]) + sim\n      b[i][j] = Math.max(\n        a[i - 1][j] + gapPenaltyStart,\n        b[i - 1][j] + gapPenaltyExtend,\n        c[i - 1][j] + gapPenaltyStart)\n      c[i][j] = Math.max(\n        a[i][j - 1] + gapPenaltyStart,\n        b[i][j - 1] + gapPenaltyStart,\n        c[i][j - 1] + gapPenaltyExtend)\n    }\n  }\n  return Math.max(\n    a[lengthA][lengthB],\n    b[lengthA][lengthB],\n    c[lengthA][lengthB]\n  )\n}\n\n/**\n * Idea: what would the max. similarity value be? the string with itself!\n * So just compare the longer string to itself and use that similarity to\n * normalize\n *\n * @todo does this work with negative costs and/or results?\n * @todo can this be optimized since only the similarityFunction is needed?\n * @todo only compute 'a' matrix for maxSimilarity\n * @param {string|Array} seqA a sequence\n * @param {string|Array} seqB a sequence\n * @param {Function} similarityFunction a function that takes two elements and\n *      returns their similarity score (higher => more similar)\n *      (a:any, b:any):number\n * @param {number} gapPenaltyStart cost for starting a new gap (negative)\n * @param {number} gapPenaltyExtend cost for continuing a gap (negative)\n * @returns {number} normalized similarity score\n */\nexport function normalizedGotoh (\n  seqA,\n  seqB,\n  similarityFunction = matchMissmatchSimilarity,\n  gapPenaltyStart = -1,\n  gapPenaltyExtend = -0.1\n) {\n  const similarity = gotoh(seqA, seqB, similarityFunction, gapPenaltyStart, gapPenaltyExtend)\n  const longer = seqA.length >= seqB.length ? seqA : seqB\n  const maxSimilarity = gotoh(longer, longer, similarityFunction, gapPenaltyStart, gapPenaltyExtend)\n  if (maxSimilarity === 0) {\n    // TODO: can this happen? what would be reasonable here?\n    return similarity\n  }\n  return similarity / maxSimilarity\n}\n\n/**\n * Cost function that simply checks whether two values are equal or not with ===\n *\n * @param {any} a some value\n * @param {any} b some value\n * @returns {number} 1 if equal, -1 otherwise\n */\nexport function matchMissmatchSimilarity (a, b) {\n  return a === b ? 1 : -1\n}\n\n/**\n * Cost function that takes the negative absolute value of the value's\n * difference, assuming that close values are more similar\n *\n * @param {number} a some value\n * @param {number} b some value\n * @returns {number} -Math.abs(a - b)\n */\nexport function differenceSimilarity (a, b) {\n  return -Math.abs(a - b)\n}\n", "import { arrayShallowEquals } from '../utils/ArrayUtils.js'\n\n/**\n * @module stringBased/SuffixTree\n */\n\n/**\n * Suffix tree, a tree that shows which subsequences are repeated\n *\n * @see https://github.com/eikes/suffixtree/blob/master/js/suffixtree.js\n */\nclass SuffixTree {\n  /**\n     * SuffixTree for strings or Arrays\n     *\n     * @param {string|Array} array string or Array to process\n     */\n  constructor (array) {\n    // Split string to array\n    if (typeof array === 'string') {\n      array = array.split('')\n    }\n    this.node = new TreeNode()\n    if (array && array.length > 0) {\n      for (let index = 0; index < array.length; index++) {\n        this.node.addSuffix(array.slice(index))\n      }\n    }\n  }\n\n  /**\n     * Returns the longest repeated substring\n     *\n     * @returns {Array} longest repeated substring\n     */\n  getLongestRepeatedSubString () {\n    return this.node.getLongestRepeatedSubString()\n  }\n\n  /**\n     * Returns a readable string format of this tree\n     *\n     * @returns {string} string\n     */\n  toString () {\n    return this.node.toString()\n  }\n\n  /**\n     * Returns a JSON representation of this tree\n     *\n     * @returns {string} JSON\n     */\n  toJson () {\n    return JSON.stringify(this.node)\n  }\n}\n\n/**\n * TreeNode\n */\nclass TreeNode {\n  /**\n     *\n     */\n  constructor () {\n    this.value = []\n    this.leaves = []\n    this.nodes = []\n  }\n\n  /**\n     * @param {string|Array} suf suffix\n     * @returns {boolean} true if first entry of suf equals the value of a child\n     */\n  checkNodes (suf) {\n    let node\n    for (let index = 0; index < this.nodes.length; index++) {\n      node = this.nodes[index]\n      if (arrayShallowEquals(node.value, [suf[0]])) {\n        node.addSuffix(suf.slice(1))\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n     * @param {string|Array} suf suffix\n     */\n  checkLeaves (suf) {\n    let node, leaf\n    for (let index = 0; index < this.leaves.length; index++) {\n      leaf = this.leaves[index]\n      if (leaf[0] === suf[0]) {\n        node = new TreeNode()\n        node.value = [leaf[0]]\n        node.addSuffix(suf.slice(1))\n        node.addSuffix(leaf.slice(1))\n        this.nodes.push(node)\n        this.leaves.splice(index, 1)\n        return\n      }\n    }\n    this.leaves.push(suf)\n  }\n\n  /**\n     * @param {string|Array} suf suffix\n     */\n  addSuffix (suf) {\n    if (suf.length === 0) {\n      return\n    }\n    if (!this.checkNodes(suf)) {\n      this.checkLeaves(suf)\n    }\n  }\n\n  /**\n     * Returns the longest repeated substring\n     *\n     * @returns {Array} longest substring\n     */\n  getLongestRepeatedSubString () {\n    let array = []\n    let temporary = []\n    for (let index = 0; index < this.nodes.length; index++) {\n      temporary = this.nodes[index].getLongestRepeatedSubString()\n      if (temporary.length > array.length) {\n        array = temporary\n      }\n    }\n    return this.value.concat(array)\n  }\n\n  /**\n     * Readable string representation of this node and its children\n     *\n     * @param {number} indent indentation\n     * @returns {string} string representation\n     */\n  toString (indent = 1) {\n    const ind = ' |'.repeat(indent)\n    let string = ''\n    string += this.value.length > 0 ? `-N '${this.value}'` : 'root'\n    if (this.nodes.length > 0) {\n      for (let index = 0; index < this.nodes.length; index++) {\n        string += `\\n${ind}${this.nodes[index].toString(indent + 1)}`\n      }\n    }\n    if (this.leaves.length > 0) {\n      for (let index = 0; index < this.leaves.length; index++) {\n        string += `\\n${ind}-L ${this.leaves[index]}`\n      }\n    }\n    return string\n  }\n}\n\nexport default SuffixTree\n", "/**\n * Calculates all n-grams with a specified length\n *\n * @param {string} string a string\n * @param {number} length length (n) of n-grams\n * @returns {Map<string,number>} maps n-gram to its number of occurences\n */\nexport function getNGrams (string, length) {\n  if (length <= 0) {\n    return new Map()\n  }\n  length = Math.min(length, string.length)\n  const nGrams = new Map()\n  for (let index = 0; index < string.length - length + 1; index++) {\n    const subString = string.slice(index, index + length)\n    if (nGrams.has(subString)) {\n      nGrams.set(subString, nGrams.get(subString) + 1)\n    } else {\n      nGrams.set(subString, 1)\n    }\n  }\n  return nGrams\n}\n\n/**\n * Calculates all n-grams with a specified length\n *\n * @param {Array} array an array of primitive data types\n * @param {number} length length (n) of n-grams\n * @returns {Map<string,object>} maps n-gram, joined with ' ', to its number of\n * occurences and value\n */\nexport function getNGramsForArray (array, length) {\n  if (length <= 0) {\n    return new Map()\n  }\n  length = Math.min(length, array.length)\n  const nGrams = new Map()\n  for (let index = 0; index < array.length - length + 1; index++) {\n    const subArray = array.slice(index, index + length)\n    const key = subArray.join(' ')\n    let count = 1\n    if (nGrams.has(key)) {\n      count = nGrams.get(key).count + 1\n    }\n    nGrams.set(key, {\n      value: subArray,\n      count\n    })\n  }\n  return nGrams\n}\n", "import { arraySlicesEqual } from '../utils/ArrayUtils.js'\n\n/**\n * Compresses a sequence by detecting immediately repeating subsequences\n * hierarchically. Optimal result but high performance complexity.\n *\n * @todo Link to observable demo\n * @param {Array} sequence array with immediately repeating subsequences\n * @returns {object} compressed hierarchy\n */\nexport function compress (sequence) {\n  if (!sequence || sequence.length === 0) {\n    return null\n  }\n  const longestReps = getImmediateRepetitions(sequence)\n  if (longestReps === null) {\n    return sequence\n  }\n  // Get repetition\n  const { seq, rep, length: len, pos } = longestReps[0]\n\n  // Get rest of sequence\n  const preSeq = sequence.slice(0, pos)\n  const postSeq = sequence.slice(pos + len * rep)\n\n  // Recurse with longest repetition\n  const repetition = compress(seq)\n  // Recurse with left rest\n  const pre = compress(preSeq)\n  // Recurse with right rest\n  const post = compress(postSeq)\n\n  // Get current depth\n  const depth = Math.max(\n    pre?.depth ?? 0,\n    (repetition?.depth ?? 0) + 1,\n    post?.depth ?? 0\n  )\n\n  // Get current length / width, i.e. compressed sequence length\n  const length =\n    (pre?.length ?? 0) +\n    (repetition?.length ?? 0) +\n    (post?.length ?? 0)\n\n  return {\n    pre,\n    seq: repetition,\n    rep,\n    post,\n    // Depth, leaves are 0, root is highest\n    depth,\n    // Compressed length\n    length,\n    // Include complete sequence of this node\n    content: sequence\n  }\n}\n\n/**\n * Finds all immediate repetitions in a given sequence.\n *\n * @todo implement a mode that just looks for the best one, instead of later\n * sorting all found ones (will be faster since less sequence.slice() happens)\n * Still needs to keep all results with the same score\n * @param {Array} sequence array with immediately repeating subsequences\n * @returns {object[]} result\n */\nexport function getImmediateRepetitions (sequence = []) {\n  const foundReps = []\n  // For each length, look for a repetition that has that length\n  for (let length = Math.floor(sequence.length / 2); length > 0; --length) {\n    for (let pos = 0; pos < sequence.length - length; ++pos) {\n      let numberOfReps = 0\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        // Let's see how often the slice at pos with the current length repeats immediately...\n        const startPos = pos + (numberOfReps + 1) * length\n        const found = arraySlicesEqual(\n          sequence,\n          sequence,\n          length,\n          pos,\n          startPos\n        )\n        if (!found) {\n          // No more repetitions found\n          break\n        } else {\n          // Continue with searching for more\n          numberOfReps++\n        }\n        // Did we find any repetitions?\n        if (numberOfReps > 0) {\n          const rep = numberOfReps + 1\n          const seq = sequence.slice(pos, pos + length)\n          foundReps.push({\n            length,\n            pos,\n            rep,\n            seq,\n            totalLength: length * rep\n          })\n        }\n      }\n    }\n  }\n  if (foundReps.length > 0) {\n    // Prioritize the ones that encompass most of the sequence, i.e., maximum length*rep\n    return foundReps.sort((a, b) => {\n      // If same total length, choose the one with more repetitions\n      // Better 8*a than 4*aa\n      return a.totalLength === b.totalLength\n        ? b.rep - a.rep\n        : b.totalLength - a.totalLength\n    })\n  }\n  return null\n}\n\n/**\n * Restores the original array/sequence from the compressed hierarchy.\n *\n * @param {object} tree compressed hierarchy\n * @returns {Array} decompressed sequence\n */\nexport function decompress (tree) {\n  if (!tree) {\n    return []\n  }\n  if (tree.join) {\n    return tree\n  }\n  const seq = decompress(tree.seq)\n  const repetition = Array.from({ length: tree.rep }).map(() => seq)\n  return [\n    ...decompress(tree.pre),\n    ...repetition.flat(),\n    ...decompress(tree.post)\n  ]\n}\n\n/**\n * Returns the summary of a hierachy, leaving out information about repetitions.\n *\n * @param {object} tree compressed hierarchy\n * @returns {Array} summary\n * @example\n *  const arr = '12312345656'.split('')\n *  const h = compress(arr)\n *  summary(h).join('')\n *  // '123456'\n */\nexport function summary (tree) {\n  if (!tree) {\n    return []\n  }\n  if (tree.join) {\n    return tree\n  }\n  return [\n    ...summary(tree.pre),\n    ...summary(tree.seq),\n    ...summary(tree.post)\n  ]\n}\n\n/**\n * Formats a compressed hierarchy into a readable string, for example:\n * \"1222333222333\" => \"1 (2x (3x 2) (3x 3))\"\n *\n * @param {object} tree compressed hierarchy\n * @param {string} separator separator\n * @returns {string} result\n */\nexport function toString (tree, separator = ' ') {\n  if (!tree) {\n    return ''\n  }\n  if (tree.join) {\n    return tree.join(separator)\n  }\n  const seq = toString(tree.seq)\n  const repetition = `(${tree.rep}x ${seq})`\n  return [\n    toString(tree.pre),\n    repetition,\n    toString(tree.post)\n  ].join(separator).trim()\n}\n\n/**\n * Calculates the compression rate in [0, 1] for a result of compress().\n *\n * @param {object} compressed compressed hierachy\n * @returns {number} compression ratio\n * @throws {'Invalid hierarchy'} for invalid hierarchy\n */\nexport function compressionRate (compressed) {\n  if (!compressed?.length || !compressed?.content?.length) {\n    throw new Error('Invalid hierarchy')\n  }\n  return compressed.length / compressed.content.length\n}\n", "/**\n * @module stringBased/NeedlemanWunsch\n */\n\n/**\n * Needleman-Wunsch algorithm\n *\n * @see https://github.com/blievrouw/needleman-wunsch/blob/master/src/needleman_wunsch.js\n * @todo does not support cost matrix\n * @todo extend by matchMismathFunction\n */\nclass NeedlemanWunsch {\n  /**\n     * @param {string|Array} seq1 a string\n     * @param {string|Array} seq2 another string\n     * @param {number} matchScore score for matching characters\n     * @param {number} mismatchPenalty penalty for mismatching characters\n     * @param {number} gapPenalty penalty for a gap\n     */\n  constructor (seq1, seq2, matchScore = 1, mismatchPenalty = -1, gapPenalty = -1) {\n    // Compared sequences\n    this.seq1 = seq1\n    this.seq2 = seq2\n    // Scoring parameters\n    this.matchScore = matchScore\n    this.mismatchPenalty = mismatchPenalty\n    this.gapPenalty = gapPenalty\n    // Intermediate scores matrix (scores for [`insert`, `match`, `delete`] positions)\n    this.I = []\n    // Score matrix (best score out of intermediate scores)\n    this.S = []\n    // Traceback matrix (boolean values for [`insert`, `match`, `delete`] positions)\n    this.T = []\n    // Alignments\n    this.finalAlignments = []\n\n    // Calculate scores and tracebacks\n    this.calcScoresAndTracebacks()\n  }\n\n  /**\n     * Calculates (intermediate) scores and tracebacks using provided parameters\n     */\n  calcScoresAndTracebacks () {\n    this.S.push([0])\n    this.I.push([[null, null, null]])\n    this.T.push([[false, false, false]])\n\n    // Calculate scores and traceback on first row\n    for (let i = 1; i < this.seq2.length + 1; i++) {\n      this.S[0].push(this.S[0][this.S[0].length - 1] + this.gapPenalty)\n      this.I[0].push([null, null, null])\n      this.T[0].push([true, false, false])\n    }\n\n    // Generate other rows\n    for (let i = 1; i < this.seq1.length + 1; i++) {\n      this.S.push([this.S[i - 1][0] + this.gapPenalty])\n      this.I.push([[null, null, null]])\n      this.T.push([[false, false, true]])\n      for (let j = 1; j < this.seq2.length + 1; j++) {\n        const insert = this.S[i][j - 1] + this.gapPenalty\n        const del = this.S[i - 1][j] + this.gapPenalty\n        // similarity\n        // TODO: support function here\n        const simScore = this.seq1[i - 1] === this.seq2[j - 1] ? this.matchScore : this.mismatchPenalty\n        const match = this.S[i - 1][j - 1] + simScore\n        const intermediateScores = [insert, match, del]\n        const score = Math.max(...intermediateScores)\n        const tracebackTypeStatus = intermediateScores.map(entry => entry === score)\n        this.S[i].push(score)\n        this.I[i].push(intermediateScores)\n        this.T[i].push(tracebackTypeStatus)\n      }\n    }\n\n    // set best match score\n    const lastRow = this.S[this.S.length - 1]\n    this.score = lastRow[lastRow.length - 1]\n  }\n\n  /**\n     * Finds next alignment locations (children) from a position in scoring matrix\n     *\n     * @param {number[]} pos m- Position in scoring matrix\n     * @returns {object[]} children - Children positions and alignment types\n     */\n  alignmentChildren (pos) {\n    const [i, j] = pos\n    const children = []\n    const tracebackTypeStatus = this.T[i][j]\n    if (tracebackTypeStatus[0]) {\n      // insert\n      children.push({ pos: [i, j - 1], tracebackType: 0 })\n    }\n    if (tracebackTypeStatus[1]) {\n      // match\n      children.push({ pos: [i - 1, j - 1], tracebackType: 1 })\n    }\n    if (tracebackTypeStatus[2]) {\n      // delete\n      children.push({ pos: [i - 1, j], tracebackType: 2 })\n    }\n    return children\n  }\n\n  /**\n     * Runs through scoring matrix from bottom-right to top-left using traceback values to create all optimal alignments\n     *\n     * @returns {object[]} e.g. [{ seq1: '-4321', seq2: '54321' }]\n     */\n  alignmentTraceback () {\n    const finalAlignments = []\n    const root = {\n      next: null,\n      pos: [this.seq1.length, this.seq2.length],\n      alignment: {\n        seq1: '',\n        seq2: ''\n        // score: this.score,\n      }\n    }\n    let current, child, children, length, alignment, pos, t\n    current = root\n    while (current) {\n      pos = current.pos\n      alignment = current.alignment\n      // Get children alignments\n      children = this.alignmentChildren(current.pos)\n      // Store completed alignments\n      if (children.length === 0) {\n        finalAlignments.push(alignment)\n      }\n      current = current.next\n      for (t = 0, length = children.length; t < length; t++) {\n        child = children[t]\n        child.alignment = {\n          // -1 refers to offset between  scoring matrix and the sequence\n          seq1: alignment.seq1.concat(child.tracebackType === 0 ? '-' : this.seq1[pos[0] - 1]),\n          seq2: alignment.seq2.concat(child.tracebackType === 2 ? '-' : this.seq2[pos[1] - 1])\n          // TODO: add score for this alignment\n          // score: alignment.score - this.S[pos[0]][pos[1]]\n        }\n        // Move down a layer\n        child.next = current\n        current = child\n      }\n    }\n    return finalAlignments\n  }\n}\n\nexport default NeedlemanWunsch\n"],
  "mappings": "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",
  "names": ["module", "global", "exports", "index", "count", "array", "length", "reduce", "j", "i", "sum", "mean", "deviation", "extent", "min", "max", "key", "group", "map", "values", "groups", "keyof", "f", "reverse", "ticks", "bin", "quantile", "maxIndex", "median", "minIndex", "pairs", "range", "shuffle", "transpose", "reducer", "difference", "set", "intersection", "union", "module", "global", "exports", "axis", "module", "global", "exports", "module", "global", "exports", "document", "selector", "select", "group", "datum", "selection", "create", "window", "sourceEvent", "module", "global", "exports", "drag", "container", "event", "touch", "module", "global", "exports", "define", "color", "min", "max", "hsl", "module", "global", "exports", "color", "rgb", "i", "value", "parse", "zoom", "hsl", "hue", "cubehelix", "module", "global", "exports", "delay", "now", "callback", "time", "module", "global", "exports", "polyIn", "polyOut", "polyInOut", "backIn", "backOut", "backInOut", "elasticIn", "a", "p", "elasticOut", "elasticInOut", "module", "global", "exports", "id", "group", "schedule", "self", "start", "active", "transition", "interpolate", "inherit", "module", "global", "exports", "type", "max", "min", "extent", "brush", "group", "event", "module", "global", "exports", "module", "global", "exports", "max", "chord", "ribbon", "module", "global", "exports", "area", "contains", "contours", "density", "data", "module", "global", "exports", "n", "median", "x1", "y1", "i", "j", "collinear", "h", "module", "global", "exports", "formatDate", "parse", "module", "global", "exports", "parse", "image", "text", "module", "global", "exports", "module", "global", "exports", "x", "y", "link", "m", "i", "simulation", "node", "strength", "c", "module", "global", "exports", "exponent", "locale", "group", "value", "max", "module", "global", "exports", "object", "coordinates", "cartesian", "spherical", "sign", "lambda0", "lambda1", "range", "compose", "rotation", "circle", "compareIntersection", "interpolate", "clip", "n", "p0", "angle", "phi0", "sinPhi0", "cosPhi0", "phi1", "intersection", "clipLine", "point", "delta", "code", "x0", "y0", "x1", "y1", "ring", "visible", "linePoint", "extent", "y", "x", "X1", "X0", "Y1", "Y0", "graticule", "area", "bounds", "centroid", "length", "projection", "lambda2", "lambda00", "x00", "y00", "transform", "albersUsa", "module", "global", "exports", "cluster", "index", "array", "d3", "partition", "dy", "stratify", "node", "TreeNode", "tree", "siblings", "squarify", "i", "x0", "y0", "x1", "y1", "resquarify", "module", "global", "exports", "area", "hull", "module", "global", "exports", "randomUniform", "min", "max", "randomInt", "randomNormal", "beta", "module", "global", "exports", "year", "month", "day", "hour", "minute", "ticks", "step", "module", "global", "exports", "locale", "formats", "pad", "parse", "module", "global", "exports", "copy", "i", "quantile", "tickFormat", "date", "module", "global", "exports", "colors", "scheme", "module", "global", "exports", "x", "constant", "max", "min", "arc", "a", "y", "line", "area", "k", "pie", "sum", "i", "j", "c", "link", "s", "symbol", "bundle", "beta", "cardinal", "tension", "x2", "y2", "catmullRom", "alpha", "stack", "module", "global", "exports", "transform", "extent", "zoom", "event", "module", "module", "global", "exports", "parse", "require_dist", "module", "global", "exports", "require_dist", "module", "global", "exports", "require_dist", "module", "global", "exports", "require_dist", "module", "global", "exports", "num", "chroma", "intervals", "require_dist", "module", "global", "exports", "__assign", "names", "require_dist", "module", "global", "exports", "index", "chordTypes", "chordType", "require_dist", "module", "global", "exports", "__assign", "require_dist", "module", "global", "exports", "__assign", "i", "chord", "require_dist", "module", "global", "exports", "__assign", "names", "fraction", "value", "require_dist", "module", "global", "exports", "name", "semitones", "require_dist", "module", "global", "exports", "SHARPS", "require_dist", "module", "global", "exports", "midi", "freq", "require_dist", "module", "global", "exports", "parse", "require_dist", "module", "global", "exports", "__assign", "keyScale", "require_dist", "module", "global", "exports", "__assign", "mode", "chords", "triads", "require_dist", "module", "global", "exports", "require_dist", "module", "global", "exports", "require_dist", "module", "global", "exports", "__assign", "scale", "pcset", "names", "require_dist", "module", "global", "exports", "parse", "require_dist", "module", "global", "exports", "min", "max", "d3", "max", "import_d3", "import_d3", "intersection", "union", "ROUNDING_PRECISION", "d3", "resolve", "import_d3", "deviation", "import_d3", "import_d3", "import_d3", "color", "import_d3", "d3", "color", "min", "d3", "d3", "d3", "d3", "mean", "differenceMap", "gtNotes", "recNotes", "import_d3", "difference", "a", "b", "deviation", "import_d3", "activationMap", "agreement", "import_d3", "import_d3", "lcs"]
}
