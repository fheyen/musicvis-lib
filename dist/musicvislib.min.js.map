{"version":3,"sources":["webpack://musicvislib/webpack/universalModuleDefinition","webpack://musicvislib/./node_modules/midi-parser-js/src/main.js","webpack://musicvislib/webpack/bootstrap","webpack://musicvislib/webpack/runtime/compat get default export","webpack://musicvislib/webpack/runtime/define property getters","webpack://musicvislib/webpack/runtime/hasOwnProperty shorthand","webpack://musicvislib/webpack/runtime/make namespace object","webpack://musicvislib/./src/fileFormats/Midi.js","webpack://musicvislib/./src/types/Note.js","webpack://musicvislib/./src/types/GuitarNote.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/extent.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/identity.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/group.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/max.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/mean.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/min.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/ascending.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/quickselect.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/quantile.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/number.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/difference.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/set.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/intersection.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selector.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/array.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selectorAll.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/matcher.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/selectChild.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/selectChildren.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/sparse.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/enter.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/constant.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/data.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/sort.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/namespaces.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/namespace.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/attr.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/window.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/style.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/property.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/classed.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/text.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/html.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/raise.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/lower.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/creator.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/insert.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/remove.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/clone.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/on.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/dispatch.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/index.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/select.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/selectAll.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/filter.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/exit.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/join.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/merge.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/order.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/call.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/nodes.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/node.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/size.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/empty.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/each.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/append.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/datum.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/iterator.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-dispatch/src/dispatch.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-timer/src/timer.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-timer/src/timeout.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/schedule.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/number.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/transform/decompose.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/transform/parse.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/transform/index.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/tween.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-color/src/define.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-color/src/color.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/basis.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/constant.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/color.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/rgb.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/basisClosed.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/string.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/interpolate.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/attr.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/attrTween.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/delay.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/duration.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/ease.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/on.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/selection.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/style.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/styleTween.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/textTween.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/index.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/select.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/selectAll.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/filter.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/merge.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/transition.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/text.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/remove.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/easeVarying.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/end.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/selection/transition.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-ease/src/cubic.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/selection/index.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/selection/interrupt.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/interrupt.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-brush/src/brush.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/defaultSource.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/uniform.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/int.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/normal.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/lcg.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/ticks.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/bisector.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/bisect.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/array.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/date.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/object.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/numberArray.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/value.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/round.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/number.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/continuous.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/constant.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/init.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatSpecifier.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatPrefixAuto.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatDecimal.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/exponent.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatRounded.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatTypes.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/identity.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/locale.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/defaultLocale.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/linear.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/tickFormat.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/precisionPrefix.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/precisionRound.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/precisionFixed.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-zoom/src/transform.js","webpack://musicvislib/./src/utils/MathUtils.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatGroup.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatNumerals.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatTrim.js","webpack://musicvislib/./src/types/NoteArray.js","webpack://musicvislib/./src/utils/ArrayUtils.js","webpack://musicvislib/./src/types/Recording.js","webpack://musicvislib/./src/fileFormats/MusicXmlParser.js","webpack://musicvislib/./src/utils/MiscUtils.js","webpack://musicvislib/./src/fileFormats/MidiParser.js","webpack://musicvislib/./src/types/MusicPiece.js","webpack://musicvislib/./src/types/PitchSequence.js","webpack://musicvislib/./src/graphics/Canvas.js","webpack://musicvislib/./src/input/AudioRecorder.js","webpack://musicvislib/./src/input/MidiRecorder.js","webpack://musicvislib/./src/input/MidiInputManager.js","webpack://musicvislib/./src/instruments/Drums.js","webpack://musicvislib/./src/instruments/Guitar.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/core/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/collection/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/pcset/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/chord-type/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/chord-detect/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/scale-type/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/chord/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/duration-value/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/interval/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/midi/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/note/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/roman-numeral/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/key/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/mode/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/range/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/scale/dist/index.es.js","webpack://musicvislib/./src/chords/Chords.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/time-signature/dist/index.es.js","webpack://musicvislib/./src/instruments/Lamellophone.js","webpack://musicvislib/./src/instruments/Piano.js","webpack://musicvislib/./src/utils/BlobUtils.js","webpack://musicvislib/./src/utils/FormattingUtils.js","webpack://musicvislib/./src/utils/LocalStorageUtils.js","webpack://musicvislib/./src/utils/NoteColorUtils.js","webpack://musicvislib/./src/utils/StatisticsUtils.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/deviation.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/variance.js","webpack://musicvislib/./src/utils/RecordingsUtils.js","webpack://musicvislib/./src/utils/WebMidiUtils.js","webpack://musicvislib/./src/comparison/Matching.js","webpack://musicvislib/./src/alignment/Alignment.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/median.js","webpack://musicvislib/./src/alignment/DiffAlignment.js","webpack://musicvislib/./node_modules/dynamic-time-warping-2/src/dynamic-time-warping.js","webpack://musicvislib/./src/comparison/Similarity.js","webpack://musicvislib/./src/stringBased/Levenshtein.js","webpack://musicvislib/./src/comparison/SimilarSections.js","webpack://musicvislib/./src/stringBased/LongestCommonSubsequence.js","webpack://musicvislib/./src/stringBased/Gotoh.js","webpack://musicvislib/./src/stringBased/SuffixTree.js","webpack://musicvislib/./src/stringBased/NeedlemanWunsch.js"],"names":["root","factory","exports","module","define","amd","this","MidiParser","debug","parse","input","_callback","Uint8Array","Uint8","Base64","HTMLElement","type","addListener","Error","_fileElement","File","FileReader","undefined","tagName","toLowerCase","console","warn","addEventListener","InputEvt","target","files","length","log","reader","readAsArrayBuffer","onload","e","result","b64String","raw","string","b64","replace","String","test","TypeError","slice","bitmap","r1","r2","i","indexOf","charAt","fromCharCode","_atob","rawLength","t_array","ArrayBuffer","charCodeAt","FileAsUint8Array","file","data","pointer","movePointer","_bytes","readInt","Math","min","byteLength","value","getUint8","pow","readStr","text","char","readIntVLV","FirstBytes","push","lastByte","dt","DataView","buffer","byteOffset","MIDI","formatType","tracks","track","timeDivisionByte1","timeDivisionByte2","timeDivision","t","event","headerValidation","statusByte","laststatusByte","endOfTrack","deltaTime","metaType","metaEventLength","customInterpreter","info","toString","split","unshift","parseInt","channel","event_length","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","MidiNoteByPitch","Map","MidiNoteByLabel","MidiInstrumentByNumber","MidiInstrumentByNumberLev2","getMidiNoteByNr","nr","getMidiNoteByLabel","label","getMidiNoteByNameAndOctave","name","octave","getMidiInstrumentByNr","getMidiInstrumentByNrL2","subNr","getMidiDrumNoteByNr","GENERAL_MIDI_DRUM_NOTE_NUMBERS","isSharp","SHARPS","has","getNoteNameFromNoteNr","NOTE_NAMES","flatToSharp","MIDI_NOTES","pitch","frequency","MIDI_COMMANDS","description","params","MIDI_INSTRUMENTS","number","group","MIDI_INSTRUMENTS_Lev2","subnumber","MIDI_NOTE_RANGES","instrNr","nrL2","subNrL2","max","note","set","instrument","Note","constructor","start","velocity","end","object","Number","isNaN","clone","getDuration","getName","getLetter","getOctave","shiftTime","addedSeconds","scaleTime","factor","overlapsInTime","otherNote","overlapInSeconds","laterStart","equals","short","GuitarNote","fret","super","toNote","values","valueof","index","x","keys","map","reduce","regroup","groups","keyof","nest","mean","count","sum","b","NaN","quickselect","array","k","left","right","compare","ascending","m","z","s","exp","sd","sqrt","floor","j","swap","quantile","p","Float64Array","from","numbers","i0","value0","subarray","difference","others","Set","other","delete","intersection","out","none","selector","querySelector","Array","empty","querySelectorAll","matches","childMatcher","node","find","childFirst","firstElementChild","filter","children","update","EnterNode","parent","datum","ownerDocument","namespaceURI","_next","_parent","__data__","bindIndex","enter","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","appendChild","child","insertBefore","next","xhtml","svg","xlink","xml","xmlns","prefix","namespaces","space","local","attrRemove","removeAttribute","attrRemoveNS","fullname","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","apply","arguments","attrFunctionNS","defaultView","document","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","trim","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","remove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","parentNode","lower","previousSibling","firstChild","creatorInherit","uri","documentElement","createElement","createElementNS","creatorFixed","namespace","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","parseTypenames","typenames","onRemove","typename","on","__on","removeEventListener","listener","options","onAdd","contextListener","dispatchEvent","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","join","splice","contains","Selection","parents","_groups","_parents","selection","select","subgroups","subnode","subgroup","selectAll","arrayAll","selectorAll","selectChild","match","childFind","selectChildren","childrenFilter","matcher","bind","enterGroup","updateGroup","exitGroup","previous","i1","_enter","_exit","sparse","onenter","onupdate","onexit","append","merge","order","groups0","groups1","m0","m1","merges","group0","group1","compareDocumentPosition","sort","compareNode","sortgroups","sortgroup","callback","nodes","size","each","attr","getAttributeNS","property","classed","html","create","creator","insert","before","deep","dispatch","iterator","noop","_","Dispatch","types","c","concat","T","copy","that","args","taskHead","taskTail","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","requestAnimationFrame","f","setTimeout","clearNow","Timer","_call","_time","timer","delay","time","restart","wake","timerFlush","t0","t2","t1","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","elapsed","stop","emptyOn","emptyTween","id","timing","schedules","__transition","self","tween","state","tick","duration","ease","init","schedule","svgNode","degrees","PI","translateX","translateY","rotate","skewX","scaleX","scaleY","atan2","atan","interpolateTransform","pxComma","pxParen","degParen","pop","q","xa","ya","xb","yb","translate","scale","interpolateTransformCss","DOMMatrix","WebKitCSSMatrix","isIdentity","decompose","interpolateTransformSvg","transform","baseVal","consolidate","matrix","tweenRemove","tween0","tween1","tweenFunction","tweenValue","transition","_id","extend","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","format","l","exec","rgbn","Rgb","rgba","hsla","g","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","round","h","Hsl","hslConvert","hsl","hsl2rgb","m2","basis","v0","v1","v2","v3","t3","channels","assign","displayable","formatHsl","nogamma","linear","rgbGamma","y","exponential","gamma","rgbSpline","spline","colors","reA","reB","source","am","bm","bs","bi","lastIndex","one","zero","interpolate","value1","string00","interpolate0","string1","string0","string10","attrInterpolate","attrInterpolateNS","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","every","styleInterpolate","styleTween","textInterpolate","textTween","_name","newId","selection_prototype","inherit","id0","id1","styleNull","listener0","styleMaybeRemove","removeFunction","easeVarying","Promise","resolve","reject","cancel","interrupt","defaultTiming","active","abs","sourceRandomUniform","randomUniform","defaultSource","sourceRandomInt","randomInt","sourceRandomNormal","randomNormal","mu","sigma","eps","lcg","seed","random","e10","e5","e2","tickIncrement","step","power","LN10","error","delta","lo","hi","mid","ascendingComparator","center","ascendingBisect","bisector","bisectRight","genericArray","nb","na","setTime","date","isView","isArray","valueOf","unit","normalize","bimap","domain","range","d0","d1","r0","polymap","reverse","bisect","clamp","unknown","continuous","untransform","piecewise","output","rescale","invert","rangeRound","u","transformer","initRange","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","width","comma","precision","formatDecimalParts","toExponential","coefficient","exponent","toFixed","toLocaleString","toPrecision","formatRounded","toUpperCase","formatPrefix","prefixes","linearish","ticks","isFinite","ceil","tickFormat","step0","step1","tickStep","precisionPrefix","precisionRound","precisionFixed","nice","prestep","maxIter","randFloat","choose","clipValue","minValue","maxValue","roundToNDecimals","swapSoSmallerFirst","findLocalMaxima","maximaIndices","last","current","locale","grouping","thousands","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","percent","minus","nan","newFormat","formatTypes","suffix","maybeSuffix","valuePrefix","valueSuffix","valueNegative","formatTrim","padding","point","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","NoteArray","notes","_notes","getNotes","addNotes","sortByTime","noteArray","gap","repeat","times","getStartTime","noteEnd","shiftToStartAt","startTime","offset","forEach","func","element","sortFunction","mapFunction","sliceTime","endTime","mode","filterFunc","filterFunction","filterPitches","pitches","includes","transpose","steps","removeOctaves","newNote","otherNoteArray","entries","arrayShallowEquals","arrayHasSameElements","checkLength","setA","setB","removeDuplicates","arrayContainsArray","getMatrixMax","maximum","NEGATIVE_INFINITY","row","formatMatrix","colSeparator","rowSeparator","formatter","Recording","speed","selectedTrack","timeSelection","dateString","toISOString","otherRecording","getTime","notes1","notes2","toSimpleObject","preprocessMusicXmlPart","part","drumInstrumentMap","measures","hasStringFretNotes","handleStaveAndTab","repeatedMeasures","currentRepetition","measure","rep","repetition","direction","duplicateRepeatedMeasures","divisions","currentTime","tempo","beats","beatType","tempoChanges","beatTypeChanges","keySignatureChanges","noteObjs","measureLinePositions","currentTimeRounded","soundElements","tempoValue","secondsPerBeat","fifths","keySignatureMap","lastNoteDuration","nodeName","getDurationInSeconds","durationInSeconds","instrumentId","alter","tieElement","staff","totalTime","tuning","getTuningPitches","tuningPitches","staffTunings","st","tuningNote","tuningOctave","bpmToSecondsPerBeat","bpm","deepCloneFlatObjectMap","groupNotesByPitch","flat","reverseString","findNearest","targetNote","nearest","dist","POSITIVE_INFINITY","targetStart","newDist","parseMidiTrack","currentTick","milliSecondsPerTick","getMillisecondsPerTick","tickOfLastTempoChange","timeOfLastTempoChange","unfinishedNotes","EVENT_TYPES","meta","btc","ksc","mostRecentTempoChange","noteOn","noteOff","neededToFix","trackName","instrumentName","META_TYPES","programChange","getInstrumentAndTrackName","noteAftertouch","controller","channelAftertouch","pitchBend","sequenceNumber","textEvent","copyright","lyrics","marker","cuePoint","channelPrefix","setTempo","smpteOffset","timeSignature","keySignature","sequencerSpecific","KEY_SIG_MAP","MusicPiece","tempos","timeSignatures","keySignatures","measureTimes","currentTempo","currentTimeSig","currentKeySig","midiFile","parsed","splitFormat0IntoTracks","groupCollapsed","parsedTracks","lastTempo","milliSecondsPerQuarter","newEntry","getSignatureChanges","grouped","splittedTracks","splitFormat0","measureLines","currentBeatsInMeasure","timeSinceLastTempoChange","getMeasureLines","groupEnd","preprocessMidiFileData","midiParser","TempoDefinition","TimeSignature","KeySignature","Track","fromMidi","xmlFile","xmlDocument","DOMParser","parseFromString","partNameElements","instruments","partNames","instrumentNames","partMap","scoreParts","scorePart","partId","instruMap","midiInstrs","midiInstr","instrId","getDrumInstrumentMap","parts","parsedParts","preprocessMusicXmlData","fromMusicXml","getAllNotes","flatMap","signature","PitchSequence","getPitches","toCharString","toNoteNameString","toIntervals","otherPitchSequence","setupCanvas","canvas","dpr","devicePixelRatio","rect","getBoundingClientRect","height","context","getContext","drawCircle","radius","beginPath","arc","stroke","drawFilledCircle","drawTriangle","halfSize","moveTo","lineTo","closePath","drawDiamond","drawX","save","lineWidth","restore","drawNoteTrapezoid","height2","drawNoteTrapezoidUpwards","width2","drawRoundedRect","quadraticCurveTo","drawHexagon","cx","cy","angle","cos","sin","recordAudio","async","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","audioBitsPerSecond","audioChunks","blobOptions","mimeType","audioBlob","Blob","recordMidi","midiAccess","requestMIDIAccess","messages","addMessage","message","inputs","onmidimessage","currentNotes","device","timeStamp","commandAndChannel","command","processMidiMessagesToNotes","getMidiLiveData","setMidiLiveData","addCurrentNote","removeCurrentNote","_handleMIDIMessage","_noteOff","_noteOn","then","_onMIDISuccess","_onMIDIFailure","alert","midiData","drumPitchReplacementMapMPS850","repPitch","zone","line","shape","generateDrumVariation","deviation","pAdd","pRemove","usedPitches","randVelocity","randTime","variation","simplifyDrumPitches","replacementMap","errors","oldPitch","newPitch","getPitch2PositionMap","uniqeRows","StringedTuning","stringCount","stringedTunings","guitarNoteFromNote","reversedString","getTuningFromPitches","stringCountMap","tunings","getTuningPitchRange","fretCount","openMax","stringColors","getPitchFromFretboardPos","getNoteInfoFromFretboardPos","getFretboardPositionsFromPitch","positions","openPitch","getFretboardPositionsFromNoteName","lowestPitch","generateExampleData","fretboardPositionsFromMidi","minPitch","maxPitch","possibleNotes","errorPitches","bestPos","pos","minDataPitch","maxDataPitch","extent","advice","fillStr","deprecate","original","alternative","fn","isNamed","src","isPitch","alt","FIFTHS","STEPS_TO_OCTS","encode","oct","dir","FIFTHS_TO_STEPS","decode","coord","unaltered","NoNote","pc","acc","cache","altToAcc","accToAlt","cached","noteName","tokens","tokenizeNote","letter","octStr","chroma","SEMI","midi","freq","props","stepToLetter","pitchName","REGEX","str","NoInterval","REGEX$1","cache$1","tokenizeInterval","num","TYPES","simple","qToAlt","semitones","SIZES","parse$1","altToQ","pitchName$1","coordToInterval","intervalName","note$1","interval$1","noteCoord","intervalCoord","coordToNote","arr","len","EmptyPcset","setNum","normalized","intervals","setNumToChroma","chromaToNumber","isChroma","isPcsetNum","binary","listToChroma","isPcset","normalizedNum","chromaRotations","chromaToIntervals","chromaToPcset","IVLS","isSupersetOf","NoChordType","quality","aliases","dictionary","ivls","fullName","getQuality","chord","alias","addAlias","NoScaleType","NoChord","rootDegree","tonic","NUM_TYPES","getChord","typeName","optionalTonic","optionalRoot","rootInterval","fromNote","to","fcoord","tcoord","distance","newNum","shift","detect","weight","tonicChroma","pcToName","record","namedSet","allModes","modes","found","chordType","chordName","baseNote","findExactMatches","chordScales","isChordIncluded","extended","isSuperset","reduced","isSubset","isSubsetOf","tokenize","VALUES","denominator","shorthand","dots","fraction","combinator","coordA","coordB","NoRomanNumeral","roman","upperRoman","major","ROMANS","freeze","mapScaleToType","sep","keyScale","grades","chords","harmonicFunctions","gr","chordsHarmonicFunction","MODES","NoMode","modeNum","triad","seventh","modeName","triads","tonics","NoScale","detectChordsByExactStart","detectChordsByOverlap","sortByPitch","sorted","notesTodo","note1","note2","chordTypes","getChordType","lowest","candidates","cand","getChordName","noteLetters","Chord","LamellophoneTuning","pitchesSorted","keyCount","getNumbers","ending","lowerOctave","numberString","getLetters","letterString","lamellophoneTunings","convertTabToNotes","tab","symbolToPitchMap","symbols","noteNames","noteNamesSet","startOct","insideChord","insideNote","currentPitch","currentOctOffset","replaceAll","finishNote","convertNotesToTab","restSize","pitchToSymbolMap","previousEnd","chordString","convertNotesToHtmlTab","colormap","convertNumbersToLetters","numberTab","numberLetterMap","bestTransposition","retune","occuringPitches","notePitches","bestTransposed","bestSteps","transposed","uncommon","freePitches","neededPitches","neededPitch","bestMatch","bestDiff","freePitch","pianoPitchRange","blobToBase64","blob","onloadend","readAsDataURL","blobToFileExtension","formatTime","seconds","includeMillis","sec","ms","formatDate","replaceT","keepMillis","formatSongTitle","title","maxLength","lastIndexOf","storeObjectInLocalStorage","JSON","stringify","localStorage","setItem","getObjectFromLocalStorage","getItem","noteColormap","noteColormapAccessible","colorInterpolator","interpolateRgb","noteColormapGradientArray","noteColorFromPitch","confidenceInterval","variance","low","high","getBoxplotCharacteristics","q1","q2","q3","iqr","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","kernelGauss","E","filterRecordingNoise","recording","velocityThreshold","durationThreshold","clipRecordingsPitchesToGtRange","recordings","groundTruth","pitchRanges","extension","alignNotesToBpm","secondsPerDivision","recordingsHeatmap","recNotes","nRecs","binSize","attribute","groupedByAttribute","heatmapByAttribute","attribute_","maxTime","nBins","heatmap","bin","averageRecordings","heatmapByPitch","threshold","newNotes","currentNote","averageRecordings2","bandwidth","ticksPerSecond","groupedByPitch","starts","ends","scaleLinear","kde","estimateStarts","estimateEnds","maximaStarts","maximaEnds","chosenStarts","chosenEnds","nextStart","nextEnd","differenceMap","gtNotes","recHeatmap","gtHeatmap","allPitches","resultMap","recH","gtH","gtValue","recValue","differenceMapErrorAreas","missingBins","additionalBins","correctBins","diffMap","totalArea","missing","additional","correct","pingMidiDevice","deviceName","howOften","sentTime","sentCount","receiveFunction","ping","avg","outputDevice","outputs","pingFunction","send","matchGtAndRecordingNotes","groupedByPitchRec","gtRecMap","additionalNotes","missingNotes","Utils","currentEntry","matchGtAndMultipleRecordings","allRecNotes","getMultiMatchingErrorPerNote","multiMatching","errorThreshold","gtErrorMap","maxError","gtStart","matchedRecNotes","error_","getMatchingError","matching","addPenalty","missPenalty","timingPenalty","timeThreshold","total","totalAdd","totalMiss","totalCorrect","totalNumberOfGtNotes","perPitch","addError","missError","timeError","matchedRecNote","numberOfGtNotes","getMatchingSection","newGtRecMap","getMatchingSliceError","alignNoteArrays","gt","rec","noteA","diff","noteB","alignmentForce","aligned","timeDifference","alignNoteArrays2","tries","timeDiff","alignNoteArrays3","timeDiffs","median","testAlignment","alignmentBenchmark","rand127","randomLcg","randDuration","randomNotes","shifted","Drums","funcs","alignGtAndRecToMinimizeDiffError","gtDuration","recDuration","nRecBins","gtActivation","activationMap","recActivation","agreementsPerOffset","currentAgreement","agreement","offsetBins","offsetMilliseconds","allNotes","pitchActivationMap","gtActivations","recActivations","gtA","recA","alignRecordingToBestFit","bestFit","DynamicTimeWarping","ts1","ts2","distanceFunction","ser1","ser2","distFunc","path","cost","getDistance","getSimilarParts","selectedInterval","stride","secondsPerBin","minTime","binCount","discrTrack","discretizeTime","startBin","endBin","sliceDiscretizedTrack","selectionSize","similarParts","pos2","getTrackSimilarity","discrA","discrB","common","totalDist","binsA","binsB","euclideanDistanceSquared","neirestNeighborDistance","penaltyWeight","discr","countActiveNoteBins","binArray","trackMap","A","B","maxBins","maxOffset","getSimilarPartsViaMatching","finished","sequenceStart","currentIndex","startNote","candidateSequences","startIndex","nextPitch","cs","nextIndex","seq","levenshtein","temporary","damerauLevenshtein","normalizedLevenshtein","longerLength","findSimilarNoteSections","selectedNotes","dataString","searchString","findSimilarStringSections","filtered","occupied","occ","lcs","diagonal","latch","lcsLength","normalizedLcsLength","gotoh","seqA","seqB","similarityFunction","matchMissmatchSimilarity","gapPenaltyStart","gapPenaltyExtend","lengthA","lengthB","sim","normalizedGotoh","similarity","longer","maxSimilarity","differenceSimilarity","TreeNode","leaves","checkNodes","suf","addSuffix","checkLeaves","leaf","getLongestRepeatedSubString","indent","ind","toJson","seq1","seq2","match_score","mismatch_penalty","gap_penalty","I","S","finalAlignments","calcScoresAndTracebacks","del","sim_score","intermediate_scores","score","tracebackTypeStatus","entry","lastRow","alignmentChildren","traceback_type_status","tracebackType","alignmentTraceback","alignment"],"mappings":"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","file":"musicvislib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"musicvislib\"] = factory();\n\telse\n\t\troot[\"musicvislib\"] = factory();\n})(this, function() {\nreturn ","/*\n    Project Name : midi-parser-js\n    Project Url  : https://github.com/colxi/midi-parser-js/\n    Author       : colxi\n    Author URL   : http://www.colxi.info/\n    Description  : MidiParser library reads .MID binary files, Base64 encoded MIDI Data,\n    or UInt8 Arrays, and outputs as a readable and structured JS object.\n*/\n\n(function(){\n    'use strict';\n\n    /**\n     * CROSSBROWSER & NODEjs POLYFILL for ATOB() -\n     * By: https://github.com/MaxArt2501 (modified)\n     * @param  {string} string [description]\n     * @return {[type]}        [description]\n     */\n    const _atob = function(string) {\n        // base64 character set, plus padding character (=)\n        let b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        // Regular expression to check formal correctness of base64 encoded strings\n        let b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n        // remove data type signatures at the begining of the string\n        // eg :  \"data:audio/mid;base64,\"\n        string = string.replace( /^.*?base64,/ , '');\n        // atob can work with strings with whitespaces, even inside the encoded part,\n        // but only \\t, \\n, \\f, \\r and ' ', which can be stripped.\n        string = String(string).replace(/[\\t\\n\\f\\r ]+/g, '');\n        if (!b64re.test(string))\n            throw new TypeError('Failed to execute _atob() : The string to be decoded is not correctly encoded.');\n\n        // Adding the padding if missing, for semplicity\n        string += '=='.slice(2 - (string.length & 3));\n        let bitmap, result = '';\n        let r1, r2, i = 0;\n        for (; i < string.length;) {\n            bitmap = b64.indexOf(string.charAt(i++)) << 18 | b64.indexOf(string.charAt(i++)) << 12\n                    | (r1 = b64.indexOf(string.charAt(i++))) << 6 | (r2 = b64.indexOf(string.charAt(i++)));\n\n            result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255)\n                    : r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255)\n                    : String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);\n        }\n        return result;\n    };\n\n\n    /**\n     * [MidiParser description]\n     * @type {Object}\n     */\n    const MidiParser  = {\n        // debug (bool), when enabled will log in console unimplemented events\n        // warnings and internal handled errors.\n        debug: false,\n\n        /**\n         * [parse description]\n         * @param  {[type]} input     [description]\n         * @param  {[type]} _callback [description]\n         * @return {[type]}           [description]\n         */\n        parse: function(input, _callback){\n            if(input instanceof Uint8Array) return MidiParser.Uint8(input);\n            else if(typeof input === 'string') return MidiParser.Base64(input);\n            else if(input instanceof HTMLElement && input.type === 'file') return MidiParser.addListener(input , _callback);\n            else throw new Error('MidiParser.parse() : Invalid input provided');\n        },\n\n        /**\n         * addListener() should be called in order attach a listener to the INPUT HTML element\n         * that will provide the binary data automating the conversion, and returning\n         * the structured data to the provided callback function.\n         */\n        addListener: function(_fileElement, _callback){\n            if(!File || !FileReader) throw new Error('The File|FileReader APIs are not supported in this browser. Use instead MidiParser.Base64() or MidiParser.Uint8()');\n\n            // validate provided element\n            if( _fileElement === undefined ||\n                !(_fileElement instanceof HTMLElement) ||\n                _fileElement.tagName !== 'INPUT' ||\n                _fileElement.type.toLowerCase() !== 'file' \n            ){\n                console.warn('MidiParser.addListener() : Provided element is not a valid FILE INPUT element');\n                return false;\n            }\n            _callback = _callback || function(){};\n\n            _fileElement.addEventListener('change', function(InputEvt){             // set the 'file selected' event handler\n                if (!InputEvt.target.files.length) return false;                    // return false if no elements where selected\n                console.log('MidiParser.addListener() : File detected in INPUT ELEMENT processing data..');\n                let reader = new FileReader();                                      // prepare the file Reader\n                reader.readAsArrayBuffer(InputEvt.target.files[0]);                 // read the binary data\n                reader.onload =  function(e){\n                    _callback( MidiParser.Uint8(new Uint8Array(e.target.result)));  // encode data with Uint8Array and call the parser\n                };\n            });\n        },\n\n        /**\n         * Base64() : convert baset4 string into uint8 array buffer, before performing the\n         * parsing subroutine.\n         */\n        Base64 : function(b64String){\n            b64String = String(b64String);\n\n            let raw = _atob(b64String);\n            let rawLength = raw.length;\n            let t_array = new Uint8Array(new ArrayBuffer(rawLength));\n\n            for(let i=0; i<rawLength; i++) t_array[i] = raw.charCodeAt(i);\n            return  MidiParser.Uint8(t_array) ;\n        },\n\n        /**\n         * parse() : function reads the binary data, interpreting and spliting each chuck\n         * and parsing it to a structured Object. When job is finised returns the object\n         * or 'false' if any error was generated.\n         */\n        Uint8: function(FileAsUint8Array){\n            let file = {\n                data: null,\n                pointer: 0,\n                movePointer: function(_bytes){                                      // move the pointer negative and positive direction\n                    this.pointer += _bytes;\n                    return this.pointer;\n                },\n                readInt: function(_bytes){                                          // get integer from next _bytes group (big-endian)\n                    _bytes = Math.min(_bytes, this.data.byteLength-this.pointer);\n                    if (_bytes < 1) return -1;                                                                      // EOF\n                    let value = 0;\n                    if(_bytes > 1){\n                        for(let i=1; i<= (_bytes-1); i++){\n                            value += this.data.getUint8(this.pointer) * Math.pow(256, (_bytes - i));\n                            this.pointer++;\n                        }\n                    }\n                    value += this.data.getUint8(this.pointer);\n                    this.pointer++;\n                    return value;\n                },\n                readStr: function(_bytes){                                          // read as ASCII chars, the followoing _bytes\n                    let text = '';\n                    for(let char=1; char <= _bytes; char++) text +=  String.fromCharCode(this.readInt(1));\n                    return text;\n                },\n                readIntVLV: function(){                                             // read a variable length value\n                    let value = 0;\n                    if ( this.pointer >= this.data.byteLength ){\n                        return -1;                                                  // EOF\n                    }else if(this.data.getUint8(this.pointer) < 128){               // ...value in a single byte\n                        value = this.readInt(1);\n                    }else{                                                          // ...value in multiple bytes\n                        let FirstBytes = [];\n                        while(this.data.getUint8(this.pointer) >= 128){\n                            FirstBytes.push(this.readInt(1) - 128);\n                        }\n                        let lastByte  = this.readInt(1);\n                        for(let dt = 1; dt <= FirstBytes.length; dt++){\n                            value += FirstBytes[FirstBytes.length - dt] * Math.pow(128, dt);\n                        }\n                        value += lastByte;\n                    }\n                    return value;\n                }\n            };\n\n            file.data = new DataView(FileAsUint8Array.buffer, FileAsUint8Array.byteOffset, FileAsUint8Array.byteLength);                                            // 8 bits bytes file data array\n            //  ** read FILE HEADER\n            if(file.readInt(4) !== 0x4D546864){\n                console.warn('Header validation failed (not MIDI standard or file corrupt.)');\n                return false;                                                       // Header validation failed (not MIDI standard or file corrupt.)\n            }\n            let headerSize          = file.readInt(4);                              // header size (unused var), getted just for read pointer movement\n            let MIDI                = {};                                           // create new midi object\n            MIDI.formatType         = file.readInt(2);                              // get MIDI Format Type\n            MIDI.tracks             = file.readInt(2);                              // get ammount of track chunks\n            MIDI.track              = [];                                           // create array key for track data storing\n            let timeDivisionByte1   = file.readInt(1);                              // get Time Division first byte\n            let timeDivisionByte2   = file.readInt(1);                              // get Time Division second byte\n            if(timeDivisionByte1 >= 128){                                           // discover Time Division mode (fps or tpf)\n                MIDI.timeDivision    = [];\n                MIDI.timeDivision[0] = timeDivisionByte1 - 128;                     // frames per second MODE  (1st byte)\n                MIDI.timeDivision[1] = timeDivisionByte2;                           // ticks in each frame     (2nd byte)\n            }else MIDI.timeDivision  = (timeDivisionByte1 * 256) + timeDivisionByte2;// else... ticks per beat MODE  (2 bytes value)\n\n            //  ** read TRACK CHUNK\n            for(let t=1; t <= MIDI.tracks; t++){\n                MIDI.track[t-1]     = {event: []};                                  // create new Track entry in Array\n                let headerValidation = file.readInt(4);\n                if ( headerValidation === -1 ) break;                               // EOF\n                if(headerValidation !== 0x4D54726B) return false;                   // Track chunk header validation failed.\n                file.readInt(4);                                                    // move pointer. get chunk size (bytes length)\n                let e               = 0;                                            // init event counter\n                let endOfTrack      = false;                                        // FLAG for track reading secuence breaking\n                // ** read EVENT CHUNK\n                let statusByte;\n                let laststatusByte;\n                while(!endOfTrack){\n                    e++;                                                            // increase by 1 event counter\n                    MIDI.track[t-1].event[e-1] = {};                                // create new event object, in events array\n                    MIDI.track[t-1].event[e-1].deltaTime  = file.readIntVLV();      // get DELTA TIME OF MIDI event (Variable Length Value)\n                    statusByte = file.readInt(1);                                   // read EVENT TYPE (STATUS BYTE)\n                    if(statusByte === -1) break;                                    // EOF\n                    else if(statusByte >= 128) laststatusByte = statusByte;         // NEW STATUS BYTE DETECTED\n                    else{                                                           // 'RUNNING STATUS' situation detected\n                        statusByte = laststatusByte;                                // apply last loop, Status Byte\n                        file.movePointer(-1);                                       // move back the pointer (cause readed byte is not status byte)\n                    }\n\n\n                    //\n                    // ** IS META EVENT\n                    //\n                    if(statusByte === 0xFF){                                        // Meta Event type\n                        MIDI.track[t-1].event[e-1].type = 0xFF;                     // assign metaEvent code to array\n                        MIDI.track[t-1].event[e-1].metaType =  file.readInt(1);     // assign metaEvent subtype\n                        let metaEventLength = file.readIntVLV();                    // get the metaEvent length\n                        switch(MIDI.track[t-1].event[e-1].metaType){\n                            case 0x2F:                                              // end of track, has no data byte\n                            case -1:                                                // EOF\n                                endOfTrack = true;                                  // change FLAG to force track reading loop breaking\n                                break;\n                            case 0x01:                                              // Text Event\n                            case 0x02:                                              // Copyright Notice\n                            case 0x03:\n                            case 0x04:                                              // Instrument Name\n                            case 0x05:                                              // Lyrics)\n                            case 0x07:                                              // Cue point                                         // Sequence/Track Name (documentation: http://www.ta7.de/txt/musik/musi0006.htm)\n                            case 0x06:                                              // Marker\n                                MIDI.track[t-1].event[e-1].data = file.readStr(metaEventLength);\n                                break;\n                            case 0x21:                                              // MIDI PORT\n                            case 0x59:                                              // Key Signature\n                            case 0x51:                                              // Set Tempo\n                                MIDI.track[t-1].event[e-1].data = file.readInt(metaEventLength);\n                                break;\n                            case 0x54:                                              // SMPTE Offset\n                                MIDI.track[t-1].event[e-1].data    = [];\n                                MIDI.track[t-1].event[e-1].data[0] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[1] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[2] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[3] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[4] = file.readInt(1);\n                                break;\n                            case 0x58:                                              // Time Signature\n                                MIDI.track[t-1].event[e-1].data    = [];\n                                MIDI.track[t-1].event[e-1].data[0] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[1] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[2] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[3] = file.readInt(1);\n                                break;\n                            default :\n                                // if user provided a custom interpreter, call it\n                                // and assign to event the returned data\n                                if( this.customInterpreter !== null){\n                                    MIDI.track[t-1].event[e-1].data = this.customInterpreter( MIDI.track[t-1].event[e-1].metaType, file, metaEventLength);\n                                }\n                                // if no customInterpretr is provided, or returned\n                                // false (=apply default), perform default action\n                                if(this.customInterpreter === null || MIDI.track[t-1].event[e-1].data === false){\n                                    file.readInt(metaEventLength);\n                                    MIDI.track[t-1].event[e-1].data = file.readInt(metaEventLength);\n                                    if (this.debug) console.info('Unimplemented 0xFF meta event! data block readed as Integer');\n                                }\n                        }\n                    }\n\n                    //\n                    // IS REGULAR EVENT\n                    //\n                    else{                                                           // MIDI Control Events OR System Exclusive Events\n                        statusByte = statusByte.toString(16).split('');             // split the status byte HEX representation, to obtain 4 bits values\n                        if(!statusByte[1]) statusByte.unshift('0');                 // force 2 digits\n                        MIDI.track[t-1].event[e-1].type = parseInt(statusByte[0], 16);// first byte is EVENT TYPE ID\n                        MIDI.track[t-1].event[e-1].channel = parseInt(statusByte[1], 16);// second byte is channel\n                        switch(MIDI.track[t-1].event[e-1].type){\n                            case 0xF:{                                              // System Exclusive Events\n\n                                // if user provided a custom interpreter, call it\n                                // and assign to event the returned data\n                                if( this.customInterpreter !== null){\n                                    MIDI.track[t-1].event[e-1].data = this.customInterpreter( MIDI.track[t-1].event[e-1].type, file , false);\n                                }\n\n                                // if no customInterpretr is provided, or returned\n                                // false (=apply default), perform default action\n                                if(this.customInterpreter === null || MIDI.track[t-1].event[e-1].data === false){\n                                    let event_length = file.readIntVLV();\n                                    MIDI.track[t-1].event[e-1].data = file.readInt(event_length);\n                                    if (this.debug) console.info('Unimplemented 0xF exclusive events! data block readed as Integer');\n                                }\n                                break;\n                            }\n                            case 0xA:                                               // Note Aftertouch\n                            case 0xB:                                               // Controller\n                            case 0xE:                                               // Pitch Bend Event\n                            case 0x8:                                               // Note off\n                            case 0x9:                                               // Note On\n                                MIDI.track[t-1].event[e-1].data = [];\n                                MIDI.track[t-1].event[e-1].data[0] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[1] = file.readInt(1);\n                                break;\n                            case 0xC:                                               // Program Change\n                            case 0xD:                                               // Channel Aftertouch\n                                MIDI.track[t-1].event[e-1].data = file.readInt(1);\n                                break;\n                            case -1:                                                // EOF\n                                endOfTrack = true;                                  // change FLAG to force track reading loop breaking\n                                break;\n                            default:\n                                // if user provided a custom interpreter, call it\n                                // and assign to event the returned data\n                                if( this.customInterpreter !== null){\n                                    MIDI.track[t-1].event[e-1].data = this.customInterpreter( MIDI.track[t-1].event[e-1].metaType, file , false);\n                                }\n\n                                // if no customInterpretr is provided, or returned\n                                // false (=apply default), perform default action\n                                if(this.customInterpreter === null || MIDI.track[t-1].event[e-1].data === false){\n                                    console.log('Unknown EVENT detected... reading cancelled!');\n                                    return false;\n                                }\n                        }\n                    }\n                }\n            }\n            return MIDI;\n        },\n\n        /**\n         * custom function to handle unimplemented, or custom midi messages.\n         * If message is a meta-event, the value of metaEventLength will be >0.\n         * Function must return the value to store, and pointer of dataView needs\n         * to be manually increased\n         * If you want default action to be performed, return false\n         */\n        customInterpreter : null // function( e_type , arrayByffer, metaEventLength){ return e_data_int }\n    };\n\n\n    // if running in NODE export module\n    if(typeof module !== 'undefined') module.exports = MidiParser;\n    else{\n        // if running in Browser, set a global variable.\n        let _global = typeof window === 'object' && window.self === window && window ||\n                    typeof self === 'object' && self.self === self && self ||\n                    typeof global === 'object' && global.global === global && global;\n\n        _global.MidiParser = MidiParser;\n    }\n\n\n    \n})();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Lookup for many MIDI specifications.\n *\n * @see https://soundprogramming.net/file-formats/\n * @module Midi\n */\n\n\nconst MidiNoteByPitch = new Map();\nconst MidiNoteByLabel = new Map();\nconst MidiInstrumentByNumber = new Map();\nconst MidiInstrumentByNumberLev2 = new Map();\n\n/**\n * Returns information on the MIDI note with the specified number.\n *\n * @param {number} nr MIDI note number in [0, 127]\n * @returns {object} note info, e.g.\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\n */\nexport function getMidiNoteByNr(nr) {\n    return MidiNoteByPitch.get(nr);\n}\n\n/**\n * Returns information on the MIDI note with the specified label.\n *\n * @param {string} label note label, e.g. 'D#0'\n *      (upper-case and sharp notation necessary)\n * @returns {object} note info, e.g.\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\n */\nexport function getMidiNoteByLabel(label) {\n    return MidiNoteByLabel.get(label);\n}\n\n/**\n * Returns information on the MIDI note with the specified name and octave.\n *\n * @param {string} name note name, e.g. 'D#'\n *      (upper-case and sharp notation necessary)\n * @param {number} octave octave in [-1, 9]\n * @returns {object} note info, e.g.\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\n */\nexport function getMidiNoteByNameAndOctave(name, octave) {\n    return MidiNoteByLabel.get(`${name}${octave}`);\n}\n\n/**\n * Returns information on the MIDI instrument with the specified number.\n *\n * @param {number} nr MIDI instrument number in [0, 127]\n * @returns {object} note info, e.g.\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\n */\nexport function getMidiInstrumentByNr(nr) {\n    return MidiInstrumentByNumber.get(nr);\n}\n\n/**\n * Returns information on the MIDI instrument (MIDI level 2) with the\n * specified number.\n *\n * @param {number} nr MIDI instrument number in [0, 127]\n * @param {number} subNr MIDI instrument sub number in [0, 127]\n * @returns {object} note info, e.g.\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\n */\nexport function getMidiInstrumentByNrL2(nr, subNr) {\n    const key = `${nr}-${subNr}`;\n    return MidiInstrumentByNumberLev2.get(key);\n}\n\n/**\n * Returns information on the MIDI instrument with the specified number.\n *\n * @param {number} nr MIDI drum note number in [27, 87]\n * @returns {string} note name, e.g. 'Bass Drum 1\n */\nexport function getMidiDrumNoteByNr(nr) {\n    return GENERAL_MIDI_DRUM_NOTE_NUMBERS.get(nr);\n}\n\n/**\n * Returns true if a given MIDI pitch refers to a sharp note.\n *\n * @param {number} nr MIDI note number in [0, 127]\n * @returns {boolean} true if sharp, false otherwise\n */\nexport function isSharp(nr) {\n    return SHARPS.has(nr);\n}\n\n/**\n * Returns a note name such as 'C#' (without octave) for a given MIDI\n * note number.\n *\n * @param {number} nr MIDI note number in [0, 127]\n * @returns {string} note name such as 'C#'\n */\nexport function getNoteNameFromNoteNr(nr) {\n    return NOTE_NAMES[nr % 12];\n}\n\n/**\n * Maps flats to sharps, e.g. flatToSharp.get('Db') === 'C#'\n */\nexport const flatToSharp = new Map([\n    ['Cb', 'B'],\n    ['Db', 'C#'],\n    ['Eb', 'D#'],\n    ['Fb', 'E'],\n    ['Gb', 'F#'],\n    ['Ab', 'G#'],\n    ['Bb', 'A#'],\n]);\n\n\n/**\n * Below here are only arrays with information and lookup-map-building code\n */\n\nexport const NOTE_NAMES = [\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n    'A',\n    'A#',\n    'B',\n];\n\nconst MIDI_NOTES = [\n    { pitch: 0, name: 'C', octave: -1, label: 'C-1', frequency: 8.176 },\n    { pitch: 1, name: 'C#', octave: -1, label: 'C#-1', frequency: 8.662 },\n    { pitch: 2, name: 'D', octave: -1, label: 'D-1', frequency: 9.177 },\n    { pitch: 3, name: 'D#', octave: -1, label: 'D#-1', frequency: 9.723 },\n    { pitch: 4, name: 'E', octave: -1, label: 'E-1', frequency: 10.301 },\n    { pitch: 5, name: 'F', octave: -1, label: 'F-1', frequency: 10.913 },\n    { pitch: 6, name: 'F#', octave: -1, label: 'F#-1', frequency: 11.562 },\n    { pitch: 7, name: 'G', octave: -1, label: 'G-1', frequency: 12.25 },\n    { pitch: 8, name: 'G#', octave: -1, label: 'G#-1', frequency: 12.978 },\n    { pitch: 9, name: 'A', octave: -1, label: 'A-1', frequency: 13.75 },\n    { pitch: 10, name: 'A#', octave: -1, label: 'A#-1', frequency: 14.568 },\n    { pitch: 11, name: 'B', octave: -1, label: 'B-1', frequency: 15.434 },\n    { pitch: 12, name: 'C', octave: 0, label: 'C0', frequency: 16.352 },\n    { pitch: 13, name: 'C#', octave: 0, label: 'C#0', frequency: 17.324 },\n    { pitch: 14, name: 'D', octave: 0, label: 'D0', frequency: 18.354 },\n    { pitch: 15, name: 'D#', octave: 0, label: 'D#0', frequency: 19.445 },\n    { pitch: 16, name: 'E', octave: 0, label: 'E0', frequency: 20.602 },\n    { pitch: 17, name: 'F', octave: 0, label: 'F0', frequency: 21.827 },\n    { pitch: 18, name: 'F#', octave: 0, label: 'F#0', frequency: 23.125 },\n    { pitch: 19, name: 'G', octave: 0, label: 'G0', frequency: 24.5 },\n    { pitch: 20, name: 'G#', octave: 0, label: 'G#0', frequency: 25.957 },\n    { pitch: 21, name: 'A', octave: 0, label: 'A0', frequency: 27.5 },\n    { pitch: 22, name: 'A#', octave: 0, label: 'A#0', frequency: 29.135 },\n    { pitch: 23, name: 'B', octave: 0, label: 'B0', frequency: 30.868 },\n    { pitch: 24, name: 'C', octave: 1, label: 'C1', frequency: 32.703 },\n    { pitch: 25, name: 'C#', octave: 1, label: 'C#1', frequency: 34.648 },\n    { pitch: 26, name: 'D', octave: 1, label: 'D1', frequency: 36.708 },\n    { pitch: 27, name: 'D#', octave: 1, label: 'D#1', frequency: 38.891 },\n    { pitch: 28, name: 'E', octave: 1, label: 'E1', frequency: 41.203 },\n    { pitch: 29, name: 'F', octave: 1, label: 'F1', frequency: 43.654 },\n    { pitch: 30, name: 'F#', octave: 1, label: 'F#1', frequency: 46.249 },\n    { pitch: 31, name: 'G', octave: 1, label: 'G1', frequency: 48.999 },\n    { pitch: 32, name: 'G#', octave: 1, label: 'G#1', frequency: 51.913 },\n    { pitch: 33, name: 'A', octave: 1, label: 'A1', frequency: 55 },\n    { pitch: 34, name: 'A#', octave: 1, label: 'A#1', frequency: 58.27 },\n    { pitch: 35, name: 'B', octave: 1, label: 'B1', frequency: 61.735 },\n    { pitch: 36, name: 'C', octave: 2, label: 'C2', frequency: 65.406 },\n    { pitch: 37, name: 'C#', octave: 2, label: 'C#2', frequency: 69.296 },\n    { pitch: 38, name: 'D', octave: 2, label: 'D2', frequency: 73.416 },\n    { pitch: 39, name: 'D#', octave: 2, label: 'D#2', frequency: 77.782 },\n    { pitch: 40, name: 'E', octave: 2, label: 'E2', frequency: 82.407 },\n    { pitch: 41, name: 'F', octave: 2, label: 'F2', frequency: 87.307 },\n    { pitch: 42, name: 'F#', octave: 2, label: 'F#2', frequency: 92.499 },\n    { pitch: 43, name: 'G', octave: 2, label: 'G2', frequency: 97.999 },\n    { pitch: 44, name: 'G#', octave: 2, label: 'G#2', frequency: 103.826 },\n    { pitch: 45, name: 'A', octave: 2, label: 'A2', frequency: 110 },\n    { pitch: 46, name: 'A#', octave: 2, label: 'A#2', frequency: 116.541 },\n    { pitch: 47, name: 'B', octave: 2, label: 'B2', frequency: 123.471 },\n    { pitch: 48, name: 'C', octave: 3, label: 'C3', frequency: 130.813 },\n    { pitch: 49, name: 'C#', octave: 3, label: 'C#3', frequency: 138.591 },\n    { pitch: 50, name: 'D', octave: 3, label: 'D3', frequency: 146.832 },\n    { pitch: 51, name: 'D#', octave: 3, label: 'D#3', frequency: 155.563 },\n    { pitch: 52, name: 'E', octave: 3, label: 'E3', frequency: 164.814 },\n    { pitch: 53, name: 'F', octave: 3, label: 'F3', frequency: 174.614 },\n    { pitch: 54, name: 'F#', octave: 3, label: 'F#3', frequency: 184.997 },\n    { pitch: 55, name: 'G', octave: 3, label: 'G3', frequency: 195.998 },\n    { pitch: 56, name: 'G#', octave: 3, label: 'G#3', frequency: 207.652 },\n    { pitch: 57, name: 'A', octave: 3, label: 'A3', frequency: 220 },\n    { pitch: 58, name: 'A#', octave: 3, label: 'A#3', frequency: 233.082 },\n    { pitch: 59, name: 'B', octave: 3, label: 'B3', frequency: 246.942 },\n    { pitch: 60, name: 'C', octave: 4, label: 'C4', frequency: 261.626 },\n    { pitch: 61, name: 'C#', octave: 4, label: 'C#4', frequency: 277.183 },\n    { pitch: 62, name: 'D', octave: 4, label: 'D4', frequency: 293.665 },\n    { pitch: 63, name: 'D#', octave: 4, label: 'D#4', frequency: 311.127 },\n    { pitch: 64, name: 'E', octave: 4, label: 'E4', frequency: 329.628 },\n    { pitch: 65, name: 'F', octave: 4, label: 'F4', frequency: 349.228 },\n    { pitch: 66, name: 'F#', octave: 4, label: 'F#4', frequency: 369.994 },\n    { pitch: 67, name: 'G', octave: 4, label: 'G4', frequency: 391.995 },\n    { pitch: 68, name: 'G#', octave: 4, label: 'G#4', frequency: 415.305 },\n    { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440 },\n    { pitch: 70, name: 'A#', octave: 4, label: 'A#4', frequency: 466.164 },\n    { pitch: 71, name: 'B', octave: 4, label: 'B4', frequency: 493.883 },\n    { pitch: 72, name: 'C', octave: 5, label: 'C5', frequency: 523.251 },\n    { pitch: 73, name: 'C#', octave: 5, label: 'C#5', frequency: 554.365 },\n    { pitch: 74, name: 'D', octave: 5, label: 'D5', frequency: 587.33 },\n    { pitch: 75, name: 'D#', octave: 5, label: 'D#5', frequency: 622.254 },\n    { pitch: 76, name: 'E', octave: 5, label: 'E5', frequency: 659.255 },\n    { pitch: 77, name: 'F', octave: 5, label: 'F5', frequency: 698.456 },\n    { pitch: 78, name: 'F#', octave: 5, label: 'F#5', frequency: 739.989 },\n    { pitch: 79, name: 'G', octave: 5, label: 'G5', frequency: 783.991 },\n    { pitch: 80, name: 'G#', octave: 5, label: 'G#5', frequency: 830.609 },\n    { pitch: 81, name: 'A', octave: 5, label: 'A5', frequency: 880 },\n    { pitch: 82, name: 'A#', octave: 5, label: 'A#5', frequency: 932.328 },\n    { pitch: 83, name: 'B', octave: 5, label: 'B5', frequency: 987.767 },\n    { pitch: 84, name: 'C', octave: 6, label: 'C6', frequency: 1046.502 },\n    { pitch: 85, name: 'C#', octave: 6, label: 'C#6', frequency: 1108.731 },\n    { pitch: 86, name: 'D', octave: 6, label: 'D6', frequency: 1174.659 },\n    { pitch: 87, name: 'D#', octave: 6, label: 'D#6', frequency: 1244.508 },\n    { pitch: 88, name: 'E', octave: 6, label: 'E6', frequency: 1318.51 },\n    { pitch: 89, name: 'F', octave: 6, label: 'F6', frequency: 1396.913 },\n    { pitch: 90, name: 'F#', octave: 6, label: 'F#6', frequency: 1479.978 },\n    { pitch: 91, name: 'G', octave: 6, label: 'G6', frequency: 1567.982 },\n    { pitch: 92, name: 'G#', octave: 6, label: 'G#6', frequency: 1661.219 },\n    { pitch: 93, name: 'A', octave: 6, label: 'A6', frequency: 1760 },\n    { pitch: 94, name: 'A#', octave: 6, label: 'A#6', frequency: 1864.655 },\n    { pitch: 95, name: 'B', octave: 6, label: 'B6', frequency: 1975.533 },\n    { pitch: 96, name: 'C', octave: 7, label: 'C7', frequency: 2093.005 },\n    { pitch: 97, name: 'C#', octave: 7, label: 'C#7', frequency: 2217.461 },\n    { pitch: 98, name: 'D', octave: 7, label: 'D7', frequency: 2349.318 },\n    { pitch: 99, name: 'D#', octave: 7, label: 'D#7', frequency: 2489.016 },\n    { pitch: 100, name: 'E', octave: 7, label: 'E7', frequency: 2637.02 },\n    { pitch: 101, name: 'F', octave: 7, label: 'F7', frequency: 2793.826 },\n    { pitch: 102, name: 'F#', octave: 7, label: 'F#7', frequency: 2959.955 },\n    { pitch: 103, name: 'G', octave: 7, label: 'G7', frequency: 3135.963 },\n    { pitch: 104, name: 'G#', octave: 7, label: 'G#7', frequency: 3322.438 },\n    { pitch: 105, name: 'A', octave: 7, label: 'A7', frequency: 3520 },\n    { pitch: 106, name: 'A#', octave: 7, label: 'A#7', frequency: 3729.31 },\n    { pitch: 107, name: 'B', octave: 7, label: 'B7', frequency: 3951.066 },\n    { pitch: 108, name: 'C', octave: 8, label: 'C8', frequency: 4186.009 },\n    { pitch: 109, name: 'C#', octave: 8, label: 'C#8', frequency: 4434.922 },\n    { pitch: 110, name: 'D', octave: 8, label: 'D8', frequency: 4698.636 },\n    { pitch: 111, name: 'D#', octave: 8, label: 'D#8', frequency: 4978.032 },\n    { pitch: 112, name: 'E', octave: 8, label: 'E8', frequency: 5274.041 },\n    { pitch: 113, name: 'F', octave: 8, label: 'F8', frequency: 5587.652 },\n    { pitch: 114, name: 'F#', octave: 8, label: 'F#8', frequency: 5919.911 },\n    { pitch: 115, name: 'G', octave: 8, label: 'G8', frequency: 6271.927 },\n    { pitch: 116, name: 'G#', octave: 8, label: 'G#8', frequency: 6644.875 },\n    { pitch: 117, name: 'A', octave: 8, label: 'A8', frequency: 7040 },\n    { pitch: 118, name: 'A#', octave: 8, label: 'A#8', frequency: 7458.62 },\n    { pitch: 119, name: 'B', octave: 8, label: 'B8', frequency: 7902.133 },\n    { pitch: 120, name: 'C', octave: 9, label: 'C9', frequency: 8372.018 },\n    { pitch: 121, name: 'C#', octave: 9, label: 'C#9', frequency: 8869.844 },\n    { pitch: 122, name: 'D', octave: 9, label: 'D9', frequency: 9397.273 },\n    { pitch: 123, name: 'D#', octave: 9, label: 'D#9', frequency: 9956.063 },\n    { pitch: 124, name: 'E', octave: 9, label: 'E9', frequency: 10548.08 },\n    { pitch: 125, name: 'F', octave: 9, label: 'F9', frequency: 11175.3 },\n    { pitch: 126, name: 'F#', octave: 9, label: 'F#9', frequency: 11839.82 },\n    { pitch: 127, name: 'G', octave: 9, label: 'G9', frequency: 12543.85 },\n];\n\nexport const SHARPS = new Map([\n    [1, null],\n    [3, null],\n    [6, null],\n    [8, null],\n    [10, null],\n    [13, null],\n    [15, null],\n    [18, null],\n    [20, null],\n    [22, null],\n    [25, null],\n    [27, null],\n    [30, null],\n    [32, null],\n    [34, null],\n    [37, null],\n    [39, null],\n    [42, null],\n    [44, null],\n    [46, null],\n    [49, null],\n    [51, null],\n    [54, null],\n    [56, null],\n    [58, null],\n    [61, null],\n    [63, null],\n    [66, null],\n    [68, null],\n    [70, null],\n    [73, null],\n    [75, null],\n    [78, null],\n    [80, null],\n    [82, null],\n    [85, null],\n    [87, null],\n    [90, null],\n    [92, null],\n    [94, null],\n    [97, null],\n    [99, null],\n    [102, null],\n    [104, null],\n    [106, null],\n    [109, null],\n    [111, null],\n    [114, null],\n    [116, null],\n    [118, null],\n    [121, null],\n    [123, null],\n    [126, null],\n]);\n\n/**\n * MIDI commands with code, name, and parameters\n * From: https://ccrma.stanford.edu/~craig/articles/linuxmidi/misc/essenmidi.html\n * https://www.midi.org/specifications/item/table-1-summary-of-midi-message\n */\nexport const MIDI_COMMANDS = new Map([\n    [0x80, { name: 'noteOff', description: 'Note-off', params: ['key', 'velocity'] }],\n    [0x90, { name: 'noteOn', description: 'Note-on', params: ['key', 'velocity'] }],\n    [0xA0, { name: 'aftertouch', description: 'Aftertouch', params: ['key', 'touch'] }],\n    [0xB0, { name: 'continuousController', description: 'Continuous controller', params: ['controller #', 'controller value'] }],\n    [0xC0, { name: 'patchChange', description: 'Patch change', params: ['instrument number', 'instrument number'] }],\n    [0xD0, { name: 'channelPressure', description: 'Channel Pressure', params: ['pressure'] }],\n    [0xE0, { name: 'pitchBend', description: 'Pitch bend', params: ['lsb (7 bits)', 'msb (7 bits)'] }],\n    [0xF0, { name: 'sysExStart', description: 'start of system exclusive message' }],\n    [0xF1, { name: 'timeCodeQuarter', description: 'MIDI Time Code Quarter Frame (Sys Common)' }],\n    [0xF2, { name: 'posPointer', description: 'Song Position Pointer (Sys Common)' }],\n    [0xF3, { name: 'songSelect', description: 'Song Select (Sys Common)' }],\n    [0xF4, { name: 'unknown1', description: '???' }],\n    [0xF5, { name: 'unknown2', description: '???' }],\n    [0xF6, { name: 'tuneRequest', description: 'Tune Request (Sys Common)' }],\n    [0xF7, { name: 'syExEnd', description: 'end of system exclusive message 0' }],\n    [0xF8, { name: 'timingClock', description: 'Timing Clock (Sys Realtime)' }],\n    [0xFA, { name: 'start', description: 'Start (Sys Realtime)' }],\n    [0xFB, { name: 'continue', description: 'Continue (Sys Realtime)' }],\n    [0xFC, { name: 'stop', description: 'Stop (Sys Realtime)' }],\n    [0xFD, { name: 'unknwon3', description: '???' }],\n    [0xFE, { name: 'activeSensing', description: 'Active Sensing (Sys Realtime)' }],\n    [0xFF, { name: 'systemReset', description: 'System Reset (Sys Realtime)' }],\n]);\n\n/**\n * MIDI instruments with number, group, and label\n */\nconst MIDI_INSTRUMENTS = [\n    { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\n    { number: 1, group: 'Piano', label: 'Bright Acoustic Piano' },\n    { number: 2, group: 'Piano', label: 'Electric Grand Piano' },\n    { number: 3, group: 'Piano', label: 'Honky-tonk Piano' },\n    { number: 4, group: 'Piano', label: 'Electric Piano 1' },\n    { number: 5, group: 'Piano', label: 'Electric Piano 2' },\n    { number: 6, group: 'Piano', label: 'Harpsichord' },\n    { number: 7, group: 'Piano', label: 'Clavinet' },\n    { number: 8, group: 'Chromatic Percussion', label: 'Celesta' },\n    { number: 9, group: 'Chromatic Percussion', label: 'Glockenspiel' },\n    { number: 10, group: 'Chromatic Percussion', label: 'Music Box' },\n    { number: 11, group: 'Chromatic Percussion', label: 'Vibraphone' },\n    { number: 12, group: 'Chromatic Percussion', label: 'Marimba' },\n    { number: 13, group: 'Chromatic Percussion', label: 'Xylophone' },\n    { number: 14, group: 'Chromatic Percussion', label: 'Tubular Bells' },\n    { number: 15, group: 'Chromatic Percussion', label: 'Dulcimer' },\n    { number: 16, group: 'Organ', label: 'Drawbar Organ' },\n    { number: 17, group: 'Organ', label: 'Percussive Organ' },\n    { number: 18, group: 'Organ', label: 'Rock Organ' },\n    { number: 19, group: 'Organ', label: 'Church Organ' },\n    { number: 20, group: 'Organ', label: 'Reed Organ' },\n    { number: 21, group: 'Organ', label: 'Accordion' },\n    { number: 22, group: 'Organ', label: 'Harmonica' },\n    { number: 23, group: 'Organ', label: 'Tango Accordion' },\n    { number: 24, group: 'Guitar', label: 'Acoustic Guitar(nylon)' },\n    { number: 25, group: 'Guitar', label: 'Acoustic Guitar(steel)' },\n    { number: 26, group: 'Guitar', label: 'Electric Guitar(jazz)' },\n    { number: 27, group: 'Guitar', label: 'Electric Guitar(clean)' },\n    { number: 28, group: 'Guitar', label: 'Electric Guitar(muted)' },\n    { number: 29, group: 'Guitar', label: 'Overdriven Guitar' },\n    { number: 30, group: 'Guitar', label: 'Distortion Guitar' },\n    { number: 31, group: 'Guitar', label: 'Guitar harmonics' },\n    { number: 32, group: 'Bass', label: 'Acoustic Bass' },\n    { number: 33, group: 'Bass', label: 'Electric Bass(finger)' },\n    { number: 34, group: 'Bass', label: 'Electric Bass(pick)' },\n    { number: 35, group: 'Bass', label: 'Fretless Bass' },\n    { number: 36, group: 'Bass', label: 'Slap Bass 1' },\n    { number: 37, group: 'Bass', label: 'Slap Bass 2' },\n    { number: 38, group: 'Bass', label: 'Synth Bass 1' },\n    { number: 39, group: 'Bass', label: 'Synth Bass 2' },\n    { number: 40, group: 'Strings', label: 'Violin' },\n    { number: 41, group: 'Strings', label: 'Viola' },\n    { number: 42, group: 'Strings', label: 'Cello' },\n    { number: 43, group: 'Strings', label: 'Contrabass' },\n    { number: 44, group: 'Strings', label: 'Tremolo Strings' },\n    { number: 45, group: 'Strings', label: 'Pizzicato Strings' },\n    { number: 46, group: 'Strings', label: 'Orchestral Harp' },\n    { number: 47, group: 'Strings', label: 'Timpani' },\n    { number: 48, group: 'Strings (continued)', label: 'String Ensemble 1' },\n    { number: 49, group: 'Strings (continued)', label: 'String Ensemble 2' },\n    { number: 50, group: 'Strings (continued)', label: 'Synth Strings 1' },\n    { number: 51, group: 'Strings (continued)', label: 'Synth Strings 2' },\n    { number: 52, group: 'Strings (continued)', label: 'Choir Aahs' },\n    { number: 53, group: 'Strings (continued)', label: 'Voice Oohs' },\n    { number: 54, group: 'Strings (continued)', label: 'Synth Voice' },\n    { number: 55, group: 'Strings (continued)', label: 'Orchestra Hit' },\n    { number: 56, group: 'Brass', label: 'Trumpet' },\n    { number: 57, group: 'Brass', label: 'Trombone' },\n    { number: 58, group: 'Brass', label: 'Tuba' },\n    { number: 59, group: 'Brass', label: 'Muted Trumpet' },\n    { number: 60, group: 'Brass', label: 'French Horn' },\n    { number: 61, group: 'Brass', label: 'Brass Section' },\n    { number: 62, group: 'Brass', label: 'Synth Brass 1' },\n    { number: 63, group: 'Brass', label: 'Synth Brass 2' },\n    { number: 64, group: 'Reed', label: 'Soprano Sax' },\n    { number: 65, group: 'Reed', label: 'Alto Sax' },\n    { number: 66, group: 'Reed', label: 'Tenor Sax' },\n    { number: 67, group: 'Reed', label: 'Baritone Sax' },\n    { number: 68, group: 'Reed', label: 'Oboe' },\n    { number: 69, group: 'Reed', label: 'English Horn' },\n    { number: 70, group: 'Reed', label: 'Bassoon' },\n    { number: 71, group: 'Reed', label: 'Clarinet' },\n    { number: 72, group: 'Pipe', label: 'Piccolo' },\n    { number: 73, group: 'Pipe', label: 'Flute' },\n    { number: 74, group: 'Pipe', label: 'Recorder' },\n    { number: 75, group: 'Pipe', label: 'Pan Flute' },\n    { number: 76, group: 'Pipe', label: 'Blown Bottle' },\n    { number: 77, group: 'Pipe', label: 'Shakuhachi' },\n    { number: 78, group: 'Pipe', label: 'Whistle' },\n    { number: 79, group: 'Pipe', label: 'Ocarina' },\n    { number: 80, group: 'Synth Lead', label: 'Lead 1(square)' },\n    { number: 81, group: 'Synth Lead', label: 'Lead 2(sawtooth)' },\n    { number: 82, group: 'Synth Lead', label: 'Lead 3(calliope)' },\n    { number: 83, group: 'Synth Lead', label: 'Lead 4(chiff)' },\n    { number: 84, group: 'Synth Lead', label: 'Lead 5(charang)' },\n    { number: 85, group: 'Synth Lead', label: 'Lead 6(voice)' },\n    { number: 86, group: 'Synth Lead', label: 'Lead 7(fifths)' },\n    { number: 87, group: 'Synth Lead', label: 'Lead 8(bass + lead)' },\n    { number: 88, group: 'Synth Pad', label: 'Pad 1(new age)' },\n    { number: 89, group: 'Synth Pad', label: 'Pad 2(warm)' },\n    { number: 90, group: 'Synth Pad', label: 'Pad 3(polysynth)' },\n    { number: 91, group: 'Synth Pad', label: 'Pad 4(choir)' },\n    { number: 92, group: 'Synth Pad', label: 'Pad 5(bowed)' },\n    { number: 93, group: 'Synth Pad', label: 'Pad 6(metallic)' },\n    { number: 94, group: 'Synth Pad', label: 'Pad 7(halo)' },\n    { number: 95, group: 'Synth Pad', label: 'Pad 8(sweep)' },\n    { number: 96, group: 'Synth Effects', label: 'FX 1(rain)' },\n    { number: 97, group: 'Synth Effects', label: 'FX 2(soundtrack)' },\n    { number: 98, group: 'Synth Effects', label: 'FX 3(crystal)' },\n    { number: 99, group: 'Synth Effects', label: 'FX 4(atmosphere)' },\n    { number: 100, group: 'Synth Effects', label: 'FX 5(brightness)' },\n    { number: 101, group: 'Synth Effects', label: 'FX 6(goblins)' },\n    { number: 102, group: 'Synth Effects', label: 'FX 7(echoes)' },\n    { number: 103, group: 'Synth Effects', label: 'FX 8(sci-fi)' },\n    { number: 104, group: 'Ethnic', label: 'Sitar' },\n    { number: 105, group: 'Ethnic', label: 'Banjo' },\n    { number: 106, group: 'Ethnic', label: 'Shamisen' },\n    { number: 107, group: 'Ethnic', label: 'Koto' },\n    { number: 108, group: 'Ethnic', label: 'Kalimba' },\n    { number: 109, group: 'Ethnic', label: 'Bag pipe' },\n    { number: 110, group: 'Ethnic', label: 'Fiddle' },\n    { number: 111, group: 'Ethnic', label: 'Shanai' },\n    { number: 112, group: 'Percussive', label: 'Tinkle Bell' },\n    { number: 113, group: 'Percussive', label: 'Agogo' },\n    { number: 114, group: 'Percussive', label: 'Steel Drums' },\n    { number: 115, group: 'Percussive', label: 'Woodblock' },\n    { number: 116, group: 'Percussive', label: 'Taiko Drum' },\n    { number: 117, group: 'Percussive', label: 'Melodic Tom' },\n    { number: 118, group: 'Percussive', label: 'Synth Drum' },\n    { number: 119, group: 'Sound Effects', label: 'Reverse Cymbal' },\n    { number: 120, group: 'Sound Effects', label: 'Guitar Fret Noise' },\n    { number: 121, group: 'Sound Effects', label: 'Breath Noise' },\n    { number: 122, group: 'Sound Effects', label: 'Seashore' },\n    { number: 123, group: 'Sound Effects', label: 'Bird Tweet' },\n    { number: 124, group: 'Sound Effects', label: 'Telephone Ring' },\n    { number: 125, group: 'Sound Effects', label: 'Helicopter' },\n    { number: 126, group: 'Sound Effects', label: 'Applause' },\n    { number: 127, group: 'Sound Effects', label: 'Gunshot' },\n];\n\nconst MIDI_INSTRUMENTS_Lev2 = [\n    { number: 1, subnumber: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\n    { number: 1, subnumber: 1, group: 'Piano', label: 'Wide Acoustic Grand' },\n    { number: 1, subnumber: 2, group: 'Piano', label: 'Dark Acoustic Grand' },\n    { number: 2, subnumber: 0, group: 'Piano', label: 'Bright Acoustic Piano' },\n    { number: 2, subnumber: 1, group: 'Piano', label: 'Wide Bright Acoustic' },\n    { number: 3, subnumber: 0, group: 'Piano', label: 'Electric Grand Piano' },\n    { number: 3, subnumber: 1, group: 'Piano', label: 'Wide Electric Grand' },\n    { number: 4, subnumber: 0, group: 'Piano', label: 'Honky-tonk Piano' },\n    { number: 4, subnumber: 1, group: 'Piano', label: 'Wide Honky-tonk' },\n    { number: 5, subnumber: 0, group: 'Piano', label: 'Rhodes Piano' },\n    { number: 5, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 1' },\n    { number: 5, subnumber: 2, group: 'Piano', label: 'Electric Piano 1 Variation' },\n    { number: 5, subnumber: 3, group: 'Piano', label: '60\\'s Electric Piano' },\n    { number: 6, subnumber: 0, group: 'Piano', label: 'Chorused Electric Piano' },\n    { number: 6, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 2' },\n    { number: 6, subnumber: 2, group: 'Piano', label: 'Electric Piano 2 Variation' },\n    { number: 6, subnumber: 3, group: 'Piano', label: 'Electric Piano Legend' },\n    { number: 6, subnumber: 4, group: 'Piano', label: 'Electric Piano Phase' },\n    { number: 7, subnumber: 0, group: 'Piano', label: 'Harpsichord' },\n    { number: 7, subnumber: 1, group: 'Piano', label: 'Coupled Harpsichord' },\n    { number: 7, subnumber: 2, group: 'Piano', label: 'Wide Harpsichord' },\n    { number: 7, subnumber: 3, group: 'Piano', label: 'Open Harpsichord' },\n    { number: 8, subnumber: 0, group: 'Piano', label: 'Clavinet' },\n    { number: 8, subnumber: 1, group: 'Piano', label: 'Pulse Clavinet' },\n    { number: 9, subnumber: 0, group: 'Chromatic Percussion', label: 'Celesta' },\n    { number: 10, subnumber: 0, group: 'Chromatic Percussion', label: 'Glockenspiel' },\n    { number: 11, subnumber: 0, group: 'Chromatic Percussion', label: 'Music Box' },\n    { number: 12, subnumber: 0, group: 'Chromatic Percussion', label: 'Vibraphone' },\n    { number: 12, subnumber: 1, group: 'Chromatic Percussion', label: 'Wet Vibraphone' },\n    { number: 13, subnumber: 0, group: 'Chromatic Percussion', label: 'Marimba' },\n    { number: 13, subnumber: 1, group: 'Chromatic Percussion', label: 'Wide Marimba' },\n    { number: 14, subnumber: 0, group: 'Chromatic Percussion', label: 'Xylophone' },\n    { number: 15, subnumber: 0, group: 'Chromatic Percussion', label: 'Tubular Bells' },\n    { number: 15, subnumber: 1, group: 'Chromatic Percussion', label: 'Church Bells' },\n    { number: 15, subnumber: 2, group: 'Chromatic Percussion', label: 'Carillon' },\n    { number: 16, subnumber: 0, group: 'Chromatic Percussion', label: 'Dulcimer / Santur' },\n    { number: 17, subnumber: 0, group: 'Organ', label: 'Hammond Organ' },\n    { number: 17, subnumber: 1, group: 'Organ', label: 'Detuned Organ 1' },\n    { number: 17, subnumber: 2, group: 'Organ', label: '60\\'s Organ 1' },\n    { number: 17, subnumber: 3, group: 'Organ', label: 'Organ 4' },\n    { number: 18, subnumber: 0, group: 'Organ', label: 'Percussive Organ' },\n    { number: 18, subnumber: 1, group: 'Organ', label: 'Detuned Organ 2' },\n    { number: 18, subnumber: 2, group: 'Organ', label: 'Organ 5' },\n    { number: 19, subnumber: 0, group: 'Organ', label: 'Rock Organ' },\n    { number: 20, subnumber: 0, group: 'Organ', label: 'Church Organ 1' },\n    { number: 20, subnumber: 1, group: 'Organ', label: 'Church Organ 2' },\n    { number: 20, subnumber: 2, group: 'Organ', label: 'Church Organ 3' },\n    { number: 21, subnumber: 0, group: 'Organ', label: 'Reed Organ' },\n    { number: 21, subnumber: 1, group: 'Organ', label: 'Puff Organ' },\n    { number: 22, subnumber: 0, group: 'Organ', label: 'French Accordion' },\n    { number: 22, subnumber: 1, group: 'Organ', label: 'Italian Accordion' },\n    { number: 23, subnumber: 0, group: 'Organ', label: 'Harmonica' },\n    { number: 24, subnumber: 0, group: 'Organ', label: 'Bandoneon' },\n    { number: 25, subnumber: 0, group: 'Guitar', label: 'Nylon-String Guitar' },\n    { number: 25, subnumber: 1, group: 'Guitar', label: 'Ukelele' },\n    { number: 25, subnumber: 2, group: 'Guitar', label: 'Open Nylon Guitar' },\n    { number: 25, subnumber: 3, group: 'Guitar', label: 'Nylon Guitar 2' },\n    { number: 26, subnumber: 0, group: 'Guitar', label: 'Steel-String Guitar' },\n    { number: 26, subnumber: 1, group: 'Guitar', label: '12-String Guitar' },\n    { number: 26, subnumber: 2, group: 'Guitar', label: 'Mandolin' },\n    { number: 26, subnumber: 3, group: 'Guitar', label: 'Steel + Body' },\n    { number: 27, subnumber: 0, group: 'Guitar', label: 'Jazz Guitar' },\n    { number: 27, subnumber: 1, group: 'Guitar', label: 'Hawaiian Guitar' },\n    { number: 28, subnumber: 0, group: 'Guitar', label: 'Clean Electric Guitar' },\n    { number: 28, subnumber: 1, group: 'Guitar', label: 'Chorus Guitar' },\n    { number: 28, subnumber: 2, group: 'Guitar', label: 'Mid Tone Guitar' },\n    { number: 29, subnumber: 0, group: 'Guitar', label: 'Muted Electric Guitar' },\n    { number: 29, subnumber: 1, group: 'Guitar', label: 'Funk Guitar' },\n    { number: 29, subnumber: 2, group: 'Guitar', label: 'Funk Guitar 2' },\n    { number: 29, subnumber: 3, group: 'Guitar', label: 'Jazz Man' },\n    { number: 30, subnumber: 0, group: 'Guitar', label: 'Overdriven Guitar' },\n    { number: 30, subnumber: 1, group: 'Guitar', label: 'Guitar Pinch' },\n    { number: 31, subnumber: 0, group: 'Guitar', label: 'Distortion Guitar' },\n    { number: 31, subnumber: 1, group: 'Guitar', label: 'Feedback Guitar' },\n    { number: 31, subnumber: 2, group: 'Guitar', label: 'Distortion Rtm Guitar' },\n    { number: 32, subnumber: 0, group: 'Guitar', label: 'Guitar Harmonics' },\n    { number: 32, subnumber: 1, group: 'Guitar', label: 'Guitar Feedback' },\n    { number: 33, subnumber: 0, group: 'Bass', label: 'Acoustic Bass' },\n    { number: 34, subnumber: 0, group: 'Bass', label: 'Fingered Bass' },\n    { number: 34, subnumber: 1, group: 'Bass', label: 'Finger Slap' },\n    { number: 35, subnumber: 0, group: 'Bass', label: 'Picked Bass' },\n    { number: 36, subnumber: 0, group: 'Bass', label: 'Fretless Bass' },\n    { number: 37, subnumber: 0, group: 'Bass', label: 'Slap Bass 1' },\n    { number: 38, subnumber: 0, group: 'Bass', label: 'Slap Bass 2' },\n    { number: 39, subnumber: 0, group: 'Bass', label: 'Synth Bass 1' },\n    { number: 39, subnumber: 1, group: 'Bass', label: 'Synth Bass 101' },\n    { number: 39, subnumber: 2, group: 'Bass', label: 'Synth Bass 3' },\n    { number: 39, subnumber: 3, group: 'Bass', label: 'Clavi Bass' },\n    { number: 39, subnumber: 4, group: 'Bass', label: 'Hammer' },\n    { number: 40, subnumber: 0, group: 'Bass', label: 'Synth Bass 2' },\n    { number: 40, subnumber: 1, group: 'Bass', label: 'Synth Bass 4' },\n    { number: 40, subnumber: 2, group: 'Bass', label: 'Rubber Bass' },\n    { number: 40, subnumber: 3, group: 'Bass', label: 'Attack Pulse' },\n    { number: 41, subnumber: 0, group: 'Strings', label: 'Violin' },\n    { number: 41, subnumber: 1, group: 'Strings', label: 'Slow Violin' },\n    { number: 42, subnumber: 0, group: 'Strings', label: 'Viola' },\n    { number: 43, subnumber: 0, group: 'Strings', label: 'Cello' },\n    { number: 44, subnumber: 0, group: 'Strings', label: 'Contrabass' },\n    { number: 45, subnumber: 0, group: 'Strings', label: 'Tremolo Strings' },\n    { number: 46, subnumber: 0, group: 'Strings', label: 'Pizzicato Strings' },\n    { number: 47, subnumber: 0, group: 'Strings', label: 'Harp' },\n    { number: 47, subnumber: 1, group: 'Strings', label: 'Yang Qin' },\n    { number: 48, subnumber: 0, group: 'Strings', label: 'Timpani' },\n    { number: 49, subnumber: 0, group: 'Orchestral Ensemble', label: 'String Ensemble' },\n    { number: 49, subnumber: 1, group: 'Orchestral Ensemble', label: 'Orchestra Strings' },\n    { number: 49, subnumber: 2, group: 'Orchestral Ensemble', label: '60\\'s Strings' },\n    { number: 50, subnumber: 0, group: 'Orchestral Ensemble', label: 'Slow String Ensemble' },\n    { number: 51, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 1' },\n    { number: 51, subnumber: 1, group: 'Orchestral Ensemble', label: 'Synth Strings 3' },\n    { number: 52, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 2' },\n    { number: 53, subnumber: 0, group: 'Orchestral Ensemble', label: 'Choir Aahs' },\n    { number: 53, subnumber: 1, group: 'Orchestral Ensemble', label: 'Choir Aahs 2' },\n    { number: 54, subnumber: 0, group: 'Orchestral Ensemble', label: 'Voice Oohs' },\n    { number: 54, subnumber: 1, group: 'Orchestral Ensemble', label: 'Humming' },\n    { number: 55, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Voice' },\n    { number: 55, subnumber: 1, group: 'Orchestral Ensemble', label: 'Analog Voice' },\n    { number: 56, subnumber: 0, group: 'Orchestral Ensemble', label: 'Orchestra Hit' },\n    { number: 56, subnumber: 1, group: 'Orchestral Ensemble', label: 'Bass Hit' },\n    { number: 56, subnumber: 2, group: 'Orchestral Ensemble', label: '6th Hit' },\n    { number: 56, subnumber: 3, group: 'Orchestral Ensemble', label: 'Euro Hit' },\n    { number: 57, subnumber: 0, group: 'Brass', label: 'Trumpet' },\n    { number: 57, subnumber: 1, group: 'Brass', label: 'Dark Trumpet' },\n    { number: 58, subnumber: 0, group: 'Brass', label: 'Trombone' },\n    { number: 58, subnumber: 1, group: 'Brass', label: 'Trombone 2' },\n    { number: 58, subnumber: 2, group: 'Brass', label: 'Bright Trombone' },\n    { number: 59, subnumber: 0, group: 'Brass', label: 'Tuba' },\n    { number: 60, subnumber: 0, group: 'Brass', label: 'Muted Trumpet' },\n    { number: 60, subnumber: 1, group: 'Brass', label: 'Muted Trumpet 2' },\n    { number: 61, subnumber: 0, group: 'Brass', label: 'French Horn' },\n    { number: 61, subnumber: 1, group: 'Brass', label: 'French Horn 2' },\n    { number: 62, subnumber: 0, group: 'Brass', label: 'Brass Section' },\n    { number: 62, subnumber: 1, group: 'Brass', label: 'Brass Section' },\n    { number: 63, subnumber: 0, group: 'Brass', label: 'Synth Brass 1' },\n    { number: 63, subnumber: 1, group: 'Brass', label: 'Synth Brass 3' },\n    { number: 63, subnumber: 2, group: 'Brass', label: 'Analog Brass 1' },\n    { number: 63, subnumber: 3, group: 'Brass', label: 'Jump Brass' },\n    { number: 64, subnumber: 0, group: 'Brass', label: 'Synth Brass 2' },\n    { number: 64, subnumber: 1, group: 'Brass', label: 'Synth Brass 4' },\n    { number: 64, subnumber: 2, group: 'Brass', label: 'Analog Brass 2' },\n    { number: 65, subnumber: 0, group: 'Reed', label: 'Soprano Sax' },\n    { number: 66, subnumber: 0, group: 'Reed', label: 'Alto Sax' },\n    { number: 67, subnumber: 0, group: 'Reed', label: 'Tenor Sax' },\n    { number: 68, subnumber: 0, group: 'Reed', label: 'Baritone Sax' },\n    { number: 69, subnumber: 0, group: 'Reed', label: 'Oboe' },\n    { number: 70, subnumber: 0, group: 'Reed', label: 'English Horn' },\n    { number: 71, subnumber: 0, group: 'Reed', label: 'Bassoon' },\n    { number: 72, subnumber: 0, group: 'Reed', label: 'Clarinet' },\n    { number: 73, subnumber: 0, group: 'Wind', label: 'Piccolo' },\n    { number: 74, subnumber: 0, group: 'Wind', label: 'Flute' },\n    { number: 75, subnumber: 0, group: 'Wind', label: 'Recorder' },\n    { number: 76, subnumber: 0, group: 'Wind', label: 'Pan Flute' },\n    { number: 77, subnumber: 0, group: 'Wind', label: 'Blown Bottle' },\n    { number: 78, subnumber: 0, group: 'Wind', label: 'Shakuhachi' },\n    { number: 79, subnumber: 0, group: 'Wind', label: 'Whistle' },\n    { number: 80, subnumber: 0, group: 'Wind', label: 'Ocarina' },\n    { number: 81, subnumber: 0, group: 'Lead', label: 'Square Lead' },\n    { number: 81, subnumber: 1, group: 'Lead', label: 'Square Wave' },\n    { number: 81, subnumber: 2, group: 'Lead', label: 'Sine Wave' },\n    { number: 82, subnumber: 0, group: 'Lead', label: 'Saw Lead' },\n    { number: 82, subnumber: 1, group: 'Lead', label: 'Saw Wave' },\n    { number: 82, subnumber: 2, group: 'Lead', label: 'Doctor Solo' },\n    { number: 82, subnumber: 3, group: 'Lead', label: 'Natural Lead' },\n    { number: 82, subnumber: 4, group: 'Lead', label: 'Sequenced Saw' },\n    { number: 83, subnumber: 0, group: 'Lead', label: 'Synth Calliope' },\n    { number: 84, subnumber: 0, group: 'Lead', label: 'Chiffer Lead' },\n    { number: 85, subnumber: 0, group: 'Lead', label: 'Charang' },\n    { number: 85, subnumber: 1, group: 'Lead', label: 'Wire Lead' },\n    { number: 86, subnumber: 0, group: 'Lead', label: 'Solo Synth Vox' },\n    { number: 87, subnumber: 0, group: 'Lead', label: '5th Saw Wave' },\n    { number: 88, subnumber: 0, group: 'Lead', label: 'Bass & Lead' },\n    { number: 88, subnumber: 1, group: 'Lead', label: 'Delayed Lead' },\n    { number: 89, subnumber: 0, group: 'Synth Pad', label: 'Fantasia Pad' },\n    { number: 90, subnumber: 0, group: 'Synth Pad', label: 'Warm Pad' },\n    { number: 90, subnumber: 1, group: 'Synth Pad', label: 'Sine Pad' },\n    { number: 91, subnumber: 0, group: 'Synth Pad', label: 'Polysynth Pad' },\n    { number: 92, subnumber: 0, group: 'Synth Pad', label: 'Space Voice Pad' },\n    { number: 92, subnumber: 1, group: 'Synth Pad', label: 'Itopia' },\n    { number: 93, subnumber: 0, group: 'Synth Pad', label: 'Bowed Glass Pad' },\n    { number: 94, subnumber: 0, group: 'Synth Pad', label: 'Metal Pad' },\n    { number: 95, subnumber: 0, group: 'Synth Pad', label: 'Halo Pad' },\n    { number: 96, subnumber: 0, group: 'Synth Pad', label: 'Sweep Pad' },\n    { number: 97, subnumber: 0, group: 'Synth Effects', label: 'Ice Rain' },\n    { number: 98, subnumber: 0, group: 'Synth Effects', label: 'Soundtrack' },\n    { number: 99, subnumber: 0, group: 'Synth Effects', label: 'Crystal' },\n    { number: 99, subnumber: 1, group: 'Synth Effects', label: 'Synth Mallet' },\n    { number: 100, subnumber: 0, group: 'Synth Effects', label: 'Atmosphere' },\n    { number: 101, subnumber: 0, group: 'Synth Effects', label: 'Brightness' },\n    { number: 102, subnumber: 0, group: 'Synth Effects', label: 'Goblin' },\n    { number: 103, subnumber: 0, group: 'Synth Effects', label: 'Echo Drops' },\n    { number: 103, subnumber: 1, group: 'Synth Effects', label: 'Echo Bell' },\n    { number: 103, subnumber: 2, group: 'Synth Effects', label: 'Echo Pan' },\n    { number: 104, subnumber: 0, group: 'Synth Effects', label: 'Star Theme' },\n    { number: 105, subnumber: 0, group: 'Ethnic', label: 'Sitar' },\n    { number: 105, subnumber: 1, group: 'Ethnic', label: 'Sitar 2' },\n    { number: 106, subnumber: 0, group: 'Ethnic', label: 'Banjo' },\n    { number: 107, subnumber: 0, group: 'Ethnic', label: 'Shamisen' },\n    { number: 108, subnumber: 0, group: 'Ethnic', label: 'Koto' },\n    { number: 108, subnumber: 1, group: 'Ethnic', label: 'Taisho Koto' },\n    { number: 109, subnumber: 0, group: 'Ethnic', label: 'Kalimba' },\n    { number: 110, subnumber: 0, group: 'Ethnic', label: 'Bagpipe' },\n    { number: 111, subnumber: 0, group: 'Ethnic', label: 'Fiddle' },\n    { number: 112, subnumber: 0, group: 'Ethnic', label: 'Shanai' },\n    { number: 113, subnumber: 0, group: 'Percussive', label: 'Tinkle Bell' },\n    { number: 114, subnumber: 0, group: 'Percussive', label: 'Agogo' },\n    { number: 115, subnumber: 0, group: 'Percussive', label: 'Steel Drums' },\n    { number: 116, subnumber: 0, group: 'Percussive', label: 'Woodblock' },\n    { number: 116, subnumber: 1, group: 'Percussive', label: 'Castanets' },\n    { number: 117, subnumber: 0, group: 'Percussive', label: 'Taiko Drum' },\n    { number: 117, subnumber: 1, group: 'Percussive', label: 'Concert Bass Drum' },\n    { number: 118, subnumber: 0, group: 'Percussive', label: 'Melodic Tom 1' },\n    { number: 118, subnumber: 1, group: 'Percussive', label: 'Melodic Tom 2' },\n    { number: 119, subnumber: 0, group: 'Percussive', label: 'Synth Drum' },\n    { number: 119, subnumber: 1, group: 'Percussive', label: '808 Tom' },\n    { number: 119, subnumber: 2, group: 'Percussive', label: 'Electric Percussion' },\n    { number: 120, subnumber: 0, group: 'Percussive', label: 'Reverse Cymbal' },\n    { number: 121, subnumber: 0, group: 'Sound Effects', label: 'Guitar Fret Noise' },\n    { number: 121, subnumber: 1, group: 'Sound Effects', label: 'Guitar Cut Noise' },\n    { number: 121, subnumber: 2, group: 'Sound Effects', label: 'String Slap' },\n    { number: 122, subnumber: 0, group: 'Sound Effects', label: 'Breath Noise' },\n    { number: 122, subnumber: 1, group: 'Sound Effects', label: 'Flute Key Click' },\n    { number: 123, subnumber: 0, group: 'Sound Effects', label: 'Seashore' },\n    { number: 123, subnumber: 1, group: 'Sound Effects', label: 'Rain' },\n    { number: 123, subnumber: 2, group: 'Sound Effects', label: 'Thunder' },\n    { number: 123, subnumber: 3, group: 'Sound Effects', label: 'Wind' },\n    { number: 123, subnumber: 4, group: 'Sound Effects', label: 'Stream' },\n    { number: 123, subnumber: 5, group: 'Sound Effects', label: 'Bubble' },\n    { number: 124, subnumber: 0, group: 'Sound Effects', label: 'Bird Tweet' },\n    { number: 124, subnumber: 1, group: 'Sound Effects', label: 'Dog' },\n    { number: 124, subnumber: 2, group: 'Sound Effects', label: 'Horse Gallop' },\n    { number: 124, subnumber: 3, group: 'Sound Effects', label: 'Bird 2' },\n    { number: 125, subnumber: 0, group: 'Sound Effects', label: 'Telephone 1' },\n    { number: 125, subnumber: 1, group: 'Sound Effects', label: 'Telephone 2' },\n    { number: 125, subnumber: 2, group: 'Sound Effects', label: 'Door Creaking' },\n    { number: 125, subnumber: 3, group: 'Sound Effects', label: 'Door Closing' },\n    { number: 125, subnumber: 4, group: 'Sound Effects', label: 'Scratch' },\n    { number: 125, subnumber: 5, group: 'Sound Effects', label: 'Wind Chimes' },\n    { number: 126, subnumber: 0, group: 'Sound Effects', label: 'Helicopter' },\n    { number: 126, subnumber: 1, group: 'Sound Effects', label: 'Car Engine' },\n    { number: 126, subnumber: 2, group: 'Sound Effects', label: 'Car Stop' },\n    { number: 126, subnumber: 3, group: 'Sound Effects', label: 'Car Pass' },\n    { number: 126, subnumber: 4, group: 'Sound Effects', label: 'Car Crash' },\n    { number: 126, subnumber: 5, group: 'Sound Effects', label: 'Siren' },\n    { number: 126, subnumber: 6, group: 'Sound Effects', label: 'Train' },\n    { number: 126, subnumber: 7, group: 'Sound Effects', label: 'Jetplane' },\n    { number: 126, subnumber: 8, group: 'Sound Effects', label: 'Starship' },\n    { number: 126, subnumber: 9, group: 'Sound Effects', label: 'Burst Noise' },\n    { number: 127, subnumber: 0, group: 'Sound Effects', label: 'Applause' },\n    { number: 127, subnumber: 1, group: 'Sound Effects', label: 'Laughing' },\n    { number: 127, subnumber: 2, group: 'Sound Effects', label: 'Screaming' },\n    { number: 127, subnumber: 3, group: 'Sound Effects', label: 'Punch' },\n    { number: 127, subnumber: 4, group: 'Sound Effects', label: 'Heart Beat' },\n    { number: 127, subnumber: 5, group: 'Sound Effects', label: 'Footsteps' },\n    { number: 128, subnumber: 0, group: 'Sound Effects', label: 'Gun Shot' },\n    { number: 128, subnumber: 1, group: 'Sound Effects', label: 'Machine Gun' },\n    { number: 128, subnumber: 2, group: 'Sound Effects', label: 'Lasergun' },\n    { number: 128, subnumber: 3, group: 'Sound Effects', label: 'Explosion' },\n];\n\nconst GENERAL_MIDI_DRUM_NOTE_NUMBERS = new Map([\n    [27, 'High Q(GM2)'],\n    [28, 'Slap(GM2)'],\n    [29, 'Scratch Push(GM2)'],\n    [30, 'Scratch Pull(GM2)'],\n    [31, 'Sticks(GM2)'],\n    [32, 'Square Click(GM2)'],\n    [33, 'Metronome Click(GM2)'],\n    [34, 'Metronome Bell(GM2)'],\n    [35, 'Bass Drum 2'],\n    [36, 'Bass Drum 1'],\n    [37, 'Side Stick'],\n    [38, 'Snare Drum 1'],\n    [39, 'Hand Clap'],\n    [40, 'Snare Drum 2'],\n    [41, 'Low Tom 2'],\n    [42, 'Closed Hi-hat'],\n    [43, 'Low Tom 1'],\n    [44, 'Pedal Hi-hat'],\n    [45, 'Mid Tom 2'],\n    [46, 'Open Hi-hat'],\n    [47, 'Mid Tom 1'],\n    [48, 'High Tom 2'],\n    [49, 'Crash Cymbal 1'],\n    [50, 'High Tom 1'],\n    [51, 'Ride Cymbal 1'],\n    [52, 'Chinese Cymbal'],\n    [53, 'Ride Bell'],\n    [54, 'Tambourine'],\n    [55, 'Splash Cymbal'],\n    [56, 'Cowbell'],\n    [57, 'Crash Cymbal 2'],\n    [58, 'Vibra Slap'],\n    [59, 'Ride Cymbal 2'],\n    [60, 'High Bongo'],\n    [61, 'Low Bongo'],\n    [62, 'Mute High Conga'],\n    [63, 'Open High Conga'],\n    [64, 'Low Conga'],\n    [65, 'High Timbale'],\n    [66, 'Low Timbale'],\n    [67, 'High Agogo'],\n    [68, 'Low Agogo'],\n    [69, 'Cabasa'],\n    [70, 'Maracas'],\n    [71, 'Short Whistle'],\n    [72, 'Long Whistle'],\n    [73, 'Short Guiro'],\n    [74, 'Long Guiro'],\n    [75, 'Claves'],\n    [76, 'High Wood Block'],\n    [77, 'Low Wood Block'],\n    [78, 'Mute Cuica'],\n    [79, 'Open Cuica'],\n    [80, 'Mute Triangle'],\n    [81, 'Open Triangle'],\n    [82, 'Shaker(GM2)'],\n    [83, 'Jingle Bell(GM2)'],\n    [84, 'Belltree(GM2)'],\n    [85, 'Castanets(GM2)'],\n    [86, 'Mute Surdo(GM2)'],\n    [87, 'Open Surdo(GM2)'],\n]);\n\n// TODO: This might be useful, e.g. to check which notes Player can play\n// TODO: add instrument numbers\nexport const MIDI_NOTE_RANGES = [\n    // Strings\n    { instrNr: 40, nrL2: -1, subNrL2: -1, label: 'Violin', min: 55, max: 103 },\n    { instrNr: 41, nrL2: -1, subNrL2: -1, label: 'Viola', min: 48, max: 91 },\n    { instrNr: 42, nrL2: -1, subNrL2: -1, label: 'Cello', min: 36, max: 76 },\n    { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Double Bass', min: 28, max: 67 },\n    { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Bass Guitar', min: 28, max: 67 },\n    { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Acoustic Guitar', min: 40, max: 88 },\n    // Brass\n    { instrNr: 58, nrL2: 59, subNrL2: 0, label: 'Tuba', min: 28, max: 58 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Trombone', min: 34, max: 67 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'French Horn', min: 34, max: 77 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trombone', min: 40, max: 72 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trumpet', min: 55, max: 82 },\n    // Woodwinds\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Piccolo', min: 74, max: 102 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Flute', min: 60, max: 96 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Oboe', min: 58, max: 91 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Flute', min: 55, max: 91 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Cor Anglais (English Horn)', min: 52, max: 81 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Clarinet', min: 50, max: 94 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Clarinet', min: 38, max: 77 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bassoon', min: 34, max: 75 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Contrabassoon', min: 22, max: 53 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Recorder', min: 72, max: 98 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Recorder', min: 65, max: 91 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Recorder', min: 60, max: 86 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Recorder', min: 53, max: 79 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Baritone Sax', min: 36, max: 69 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Sax', min: 44, max: 76 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Sax', min: 49, max: 81 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Sax', min: 56, max: 88 },\n    // Tuned Percussion\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Glockenspiel', min: 79, max: 108 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Xylophone', min: 65, max: 108 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Vibraphone', min: 53, max: 89 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Marimba', min: 45, max: 96 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Marimba', min: 33, max: 81 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Celeste', min: 60, max: 108 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tubular Bells', min: 60, max: 77 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Timpani', min: 40, max: 55 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harpsichord', min: 29, max: 89 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Kalimba', min: 60, max: 88 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harp', min: 24, max: 103 },\n];\n\n// Build lookup maps\nfor (const note of MIDI_NOTES) {\n    MidiNoteByPitch.set(note.pitch, note);\n    MidiNoteByLabel.set(note.label, note);\n}\nfor (const instrument of MIDI_INSTRUMENTS) {\n    MidiInstrumentByNumber.set(instrument.number, instrument);\n}\nfor (const instrument of MIDI_INSTRUMENTS_Lev2) {\n    const key = `${instrument.number}-${instrument.subnumber}`;\n    MidiInstrumentByNumberLev2.set(key, instrument);\n}\n","import { getMidiNoteByLabel, getMidiNoteByNr } from '../fileFormats/Midi';\n\n/**\n * Note class that reflects MIDI properties but has\n * absolute start and end times in seconds.\n */\nclass Note {\n    /**\n     * Creates a new Note\n     *\n     * @param {number} pitch pitch\n     * @param {number} start start time in seconds\n     * @param {number} velocity velocity\n     * @param {number} channel MIDI channel\n     * @param {number} end end time in seconds\n     */\n    constructor(\n        pitch = 0,\n        start = 0,\n        velocity = 127,\n        channel = 0,\n        end = null,\n    ) {\n        // Get note name, e.g. C#4\n        if (pitch < 0 || pitch > 127) {\n            throw new Error(`Invalid pitch ${pitch}`);\n        }\n        try {\n            this.name = getMidiNoteByNr(pitch).label;\n        } catch {\n            throw new Error(`Invalid pitch ${pitch}`);\n        }\n        this.pitch = pitch;\n        this.start = start;\n        this.velocity = velocity;\n        this.channel = channel;\n        this.end = end;\n    }\n\n    /**\n     * Creates a Note object from an object via destructuring\n     *\n     * @example\n     *  const n = Note.from({\n     *      pitch: 'C#4'     // e.g. 12 or C#4\n     *      start: 0.5       // start time in seconds\n     *      end: 1.5         // end time in seconds\n     *      velocity: 127    // MIDI velocity\n     *      channel: 0       // MIDI channel\n     *  });\n     * @param {object} object object with at least {pitch}\n     *  {\n     *      pitch: number|string    e.g. 12 or C#4\n     *      start: number           start time in seconds\n     *      end: number             end time in seconds\n     *      velocity: number        MIDI velocity\n     *      channel: number         MIDI channel\n     *  }\n     * @returns {Note} new note\n     * @throws {Error} when pitch is invalid\n     */\n    static from(object) {\n        let {\n            pitch = 0,\n            start = 0,\n            velocity = 127,\n            channel = 0,\n            end = null,\n        } = object;\n        if (typeof pitch === 'string' && Number.isNaN(+pitch)) {\n            const note = getMidiNoteByLabel(pitch);\n            if (note === null || note === undefined) {\n                throw new Error('Invalid pitch for Note.from()');\n            }\n            pitch = note.pitch;\n        }\n        return new Note(pitch, start, velocity, channel, end);\n    }\n\n    /**\n     * Returns a copy of the Note object\n     *\n     * @returns {Note} new note\n     */\n    clone() {\n        return new Note(\n            this.pitch,\n            this.start,\n            this.velocity,\n            this.channel,\n            this.end,\n        );\n    }\n\n    /**\n     * Returns the duration of this note in seconds\n     *\n     * @returns {number} note duration\n     */\n    getDuration() {\n        if (this.end === null) {\n            return 0;\n        }\n        return this.end - this.start;\n    }\n\n    /**\n     * Returns the note's name and octave, e.g. 'C#3'\n     *\n     * @returns {string} note name as string\n     */\n    getName() {\n        return this.name;\n    }\n\n    /**\n     * Returns the note's name WITHOUT the octave, e.g. 'C#'\n     *\n     * @returns {string} note name as string\n     */\n    getLetter() {\n        return getMidiNoteByNr(this.pitch).name;\n    }\n\n    /**\n     * Returns the note's octave\n     *\n     * @returns {number} the note's octave\n     */\n    getOctave() {\n        return getMidiNoteByNr(this.pitch).octave;\n    }\n\n    /**\n     * Returns a new Note where start and end are multiplied by factor\n     *\n     * @param {number} addedSeconds seconds to be added to start and end\n     * @returns {Note} new note\n     */\n    shiftTime(addedSeconds) {\n        const n = this.clone();\n        n.start += addedSeconds;\n        n.end = n.end === null ? null : n.end + addedSeconds;\n        return n;\n    }\n\n    /**\n     * Returns a new Note where start and end are multiplied by factor\n     *\n     * @param {number} factor factor to scale start and end with\n     * @returns {Note} new note\n     */\n    scaleTime(factor) {\n        const n = this.clone();\n        n.start *= factor;\n        n.end = n.end === null ? null : n.end * factor;\n        return n;\n    }\n\n    /**\n     * Returns true, if this Note and otherNote overlap in time.\n     *\n     * @param {Note} otherNote another Note\n     * @returns {boolean} true if they overlap\n     */\n    overlapsInTime(otherNote) {\n        return (this.start >= otherNote.start && this.start <= otherNote.end) ||\n            (this.end >= otherNote.start && this.end <= otherNote.end);\n    }\n\n    /**\n     * Returns the amount of seconds this Note and otherNote overlap in time.\n     *\n     * @param {Note} otherNote another Note\n     * @returns {number} seconds of overlap\n     */\n    overlapInSeconds(otherNote) {\n        if (!this.overlapsInTime(otherNote)) {\n            return 0;\n        }\n        const laterStart = Math.max(this.start, otherNote.start);\n        const earlierEnd = Math.min(this.end, otherNote.end);\n        return earlierEnd - laterStart;\n    }\n\n    /**\n     * Returns true if this note and otherNote have equal attributes.\n     *\n     * @param {Note} otherNote another Note\n     * @returns {boolean} true if equal\n     */\n    equals(otherNote) {\n        if (!(otherNote instanceof Note)) {\n            return false;\n        }\n        return (\n            this.pitch === otherNote.pitch &&\n            this.start === otherNote.start &&\n            this.velocity === otherNote.velocity &&\n            this.channel === otherNote.channel &&\n            this.end === otherNote.end\n        );\n    }\n\n    /**\n     * Human-readable string representation of this Note\n     *\n     * @param {boolean} short if true, attribute names will be shortened\n     * @returns {string} string representation\n     */\n    toString(short = false) {\n        if (short) {\n            return `Note(n: ${this.name}, p: ${this.pitch}, s: ${this.start}, e: ${this.end}, v: ${this.velocity}, c: ${this.channel})`;\n        }\n        return `Note(name: ${this.name}, pitch: ${this.pitch}, start: ${this.start}, end: ${this.end}, velocity: ${this.velocity}, channel: ${this.channel})`;\n    }\n}\n\nexport default Note;\n","import { getMidiNoteByLabel } from '../fileFormats/Midi';\nimport Note from './Note';\n\n\n/**\n * Guitar note class that reflects MIDI properties but has\n * absolute start and end times in seconds and\n * information on how to play it.\n *\n * @augments Note\n */\nclass GuitarNote extends Note {\n    /**\n     * Creates a new Note\n     *\n     * @param {number} pitch pitch\n     * @param {number} start start time in seconds\n     * @param {number} velocity velocity\n     * @param {number} channel MIDI channel\n     * @param {number} end end time in seconds\n     * @param {number} string guitar string\n     * @param {number} fret guitar fret\n     */\n    constructor(\n        pitch = 0,\n        start = 0,\n        velocity = 127,\n        channel = 0,\n        end = null,\n        // This is different to the base Note class\n        string = null,\n        fret = null,\n    ) {\n        super(pitch, start, velocity, channel, end);\n        this.string = string;\n        this.fret = fret;\n    }\n\n    /**\n     * Creates a GuitarNote object from an object via destructuring\n     *\n     * @param {object} object object with at least {pitch}\n     *  {\n     *      pitch: number|string    e.g. 12 or C#4\n     *      start: number           start time in seconds\n     *      end: number             end time in seconds\n     *      velocity: number        MIDI velocity\n     *      channel: number         MIDI channel\n     *      string: number          guitar string\n     *      fret: number            guitar fret\n     *  }\n     * @returns {GuitarNote} new note\n     * @throws {Error} when pitch is invalid\n     */\n    static from(object) {\n        let {\n            pitch = 0,\n            start = 0,\n            velocity = 127,\n            channel = 0,\n            end = null,\n            // This is different to the base Note class\n            string = null,\n            fret = null,\n        } = object;\n        if (typeof pitch === 'string' && Number.isNaN(+pitch)) {\n            const note = getMidiNoteByLabel(pitch);\n            if (note === null || note === undefined) {\n                throw new Error('Invalid pitch for GuitarNote.from()');\n            }\n            pitch = note.pitch;\n        }\n        return new GuitarNote(pitch, start, velocity, channel, end, string, fret);\n    }\n\n    /**\n     * Converts a Note to a GuitarNote\n     *\n     * @param {Note} note note\n     * @param {number} string string\n     * @param {number} fret fret\n     * @returns {GuitarNote} guitar note\n     */\n    static fromNote(note, string, fret) {\n        return new GuitarNote(note.pitch, note.start, note.velocity, note.channel, note.end, string, fret);\n    }\n\n    /**\n     * Simplifies the GuitarNote to a Note\n     *\n     * @returns {Note} note\n     */\n    toNote() {\n        return new Note(this.pitch, this.start, this.velocity, this.channel, this.end);\n    }\n\n    /**\n     * Returns a copy of the Note object\n     *\n     * @returns {GuitarNote} new note\n     */\n    clone() {\n        return new GuitarNote(\n            this.pitch,\n            this.start,\n            this.velocity,\n            this.channel,\n            this.end,\n            // This is different to the base Note class\n            this.string,\n            this.fret,\n        );\n    }\n\n    /**\n     * Returns true if this note and otherNote have equal attributes.\n     *\n     * @param {GuitarNote} otherNote another GuitarNote\n     * @returns {boolean} true if equal\n     */\n    equals(otherNote) {\n        if (!(otherNote instanceof GuitarNote)) {\n            return false;\n        }\n        return (\n            this.pitch === otherNote.pitch &&\n            this.start === otherNote.start &&\n            this.velocity === otherNote.velocity &&\n            this.channel === otherNote.channel &&\n            this.end === otherNote.end &&\n            // This is different to the base Note class\n            this.string === otherNote.string &&\n            this.fret === otherNote.fret\n        );\n    }\n\n    /**\n     * Human-readable string representation of this GuitarNote\n     *\n     * @param {boolean} short if true, attribute names will be shortened\n     * @returns {string} string representation\n     */\n    toString(short = false) {\n        if (short) {\n            return `GuitarNote(n: ${this.name}, p: ${this.pitch}, s: ${this.start}, e: ${this.end}, v: ${this.velocity}, c: ${this.channel}, s: ${this.string}, f: ${this.fret})`;\n        }\n        return `GuitarNote(name: ${this.name}, pitch: ${this.pitch}, start: ${this.start}, end: ${this.end}, velocity: ${this.velocity}, channel: ${this.channel}, string: ${this.string}, fret: ${this.fret})`;\n    }\n}\n\nexport default GuitarNote;\n","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new Map();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export default function difference(values, ...others) {\n  values = new Set(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n","export default function set(values) {\n  return values instanceof Set ? values : new Set(values);\n}\n","import set from \"./set.js\";\n\nexport default function intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return this.children;\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport array from \"../array.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = array(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    var group = select.apply(this, arguments);\n    return group == null ? [] : array(group);\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(selection) {\n  if (!(selection instanceof Selection)) throw new Error(\"invalid merge\");\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move();\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export default Math.random;\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomInt(source) {\n  function randomInt(min, max) {\n    if (arguments.length < 2) max = min, min = 0;\n    min = Math.floor(min);\n    max = Math.floor(max) - min;\n    return function() {\n      return Math.floor(source() * max + min);\n    };\n  }\n\n  randomInt.source = sourceRandomInt;\n\n  return randomInt;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst mul = 0x19660D;\nconst inc = 0x3C6EF35F;\nconst eps = 1 / 0x100000000;\n\nexport default function lcg(seed = Math.random()) {\n  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;\n  return () => (state = mul * state + inc | 0, eps * (state >>> 0));\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    step = -step;\n    start = Math.ceil(start * step);\n    stop = Math.floor(stop * step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import { randomInt } from 'd3';\n\n/**\n * @module utils/MathUtils\n */\n\n/**\n * Generates a random float in [min, max)\n *\n * @param {number} min minimum\n * @param {number} max maximum\n * @returns {number} random float\n */\nexport function randFloat(min = 0, max = 1) {\n    return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random element from the given array.\n *\n * @param {Array} array an array\n * @returns {any} random element from the array\n */\nexport function choose(array) {\n    const index = randomInt(0, array.length)();\n    return array[index];\n}\n\n/**\n * Shortcut for Math.max(minValue, Math.min(maxValue, value))\n *\n * @param {number} value value\n * @param {number} minValue lower limit\n * @param {number} maxValue upper limit\n * @returns {number} clipped number\n */\nexport function clipValue(value, minValue, maxValue) {\n    return Math.max(minValue, Math.min(maxValue, value));\n}\n\n/**\n * Rounds a number to a given number of decimals\n *\n * @param {number} number a number\n * @param {number} n number of digits\n * @returns {number} rounded number\n */\nexport function roundToNDecimals(number, n) {\n    return +number.toFixed(n);\n}\n\n/**\n * Swaps two numbers if the first is larger than the second\n *\n * @param {number} x a number\n * @param {number} y a number\n * @returns {number[]} array with the smaller number first\n */\nexport function swapSoSmallerFirst(x, y) {\n    if (x <= y) {\n        return [x, y];\n    }\n    return [y, x];\n}\n\n/**\n * Local maxima are found by looking at entries that are higher than their left\n * and right neighbor, or higher than their only neighbor if they are at the\n * boundary.\n * IMPORTANT: does not find plateaus\n *\n * @param {number[]} array array\n * @returns {number[]} array with indices of maxima\n */\nexport function findLocalMaxima(array) {\n    if (array.length <= 1) { return []; }\n    if (array.length === 2) {\n        if (array[0] > array[1]) { return [0]; }\n        if (array[1] > array[0]) { return [1]; }\n        return [];\n    }\n    // General case with 3 or more\n    const maximaIndices = [];\n    if (array[0] > array[1]) {\n        maximaIndices.push(0);\n    }\n    let last = array[0];\n    let current = array[1];\n    for (let index = 1; index < array.length - 1; index++) {\n        const next = array[index + 1];\n        if (current > last && current > next) {\n            maximaIndices.push(index);\n        }\n        last = current;\n        current = next;\n    }\n    const lastIndex = array.length - 1;\n    if (array[lastIndex] > array[lastIndex - 1]) {\n        maximaIndices.push(array.length - 1);\n    }\n    return maximaIndices;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import Note from './Note';\nimport GuitarNote from './GuitarNote';\nimport { clipValue } from '../utils/MathUtils';\nimport { min } from 'd3';\n\n/**\n * This class represents an array of note objects.\n * This can be used to simplify operations on a track.\n *\n * @example\n *   const notes = [\n *       // Some Note objects\n *   ];\n *   const noteArr = new NoteArray(notes)\n *       // Add more notes (all notes will be sorted by time by default after this)\n *       .addNotes([])\n *       // Scale all note's sart and end time to make a track slower or faster\n *       .scaleTime(0.5)\n *       // Do more ...\n *       // This class also mirrors many functions from the Array class\n *       .sort(sortFunction).filter(filterFunction).map(mapFunction).slice(0, 20)\n *   // Get Note objects back in a simple Array\n *   const transformedNotes = noteArr.getNotes();\n *   // [Note, Note, Note, ...]\n */\nclass NoteArray {\n\n    _notes;\n\n    /**\n     * Creates a new NoteArray,\n     * will make a copy of the passed array and cast all notes\n     *\n     * @param {Note[]} notes notes, default: []\n     */\n    constructor(notes = []) {\n        // Parse notes\n        this._notes = notes.map(d => {\n            if (d.string !== undefined && d.fret !== undefined) {\n                return GuitarNote.from(d);\n            }\n            return Note.from(d);\n        });\n    }\n\n    /**\n     * Returns a simple array with all Note objects.\n     *\n     * @returns {Note[]} array with Note objects\n     */\n    getNotes() {\n        return this._notes;\n    }\n\n    /**\n     * Appends notes to this note array\n     *\n     * @param {Note[]} notes notes\n     * @param {boolean} sort iff ture, sorts notes by start timeafter adding\n     *      the new ones (default:true)\n     * @returns {NoteArray} itself\n     */\n    addNotes(notes, sort = true) {\n        this._notes = [...this._notes, ...notes];\n        if (sort) {\n            this.sortByTime();\n        }\n        return this;\n    }\n\n    /**\n     * Adds the notes from another NoteArray to this NoteArray\n     * IMPORTANT: this does not change the notes or sort them!\n     * Take a look at NoteArray.append() if you want to extend\n     * a track at its end.\n     *\n     * @param {NoteArray} noteArray another NoteArray\n     * @returns {NoteArray} itself\n     */\n    concat(noteArray) {\n        this._notes = [...this._notes, ...noteArray._notes];\n        return this;\n    }\n\n    /**\n     * Appends notes to the end of this NoteArray, after shifting them by its\n     * duration. Set gap to something != 0 to create a gap or overlap.\n     *\n     * @param {NoteArray} noteArray another NoteArray\n     * @param {number} gap in seconds between the two parts\n     * @returns {NoteArray} itself\n     */\n    append(noteArray, gap = 0) {\n        const duration = this.getDuration();\n        const clone = noteArray.clone();\n        clone.shiftTime(duration + gap);\n        this._notes = [...this._notes, ...clone._notes];\n        this.sortByTime();\n        return this;\n    }\n\n    /**\n     * Repeats the notes of this array by concatenating a time-shifted copy\n     *\n     * @param {number} times number of times to repeat it\n     * @returns {NoteArray} a new NoteArray with the repeated note sequence\n     */\n    repeat(times) {\n        const result = this.clone();\n        if (times < 1) {\n            return new NoteArray();\n        }\n        if (times === 1) {\n            return result;\n        }\n        const copy = this.clone();\n        const duration = this.getDuration();\n        for (let index = 1; index < times; index++) {\n            // Shift notes in time\n            copy.shiftTime(duration);\n            // Result is a NoteArray so use .concat\n            // eslint-disable-next-line unicorn/prefer-spread\n            result.concat(copy);\n        }\n        return result;\n    }\n\n    /**\n     * Returns the number of Note objects in this NoteArray\n     *\n     * @returns {number} note count\n     */\n    length() {\n        return this._notes.length;\n    }\n\n    /**\n     * Returns the start time of the earliest note in this NoteArray\n     *\n     * @returns {number} start time\n     */\n    getStartTime() {\n        return min(this._notes, d => d.start);\n    }\n\n    /**\n     * Returns the duration of this note array in seconds from 0 to the end of\n     * the latest note.\n     *\n     * @returns {number} duration\n     */\n    getDuration() {\n        let duration = 0;\n        for (const note of this._notes) {\n            const noteEnd = note.end === null ? note.start : note.end;\n            if (noteEnd > duration) {\n                duration = noteEnd;\n            }\n        }\n        return duration;\n    }\n\n    /**\n     * Scales the time of each note by factor\n     *\n     * @param {number} factor factor\n     * @returns {NoteArray} itself\n     */\n    scaleTime(factor) {\n        this._notes = this._notes.map(n => n.scaleTime(factor));\n        return this;\n    }\n\n    /**\n     * Adds the speicifed number of seconds to each note\n     *\n     * @param {number} addedSeconds time to add in seconds\n     * @returns {NoteArray} itself\n     */\n    shiftTime(addedSeconds) {\n        this._notes = this._notes.map(n => n.shiftTime(addedSeconds));\n        return this;\n    }\n\n    /**\n     * Moves all notes s.t. the first starts at <start>\n     * Will sort the notes by start time.\n     *\n     * @param {number} startTime the new start time for the earliest note\n     * @returns {NoteArray} itself\n     */\n    shiftToStartAt(startTime) {\n        this.sortByTime();\n        const firstNoteStart = this._notes[0].start;\n        const offset = firstNoteStart - startTime;\n        this._notes.forEach(n => {\n            n.start -= offset;\n            if (n.end !== null) {\n                n.end -= offset;\n            }\n        });\n        return this;\n    }\n\n    /**\n     * Similar to Array.forEach\n     *\n     * @param {Function} func a function\n     * @returns {NoteArray} this\n     */\n    forEach(func) {\n        this._notes.forEach((element, index, array) => func(element, index, array));\n        return this;\n    }\n\n    /**\n     * Sorts the notes\n     *\n     * @param {Function} sortFunction sort function, e.g. (a, b)=>a.start-b.start\n     * @returns {NoteArray} itself\n     */\n    sort(sortFunction) {\n        this._notes = this._notes.sort(sortFunction);\n        return this;\n    }\n\n    /**\n     * Sorts the notes by start time\n     *\n     * @returns {NoteArray} itself\n     */\n    sortByTime() {\n        this._notes = this._notes.sort((a, b) => a.start - b.start);\n        return this;\n    }\n\n    /**\n     * Maps the notes using some mapping function\n     *\n     * @param {Function} mapFunction mapping function with same signature as\n     *      Array.map()\n     * @returns {NoteArray} itself\n     */\n    map(mapFunction) {\n        this._notes = this._notes.map((element, index, array) => mapFunction(element, index, array));\n        return this;\n    }\n\n    /**\n     * Slices the notes by index, like Array.slice()\n     *\n     * @param {number} start start index\n     * @param {number} end end index\n     * @returns {NoteArray} itself\n     */\n    slice(start, end) {\n        this._notes = this._notes.slice(start, end);\n        return this;\n    }\n\n    /**\n     * Slices the notes by time.\n     * The modes 'end' and 'contained' will remove all notes with end === null!\n     * Notes will not be changed, e.g. start time will remain the same.\n     *\n     * @param {number} startTime start of the filter range in seconds\n     * @param {number} endTime end of the filter range in seconds (exclusive)\n     * @param {string} mode controls which note time to consider, one of:\n     *      - start: note.start must be inside range\n     *      - end: note.end must be inside range\n     *      - contained: BOTH note.start and note.end must be inside range\n     *      - touched: EITHER start or end (or both) must be inside range)\n     *      - touched-included: like touched, but also includes notes where\n     *          neither start nor end inside range, but range is completely\n     *          inside the note\n     *      (contained is default)\n     * @returns {NoteArray} itself\n     * @throws {'Invalid slicing mode'} When slicing mode is not one of the\n     *      above values\n     */\n    sliceTime(startTime, endTime, mode = 'contained') {\n        const start = startTime;\n        const end = endTime;\n        let filterFunc;\n        if (mode === 'start') {\n            filterFunc = n => n.start >= start && n.start < end;\n        } else if (mode === 'end') {\n            filterFunc = n => n.end !== null && n.end >= start && n.end < end;\n        } else if (mode === 'contained') {\n            filterFunc = n => n.end !== null && n.start >= start && n.end < end;\n        } else if (mode === 'touched') {\n            filterFunc = n =>\n                (n.start >= start && n.start <= end) ||\n                (n.end !== null && n.end >= start && n.end <= end);\n        } else if (mode === 'touched-included') {\n            filterFunc = n =>\n                // like touched\n                (n.start >= start && n.start <= end) ||\n                (n.end !== null && n.end >= start && n.end <= end) ||\n                // filter range inside note range\n                (n.end !== null && n.start <= start && n.end >= end);\n        } else {\n            throw new Error('Invalid slicing mode');\n        }\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        this._notes = this._notes.filter(filterFunc);\n        return this;\n    }\n\n    /**\n     * Filters the NoteArray like you would filter via Array.filter().\n     *\n     * @param {Function} filterFunction filter function, same signature as\n     *      Array.filter()\n     * @returns {NoteArray} itself\n     */\n    filter(filterFunction) {\n        this._notes = this._notes.filter((element, index, array) => filterFunction(element, index, array));\n        return this;\n    }\n\n    /**\n     * Filters by pitch, keeping only pitches specified in <pitches>\n     *\n     * @param {number[]} pitches array of pitches to keep\n     * @returns {NoteArray} itself\n     */\n    filterPitches(pitches) {\n        this._notes = this._notes.filter(n => pitches.includes(n.pitch));\n        return this;\n    }\n\n    /**\n     * Transposes each note by <steps> semitones, will clip pitches to [0, 127]\n     *\n     * @param {number} steps number of semitones to transpose, can be negative\n     * @returns {NoteArray} itself\n     */\n    transpose(steps) {\n        for (const n of this._notes) {\n            n.pitch = clipValue(n.pitch + steps, 0, 127);\n        }\n        return this;\n    }\n\n    /**\n     * Will set the octave of all notes to -1.\n     * This might cause two notes to exist at the same time and pitch!\n     *\n     * @returns {NoteArray} itself\n     */\n    removeOctaves() {\n        this._notes = this._notes.map(note => Note.from({\n            ...note,\n            pitch: note.pitch % 12,\n        }));\n        return this;\n    }\n\n    /**\n     * Reverses the note array, such that it can be played backwards.\n     *\n     * @returns {NoteArray} itself\n     */\n    reverse() {\n        // Update note start and end times\n        const duration = this.getDuration();\n        this._notes = this._notes.map(n => {\n            const newNote = n.clone();\n            newNote.start = duration - n.end;\n            newNote.end = newNote.start + n.getDuration();\n            return newNote;\n        });\n        // Sort by time\n        this.sortByTime();\n        return this;\n    }\n\n    /**\n     * Returns true if this NoteArray and otherNoteArray have equal attributes.\n     *\n     * @param {NoteArray} otherNoteArray another NoteArray\n     * @returns {boolean} true if equal\n     */\n    equals(otherNoteArray) {\n        if (!(otherNoteArray instanceof NoteArray)) {\n            return false;\n        }\n        const notes = otherNoteArray.getNotes();\n        if (this._notes.length !== notes.length) {\n            return false;\n        }\n        for (const [index, note] of notes.entries()) {\n            if (!this._notes[index].equals(note)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Deep clone, all contained notes are cloned as well.\n     *\n     * @returns {NoteArray} clone\n     */\n    clone() {\n        return new NoteArray(this._notes);\n    }\n}\n\nexport default NoteArray;\n","/**\n * @module utils/ArrayUtils\n */\n\n/**\n * Shallow compares two arrays\n *\n * @param {Array} a an array\n * @param {Array} b another array\n * @returns {boolean} true iff equal\n */\nexport function arrayShallowEquals(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (const [index, element] of a.entries()) {\n        if (element !== b[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n\n// TODO: use https://github.com/d3/d3-array/blob/master/README.md#intersection etc\n\n/**\n * Checks if two arrays contain the same elements,\n * ignoring their ordering in each array.\n *\n * @param {Array} a an array\n * @param {Array} b another array\n * @param {boolean} checkLength also checks if arrays have the same length\n * @returns {boolean} true iff arrays contain same elements\n */\nexport function arrayHasSameElements(a, b, checkLength = true) {\n    if (checkLength && a.length !== b.length) {\n        return false;\n    }\n    const setA = new Set(a);\n    const setB = new Set(b);\n    for (const element of setA) {\n        if (!setB.has(element)) {\n            return false;\n        }\n    }\n    for (const element of setB) {\n        if (!setA.has(element)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Removes duplicates from an Array by converting to a Set and back\n *\n * @param {Array} array an array\n * @returns {Array} array without duplicates\n */\nexport function removeDuplicates(array) {\n    return [...new Set(array)];\n}\n\n/**\n * Checks whether the array a contains the array b, i.e. whether the first\n * b.length elements are the same.\n *\n * @todo rename to arrayStartsWithArray\n * @param {Array} a an array\n * @param {Array} b a shorter array\n * @returns {boolean} true iff a contains b\n */\nexport function arrayContainsArray(a, b) {\n    if (a.length < b.length) {\n        return false;\n    }\n    for (const [index, element] of b.entries()) {\n        if (a[index] !== element) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Returns the maximum numerical value from an array of arrays\n *\n * @param {number[][]} matrix matrix\n * @returns {number} maximum value\n */\nexport function getMatrixMax(matrix) {\n    let maximum = Number.NEGATIVE_INFINITY;\n    for (const row of matrix) {\n        for (const value of row) {\n            if (Number.isNaN(+value)) { continue; }\n            if (value > maximum) {\n                maximum = value;\n            }\n        }\n    }\n    return maximum;\n}\n\n/**\n * Stringifies a 2D array / matrix for logging onto the console.\n *\n * @param {any[][]} matrix the matrix\n * @param {string} colSeparator column separator\n * @param {string} rowSeparator row separator\n * @param {Function} formatter formatting for each element\n * @returns {string} stringified matrix\n */\nexport function formatMatrix(matrix, colSeparator = ', ', rowSeparator = '\\n', formatter) {\n    if (!matrix || matrix.length === 0) { return ''; }\n    if (formatter) {\n        matrix = matrix.map(row => row.map(value => formatter(value)));\n    }\n    return matrix.map(row => row.join(colSeparator)).join(rowSeparator);\n}\n","import NoteArray from './NoteArray';\nimport { arrayShallowEquals } from '../utils/ArrayUtils';\n\n/**\n * Class for storing recorded notes alongside meta information.\n */\nclass Recording extends NoteArray {\n    /**\n     * Creates a new Recording\n     *\n     * @param {string} name name if the song\n     * @param {Date} date date of the recording\n     * @param {Note[]} notes array of Note objects\n     * @param {number} speed relative speed compared to ground truth, e.g. 0.5\n     *      for half as fast\n     * @param {number} selectedTrack track number of the ground truth to which\n     *      this recording belongs\n     * @param {number[]|null} timeSelection time selection of the ground truth\n     *      to which this recording belongs, or null if full duration\n     */\n    constructor(name, date, notes, speed = 1, selectedTrack = 0, timeSelection = null) {\n        super(notes);\n        this.name = name;\n        this.date = date;\n        // Save formatted date for faster access\n        this.dateString = date.toISOString()\n            .slice(0, 19)\n            .replace('T', ' ');\n        this.speed = +speed;\n        this.selectedTrack = +selectedTrack;\n        this.timeSelection = timeSelection;\n        this.sortByTime();\n    }\n\n    /**\n     * Returns a copy of the Note object\n     *\n     * @returns {Recording} new recording\n     */\n    clone() {\n        return new Recording(\n            this.name,\n            this.date,\n            this.getNotes().map(d => d.clone()),\n            this.speed,\n            this.selectedTrack,\n            this.timeSelection === null ? null : [...this.timeSelection],\n        );\n    }\n\n    /**\n     * Returns true if this Recording and otherRecording have equal attributes.\n     *\n     * @param {Recording} otherRecording another Recording\n     * @returns {boolean} true if equal\n     */\n    equals(otherRecording) {\n        if (!(otherRecording instanceof Recording)) { return false; }\n        if (this.name !== otherRecording.name) { return false; }\n        if (this.date.getTime() !== otherRecording.date.getTime()) { return false; }\n        if (this.speed !== otherRecording.speed) { return false; }\n        if (this.selectedTrack !== otherRecording.selectedTrack) { return false; }\n        if (this.timeSelection !== otherRecording.timeSelection) {\n            if (this.timeSelection === null || otherRecording.timeSelection === null) {\n                return false;\n            }\n            if (!arrayShallowEquals(this.timeSelection, otherRecording.timeSelection)) {\n                return false;\n            }\n        }\n        // Below is the same as NoteArray\n        const notes1 = this.getNotes();\n        const notes2 = otherRecording.getNotes();\n        if (notes1.length !== notes2.length) {\n            return false;\n        }\n        for (const [index, element] of notes1.entries()) {\n            if (!element.equals(notes2[index])) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Turns the recoring into a simple object with the same properties\n     *\n     * @returns {object} simple object representation of the recording\n     */\n    toSimpleObject() {\n        return {\n            name: this.name,\n            date: this.date,\n            notes: this.getNotes(),\n            speed: this.speed,\n            selectedTrack: this.selectedTrack,\n            timeSelection: this.timeSelection,\n        };\n    }\n\n    /**\n     * Creates a Note object from an object via destructuring\n     *\n     * @param {object} object object with at least {name, date, notes, speed}\n     * @returns {Recording} new note\n     * @throws {Error} when name, date, or notes are missing\n     */\n    static from(object) {\n        let { name, date, notes } = object;\n        // Check for undefined\n        const values = [name, date, notes];\n        const names = ['name', 'date', 'notes'];\n        for (const [index, value] of values.entries()) {\n            if (value === undefined || value === null) {\n                throw new Error(`Cannot create Recording with undefined ${names[index]}`);\n            }\n        }\n        // Parse date if it is a string\n        if (typeof (date) === 'string') {\n            date = new Date(Date.parse(date));\n        }\n        const { speed, selectedTrack, timeSelection } = object;\n        return new Recording(\n            name,\n            date,\n            notes,\n            speed,\n            selectedTrack,\n            timeSelection,\n        );\n    }\n}\n\nexport default Recording;\n","import Note from '../types/Note';\nimport GuitarNote from '../types/GuitarNote';\nimport { getMidiNoteByNameAndOctave } from './Midi';\nimport { max } from 'd3';\nimport { roundToNDecimals } from '../utils/MathUtils';\n\n/**\n * @module fileFormats/MusicXmlParser\n */\n\n\n// Precision in number of digits when rounding seconds\nconst ROUNDING_PRECISION = 5;\n\n/**\n * Converts a collection of MusicXML measures to JavaScript Objects with timing information in seconds.\n * Also calculates the position of measure lines and the total time in seconds.\n *\n * @param {XMLDocument} xml MusicXML document\n * @param {boolean} log set to true to log results etc. to the console\n * @returns {object} parsed document\n */\nexport function preprocessMusicXmlData(xml, log = false) {\n    if (log) {\n        console.groupCollapsed('[MusicXmlParser] Parsing MusicXML');\n        console.log(xml);\n    }\n    // Get part and instrument names\n    const partNameElements = xml.querySelectorAll('part-name');\n    const instruments = xml.querySelectorAll('score-instrument');\n    const partNames = [];\n    const instrumentNames = [];\n    for (const p of partNameElements) {\n        partNames.push(p.innerHTML);\n    }\n    for (const index of instruments) {\n        instrumentNames.push(index.children[0].innerHTML);\n    }\n    // Get instrument definitions\n    const drumInstrumentMap = getDrumInstrumentMap(xml);\n    // Preprocess notes\n    const parts = xml.querySelectorAll('part');\n    const parsedParts = [];\n    for (const part of parts) {\n        parsedParts.push(preprocessMusicXmlPart(part, drumInstrumentMap));\n    }\n    const result = {\n        parts: parsedParts,\n        partNames,\n        instruments: instrumentNames,\n        totalTime: max(parsedParts, d => d.totalTime),\n    };\n    if (log) {\n        console.log(result);\n        console.groupEnd();\n    }\n    return result;\n}\n\n/**\n * Converts a collection of MusicXML measures to JavaScript Objects with timing information in seconds.\n * Also calculates the position of measure lines and the total time in seconds.\n *\n * @private\n * @param {HTMLElement} part MusicXML part\n * @param {Map} drumInstrumentMap midiPitch = map.get(partId).get(instrId)\n * @returns {object} parsed measures\n */\nfunction preprocessMusicXmlPart(part, drumInstrumentMap) {\n    // Handle Guitar sheets with stave and tab (so dublicate notes)\n    part = handleStaveAndTab(part);\n    // Handle repetitions by duplicating measures\n    let measures = part.children;\n    measures = duplicateRepeatedMeasures(measures);\n\n    let currentTime = 0;\n    let divisions;\n    let tempo = 120;\n    let beats = 4;\n    let beatType = 4;\n    // Handle changing tempo and beat type\n    const tempoChanges = [];\n    const beatTypeChanges = [];\n    const keySignatureChanges = [];\n    const noteObjs = [];\n    const measureLinePositions = [];\n    for (const measure of measures) {\n        const currentTimeRounded = roundToNDecimals(currentTime, ROUNDING_PRECISION);\n        // Try to update metrics (if they are not set, keep the old ones)\n        try {\n            const soundElements = measure.querySelectorAll('sound');\n            for (const element of soundElements) {\n                const tempoValue = element.getAttribute('tempo');\n                if (tempoValue !== null) {\n                    tempo = roundToNDecimals(+tempoValue, 3);\n                    tempoChanges.push({\n                        time: currentTimeRounded,\n                        tempo,\n                    });\n                }\n                // TODO: this only support one tempo change per measure!\n                // TODO: tempo changes that are not at the measure start will be false\n                // TODO: solution: go trough all children of measure: notes and other children\n                // notes will update the time\n                break;\n            }\n        } catch { }\n        try {\n            divisions = +measure.querySelectorAll('divisions')[0].innerHTML;\n        } catch { }\n        try {\n            beats = +measure.querySelectorAll('beats')[0].innerHTML;\n            beatType = +measure.querySelectorAll('beat-type')[0].innerHTML;\n            beatTypeChanges.push({\n                time: currentTimeRounded,\n                beats,\n                beatType,\n            });\n        } catch { }\n        const secondsPerBeat = 1 / (tempo / 60);\n        try {\n            const fifths = +measure.querySelectorAll('fifths')[0].innerHTML;\n            const { key, scale } = keySignatureMap.get(fifths);\n            keySignatureChanges.push({\n                time: currentTimeRounded,\n                key,\n                scale,\n            });\n        } catch { }\n\n        // Read notes\n        let lastNoteDuration = 0;\n        // const notes = measure.querySelectorAll('note');\n        // for (const note of notes) {\n        for (const child of measure.children) {\n            if (child.nodeName === 'backup') {\n                const duration = +child.querySelectorAll('duration')[0].innerHTML;\n                const durationInSeconds = getDurationInSeconds(duration, divisions, secondsPerBeat);\n                currentTime -= durationInSeconds;\n            } else if (child.nodeName === 'note') {\n                const note = child;\n                try {\n                    // Get note duration in seconds\n                    const duration = +note.querySelectorAll('duration')[0].innerHTML;\n                    const durationInSeconds = getDurationInSeconds(duration, divisions, secondsPerBeat);\n                    // Do not create note object for rests, only increase time\n                    const isRest = note.querySelectorAll('rest').length > 0;\n                    if (isRest) {\n                        currentTime += durationInSeconds;\n                        continue;\n                    }\n                    let pitch;\n                    if (note.querySelectorAll('unpitched').length > 0) {\n                        // Handle drum notes\n                        const instrumentId = note.querySelectorAll('instrument')[0].id;\n                        pitch = drumInstrumentMap.get(part.id).get(instrumentId);\n                    } else {\n                        // Get MIDI pitch\n                        // Handle <alter> tag for accidentals\n                        const alter = +(note.querySelectorAll('alter')[0]?.innerHTML ?? 0);\n                        const step = note.querySelectorAll('step')[0].innerHTML;\n                        const octave = +note.querySelectorAll('octave')[0].innerHTML;\n                        pitch = getMidiNoteByNameAndOctave(step, octave).pitch + alter;\n                    }\n                    // Is this a chord? (https://www.musicxml.com/tutorial/the-midi-compatible-part/chords/)\n                    const isChord = note.querySelectorAll('chord').length > 0;\n                    if (isChord) {\n                        currentTime -= lastNoteDuration;\n                    }\n                    // Is this note tied?\n                    const tieElement = note.querySelectorAll('tie')[0];\n                    if (tieElement && tieElement.getAttribute('type') === 'stop') {\n                        const noteEnd = currentTime + durationInSeconds;\n                        // Find last note with this pitch and update end\n                        for (let index = noteObjs.length - 1; index > 0; index--) {\n                            const n = noteObjs[index];\n                            if (n.pitch === pitch) {\n                                n.end = noteEnd;\n                                break;\n                            }\n                        }\n                    } else {\n                        // Try to get guitar specific data\n                        let string = null;\n                        let fret = null;\n                        try {\n                            fret = +note.querySelectorAll('fret')[0].innerHTML;\n                            string = +note.querySelectorAll('string')[0].innerHTML;\n                        } catch {/* Do nothing */ }\n                        // Staff is used as note's channel for non-guitar notes\n                        const staff = +(note.querySelectorAll('staff')[0]?.innerHTML ?? 1) - 1;\n                        // TODO: use xml note type?\n                        // const type = note.getElementsByTagName('type')[0].innerHTML;\n                        const startTime = roundToNDecimals(currentTime, ROUNDING_PRECISION);\n                        const endTime = roundToNDecimals(currentTime + durationInSeconds, ROUNDING_PRECISION);\n                        if (string !== null && fret !== null) {\n                            noteObjs.push(new GuitarNote(\n                                pitch,\n                                startTime,\n                                127,\n                                string,\n                                endTime,\n                                string,\n                                fret,\n                            ));\n                        } else {\n                            noteObjs.push(new Note(\n                                pitch,\n                                startTime,\n                                127,\n                                staff,\n                                endTime,\n                            ));\n                        }\n                    }\n                    lastNoteDuration = durationInSeconds;\n                    currentTime += durationInSeconds;\n                } catch (error) {\n                    console.warn('[MusicXmlParser] Cannot parse MusicXML note', error, note);\n                }\n            }\n        }\n        // Add measure line position\n        measureLinePositions.push(roundToNDecimals(currentTime, ROUNDING_PRECISION));\n    }\n    // Defaults\n    if (tempoChanges.length === 0) {\n        tempoChanges.push({ tempo: 120, time: 0 });\n    }\n    if (beatTypeChanges.length === 0) {\n        beatTypeChanges.push({ beats: 4, beatType: 4, time: 0 });\n    }\n    if (keySignatureChanges.length === 0) {\n        keySignatureChanges.push({ key: 'C', scale: 'major', time: 0 });\n    }\n    const result = {\n        noteObjs: noteObjs,\n        totalTime: currentTime,\n        measureLinePositions,\n        tempoChanges,\n        beatTypeChanges,\n        keySignatureChanges,\n        tuning: getTuningPitches(measures),\n    };\n    // console.log('[MusicXmlParser] Parsed part: ', result);\n    return result;\n}\n\n/**\n * Calculates the duration in seconds of a note, rest or backup\n *\n * @private\n * @param {number} duration duration of the event in divisions\n * @param {number} divisions MusicXML time divisions value\n * @param {number} secondsPerBeat seconds per beat\n * @returns {number} duration in seconds\n */\nfunction getDurationInSeconds(duration, divisions, secondsPerBeat) {\n    const durationInBeats = duration / divisions;\n    const durationInSeconds = durationInBeats * secondsPerBeat;\n    return durationInSeconds;\n}\n\n/**\n * Resolves repetitions by simply duplicating repeated measures.\n *\n * @todo handle 3x etc\n * @todo handle different endings\n * @todo write tests\n * @see https://www.musicxml.com/tutorial/the-midi-compatible-part/repeats/\n * @private\n * @param {HTMLCollection} measures measures\n * @returns {HTMLAllCollection[]} processed measures\n */\nfunction duplicateRepeatedMeasures(measures) {\n    let repeatedMeasures = [];\n    let currentRepetition = [];\n    for (const measure of measures) {\n        const rep = measure.querySelectorAll('repeat');\n        if (rep.length === 2) {\n            // Only this measure is repeated\n            const times = rep[1].getAttribute('times') || 2;\n            const repetition = Array.from({ length: +times }).fill(measure);\n            if (currentRepetition.length === 0) {\n                repeatedMeasures = [...repeatedMeasures, ...repetition];\n            } else {\n                currentRepetition = [...currentRepetition, ...repetition];\n            }\n        } else if (rep.length === 1) {\n            // Repetition either starts or ends here\n            const direction = rep[0].getAttribute('direction');\n            if (direction === 'forward') {\n                // Start new repetition\n                currentRepetition.push(measure);\n            } else if (direction === 'backward') {\n                const times = rep[0].getAttribute('times') || 2;\n                if (currentRepetition.length > 0) {\n                    // Finish current repetition\n                    currentRepetition.push(measure);\n                    for (let index = 0; index < times; index++) {\n                        repeatedMeasures = [...repeatedMeasures, ...currentRepetition];\n                    }\n                    currentRepetition = [];\n                } else {\n                    // Repetition started at the start of the piece, repeat all\n                    // we have until here\n                    repeatedMeasures = [...repeatedMeasures, ...repeatedMeasures];\n                }\n            }\n        } else {\n            // Measure without repetition marks, but might still be inside a\n            // repetition\n            if (currentRepetition.length === 0) {\n                repeatedMeasures.push(measure);\n            } else {\n                currentRepetition.push(measure);\n            }\n        }\n    }\n    return repeatedMeasures;\n}\n\n/**\n * Handles MusicXML measures that contain both a stave and a tab. Since every\n * note is described twice, we just need to remove those without string, fret\n * information\n *\n * @todo need to remove <backup> tags? or remember to not consider them\n * @private\n * @param {HTMLElement} track a MusicXML track, i.e. its measures\n * @returns {HTMLCollection} cleaned-up MusicXML measure\n */\nfunction handleStaveAndTab(track) {\n    const notes = track.querySelectorAll('note');\n    // Check whether this file has notes with string, fret information\n    let hasStringFretNotes = false;\n    for (const note of notes) {\n        if (\n            note.querySelectorAll('string').length > 0\n            && note.querySelectorAll('fret').length > 0\n        ) {\n            hasStringFretNotes = true;\n            break;\n        }\n    }\n    // If some notes have string and fret information, remove all the others\n    if (hasStringFretNotes) {\n        for (const note of notes) {\n            if (note.querySelectorAll('fret').length === 0) {\n                note.remove();\n            }\n        }\n    }\n    return track;\n}\n\n/**\n * Gets the tuning for a MusicXML part\n *\n * @private\n * @param {HTMLCollection} measures the measures of the parts\n * @returns {number[]} pitches of the tuning or [] if none is found\n */\nfunction getTuningPitches(measures) {\n    for (const measure of measures) {\n        try {\n            const tuningPitches = [];\n            const staffTunings = measure.querySelectorAll('staff-tuning');\n            for (const st of staffTunings) {\n                const tuningNote = st.querySelectorAll('tuning-step')[0].innerHTML;\n                const tuningOctave = +st.querySelectorAll('tuning-octave')[0].innerHTML;\n                // let line = +st.getAttribute('line');\n                // console.log(`String ${line} is tuned to ${tuningNote}${tuningOctave}`);\n                tuningPitches.push(getMidiNoteByNameAndOctave(tuningNote, tuningOctave).pitch);\n            }\n            return tuningPitches;\n        } catch { }\n    }\n    return [];\n}\n\n/**\n * Map from fiths to key signature\n */\nconst keySignatureMap = new Map([\n    [-7, { key: 'Cb', scale: 'major' }],\n    [-6, { key: 'Gb', scale: 'major' }],\n    [-5, { key: 'Db', scale: 'major' }],\n    [-4, { key: 'Ab', scale: 'major' }],\n    [-3, { key: 'Eb', scale: 'major' }],\n    [-2, { key: 'Bb', scale: 'major' }],\n    [-1, { key: 'F', scale: 'major' }],\n    [0, { key: 'C', scale: 'major' }],\n    [1, { key: 'G', scale: 'major' }],\n    [2, { key: 'D', scale: 'major' }],\n    [3, { key: 'A', scale: 'major' }],\n    [4, { key: 'E', scale: 'major' }],\n    [5, { key: 'B', scale: 'major' }],\n    [6, { key: 'F#', scale: 'major' }],\n    [7, { key: 'C#', scale: 'major' }],\n]);\n\n/**\n * Retruns a map containing maps, such that result.get(partId).get(instrId)\n * gives you the instrument with the ID instrId as defined in the part partId.\n *\n * This is needed to map drum notes to MIDI pitches.\n *\n * @param {XMLDocument} xml MusicXML\n * @returns {Map} map with structure result.get(partId).get(instrId)\n */\nfunction getDrumInstrumentMap(xml) {\n    const partMap = new Map();\n    const scoreParts = xml.querySelectorAll('part-list')[0]?.querySelectorAll('score-part');\n    if (!scoreParts) { return partMap; }\n    for (const scorePart of scoreParts) {\n        const partId = scorePart.id;\n        const instruMap = new Map();\n        const midiInstrs = scorePart.querySelectorAll('midi-instrument');\n        for (const midiInstr of midiInstrs) {\n            const instrId = midiInstr.id;\n            const pitch = midiInstr.querySelectorAll('midi-unpitched')[0]?.innerHTML;\n            if (pitch) {\n                instruMap.set(instrId, +pitch);\n            }\n        }\n        partMap.set(partId, instruMap);\n    }\n    return partMap;\n}\n","import { group } from 'd3';\n\n/**\n * @module utils/MiscUtils\n */\n\n/**\n * Converts beats per minute to seconds per beat\n *\n * @todo move to MusicUtils\n * @param {number} bpm tempo in beats per minute\n * @returns {number} seconds per beat\n */\nexport function bpmToSecondsPerBeat(bpm) {\n    return 1 / (bpm / 60);\n}\n\n/**\n * Clones a map where the values are flat objects,\n * i.e. values do not contain objects themselfes.\n *\n * @param {Map} map a map with object values\n * @returns {Map} a copy of the map with copies of the value objects\n */\nexport function deepCloneFlatObjectMap(map) {\n    const result = new Map();\n    for (const [key, value] of map.entries()) {\n        result.set(key, { ...value });\n    }\n    return result;\n}\n\n/**\n * Groups the Notes from multiple tracks\n *\n * @param {Note[][]} tracks array of arrays of Note objects\n * @returns {Map} grouping\n */\nexport function groupNotesByPitch(tracks) {\n    const allNotes = tracks.flat();\n    return group(allNotes, d => d.pitch);\n}\n\n/**\n * Reverses a given string.\n *\n * @param {string} s string\n * @returns {string} reversed string\n */\nexport function reverseString(s) {\n    return s.split('')\n        .reverse()\n        .join('');\n}\n\n/**\n * Given some notes and a target note, finds\n * the note that has its start time closest to\n * the one of targetNote\n *\n * @todo replace by d3 argmin or sth?\n * @param {Note[]} notes notes\n * @param {Note} targetNote target note\n * @returns {Note} closest note to targetNote\n */\nexport function findNearest(notes, targetNote) {\n    if (!notes || notes.length === 0 || !targetNote) {\n        return null;\n    }\n    let nearest = null;\n    let dist = Number.POSITIVE_INFINITY;\n    const targetStart = targetNote.start;\n    for (const n of notes) {\n        const newDist = Math.abs(n.start - targetStart);\n        if (newDist < dist) {\n            dist = newDist;\n            nearest = n;\n        }\n    }\n    return nearest;\n}\n","import Note from '../types/Note';\nimport { group, max } from 'd3';\nimport { bpmToSecondsPerBeat } from '../utils/MiscUtils';\nimport { roundToNDecimals } from '../utils/MathUtils';\n\n/**\n * @module fileFormats/MidiParser\n *\n * @todo parse pitch bends\n */\n\n\n// Precision in number of digits when rounding seconds\nconst ROUNDING_PRECISION = 5;\n\n/**\n * Parses a MIDI JSON file to get Note objects with absolute time in seconds.\n *\n * @see https://github.com/colxi/midi-parser-js/wiki/MIDI-File-Format-Specifications\n * @param {object} data MIDI data in JSON format\n * @param {boolean} splitFormat0IntoTracks split MIDI format 0 data into tracks\n *      instead of using channels?\n * @param {boolean} log set to true to log results etc. to the console\n * @returns {object} including an array of note objects and meta information\n */\nexport function preprocessMidiFileData(data, splitFormat0IntoTracks = true, log = false) {\n    if (data === null || data === undefined) {\n        // console.warn('[MidiParser] MIDI data is null');\n        return;\n    }\n    if (!data.track) {\n        console.warn('[MidiParser] MIDI data has no track');\n        return;\n    }\n    if (log) {\n        console.groupCollapsed('[MidiParser] Preprocessing MIDI file data');\n    }\n    // Parse notes\n    let parsedTracks = [];\n    const { tempoChanges, beatTypeChanges, keySignatureChanges } = getSignatureChanges(data.track);\n    // for (let index = 0; index < data.track.length; index++) {\n    //     const track = data.track[index];\n    for (const track of data.track) {\n        const t = parseMidiTrack(\n            track,\n            data.timeDivision,\n            tempoChanges,\n            beatTypeChanges,\n            keySignatureChanges,\n            log,\n        );\n        if (t !== null) {\n            parsedTracks.push(t);\n        }\n    }\n    // Split MIDI format 0 data into tracks instead of having channels\n    if (data.formatType === 0 && splitFormat0IntoTracks && parsedTracks.length === 1) {\n        parsedTracks = splitFormat0(parsedTracks);\n    }\n    // Generate measure lines from tempo and beat type changes\n    const totalTime = max(parsedTracks, d => d?.totalTime ?? 0);\n    const measureLinePositions = getMeasureLines(tempoChanges, beatTypeChanges, totalTime);\n    const result = {\n        tracks: parsedTracks,\n        totalTime,\n        tempoChanges,\n        beatTypeChanges,\n        keySignatureChanges,\n        measureLinePositions,\n    };\n    if (log) {\n        console.log(`Got ${parsedTracks.length} MIDI tracks`, result);\n        console.groupEnd();\n    }\n    return result;\n}\n\n/**\n * Parses a single MIDI track and pushes it to parsedTracks if it contains notes\n *\n * @private\n * @param {object} track a MIDI track\n * @param {number} timeDivision MIDI time division\n * @param {object[]} tempoChanges array with tempo change events\n * @param {object[]} beatTypeChanges array with beat type change events\n * @param {object[]} keySignatureChanges array with key signature change events\n * @param {boolean} log if true, debug info will be logged to the console\n * @returns {object} parsed track\n */\nfunction parseMidiTrack(track, timeDivision, tempoChanges, beatTypeChanges, keySignatureChanges, log) {\n    const notes = [];\n    let tempo = tempoChanges[0]?.tempo ?? 120;\n    let currentTick = 0;\n    let currentTime;\n    let milliSecondsPerTick = getMillisecondsPerTick(tempo, timeDivision);\n    let tickOfLastTempoChange = 0;\n    let timeOfLastTempoChange = 0;\n    // This map stores note-on note that have not yet been finished by a note-off\n    const unfinishedNotes = new Map();\n    for (const event of track.event) {\n        const type = event.type;\n        // Ignore delta time if it is a meta event (fixes some parsing issues)\n        if (type === EVENT_TYPES.meta) {\n            continue;\n        }\n        currentTick += event.deltaTime;\n        // Update beat type change times\n        for (const btc of beatTypeChanges) {\n            if (btc.time === undefined && btc.tick <= currentTick) {\n                const t = (btc.tick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange;\n                btc.time = roundToNDecimals(t, ROUNDING_PRECISION);\n            }\n        }\n        // Update key signature change times\n        for (const ksc of keySignatureChanges) {\n            if (ksc.time === undefined && ksc.tick <= currentTick) {\n                const t = (ksc.tick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange;\n                ksc.time = roundToNDecimals(t, ROUNDING_PRECISION);\n            }\n        }\n        // Handle last tempo change in track differently\n        let mostRecentTempoChange;\n        if (tempoChanges.length > 0 && currentTick > tempoChanges[tempoChanges.length - 1].tick) {\n            mostRecentTempoChange = tempoChanges[tempoChanges.length - 1];\n        }\n        // Get current tempo, as soon as we are too far, 1 step back\n        for (let index = 1; index < tempoChanges.length; index++) {\n            const tick = tempoChanges[index].tick;\n            if (tick > currentTick) {\n                const change = tempoChanges[index - 1];\n                mostRecentTempoChange = change;\n                break;\n            }\n        }\n        // React to tempo changes\n        if (mostRecentTempoChange && mostRecentTempoChange.tempo !== tempo) {\n            const tick = mostRecentTempoChange.tick;\n            timeOfLastTempoChange = (tick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange;\n            tickOfLastTempoChange = tick;\n            mostRecentTempoChange.time = roundToNDecimals(timeOfLastTempoChange, ROUNDING_PRECISION);\n            tempo = mostRecentTempoChange.tempo;\n            milliSecondsPerTick = getMillisecondsPerTick(tempo, timeDivision);\n        }\n        // Update current time in seconds\n        currentTime = (currentTick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange;\n        // Skip events that are neither note-on nor note-off\n        if (type !== EVENT_TYPES.noteOn && type !== EVENT_TYPES.noteOff) {\n            continue;\n        }\n        const [pitch, velocity] = event.data;\n        const channel = event.channel;\n        const key = `${pitch} ${channel}`;\n        if (type === EVENT_TYPES.noteOff || (type === EVENT_TYPES.noteOn && velocity === 0)) {\n            // Handle note-off\n            if (unfinishedNotes.has(key)) {\n                unfinishedNotes.get(key).end = currentTime;\n                unfinishedNotes.delete(key);\n            } else {\n                if (log) {\n                    console.warn('Did not find an unfinished note for note-off event!');\n                    console.log(event);\n                }\n            }\n        } else if (type === EVENT_TYPES.noteOn) {\n            // Handle note-on\n            const newNote = new Note(\n                pitch,\n                roundToNDecimals(currentTime, ROUNDING_PRECISION),\n                velocity,\n                channel,\n            );\n            notes.push(newNote);\n            unfinishedNotes.set(key, newNote);\n        } else {\n            continue;\n        }\n    }\n    // Fix missing note ends\n    const neededToFix = [];\n    for (const note of notes) {\n        if (note.end === -1) {\n            note.end = roundToNDecimals(currentTime, ROUNDING_PRECISION);\n            neededToFix.push(note);\n        }\n    }\n    if (neededToFix.length > 0) {\n        console.warn(`had to fix ${neededToFix.length} notes`);\n        console.log(neededToFix);\n    }\n    // Save parsed track with meta information\n    const { trackName, instrument, instrumentName } = getInstrumentAndTrackName(track);\n    if (notes.length > 0) {\n        const parsedTrack = {\n            noteObjs: notes,\n            totalTime: currentTime,\n            trackName: trackName ?? 'Track',\n            instrument,\n            instrumentName: instrumentName ?? 'Unknown instrument',\n        };\n        // console.log(`Got part with ${notes.length} notes,\\n`, parsedTrack);\n        return parsedTrack;\n    } else {\n        // console.log('Empty track');\n        return null;\n    }\n}\n\n/**\n * Finds out the name of the track and the instrument, if this data is available\n *\n * @private\n * @param {object} track MIDI track\n * @returns {{trackName, instrument, instrumentName}} meta data with either\n *      values or null when no information found\n */\nfunction getInstrumentAndTrackName(track) {\n    let trackName = null;\n    let instrument = null;\n    let instrumentName = null;\n    for (const event of track.event) {\n        if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.trackName) {\n            trackName = event.data;\n        }\n        if (event.type === EVENT_TYPES.programChange) {\n            instrument = event.data;\n        }\n        if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.instrumentName) {\n            instrumentName = event.data;\n        }\n    }\n    return {\n        trackName,\n        instrument,\n        instrumentName,\n    };\n}\n\n/**\n * Caclulates the time positions of measure lines by looking at tempo and beat\n * type change events\n *\n * @private\n * @param {object[]} tempoChanges tempo change events\n * @param {object[]} beatTypeChanges beat type change events\n * @param {number} totalTime total time\n * @returns {number[]} measure line times in seconds\n */\nfunction getMeasureLines(tempoChanges, beatTypeChanges, totalTime) {\n    const measureLines = [];\n    // Generate measure lines from tempo and beat type changes\n    let tempo = 120;\n    let beats = 4;\n    let beatType = 4;\n    let currentTime = 0;\n    let currentBeatsInMeasure = 0;\n    let timeOfLastTempoChange = 0;\n    let timeSinceLastTempoChange = 0;\n    while (currentTime < totalTime) {\n        // Get current tempo and beat type\n        let mostRecentTempoChange;\n        for (const t of tempoChanges) {\n            if (t.time <= currentTime) {\n                mostRecentTempoChange = t.tempo;\n            }\n        }\n        if (mostRecentTempoChange && mostRecentTempoChange !== tempo) {\n            timeOfLastTempoChange = currentTime;\n            timeSinceLastTempoChange = 0;\n            tempo = mostRecentTempoChange;\n        }\n        for (const b of beatTypeChanges) {\n            if (b.time <= currentTime) {\n                beats = b.beats;\n                beatType = b.beatType;\n            }\n        }\n        // Update time and beats\n        currentBeatsInMeasure++;\n        const secondsPerBeat = bpmToSecondsPerBeat(tempo) / (beatType / 4);\n        timeSinceLastTempoChange += secondsPerBeat;\n        currentTime = timeOfLastTempoChange + timeSinceLastTempoChange;\n        if (currentBeatsInMeasure >= beats) {\n            // Measure is full\n            currentBeatsInMeasure = 0;\n            measureLines.push(roundToNDecimals(currentTime, ROUNDING_PRECISION));\n        }\n    }\n    return measureLines;\n}\n\n/**\n * Split MIDI format 0 data into tracks instead of having channels,\n * creates one track for each channel\n *\n * @private\n * @param {Note[][]} tracks parsed MIDI tracks\n * @returns {Note[][]} splitted tracks\n */\nfunction splitFormat0(tracks) {\n    if (tracks.length > 1) {\n        console.warn('Splitting a format 0 file with more than 1 track will result in all but the first beeing lost!');\n    }\n    // console.log('Splitting format 0 file into tracks based on channel');\n    const grouped = group(tracks[0].noteObjs, d => d.channel);\n    // All tracks will share the meta infomation of the 0th track\n    // Assign the splitted-by-channel notes to their new tracks\n    const splittedTracks = [];\n    for (const notes of grouped.values()) {\n        splittedTracks.push({\n            ...tracks[0],\n            noteObjs: notes,\n        });\n    }\n    return splittedTracks;\n}\n\n/**\n * Given the tempo and time division, returns the number of milliseconds\n * each MIDI time tick corresponds to\n *\n * @private\n * @param {number} tempo tempo\n * @param {number} timeDivision time division\n * @returns {number} milli seconds per tick\n */\nfunction getMillisecondsPerTick(tempo, timeDivision) {\n    const milliSecondsPerBeat = 1 / tempo * 60000;\n    const milliSecondsPerTick = milliSecondsPerBeat / timeDivision;\n    return milliSecondsPerTick;\n}\n\n/**\n * Retrieves all tempo and beat type changes from a MIDI file's tracks.\n *\n * @see https://github.com/colxi/midi-parser-js/wiki/MIDI-File-Format-Specifications\n * @private\n * @param {Array} tracks MIDI JSON file tracks\n * @returns {object} {tempoChanges, beatTypeChanges} as arrays of objects, which\n *      contain the MIDI tick and the new information\n */\nfunction getSignatureChanges(tracks) {\n    const tempoChanges = [];\n    const beatTypeChanges = [];\n    const keySignatureChanges = [];\n    let currentTick = 0;\n    let lastTempo = null;\n    for (const track of tracks) {\n        for (const event of track.event) {\n            // Get timing of events\n            currentTick += event.deltaTime;\n            // Tempo change\n            if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.setTempo) {\n                const milliSecondsPerQuarter = event.data / 1000;\n                const tempo = Math.round(1 / (milliSecondsPerQuarter / 60000));\n                // Ignore tempo changes that don't change the tempo\n                if (tempo !== lastTempo) {\n                    tempoChanges.push({\n                        tick: currentTick,\n                        tempo,\n                        time: currentTick === 0 ? 0 : undefined,\n                    });\n                    lastTempo = tempo;\n                }\n            }\n            // Beat type change\n            if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.timeSignature) {\n                const d = event.data;\n                const beats = d[0];\n                const beatType = 2 ** d[1];\n                const newEntry = {\n                    tick: currentTick,\n                    beats,\n                    beatType,\n                };\n                if (beatTypeChanges.length === 0) {\n                    beatTypeChanges.push(newEntry);\n                } else {\n                    // If it id not change, do not add\n                    const last = beatTypeChanges[beatTypeChanges.length - 1];\n                    if (last.beats !== beats || last.beatType !== beatType) {\n                        beatTypeChanges.push(newEntry);\n                    }\n                }\n                // console.log(`Metro: ${d[2]}`);\n                // console.log(`32nds: ${d[3]}`);\n            }\n            // Key change\n            if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.keySignature) {\n                // console.log('keychange', event);\n                const d = event.data;\n                if (!KEY_SIG_MAP.has(d)) {\n                    console.warn('[MidiParser] Invalid key signature', d);\n                } else {\n                    const { key, scale } = KEY_SIG_MAP.get(d);\n                    const newEntry = {\n                        tick: currentTick,\n                        key,\n                        scale,\n                    };\n                    if (keySignatureChanges.length === 0) {\n                        keySignatureChanges.push(newEntry);\n                    } else {\n                        // If it id not change, do not add\n                        const last = keySignatureChanges[keySignatureChanges.length - 1];\n                        if (last.key !== key || last.scale !== scale) {\n                            keySignatureChanges.push(newEntry);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    // Default values\n    if (tempoChanges.length === 0) {\n        tempoChanges.push({ tempo: 120, time: 0 });\n    }\n    if (beatTypeChanges.length === 0) {\n        beatTypeChanges.push({ beats: 4, beatType: 4, time: 0 });\n    }\n    if (keySignatureChanges.length === 0) {\n        keySignatureChanges.push({ key: 'C', scale: 'major', time: 0 });\n    }\n    return { tempoChanges, beatTypeChanges, keySignatureChanges };\n}\n\n/**\n * MIDI event types and meta types and their codes\n *\n * @see https://github.com/colxi/midi-parser-js/wiki/MIDI-File-Format-Specifications\n * Event Type         Value   Value decimal    Parameter 1         Parameter 2\n * Note Off           0x8       8              note number         velocity\n * Note On            0x9       9              note number         velocity\n * Note Aftertouch    0xA      10              note number         aftertouch value\n * Controller         0xB      11              controller number   controller value\n * Program Change     0xC      12              program number      not used\n * Channel Aftertouch 0xD      13              aftertouch value    not used\n * Pitch Bend         0xE      14              pitch value (LSB)   pitch value (MSB)\n * Meta               0xFF    255                 parameters depend on meta type\n */\nconst EVENT_TYPES = {\n    noteOff: 0x8,\n    noteOn: 0x9,\n    noteAftertouch: 0xA,\n    controller: 0xB,\n    programChange: 0xC,\n    channelAftertouch: 0xD,\n    pitchBend: 0xE,\n    meta: 0xFF,\n};\nconst META_TYPES = {\n    sequenceNumber: 0x0,\n    textEvent: 0x1,\n    copyright: 0x2,\n    trackName: 0x3,\n    instrumentName: 0x4,\n    lyrics: 0x5,\n    marker: 0x6,\n    cuePoint: 0x7,\n    channelPrefix: 0x20,\n    endOfTrack: 0x2F,\n    setTempo: 0x51,\n    smpteOffset: 0x54,\n    timeSignature: 0x58,\n    keySignature: 0x59,\n    sequencerSpecific: 0x7F,\n};\n\n/**\n * Maps needed for key signature detection from number of sharps / flats\n * see https://www.recordingblogs.com/wiki/midi-key-signature-meta-message\n */\nconst KEY_SIG_MAP = new Map([\n    // major\n    [0xF900, { key: 'Cb', scale: 'major' }],\n    [0xFA00, { key: 'Gb', scale: 'major' }],\n    [0xFB00, { key: 'Db', scale: 'major' }],\n    [0xFC00, { key: 'Ab', scale: 'major' }],\n    [0xFD00, { key: 'Eb', scale: 'major' }],\n    [0xFE00, { key: 'Bb', scale: 'major' }],\n    [0xFF00, { key: 'F', scale: 'major' }],\n    [0x0000, { key: 'C', scale: 'major' }],\n    [0x0100, { key: 'G', scale: 'major' }],\n    [0x0200, { key: 'D', scale: 'major' }],\n    [0x0300, { key: 'A', scale: 'major' }],\n    [0x0400, { key: 'E', scale: 'major' }],\n    [0x0500, { key: 'B', scale: 'major' }],\n    [0x0600, { key: 'F#', scale: 'major' }],\n    [0x0700, { key: 'C#', scale: 'major' }],\n    // minor\n    [0xF901, { key: 'Ab', scale: 'minor' }],\n    [0xFA01, { key: 'Eb', scale: 'minor' }],\n    [0xFB01, { key: 'Bb', scale: 'minor' }],\n    [0xFC01, { key: 'F', scale: 'minor' }],\n    [0xFD01, { key: 'C', scale: 'minor' }],\n    [0xFE01, { key: 'G', scale: 'minor' }],\n    [0xFF01, { key: 'D', scale: 'minor' }],\n    [0x0001, { key: 'A', scale: 'minor' }],\n    [0x0101, { key: 'E', scale: 'minor' }],\n    [0x0201, { key: 'B', scale: 'minor' }],\n    [0x0301, { key: 'F#', scale: 'minor' }],\n    [0x0401, { key: 'C#', scale: 'minor' }],\n    [0x0501, { key: 'G#', scale: 'minor' }],\n    [0x0601, { key: 'D#', scale: 'minor' }],\n    [0x0701, { key: 'A#', scale: 'minor' }],\n]);\n","// eslint-disable-next-line no-unused-vars\nimport Note from './Note';\nimport midiParser from 'midi-parser-js';\nimport { preprocessMusicXmlData } from '../fileFormats/MusicXmlParser';\nimport { preprocessMidiFileData } from '../fileFormats/MidiParser';\nimport NoteArray from './NoteArray';\n\n/**\n * Represents a parsed MIDI or MusicXML file in a uniform format.\n */\nclass MusicPiece {\n\n    /**\n     * Do not use this constructor, but the static methods MusicPiece.fromMidi\n     * and MusicPiece.fromMusicXml instead.\n     *\n     * @private\n     * @param {string} name name (e.g. file name or piece name)\n     * @param {TempoDefinition[]} tempos tempos\n     * @param {TimeSignature[]} timeSignatures time signatures\n     * @param {KeySignature[]} keySignatures key signatures\n     * @param {number[]} measureTimes time in seconds for each measure line\n     * @param {Track[]} tracks tracks\n     * @throws {'No or invalid tracks given!'} when invalid tracks are given\n     */\n    constructor(name, tempos, timeSignatures, keySignatures, measureTimes, tracks) {\n        if (!tracks || tracks.length === 0) {\n            throw new Error('No or invalid tracks given');\n        }\n        this.name = name;\n        this.measureTimes = measureTimes;\n        this.tracks = tracks;\n        this.duration = Math.max(...this.tracks.map(d => d.duration));\n        // Filter multiple identical consecutive infos\n        this.tempos = tempos.slice(0, 1);\n        let currentTempo = tempos[0];\n        for (const tempo of tempos) {\n            if (tempo.string !== currentTempo.string) {\n                currentTempo = tempo;\n                this.tempos.push(tempo);\n            }\n        }\n        this.timeSignatures = timeSignatures.slice(0, 1);\n        let currentTimeSig = timeSignatures[0];\n        for (const timeSignature of timeSignatures) {\n            if (timeSignature.string !== currentTimeSig.string) {\n                currentTimeSig = timeSignature;\n                this.timeSignatures.push(timeSignature);\n            }\n        }\n        this.keySignatures = keySignatures.slice(0, 1);\n        let currentKeySig = keySignatures[0];\n        for (const keySignature of keySignatures) {\n            if (keySignature.string !== currentKeySig.string) {\n                currentKeySig = keySignature;\n                this.keySignatures.push(keySignature);\n            }\n        }\n    }\n\n    /**\n     * Creates a MusicPiece object from a MIDI file binary\n     *\n     * @param {string} name name\n     * @param {ArrayBuffer} midiFile MIDI file\n     * @returns {MusicPiece} new MusicPiece\n     * @throws {'No MIDI file content given'} when MIDI file is undefined or null\n     */\n    static fromMidi(name, midiFile) {\n        if (!midiFile) {\n            throw new Error('No MIDI file content given');\n        }\n        const midi = midiParser.parse(midiFile);\n        const parsed = preprocessMidiFileData(midi);\n        let tempos = [];\n        let timeSignatures = [];\n        let keySignatures = [];\n        let measureTimes = [];\n        if (parsed.tracks.length > 0) {\n            // tempos\n            tempos = parsed.tempoChanges\n                .map(d => new TempoDefinition(d.time, d.tempo));\n            // time signatures\n            timeSignatures = parsed.beatTypeChanges\n                .map(d => new TimeSignature(d.time, [d.beats, d.beatType]));\n            // key signatures\n            keySignatures = parsed.keySignatureChanges\n                .map(d => new KeySignature(d.time, d.key, d.scale));\n            // measure times\n            measureTimes = parsed.measureLinePositions;\n        }\n        // tracks signatures\n        const tracks = parsed.tracks.map((t, index) => Track.fromMidi(\n            t.trackName,\n            t.instrumentName,\n            t.noteObjs,\n            index,\n        ));\n        return new MusicPiece(\n            name,\n            tempos,\n            timeSignatures,\n            keySignatures,\n            measureTimes,\n            tracks,\n        );\n    }\n\n    /**\n     * Creates a MusicPiece object from a MusicXML string\n     *\n     * @param {string} name name\n     * @param {string|object} xmlFile MusicXML file content as string or object\n     *      If it is an object, it must behave like a DOM, e.g. provide methods\n     *      such as .querySelectorAll()\n     * @returns {MusicPiece} new MusicPiece\n     * @throws {'No MusicXML file content given'} when MusicXML file is\n     *  undefined or null\n     * @example Parsing a MusicPiece in Node.js\n     *    const jsdom = require('jsdom');\n     *    const xmlFile = fs.readFileSync('My Song.musicxml');\n     *    const dom = new jsdom.JSDOM(xmlFile);\n     *    const xmlDocument = dom.window.document;\n     *    const mp = musicvislib.MusicPiece.fromMusicXml('My Song', xmlDocument);\n     */\n    static fromMusicXml(name, xmlFile) {\n        if (!xmlFile) {\n            throw new Error('No MusicXML file content given');\n        }\n        let xmlDocument = xmlFile;\n        if (typeof xmlDocument === 'string') {\n            const parser = new DOMParser();\n            xmlDocument = parser.parseFromString(xmlFile, 'text/xml');\n        }\n        const parsed = preprocessMusicXmlData(xmlDocument);\n        let tempos = [];\n        let timeSignatures = [];\n        let keySignatures = [];\n        if (parsed.parts.length > 0) {\n            // tempos\n            tempos = parsed.parts[0].tempoChanges\n                .map(d => new TempoDefinition(d.time, d.tempo));\n            // time signatures\n            timeSignatures = parsed.parts[0].beatTypeChanges\n                .map(d => new TimeSignature(d.time, [d.beats, d.beatType]));\n            // key signatures\n            keySignatures = parsed.parts[0].keySignatureChanges\n                .map(d => new KeySignature(d.time, d.key, d.scale));\n        }\n        // measure times\n        let measureTimes = [];\n        if (parsed.parts.length > 0) {\n            measureTimes = parsed.parts[0].measureLinePositions;\n        }\n        // tracks\n        const tracks = parsed.parts\n            .map((t, index) => Track.fromMusicXml(\n                parsed.partNames[index],\n                parsed.instruments[index],\n                t.noteObjs,\n                index,\n            ));\n        return new MusicPiece(\n            name,\n            tempos,\n            timeSignatures,\n            keySignatures,\n            measureTimes,\n            tracks,\n        );\n    }\n\n    /**\n     * Returns an array with all notes from all tracks.\n     *\n     * @param {boolean} sortByTime true: sort notes by time\n     * @returns {Note[]} all notes of this piece\n     */\n    getAllNotes(sortByTime = false) {\n        const notes = this.tracks.flatMap(t => t.notes);\n        if (sortByTime) {\n            notes.sort((a, b) => a.start - b.start);\n        }\n        return notes;\n    }\n}\n\n/**\n * Used by MusicPiece, should not be used directly\n *\n * @private\n */\nexport class Track {\n    /**\n     * Do not use this constructor, but the static methods Track.fromMidi\n     * and Track.fromMusicXml instead.\n     *\n     * @private\n     * @param {string} name name\n     * @param {string} instrument instrument name\n     * @param {Note[]} notes notes\n     */\n    constructor(name, instrument, notes) {\n        name = !name?.length ? 'unnamed' : name.replace('\\u0000', '');\n        this.name = name;\n        this.instrument = instrument;\n        this.notes = notes;\n        this.duration = new NoteArray(notes).getDuration();\n    }\n\n    /**\n     * Creates a new Track from a MusicXML track\n     *\n     * @param {string} name name\n     * @param {string} instrument instrument name\n     * @param {Note[]} notes parsed MusicXML track's notes\n     * @returns {Track} new Track\n     */\n    static fromMidi(name, instrument, notes) {\n        return new Track(name, instrument, notes);\n    }\n\n    /**\n     * Creates a new Track from a MusicXML track\n     *\n     * @param {string} name name\n     * @param {string} instrument instrument name\n     * @param {Note[]} notes parsed MusicXML track's notes\n     * @param {number} channel channel\n     * @returns {Track} new Track\n     */\n    static fromMusicXml(name, instrument, notes, channel) {\n        for (const n of notes) {\n            n.channel = channel;\n        }\n        return new Track(name, instrument, notes);\n    }\n}\n\n/**\n * Tempo definition\n *\n * @private\n */\nexport class TempoDefinition {\n    /**\n     * @param {number} time in seconds\n     * @param {number} bpm tempo in seconds per beat\n     */\n    constructor(time, bpm) {\n        this.time = time;\n        this.bpm = bpm;\n        this.string = `${bpm} bpm`;\n    }\n}\n\n/**\n * Time signature definition\n *\n * @private\n */\nexport class TimeSignature {\n    /**\n     * @param {number} time in seconds\n     * @param {number[]} signature time signature as [beats, beatType]\n     */\n    constructor(time, signature) {\n        this.time = time;\n        this.signature = signature;\n        this.string = signature.join('/');\n    }\n}\n\n/**\n * Key signature definition\n *\n * @private\n */\nexport class KeySignature {\n    /**\n     * @param {number} time in seconds\n     * @param {string} key key e.g. 'C'\n     * @param {string} scale scale e.g. 'major'\n     */\n    constructor(time, key, scale) {\n        this.time = time;\n        this.key = key;\n        this.scale = scale;\n        this.string = `${key} ${scale}`;\n    }\n}\n\nexport default MusicPiece;\n","import { getMidiNoteByNr } from '../fileFormats/Midi';\n\n/**\n * Stores a sequence of pitches and provides some methods to simplify and\n * manipulate it.\n *\n * @todo implement keepOnlyHighestConcurrentNotes\n */\nclass PitchSequence {\n\n    #pitches = [];\n\n    /**\n     * @param {number[]} pitches pitches\n     */\n    constructor(pitches = []) {\n        this.#pitches = pitches;\n    }\n\n    /**\n     * Creates a pitch sequence from an array of Notes\n     *\n     * @param {Note[]} notes notes\n     * @returns {PitchSequence} pitch sequence\n     */\n    static fromNotes(notes = []) {\n        const pitches = notes\n            .slice()\n            .sort((a, b) => {\n                if (a.start === b.start) {\n                    return a.pitch - b.pitch;\n                }\n                return a.start - b.start;\n            })\n            .map(d => d.pitch);\n        return new PitchSequence(pitches);\n    }\n\n    /**\n     * @param {string} string a string of Unicode characters\n     * @returns {PitchSequence} pitch sequence\n     */\n    static fromCharString(string) {\n        if (!string || string.length === 0) { return new PitchSequence(); }\n        const pitches = string.split('').map((d, index) => string.charCodeAt(index));\n        return new PitchSequence(pitches);\n    }\n\n    /**\n     * @returns {number[]} pitches\n     */\n    getPitches() {\n        return this.#pitches;\n    }\n\n    /**\n     * @returns {number} number of pitches\n     */\n    length() {\n        return this.#pitches.length;\n    }\n\n    /**\n     * Turns pitch sequence into a string by turning each  pitch into a character\n     * (based on Unicode index)\n     *\n     * @returns {string} string representation of note pitches\n     */\n    toCharString() {\n        if (!this.#pitches || this.#pitches.length === 0) {\n            return '';\n        }\n        return String.fromCharCode(...this.#pitches);\n    }\n\n    /**\n     * @returns {string} a string with the notes' names\n     */\n    toNoteNameString() {\n        return this.#pitches.map(p => getMidiNoteByNr(p).label).join(' ');\n    }\n\n    /**\n     * Reverses the order of pitches in this PitchSequence\n     *\n     * @returns {PitchSequence} this\n     */\n    reverse() {\n        this.#pitches = this.#pitches.reverse();\n        return this;\n    }\n\n    /**\n     * Takes a sequence of MIDI pitches and nomralizes them to be in [0, 11]\n     *\n     * @returns {PitchSequence} this\n     */\n    removeOctaves() {\n        this.#pitches = this.#pitches.map(d => d % 12);\n        return this;\n    }\n\n    /**\n     * Transforms note pitches to intervals, i.e. diffrences between to subsequent\n     * notes: C, C#, C, D => 1, -1, 2\n     *\n     * @returns {number[]} intervals\n     */\n    toIntervals() {\n        const p = this.#pitches;\n        if (!p || p.length === 0 || p.length < 2) {\n            return [];\n        }\n        const result = Array.from({ length: p.length - 1 });\n        for (let index = 1; index < p.length; index++) {\n            result[index - 1] = p[index] - p[index - 1];\n        }\n        return result;\n    }\n\n    /**\n     * @returns {PitchSequence} clone\n     */\n    clone() {\n        return new PitchSequence(this.#pitches);\n    }\n\n    /**\n     * Returns true if this NoteArray and otherNoteArray have equal attributes.\n     *\n     * @param {NoteArray} otherPitchSequence another NoteArray\n     * @returns {boolean} true if equal\n     */\n    equals(otherPitchSequence) {\n        if (!(otherPitchSequence instanceof PitchSequence)) {\n            return false;\n        }\n        const p = otherPitchSequence.getPitches();\n        if (this.#pitches.length !== p.length) {\n            return false;\n        }\n        for (const [index, element] of p.entries()) {\n            if (this.#pitches[index] !== element) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport default PitchSequence;\n","/**\n * @module graphics/Canvas\n * @todo save canvas as file https://www.digitalocean.com/community/tutorials/js-canvas-toblob\n */\n\n/**\n * Sets up a canvas rescaled to device pixel ratio\n *\n * @param {HTMLCanvasElement} canvas canvas element\n * @returns {CanvasRenderingContext2D} canvas rendering context\n */\nexport function setupCanvas(canvas) {\n    // Fix issues when importing musicvis-lib in Node.js\n    if (!window) { return; }\n    // Get the device pixel ratio, falling back to 1.\n    const dpr = window.devicePixelRatio || 1;\n    // Get the size of the canvas in CSS pixels.\n    const rect = canvas.getBoundingClientRect();\n    // Give the canvas pixel dimensions of their CSS\n    // sizes times the device pixel ratio.\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    const context = canvas.getContext('2d');\n    // Scale all drawing operations by the dpr\n    context.scale(dpr, dpr);\n    return context;\n}\n\n/**\n * Draws a stroked circle.\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} radius radius\n * @returns {void}\n */\nexport function drawCircle(context, x, y, radius) {\n    context.beginPath();\n    context.arc(x, y, radius, 0, 2 * Math.PI);\n    context.stroke();\n}\n\n/**\n * Draws a filled circle.\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} radius radius\n * @returns {void}\n */\nexport function drawFilledCircle(context, x, y, radius) {\n    context.beginPath();\n    context.arc(x, y, radius, 0, 2 * Math.PI);\n    context.fill();\n}\n\n/**\n * Draws a filled triangle like this: /\\\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} halfSize half of the size\n * @returns {void}\n */\nexport function drawTriangle(context, x, y, halfSize) {\n    context.beginPath();\n    context.moveTo(x - halfSize, y + halfSize);\n    context.lineTo(x + halfSize, y + halfSize);\n    context.lineTo(x, y - halfSize);\n    context.closePath();\n    context.fill();\n}\n\n/**\n * Draws a diamond like this: <>\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} halfSize half of the size\n * @returns {void}\n */\nexport function drawDiamond(context, x, y, halfSize) {\n    context.beginPath();\n    context.moveTo(x - halfSize, y);\n    context.lineTo(x, y - halfSize);\n    context.lineTo(x + halfSize, y);\n    context.lineTo(x, y + halfSize);\n    context.closePath();\n    context.fill();\n}\n\n/**\n * Draws an X\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} halfSize half of the size\n * @returns {void}\n */\nexport function drawX(context, x, y, halfSize) {\n    context.save();\n    context.lineWidth = 2;\n    context.beginPath();\n    context.moveTo(x - halfSize, y - halfSize);\n    context.lineTo(x + halfSize, y + halfSize);\n    context.moveTo(x - halfSize, y + halfSize);\n    context.lineTo(x + halfSize, y - halfSize);\n    context.stroke();\n    context.restore();\n}\n\n/**\n * Draws a trapezoid that looks like a rectangle but gets narrower at the right\n * end, so better show where one ends and the next begins.\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of top left\n * @param {number} y y coordinate of top left\n * @param {number} width width\n * @param {number} height height (of left side)\n * @param {number} height2 height (of right side)\n * @returns {void}\n */\nexport function drawNoteTrapezoid(context, x, y, width, height, height2) {\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x, y + height);\n    context.lineTo(x + width, y + (height / 2 + height2 / 2));\n    context.lineTo(x + width, y + (height / 2 - height2 / 2));\n    context.closePath();\n    context.fill();\n}\n\n/**\n * Draws a trapezoid that looks like a rectangle but gets narrower at the top\n * end, so better show where one ends and the next begins.\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of bounding rect's top left\n * @param {number} y y coordinate of bounding rect's top left\n * @param {number} width width (of bounding rect / bottom side)\n * @param {number} height height\n * @param {number} width2 width (of top side)\n * @returns {void}\n */\nexport function drawNoteTrapezoidUpwards(context, x, y, width, height, width2) {\n    context.beginPath();\n    context.lineTo(x, y + height);\n    context.lineTo(x + width, y + height);\n    context.lineTo(x + (width / 2 + width2 / 2), y);\n    context.lineTo(x + (width / 2 - width2 / 2), y);\n    context.closePath();\n    context.fill();\n}\n\n/**\n * Draws a rectangle with rounded corners, does not fill or stroke by itself\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of bounding rect's top left\n * @param {number} y y coordinate of bounding rect's top left\n * @param {number} width width\n * @param {number} height height\n * @param {number} radius rounding radius\n * @returns {void}\n */\nexport function drawRoundedRect(context, x, y, width, height, radius) {\n    if (width < 0) { return; }\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n}\n\n/**\n * Draws a hexagon\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} cx center x\n * @param {number} cy center y\n * @param {number} radius radius of the circle on which the points are placed\n */\nexport function drawHexagon(context, cx, cy, radius) {\n    context.beginPath();\n    for (let index = 0; index < 6; index++) {\n        // Start at 30° so snowflake can be drawn to the right\n        const angle = (60 * index + 30) / 180 * Math.PI;\n        const x = cx + Math.cos(angle) * radius;\n        const y = cy + Math.sin(angle) * radius;\n        if (index === 0) {\n            context.moveTo(x, y);\n        } else {\n            context.lineTo(x, y);\n        }\n    }\n    context.closePath();\n}\n","/**\n * Allows to record audio blobs.\n *\n * @example\n * Usage (only in async functions):\n *     const recorder = await recordAudio();\n *     recorder.start();\n *     // ...\n *     const audio = await recorder.stop();\n * stop() returns a Blob with audio data\n * @see https://medium.com/@bryanjenningz/how-to-record-and-play-audio-in-javascript-faa1b2b3e49b\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder\n * @returns {Promise} audio recorder\n */\nexport const recordAudio = () => {\n    return new Promise(async resolve => {\n        let stream;\n        try {\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        } catch (error) {\n            console.warn('[AudioInput] Cannot access audio', error);\n            return;\n        }\n        const options = {\n            audioBitsPerSecond: 128000,\n        };\n        const mediaRecorder = new MediaRecorder(stream, options);\n        let audioChunks = [];\n        // Add new data when it arrives\n        mediaRecorder.addEventListener('dataavailable', event => {\n            audioChunks.push(event.data);\n        });\n        // Starts recording\n        const start = () => {\n            if (!mediaRecorder) {\n                console.warn('[AudioInput] Cannot record audio, no microphone?');\n                return;\n            }\n            if (mediaRecorder.state === 'recording') { return; }\n            console.log(`[AudioInput] Recording @ ${mediaRecorder.audioBitsPerSecond} b/s`);\n            audioChunks = [];\n            mediaRecorder.start();\n        };\n        // Stops recording\n        const stop = () =>\n            new Promise(resolve => {\n                if (!mediaRecorder) { return; }\n                console.log('[AudioInput] Stopping audio recording');\n                mediaRecorder.addEventListener('stop', () => {\n                    // Audio blob contains the data to store on the server\n                    const blobOptions = { type: mediaRecorder.mimeType };\n                    const audioBlob = new Blob(audioChunks, blobOptions);\n                    // console.log(audioBlob);\n                    resolve(audioBlob);\n                });\n                mediaRecorder.stop();\n            });\n        resolve({ start, stop });\n    });\n};\n","import Note from '../types/Note';\n\n/**\n * Records incoming MIDI messages from a MIDI device.\n *\n * @example\n * Usage (only in async functions):\n *     const recorder = await recordMidi();\n *     recorder.start();\n *     const notes = recorder.stop();\n * @returns {Promise} MIDI recorder\n */\nexport const recordMidi = () => {\n    return new Promise(async resolve => {\n        let midiAccess;\n        try {\n            midiAccess = await navigator.requestMIDIAccess();\n        } catch (error) {\n            console.warn('[MidiInput] Cannot access MIDI', error);\n            return;\n        }\n        let messages = [];\n        // Add new data when it arrives\n        const addMessage = (message) => messages.push(message);\n        // Starts recording\n        const start = () => {\n            if (!midiAccess) {\n                console.warn('[MidiInput] Cannot record MIDI');\n                return;\n            }\n            // Do this here, in case devices changed\n            for (const input of midiAccess.inputs.values()) {\n                input.onmidimessage = addMessage;\n            }\n            console.log('[MidiInput] Starting recording');\n            messages = [];\n        };\n        // Stops recording\n        const stop = () => {\n            if (!midiAccess) { return; }\n            console.log('[MidiInput] Stopping recording');\n            // Process messages\n            const notes = processMidiMessagesToNotes(messages);\n            return notes;\n        };\n        resolve({ start, stop });\n    });\n};\n\n/**\n * Parses MIDI messages to Notes\n *\n * @private\n * @param {Oject[]} messages MIDI messages as they come from the WebMidi API\n * @returns {Note[]} notes\n */\nfunction processMidiMessagesToNotes(messages) {\n    // Keep track of currently sounding notes\n    const currentNotes = new Map();\n    const notes = [];\n    for (const message of messages) {\n        const device = message.target.name;\n        const time = message.timeStamp;\n        const commandAndChannel = message.data[0];\n        const channel = commandAndChannel % 16;\n        const command = commandAndChannel - channel;\n        const pitch = message.data[1];\n        // A velocity value might not be included with a noteOff command\n        const velocity = (message.data.length > 2) ? message.data[2] : 0;\n        switch (command) {\n        case 128:\n            noteOff(notes, currentNotes, device, time, pitch, channel);\n            break;\n        case 144:\n            if (velocity > 0) {\n                noteOn(currentNotes, device, time, pitch, channel, velocity);\n            } else {\n                noteOff(notes, currentNotes, device, time, pitch, channel);\n            }\n            break;\n        case 224:\n            // TODO: handle pitch wheel?\n            break;\n        default:\n            // TODO: handle other commands?\n        }\n    }\n    // Look for unfinished notes\n    if (currentNotes.size > 0) {\n        console.warn(`[MidiInput] Got ${currentNotes.size} unfinished notes`);\n    }\n    notes.sort((a, b) => a.start - b.start);\n    return notes;\n}\n\n/**\n * Handles note-on messages\n *\n * @private\n * @param {Map} currentNotes Map with started but not yet ended notes\n * @param {string} device device name\n * @param {number} time time stamp of the message\n * @param {number} pitch MIDI pitch in [0, 127]\n * @param {number} channel MIDI channel\n * @param {number} velocity MIDI velocity\n */\nfunction noteOn(currentNotes, device, time, pitch, channel, velocity) {\n    const note = new Note(pitch, time / 1000, velocity, channel);\n    const key = `${device}-${channel}-${pitch}`;\n    currentNotes.set(key, note);\n}\n\n/**\n * Handles note-off messages\n *\n * @private\n * @param {Note[]} notes finished notes\n * @param {Map} currentNotes Map with started but not yet ended notes\n * @param {string} device device name\n * @param {number} time time stamp of the message\n * @param {number} pitch MIDI pitch in [0, 127]\n * @param {number} channel MIDI channel\n */\nfunction noteOff(notes, currentNotes, device, time, pitch, channel) {\n    // Look for note start\n    const key = `${device}-${channel}-${pitch}`;\n    if (!currentNotes.has(key)) {\n        console.warn(`[MidiInput] Missing note-on for note-off with key ${key}`);\n        return;\n    }\n    const note = currentNotes.get(key);\n    note.end = time / 1000;\n    notes.push(note);\n    currentNotes.delete(key);\n}\n","import Note from '../types/Note';\n\n/**\n * Handles incoming MIDI messages from a MIDI device.\n */\nclass MidiInputManager {\n\n    #getMidiLiveData;\n    #setMidiLiveData;\n    #addCurrentNote;\n    #removeCurrentNote;\n\n    /**\n     * Constructor with callback functions\n     *\n     * @param {Function} getMidiLiveData a function called by this object to get\n     *      the currently recorded MIDI notes from App.js, where the\n     *      MidiInputManager instance should be created\n     *      Example for how to defined getMidiLiveData as method in App.js:\n     *          getMidiLiveData = () => this.state.midiLiveData;\n     * @param {Function} setMidiLiveData a function called by this object to\n     *      update the currently MIDI notes in App.js\n     *      Example:\n     *          setMidiLiveData = (data) => {\n     *              // Work-around so note_off event handling can\n     *              // immediately find the note_on event\n     *              this.state.midiLiveData = data;\n     *              this.setState({ midiLiveData: data });\n     *          };\n     * @param {Function} addCurrentNote a function called by this object to add\n     *      a currently played note (e.g. currently pressed piano key)\n     *      Example:\n     *          addCurrentNote = (note) => {\n     *              const newMap = new Map(this.state.currentNotes).set(note.pitch, note);\n     *              this.setState({ currentNotes: newMap });\n     *          }\n     * @param {Function} removeCurrentNote a function called by this object to\n     *      remove a currently played note\n     *      Example:\n     *          removeCurrentNote = (pitch) => {\n     *              const newMap = new Map(this.state.currentNotes).delete(pitch);\n     *              this.setState({ currentNotes: newMap });\n     *          }\n     */\n    constructor(\n        getMidiLiveData,\n        setMidiLiveData,\n        addCurrentNote = () => {},\n        removeCurrentNote = () => {},\n    ) {\n        this.#getMidiLiveData = getMidiLiveData;\n        this.#setMidiLiveData = setMidiLiveData;\n        this.#addCurrentNote = addCurrentNote;\n        this.#removeCurrentNote = removeCurrentNote;\n        // Request MIDI access\n        if (navigator.requestMIDIAccess) {\n            navigator.requestMIDIAccess().then(this._onMIDISuccess, this._onMIDIFailure);\n        } else {\n            console.error('[MidiInput] WebMIDI is not supported in this browser.');\n            alert('You browser does not support WebMIDI');\n        }\n    }\n\n    /**\n     * Handles a successful MIDI access request\n     *\n     * @private\n     * @param {*} midiAccess MIDI access\n     */\n    _onMIDISuccess = (midiAccess) => {\n        // console.log(midiAccess);\n        console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} input devices`);\n        for (const input of midiAccess.inputs.values()) {\n            console.log(` - ${input.name}`);\n            input.onmidimessage = this._handleMIDIMessage;\n        }\n        console.groupEnd();\n        // console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} output devices`);\n        // for (let output of midiAccess.outputs.values()) {\n        //     console.log(` - ${output.name}`);\n        // }\n        // console.groupEnd();\n    }\n\n    /**\n     * Handles MIDI access errors\n     *\n     * @private\n     * @param {*} error error\n     */\n    _onMIDIFailure(error) {\n        console.error('[MidiInput] Cannot access MIDI devices.', error);\n    }\n\n    /**\n     * Handles incoming MIDI messages\n     *\n     * @private\n     * @param {*} message MIDI message\n     */\n    _handleMIDIMessage = (message) => {\n        // console.log(message);\n        const device = message.target.name;\n        const commandAndChannel = message.data[0];\n        const channel = commandAndChannel % 16;\n        const command = commandAndChannel - channel;\n        const time = message.timeStamp;\n        const pitch = message.data[1];\n        // A velocity value might not be included with a noteOff command\n        const velocity = (message.data.length > 2) ? message.data[2] : 0;\n        switch (command) {\n        case 128:\n            this._noteOff(device, time, pitch, channel);\n            break;\n        case 144:\n            if (velocity > 0) {\n                this._noteOn(device, time, pitch, channel, velocity);\n            } else {\n                this._noteOff(device, time, pitch, channel);\n            }\n            break;\n        case 224:\n            // TODO: handle pitch wheel?\n            break;\n        default:\n            // TODO: handle other commands?\n        }\n    }\n\n    /**\n     * Handles note-on messages\n     *\n     * @private\n     * @param {string} device device name\n     * @param {number} time time stamp of the message\n     * @param {number} pitch MIDI pitch in [0, 127]\n     * @param {number} channel MIDI channel\n     * @param {number} velocity MIDI velocity\n     */\n    _noteOn(device, time, pitch, channel, velocity) {\n        const note = new Note(pitch, time / 1000, velocity, channel);\n        // Add current note\n        this.#addCurrentNote(note);\n        // Update recorded MIDI data\n        // TODO: probably better to only update on note-off,\n        // Then we need internal cache\n        // But this might be good, since only 'unfinished' notes need to be checked on note-off,\n        // so we can remove finished notes from the cache\n        let midiData = this.#getMidiLiveData();\n        midiData = [...midiData, note];\n        this.#setMidiLiveData(midiData);\n    }\n\n    /**\n     * Handles note-off messages by updating the end time of the corresponding\n     * note\n     *\n     * @private\n     * @param {string} device device name\n     * @param {number} time time stamp of the message\n     * @param {number} pitch MIDI pitch in [0, 127]\n     * @param {number} channel MIDI channel\n     */\n    _noteOff(device, time, pitch, channel) {\n        const midiData = this.#getMidiLiveData();\n        if (midiData.length === 0) {\n            // If we have to wait for the setState to process, try again\n            setTimeout(() => this._noteOff(time, pitch), 10);\n        }\n        // Go back to latest note with the same pitch and channel and add the end time\n        let index = midiData.length - 1;\n        // TODO: if there are multiple instruments or channels, check also for those\n        while (midiData[index].pitch !== pitch || midiData[index].channel !== channel) {\n            index--;\n            if (index < 0) {\n                console.warn('[MidiInput] Did not find note-on event for note-off event!');\n                break;\n            }\n        }\n        if (index >= 0) {\n            // Note successfully found, update data\n            midiData[index].end = time / 1000;\n            this.#setMidiLiveData(midiData);\n            this.#removeCurrentNote(pitch);\n        }\n    }\n}\n\nexport default MidiInputManager;\n","import { choose, randFloat } from '../utils/MathUtils';\nimport Note from '../types/Note';\nimport { randomNormal, randomInt, group } from 'd3';\n\n/**\n * @module instruments/Drums\n */\n\n/**\n * Pitches that are mapped onto themselves are included for other information.\n * Millenium MPS-850 https://www.thomann.de/de/millenium_mps_850_e_drum_set.htm\n *\n * Notation info (line and shape of symbol) so drum notation can generate a lookup from this\n * https://en.wikipedia.org/wiki/Percussion_notation#/media/File:Sibelius_drum_legend.png\n * Lines start with 0 at the top above the top most horizontal notation line,\n * using incremental integers for every possible position, i.e. for on and between lines\n *\n * Legend:\n *  Map key: The orignal pitch from the input data\n *  repPitch: Replacement pitch, used to simplify multiple zones into one\n *  zone: Zone of the instrument this pitch comes from\n *  order: visual order ranking of this intrumentin the UI (top-bottom or left-right)\n *  line: y position in the drum notation (using integers for every possible position)\n *  shape: Note shape in notation: triangle, <>, x, o, ostroke, xstroke\n *  label: Short label for this intrument\n *  name: Full name of this instrument\n */\nexport const drumPitchReplacementMapMPS850 = new Map([\n    // Crash 1\n    [49, { repPitch: 49, zone: 1, order: 10, line: -1, shape: 'o', label: 'CC1', name: 'Crash Cymbal 1' }],\n    [55, { repPitch: 49, zone: 2, order: 11, line: -1, shape: 'o', label: 'CC1', name: 'Crash Cymbal 1' }],\n    // Crash 2\n    [52, { repPitch: 57, zone: 1, order: 20, line: 0, shape: 'o', label: 'CC2', name: 'Crash Cymbal 2' }],\n    [57, { repPitch: 57, zone: 2, order: 21, line: 0, shape: 'o', label: 'CC2', name: 'Crash Cymbal 2' }],\n    // Hi-hat stick\n    [22, { repPitch: 46, zone: 1, order: 30, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\n    [26, { repPitch: 46, zone: 2, order: 31, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\n    [42, { repPitch: 46, zone: 3, order: 32, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\n    [46, { repPitch: 46, zone: 4, order: 33, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\n    // Hi-hat pedal\n    [44, { repPitch: 44, zone: 1, order: 40, line: 9, shape: 'o', label: 'HHP', name: 'Hi-Hat Pedal' }],\n    // Ride\n    [51, { repPitch: 51, zone: 1, order: 50, line: 1, shape: 'x', label: 'Rd', name: 'Ride Cymbal' }],\n    [53, { repPitch: 51, zone: 2, order: 51, line: 1, shape: 'x', label: 'Rd', name: 'Ride Cymbal' }],\n    [59, { repPitch: 51, zone: 3, order: 52, line: 1, shape: 'x', label: 'Rd', name: 'Ride Cymbal' }],\n    // Snare\n    [38, { repPitch: 38, zone: 1, order: 60, line: 4, shape: 'o', label: 'SN', name: 'Snare' }],\n    [40, { repPitch: 38, zone: 2, order: 61, line: 4, shape: 'o', label: 'SN', name: 'Snare' }],\n    // Tom 1\n    [48, { repPitch: 48, zone: 1, order: 90, line: 2, shape: 'o', label: 'T1', name: 'Tom 1' }],\n    [50, { repPitch: 48, zone: 2, order: 91, line: 2, shape: 'o', label: 'T1', name: 'Tom 1' }],\n    // Tom 2\n    [45, { repPitch: 45, zone: 1, order: 100, line: 3, shape: 'o', label: 'T2', name: 'Tom 2' }],\n    [47, { repPitch: 45, zone: 2, order: 101, line: 3, shape: 'o', label: 'T2', name: 'Tom 2' }],\n    // Stand tom 1\n    [43, { repPitch: 43, zone: 1, order: 70, line: 5, shape: 'o', label: 'ST1', name: 'Stand Tom 1' }],\n    [58, { repPitch: 43, zone: 2, order: 71, line: 5, shape: 'o', label: 'ST1', name: 'Stand Tom 1' }],\n    // Stand tom 2\n    [39, { repPitch: 41, zone: 1, order: 80, line: 6, shape: 'o', label: 'ST2', name: 'Stand Tom 2' }],\n    [41, { repPitch: 41, zone: 2, order: 81, line: 6, shape: 'o', label: 'ST2', name: 'Stand Tom 2' }],\n    // Bass drum\n    [35, { repPitch: 36, zone: 1, order: 110, line: 8, shape: 'o', label: 'BD', name: 'Bass Drum' }],\n    [36, { repPitch: 36, zone: 2, order: 111, line: 8, shape: 'o', label: 'BD', name: 'Bass Drum' }],\n]);\n\n/**\n * Generates a variation of an array of notes by adding, removing or changing notes\n *\n * @param {Note[]} data array of notes\n * @param {number} deviation width of the Gauss kernel\n * @param {number} pAdd probability of adding a note after each note\n * @param {number} pRemove probability of removing each note\n * @returns {Note[]} variated Note array\n */\nexport function generateDrumVariation(data, deviation = 1, pAdd = 0.1, pRemove = 0.1) {\n    // Only use pitches that occur in the GT data\n    const usedPitches = new Set();\n    for (const note of data) {\n        usedPitches.add(note.pitch);\n    }\n    const pitches = [...usedPitches];\n    // Create variation by adding, removing, and shifting notes\n    const randVelocity = randomInt(15, 128);\n    const randTime = randomNormal(0, deviation);\n    const variation = [];\n    for (const note of data) {\n        // Add and remove notes at random\n        if (randFloat(0, 1) < pAdd) {\n            // Add another note\n            const start = note.start + randFloat(0, 1);\n            const end = start + randFloat(0, 1);\n            const velocity = randVelocity();\n            const pitch = choose(pitches);\n            variation.push(new Note(\n                pitch,\n                start,\n                velocity,\n                0,\n                end,\n            ));\n        }\n        if (randFloat(0, 1) < pRemove) {\n            // Remove note (just add nothing to varation)\n        } else {\n            // Shift timings at random\n            const start = note.start + randTime();\n            const end = note.end + randTime();\n            // Get new note\n            const newNote = Note.from(note);\n            newNote.start = Math.min(start, end);\n            newNote.end = Math.max(start, end);\n            variation.push(newNote);\n        }\n    }\n    // Sort notes by start just in case\n    variation.sort((a, b) => a.start - b.start);\n    return variation;\n}\n\n/**\n * Replaces pitches based on replacementMap\n *\n * @param {Note[]} notes notes\n * @param {Map} replacementMap a map pitch->replacementPitch\n * @returns {Notes[]} notes with replaced pitches\n * @throws {Error} when replacementMap is missing\n */\nexport function simplifyDrumPitches(notes, replacementMap) {\n    if (!replacementMap || !(replacementMap instanceof Map)) {\n        throw 'No replacement map given!';\n    }\n    const errors = new Set();\n    const simplified = notes.map(note => {\n        const oldPitch = note.pitch;\n        let newPitch = oldPitch;\n        if (!replacementMap.has(oldPitch)) {\n            errors.add(oldPitch);\n        } else {\n            newPitch = replacementMap.get(oldPitch).repPitch;\n        }\n        const newNote = Note.from({ ...note, pitch: newPitch });\n        return newNote;\n    });\n    // TODO: return errors, do not log! also easier to test\n    // if (errors.size > 0) {\n    //     console.warn(`Cannot replace all pitches, replacementMap misses entry for these pitches:`);\n    //     console.log(Array.from(errors));\n    // }\n    return simplified;\n    // return { simplified, errors };\n}\n\n/**\n * Returns a Map:pitch->yPosIndex for views to lookup which row\n * a pitch has to be drawn in\n *\n * @param {Map} replacementMap a pitch replacement map\n * @returns {Map} Map:pitch->yPosIndex\n */\nexport function getPitch2PositionMap(replacementMap) {\n    const result = new Map();\n    const uniqeRows = [...group([...replacementMap], d => d[1].repPitch)];\n    uniqeRows.sort((a, b) => a[1][0][1].order - b[1][0][1].order);\n    for (const [index, d] of uniqeRows.entries()) {\n        result.set(d[0], index);\n    }\n    return result;\n}\n","import { randFloat } from '../utils/MathUtils';\nimport { getMidiNoteByNr, getMidiNoteByLabel } from '../fileFormats/Midi';\nimport GuitarNote from '../types/GuitarNote';\nimport { randomInt, extent } from 'd3';\nimport { arrayShallowEquals } from '../utils/ArrayUtils';\n\n/**\n * @module instruments/Guitar\n */\n\n/**\n * Represents a tuning of a fretted string instrument.\n */\nexport class StringedTuning {\n    /**\n     * Represents a tuning of a fretted string instrument.\n     *\n     * @param {string} name name\n     * @param {string[]} notes array of notes, e.g. ['E2', 'A2', 'D3', ...]\n     */\n    constructor(name, notes) {\n        this.name = name;\n        this.notes = notes;\n        this.short = notes.join(' ');\n        this.pitches = notes.map(note => getMidiNoteByLabel(note).pitch);\n        this.stringCount = notes.length;\n    }\n}\n\n/**\n * Maps from instrument to string number to list of tunings.\n * Defaults are at the top.\n *\n * @example stringedTunings.get('Guitar').get(6) for 6-string guitar tunings\n * @todo add more? https://en.wikipedia.org/wiki/List_of_guitar_tunings\n * @todo replace arrays by maps? tuning name - tuning\n */\nexport const stringedTunings = new Map([\n    ['Guitar', new Map([\n        [6, [\n            new StringedTuning('E stand.', ['E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\n            new StringedTuning('Drop D', ['D2', 'A2', 'D3', 'G3', 'B3', 'E4']),\n            new StringedTuning('Drop C', ['C2', 'G2', 'C3', 'F3', 'A3', 'D4']),\n            new StringedTuning('1/2 down', ['D#2', 'G#2', 'C#3', 'F#3', 'A#3', 'D#4']),\n            new StringedTuning('1 down', ['D2', 'G2', 'C3', 'F3', 'A3', 'D4']),\n            new StringedTuning('2 down', ['C2', 'F2', 'A#2', 'D#3', 'G3', 'C4']),\n            new StringedTuning('DADGAG', ['D2', 'A2', 'D3', 'G3', 'A3', 'D4']),\n        ]],\n        [7, [\n            new StringedTuning('B stand.', ['B1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\n            new StringedTuning('Drop A', ['A1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\n            new StringedTuning('1/2 down', ['A#1', 'D#2', 'G#2', 'C#3', 'F#3', 'A#3', 'D#4']),\n            new StringedTuning('1 down', ['A1', 'D2', 'G2', 'C3', 'F3', 'A3', 'D4']),\n            new StringedTuning('2 down', ['G1', 'C2', 'F2', 'A#2', 'D#3', 'G3', 'C4']),\n        ]],\n        [8, [\n            new StringedTuning('F# stand.', ['F#1', 'B1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\n            new StringedTuning('Drop E', ['E1', 'B1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\n            new StringedTuning('1/2 down', ['F1', 'A#1', 'D#2', 'G#2', 'C#3', 'F#3', 'A#3', 'D#4']),\n            new StringedTuning('1 down', ['E1', 'A1', 'D2', 'G2', 'C3', 'F3', 'A3', 'D4']),\n            new StringedTuning('2 down', ['D1', 'G1', 'C2', 'F2', 'A#2', 'D#3', 'G3', 'C4']),\n        ]],\n    ])],\n    ['Bass', new Map([\n        [4, [\n            new StringedTuning('E stand.', ['E1', 'A1', 'D2', 'G2']),\n            new StringedTuning('Drop D', ['D1', 'A1', 'D2', 'G2']),\n            new StringedTuning('1/2 down', ['D#1', 'G#1', 'C#2', 'F#2']),\n            new StringedTuning('1 down', ['D1', 'G1', 'C2', 'F2']),\n            new StringedTuning('2 down', ['C1', 'F1', 'A#1', 'D#2']),\n        ]],\n        [5, [\n            new StringedTuning('B stand.', ['B0', 'E1', 'A1', 'D2', 'G2']),\n            new StringedTuning('Drop A', ['A0', 'D1', 'A1', 'D2', 'G2']),\n            new StringedTuning('1/2 down', ['A#0', 'D#1', 'G#1', 'C#2', 'F#2']),\n            new StringedTuning('1 down', ['A0', 'D1', 'G1', 'C2', 'F2']),\n            new StringedTuning('2 down', ['G0', 'C1', 'F1', 'A#1', 'D#2']),\n        ]],\n        [6, [\n            new StringedTuning('F# stand.', ['F#0', 'B0', 'E1', 'A1', 'D2', 'G2']),\n            new StringedTuning('Drop E', ['E0', 'A0', 'D1', 'A1', 'D2', 'G2']),\n            new StringedTuning('1/2 down', ['F0', 'A#0', 'D#1', 'G#1', 'C#2', 'F#2']),\n            new StringedTuning('1 down', ['E1', 'A0', 'D1', 'G1', 'C2', 'F2']),\n            new StringedTuning('2 down', ['D0', 'G0', 'C1', 'F1', 'A#1', 'D#2']),\n        ]],\n    ])],\n    ['Ukulele', new Map([\n        [4, [\n            new StringedTuning('Hawaii', ['G4', 'C4', 'E4', 'A4']),\n            new StringedTuning('Low G', ['G3', 'C4', 'E4', 'A4']),\n            new StringedTuning('D-tuning', ['A4', 'D4', 'F#4', 'B4']),\n            new StringedTuning('Canadian', ['A3', 'D4', 'F#4', 'B4']),\n            new StringedTuning('Bariton', ['D3', 'G3', 'B3', 'E4']),\n        ]],\n    ])],\n]);\n\n/**\n * For Notes that have a guitar string encoded in their channel, this function\n * allows to convert them to a GuitarNote.\n *\n * @param {Note} note a Note that has the guitar string stored in its channel\n *      e.g. 0 to 5 for a six string\n * @param {StringedTuning} tuning tuning\n * @returns {GuitarNote} a GuitarNote\n */\nexport function guitarNoteFromNote(note, tuning) {\n    const string = note.channel;\n    const reversedString = tuning.stringCount - string - 1;\n    const fret = note.pitch - tuning.pitches[reversedString];\n    return GuitarNote.fromNote(note, string, fret);\n}\n\n/**\n * Returns a tuning with the specified pitches or null if none found.\n *\n * @param {number[]} pitches pitches of the tuning, same order as in\n *      Guitar.js' stringedTunings, i.e. low to high notes\n * @returns {StringedTuning|null} the found tuning or null\n */\nexport function getTuningFromPitches(pitches) {\n    const stringCount = pitches.length;\n    for (const stringCountMap of stringedTunings.values()) {\n        if (stringCountMap.has(stringCount)) {\n            const tunings = stringCountMap.get(stringCount);\n            for (const t of tunings) {\n                if (arrayShallowEquals(t.pitches, pitches)) {\n                    return t;\n                }\n            }\n        }\n    }\n    return null;\n}\n\n/**\n * Returns the pitch range of a tuning, given the number of frets.\n *\n * @param {StringedTuning} tuning tuning\n * @param {number} fretCount number of frets the instrument has (default: 24)\n * @returns {number[]} [minPitch, maxPitch]\n */\nexport function getTuningPitchRange(tuning, fretCount = 24) {\n    // const openExtent = extent(tuning.pitches);\n    const openMax = tuning.pitches[tuning.stringCount - 1];\n    const openMin = tuning.pitches[0];\n    return [openMin, openMax + fretCount];\n}\n\n/**\n * Colors for guitar strings, acces via stringColor[string]\n * where string in [1, 8].\n */\nexport const stringColors = [\n    '#888',\n    '#d122e9',\n    '#31eb1c',\n    '#f37c14',\n    '#10edfc',\n    '#ffeb09',\n    '#ff210d',\n    'silver',\n    'gold',\n];\n\n/**\n * Returns the pitch of a note at a given fretboard position.\n *\n * @param {number} string string\n * @param {number} fret fret\n * @param {StringedTuning} tuning tuning\n * @returns {number} pitch\n */\nexport function getPitchFromFretboardPos(string, fret, tuning) {\n    // Order is reversed, since tunings are named from bass to treble\n    // but strings are numbered the other direction...\n    const reversedString = tuning.stringCount - string + 1;\n    const openPitch = tuning.pitches[reversedString - 1];\n    return openPitch + fret;\n}\n\n/**\n * Returns MIDI attributes of a note at a given fretboard position, e.g. C#\n *\n * @param {number} string string\n * @param {number} fret fret\n * @param {StringedTuning} tuning tuning\n * @returns {object} note info, e.g. { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\n */\nexport function getNoteInfoFromFretboardPos(string, fret, tuning) {\n    const pitch = getPitchFromFretboardPos(string, fret, tuning);\n    return getMidiNoteByNr(pitch);\n}\n\n/**\n * Finds all fretboard positions with this exact pitch.\n *\n * @param {number} pitch MIDI pitch\n * @param {StringedTuning} tuning tuning\n * @param {number} fretCount number of frets the instrument has\n * @returns {object[]} positions\n */\nexport function getFretboardPositionsFromPitch(pitch, tuning, fretCount) {\n    const positions = [];\n    const stringCount = tuning.stringCount;\n    for (let string = 0; string < stringCount; string++) {\n        const openPitch = tuning.pitches[string];\n        // Rule out strings where pitch is lower than open string\n        if (pitch < openPitch) {\n            continue;\n        }\n        // Rule out strings where pitch is higher than highest fret\n        if (pitch > openPitch + fretCount) {\n            continue;\n        }\n        positions.push({\n            // Convert so string 1 is treble\n            string: stringCount - string,\n            fret: pitch - openPitch,\n        });\n    }\n    return positions;\n}\n\n/**\n * Finds all fretboard positions with this note in all octaves.\n *\n * @param {string} name note name, e.g. 'C#'\n * @param {StringedTuning} tuning tuning\n * @param {number} fretCount number of frets the instrument has\n * @returns {object[]} positions\n */\nexport function getFretboardPositionsFromNoteName(name, tuning, fretCount = 24) {\n    const n = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n    if (!n.includes(name)) { return null; }\n    const positions = [];\n    const lowestPitch = n.indexOf(name);\n    const stringCount = tuning.stringCount;\n    for (let string = 0; string < stringCount; string++) {\n        // First fret where this note appears\n        const openPitch = tuning.pitches[string];\n        let fret = lowestPitch - (openPitch % 12);\n        if (fret < 0) {\n            fret += 12;\n        }\n        while (fret <= fretCount) {\n            positions.push({\n                // Convert so string 1 is treble\n                string: stringCount - string,\n                fret,\n            });\n            // Go to next octave\n            fret += 12;\n        }\n    }\n    return positions;\n}\n\n/**\n * Generates example MIDI-like data (preprocessed MIDI).\n *\n * @param {number} startTime start tick\n * @param {number} count number of notes to generate\n * @param {StringedTuning} tuning tuning\n * @returns {GuitarNote[]} notes\n */\nexport function generateExampleData(startTime = 0, count = 50, tuning) {\n    let currentTime = startTime;\n    return Array.from({ length: count })\n        .map(() => {\n            const start = currentTime + randFloat(0, 1);\n            currentTime = start + randFloat(0, 1);\n            const string = randomInt(1, 7)();\n            const fret = randomInt(0, 25)();\n            const pitch = getPitchFromFretboardPos(string, fret, tuning);\n            const velocity = randomInt(15, 127)();\n            return new GuitarNote(\n                pitch,\n                start,\n                velocity,\n                string,\n                currentTime,\n                string,\n                fret,\n            );\n        });\n}\n\n/**\n * Estimates the fretboard position from MIDI notes\n *\n * @todo does not work well yet\n * @param {Note[]} notes notes with only MIDI information\n * @param {StringedTuning} tuning tuning\n * @param {number} fretCount number of frets the instrument has\n * @returns {GuitarNote[]} GuitarNotes with fretboard positions\n */\nexport function fretboardPositionsFromMidi(notes, tuning, fretCount = 24) {\n    if (!notes || notes.length === 0) { return []; }\n    if (!tuning || !tuning.pitches) {\n        console.warn('Invalid tuning parameter!');\n        return [];\n    }\n    // Sort notes that cannot be played out in advance for better performance\n    const [minPitch, maxPitch] = getTuningPitchRange(tuning, fretCount);\n    const possibleNotes = [];\n    const errorPitches = [];\n    for (const note of notes) {\n        if (note.pitch < minPitch || note.pitch > maxPitch) {\n            errorPitches.push(note.pitch);\n        } else {\n            possibleNotes.push(note);\n        }\n    }\n    const result = [];\n    for (const note of possibleNotes) {\n        const positions = getFretboardPositionsFromPitch(note.pitch, tuning, 24);\n        // Choose best position\n        // TODO: improve this to make it easier to play, take closest postion to prior one\n        let bestPos = positions[0];\n        for (const pos of positions) {\n            if (pos.fret < bestPos.fret) {\n                bestPos = pos;\n            }\n        }\n        const { string, fret } = bestPos;\n        result.push(GuitarNote.fromNote(note, string, fret));\n    }\n    // Give advice on transposing for better results\n    if (errorPitches.length > 0) {\n        const [minDataPitch, maxDataPitch] = extent(notes, d => d.pitch);\n        let advice = '';\n        if (minDataPitch < minPitch) {\n            advice += `Transpose by ${minPitch - minDataPitch} semitones`;\n        }\n        if (maxPitch < maxDataPitch) {\n            advice += `Transpose by ${maxPitch - maxDataPitch} semitones`;\n        }\n        console.warn(\n            `Cannot find a fretboard position for ${errorPitches.length} pitches, try another tuning instead:\\n`,\n            errorPitches,\n            `\\nCurrent tuning's pitch range is ${minPitch} - ${maxPitch}`,\n            `\\ndata pitch range is ${minDataPitch} - ${maxDataPitch}\\n`,\n            advice,\n        );\n    }\n    return result;\n}\n\n// /**\n//  * @todo chords always? use 4-fret-blocks\n//  * @param {GuitarNote[]} notes notes with fretboard positions\n//  * @returns {?} fingering information\n//  */\n// export function fingeringFromFretboardPositions(notes) {\n//     // TODO: detect chords first?\n//     // TODO: then lookup chords' fingerings from a lookup table\n\n//     // TODO: alternatively (as fallback) use heuristics\n\n//     // TODO: or try to do it like humans do when playing\n\n//     // TODO: consider prior and following notes/chords!\n\n// }\n","/**\r\n * Fill a string with a repeated character\r\n *\r\n * @param character\r\n * @param repetition\r\n */\r\nconst fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\r\nfunction deprecate(original, alternative, fn) {\r\n    return function (...args) {\r\n        // tslint:disable-next-line\r\n        console.warn(`${original} is deprecated. Use ${alternative}.`);\r\n        return fn.apply(this, args);\r\n    };\r\n}\n\nfunction isNamed(src) {\r\n    return src !== null && typeof src === \"object\" && typeof src.name === \"string\"\r\n        ? true\r\n        : false;\r\n}\n\nfunction isPitch(pitch) {\r\n    return pitch !== null &&\r\n        typeof pitch === \"object\" &&\r\n        typeof pitch.step === \"number\" &&\r\n        typeof pitch.alt === \"number\"\r\n        ? true\r\n        : false;\r\n}\r\n// The number of fifths of [C, D, E, F, G, A, B]\r\nconst FIFTHS = [0, 2, 4, -1, 1, 3, 5];\r\n// The number of octaves it span each step\r\nconst STEPS_TO_OCTS = FIFTHS.map((fifths) => Math.floor((fifths * 7) / 12));\r\nfunction encode(pitch) {\r\n    const { step, alt, oct, dir = 1 } = pitch;\r\n    const f = FIFTHS[step] + 7 * alt;\r\n    if (oct === undefined) {\r\n        return [dir * f];\r\n    }\r\n    const o = oct - STEPS_TO_OCTS[step] - 4 * alt;\r\n    return [dir * f, dir * o];\r\n}\r\n// We need to get the steps from fifths\r\n// Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\r\n// We add 1 to fifths to avoid negative numbers, so:\r\n// for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\r\nconst FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\r\nfunction decode(coord) {\r\n    const [f, o, dir] = coord;\r\n    const step = FIFTHS_TO_STEPS[unaltered(f)];\r\n    const alt = Math.floor((f + 1) / 7);\r\n    if (o === undefined) {\r\n        return { step, alt, dir };\r\n    }\r\n    const oct = o + 4 * alt + STEPS_TO_OCTS[step];\r\n    return { step, alt, oct, dir };\r\n}\r\n// Return the number of fifths as if it were unaltered\r\nfunction unaltered(f) {\r\n    const i = (f + 1) % 7;\r\n    return i < 0 ? 7 + i : i;\r\n}\n\nconst NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\r\nconst cache = new Map();\r\nconst stepToLetter = (step) => \"CDEFGAB\".charAt(step);\r\nconst altToAcc = (alt) => alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\r\nconst accToAlt = (acc) => acc[0] === \"b\" ? -acc.length : acc.length;\r\n/**\r\n * Given a note literal (a note name or a note object), returns the Note object\r\n * @example\r\n * note('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\r\n */\r\nfunction note(src) {\r\n    const cached = cache.get(src);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const value = typeof src === \"string\"\r\n        ? parse(src)\r\n        : isPitch(src)\r\n            ? note(pitchName(src))\r\n            : isNamed(src)\r\n                ? note(src.name)\r\n                : NoNote;\r\n    cache.set(src, value);\r\n    return value;\r\n}\r\nconst REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\r\n/**\r\n * @private\r\n */\r\nfunction tokenizeNote(str) {\r\n    const m = REGEX.exec(str);\r\n    return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction coordToNote(noteCoord) {\r\n    return note(decode(noteCoord));\r\n}\r\nconst mod = (n, m) => ((n % m) + m) % m;\r\nconst SEMI = [0, 2, 4, 5, 7, 9, 11];\r\nfunction parse(noteName) {\r\n    const tokens = tokenizeNote(noteName);\r\n    if (tokens[0] === \"\" || tokens[3] !== \"\") {\r\n        return NoNote;\r\n    }\r\n    const letter = tokens[0];\r\n    const acc = tokens[1];\r\n    const octStr = tokens[2];\r\n    const step = (letter.charCodeAt(0) + 3) % 7;\r\n    const alt = accToAlt(acc);\r\n    const oct = octStr.length ? +octStr : undefined;\r\n    const coord = encode({ step, alt, oct });\r\n    const name = letter + acc + octStr;\r\n    const pc = letter + acc;\r\n    const chroma = (SEMI[step] + alt + 120) % 12;\r\n    const height = oct === undefined\r\n        ? mod(SEMI[step] + alt, 12) - 12 * 99\r\n        : SEMI[step] + alt + 12 * (oct + 1);\r\n    const midi = height >= 0 && height <= 127 ? height : null;\r\n    const freq = oct === undefined ? null : Math.pow(2, (height - 69) / 12) * 440;\r\n    return {\r\n        empty: false,\r\n        acc,\r\n        alt,\r\n        chroma,\r\n        coord,\r\n        freq,\r\n        height,\r\n        letter,\r\n        midi,\r\n        name,\r\n        oct,\r\n        pc,\r\n        step,\r\n    };\r\n}\r\nfunction pitchName(props) {\r\n    const { step, alt, oct } = props;\r\n    const letter = stepToLetter(step);\r\n    if (!letter) {\r\n        return \"\";\r\n    }\r\n    const pc = letter + altToAcc(alt);\r\n    return oct || oct === 0 ? pc + oct : pc;\r\n}\n\nconst NoInterval = { empty: true, name: \"\", acc: \"\" };\r\n// shorthand tonal notation (with quality after number)\r\nconst INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\r\n// standard shorthand notation (with quality before number)\r\nconst INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\r\nconst REGEX$1 = new RegExp(\"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\");\r\n/**\r\n * @private\r\n */\r\nfunction tokenizeInterval(str) {\r\n    const m = REGEX$1.exec(`${str}`);\r\n    if (m === null) {\r\n        return [\"\", \"\"];\r\n    }\r\n    return m[1] ? [m[1], m[2]] : [m[4], m[3]];\r\n}\r\nconst cache$1 = {};\r\n/**\r\n * Get interval properties. It returns an object with:\r\n *\r\n * - name: the interval name\r\n * - num: the interval number\r\n * - type: 'perfectable' or 'majorable'\r\n * - q: the interval quality (d, m, M, A)\r\n * - dir: interval direction (1 ascending, -1 descending)\r\n * - simple: the simplified number\r\n * - semitones: the size in semitones\r\n * - chroma: the interval chroma\r\n *\r\n * @param {string} interval - the interval name\r\n * @return {Object} the interval properties\r\n *\r\n * @example\r\n * import { interval } from '@tonaljs/core'\r\n * interval('P5').semitones // => 7\r\n * interval('m3').type // => 'majorable'\r\n */\r\nfunction interval(src) {\r\n    return typeof src === \"string\"\r\n        ? cache$1[src] || (cache$1[src] = parse$1(src))\r\n        : isPitch(src)\r\n            ? interval(pitchName$1(src))\r\n            : isNamed(src)\r\n                ? interval(src.name)\r\n                : NoInterval;\r\n}\r\nconst SIZES = [0, 2, 4, 5, 7, 9, 11];\r\nconst TYPES = \"PMMPPMM\";\r\nfunction parse$1(str) {\r\n    const tokens = tokenizeInterval(str);\r\n    if (tokens[0] === \"\") {\r\n        return NoInterval;\r\n    }\r\n    const num = +tokens[0];\r\n    const q = tokens[1];\r\n    const step = (Math.abs(num) - 1) % 7;\r\n    const t = TYPES[step];\r\n    if (t === \"M\" && q === \"P\") {\r\n        return NoInterval;\r\n    }\r\n    const type = t === \"M\" ? \"majorable\" : \"perfectable\";\r\n    const name = \"\" + num + q;\r\n    const dir = num < 0 ? -1 : 1;\r\n    const simple = num === 8 || num === -8 ? num : dir * (step + 1);\r\n    const alt = qToAlt(type, q);\r\n    const oct = Math.floor((Math.abs(num) - 1) / 7);\r\n    const semitones = dir * (SIZES[step] + alt + 12 * oct);\r\n    const chroma = (((dir * (SIZES[step] + alt)) % 12) + 12) % 12;\r\n    const coord = encode({ step, alt, oct, dir });\r\n    return {\r\n        empty: false,\r\n        name,\r\n        num,\r\n        q,\r\n        step,\r\n        alt,\r\n        dir,\r\n        type,\r\n        simple,\r\n        semitones,\r\n        chroma,\r\n        coord,\r\n        oct,\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction coordToInterval(coord) {\r\n    const [f, o = 0] = coord;\r\n    const isDescending = f * 7 + o * 12 < 0;\r\n    const ivl = isDescending ? [-f, -o, -1] : [f, o, 1];\r\n    return interval(decode(ivl));\r\n}\r\nfunction qToAlt(type, q) {\r\n    return (q === \"M\" && type === \"majorable\") ||\r\n        (q === \"P\" && type === \"perfectable\")\r\n        ? 0\r\n        : q === \"m\" && type === \"majorable\"\r\n            ? -1\r\n            : /^A+$/.test(q)\r\n                ? q.length\r\n                : /^d+$/.test(q)\r\n                    ? -1 * (type === \"perfectable\" ? q.length : q.length + 1)\r\n                    : 0;\r\n}\r\n// return the interval name of a pitch\r\nfunction pitchName$1(props) {\r\n    const { step, alt, oct = 0, dir } = props;\r\n    if (!dir) {\r\n        return \"\";\r\n    }\r\n    const num = step + 1 + 7 * oct;\r\n    const d = dir < 0 ? \"-\" : \"\";\r\n    const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\r\n    const name = d + num + altToQ(type, alt);\r\n    return name;\r\n}\r\nfunction altToQ(type, alt) {\r\n    if (alt === 0) {\r\n        return type === \"majorable\" ? \"M\" : \"P\";\r\n    }\r\n    else if (alt === -1 && type === \"majorable\") {\r\n        return \"m\";\r\n    }\r\n    else if (alt > 0) {\r\n        return fillStr(\"A\", alt);\r\n    }\r\n    else {\r\n        return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1);\r\n    }\r\n}\n\n/**\r\n * Transpose a note by an interval.\r\n *\r\n * @param {string} note - the note or note name\r\n * @param {string} interval - the interval or interval name\r\n * @return {string} the transposed note name or empty string if not valid notes\r\n * @example\r\n * import { tranpose } from \"@tonaljs/core\"\r\n * transpose(\"d3\", \"3M\") // => \"F#3\"\r\n * transpose(\"D\", \"3M\") // => \"F#\"\r\n * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(pc => transpose(pc, \"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\r\n */\r\nfunction transpose(noteName, intervalName) {\r\n    const note$1 = note(noteName);\r\n    const interval$1 = interval(intervalName);\r\n    if (note$1.empty || interval$1.empty) {\r\n        return \"\";\r\n    }\r\n    const noteCoord = note$1.coord;\r\n    const intervalCoord = interval$1.coord;\r\n    const tr = noteCoord.length === 1\r\n        ? [noteCoord[0] + intervalCoord[0]]\r\n        : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\r\n    return coordToNote(tr).name;\r\n}\r\n/**\r\n * Find the interval distance between two notes or coord classes.\r\n *\r\n * To find distance between coord classes, both notes must be coord classes and\r\n * the interval is always ascending\r\n *\r\n * @param {Note|string} from - the note or note name to calculate distance from\r\n * @param {Note|string} to - the note or note name to calculate distance to\r\n * @return {string} the interval name or empty string if not valid notes\r\n *\r\n */\r\nfunction distance(fromNote, toNote) {\r\n    const from = note(fromNote);\r\n    const to = note(toNote);\r\n    if (from.empty || to.empty) {\r\n        return \"\";\r\n    }\r\n    const fcoord = from.coord;\r\n    const tcoord = to.coord;\r\n    const fifths = tcoord[0] - fcoord[0];\r\n    const octs = fcoord.length === 2 && tcoord.length === 2\r\n        ? tcoord[1] - fcoord[1]\r\n        : -Math.floor((fifths * 7) / 12);\r\n    return coordToInterval([fifths, octs]).name;\r\n}\n\nexport { accToAlt, altToAcc, coordToInterval, coordToNote, decode, deprecate, distance, encode, fillStr, interval, isNamed, isPitch, note, stepToLetter, tokenizeInterval, tokenizeNote, transpose };\n//# sourceMappingURL=index.es.js.map\n","// ascending range\r\nfunction ascR(b, n) {\r\n    const a = [];\r\n    // tslint:disable-next-line:curly\r\n    for (; n--; a[n] = n + b)\r\n        ;\r\n    return a;\r\n}\r\n// descending range\r\nfunction descR(b, n) {\r\n    const a = [];\r\n    // tslint:disable-next-line:curly\r\n    for (; n--; a[n] = b - n)\r\n        ;\r\n    return a;\r\n}\r\n/**\r\n * Creates a numeric range\r\n *\r\n * @param {number} from\r\n * @param {number} to\r\n * @return {Array<number>}\r\n *\r\n * @example\r\n * range(-2, 2) // => [-2, -1, 0, 1, 2]\r\n * range(2, -2) // => [2, 1, 0, -1, -2]\r\n */\r\nfunction range(from, to) {\r\n    return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\r\n}\r\n/**\r\n * Rotates a list a number of times. It\"s completly agnostic about the\r\n * contents of the list.\r\n *\r\n * @param {Integer} times - the number of rotations\r\n * @param {Array} collection\r\n * @return {Array} the rotated collection\r\n *\r\n * @example\r\n * rotate(1, [1, 2, 3]) // => [2, 3, 1]\r\n */\r\nfunction rotate(times, arr) {\r\n    const len = arr.length;\r\n    const n = ((times % len) + len) % len;\r\n    return arr.slice(n, len).concat(arr.slice(0, n));\r\n}\r\n/**\r\n * Return a copy of the collection with the null values removed\r\n * @function\r\n * @param {Array} collection\r\n * @return {Array}\r\n *\r\n * @example\r\n * compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\r\n */\r\nfunction compact(arr) {\r\n    return arr.filter((n) => n === 0 || n);\r\n}\r\n/**\r\n * Randomizes the order of the specified collection in-place, using the Fisher–Yates shuffle.\r\n *\r\n * @function\r\n * @param {Array} collection\r\n * @return {Array} the collection shuffled\r\n *\r\n * @example\r\n * shuffle([\"C\", \"D\", \"E\", \"F\"]) // => [...]\r\n */\r\nfunction shuffle(arr, rnd = Math.random) {\r\n    let i;\r\n    let t;\r\n    let m = arr.length;\r\n    while (m) {\r\n        i = Math.floor(rnd() * m--);\r\n        t = arr[m];\r\n        arr[m] = arr[i];\r\n        arr[i] = t;\r\n    }\r\n    return arr;\r\n}\r\n/**\r\n * Get all permutations of an collection\r\n *\r\n * @param {Array} collection - the collection\r\n * @return {Array<Array>} an collection with all the permutations\r\n * @example\r\n * permutations([\"a\", \"b\", \"c\"])) // =>\r\n * [\r\n *   [\"a\", \"b\", \"c\"],\r\n *   [\"b\", \"a\", \"c\"],\r\n *   [\"b\", \"c\", \"a\"],\r\n *   [\"a\", \"c\", \"b\"],\r\n *   [\"c\", \"a\", \"b\"],\r\n *   [\"c\", \"b\", \"a\"]\r\n * ]\r\n */\r\nfunction permutations(arr) {\r\n    if (arr.length === 0) {\r\n        return [[]];\r\n    }\r\n    return permutations(arr.slice(1)).reduce((acc, perm) => {\r\n        return acc.concat(arr.map((e, pos) => {\r\n            const newPerm = perm.slice();\r\n            newPerm.splice(pos, 0, arr[0]);\r\n            return newPerm;\r\n        }));\r\n    }, []);\r\n}\r\nvar index = {\r\n    compact,\r\n    permutations,\r\n    range,\r\n    rotate,\r\n    shuffle,\r\n};\n\nexport default index;\nexport { compact, permutations, range, rotate, shuffle };\n//# sourceMappingURL=index.es.js.map\n","import { range, compact, rotate } from '@tonaljs/collection';\nimport { deprecate, note, interval } from '@tonaljs/core';\n\nconst EmptyPcset = {\r\n    empty: true,\r\n    name: \"\",\r\n    setNum: 0,\r\n    chroma: \"000000000000\",\r\n    normalized: \"000000000000\",\r\n    intervals: [],\r\n};\r\n// UTILITIES\r\nconst setNumToChroma = (num) => Number(num).toString(2);\r\nconst chromaToNumber = (chroma) => parseInt(chroma, 2);\r\nconst REGEX = /^[01]{12}$/;\r\nfunction isChroma(set) {\r\n    return REGEX.test(set);\r\n}\r\nconst isPcsetNum = (set) => typeof set === \"number\" && set >= 0 && set <= 4095;\r\nconst isPcset = (set) => set && isChroma(set.chroma);\r\nconst cache = { [EmptyPcset.chroma]: EmptyPcset };\r\n/**\r\n * Get the pitch class set of a collection of notes or set number or chroma\r\n */\r\nfunction get(src) {\r\n    const chroma = isChroma(src)\r\n        ? src\r\n        : isPcsetNum(src)\r\n            ? setNumToChroma(src)\r\n            : Array.isArray(src)\r\n                ? listToChroma(src)\r\n                : isPcset(src)\r\n                    ? src.chroma\r\n                    : EmptyPcset.chroma;\r\n    return (cache[chroma] = cache[chroma] || chromaToPcset(chroma));\r\n}\r\n/**\r\n * Use Pcset.properties\r\n * @function\r\n * @deprecated\r\n */\r\nconst pcset = deprecate(\"Pcset.pcset\", \"Pcset.get\", get);\r\n/**\r\n * Get pitch class set chroma\r\n * @function\r\n * @example\r\n * Pcset.chroma([\"c\", \"d\", \"e\"]); //=> \"101010000000\"\r\n */\r\nconst chroma = (set) => get(set).chroma;\r\n/**\r\n * Get intervals (from C) of a set\r\n * @function\r\n * @example\r\n * Pcset.intervals([\"c\", \"d\", \"e\"]); //=>\r\n */\r\nconst intervals = (set) => get(set).intervals;\r\n/**\r\n * Get pitch class set number\r\n * @function\r\n * @example\r\n * Pcset.num([\"c\", \"d\", \"e\"]); //=> 2192\r\n */\r\nconst num = (set) => get(set).setNum;\r\nconst IVLS = [\r\n    \"1P\",\r\n    \"2m\",\r\n    \"2M\",\r\n    \"3m\",\r\n    \"3M\",\r\n    \"4P\",\r\n    \"5d\",\r\n    \"5P\",\r\n    \"6m\",\r\n    \"6M\",\r\n    \"7m\",\r\n    \"7M\",\r\n];\r\n/**\r\n * @private\r\n * Get the intervals of a pcset *starting from C*\r\n * @param {Set} set - the pitch class set\r\n * @return {IntervalName[]} an array of interval names or an empty array\r\n * if not a valid pitch class set\r\n */\r\nfunction chromaToIntervals(chroma) {\r\n    const intervals = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        // tslint:disable-next-line:curly\r\n        if (chroma.charAt(i) === \"1\")\r\n            intervals.push(IVLS[i]);\r\n    }\r\n    return intervals;\r\n}\r\n/**\r\n * Get a list of all possible pitch class sets (all possible chromas) *having\r\n * C as root*. There are 2048 different chromas. If you want them with another\r\n * note you have to transpose it\r\n *\r\n * @see http://allthescales.org/\r\n * @return {Array<PcsetChroma>} an array of possible chromas from '10000000000' to '11111111111'\r\n */\r\nfunction chromas() {\r\n    return range(2048, 4095).map(setNumToChroma);\r\n}\r\n/**\r\n * Given a a list of notes or a pcset chroma, produce the rotations\r\n * of the chroma discarding the ones that starts with \"0\"\r\n *\r\n * This is used, for example, to get all the modes of a scale.\r\n *\r\n * @param {Array|string} set - the list of notes or pitchChr of the set\r\n * @param {boolean} normalize - (Optional, true by default) remove all\r\n * the rotations that starts with \"0\"\r\n * @return {Array<string>} an array with all the modes of the chroma\r\n *\r\n * @example\r\n * Pcset.modes([\"C\", \"D\", \"E\"]).map(Pcset.intervals)\r\n */\r\nfunction modes(set, normalize = true) {\r\n    const pcs = get(set);\r\n    const binary = pcs.chroma.split(\"\");\r\n    return compact(binary.map((_, i) => {\r\n        const r = rotate(i, binary);\r\n        return normalize && r[0] === \"0\" ? null : r.join(\"\");\r\n    }));\r\n}\r\n/**\r\n * Test if two pitch class sets are numentical\r\n *\r\n * @param {Array|string} set1 - one of the pitch class sets\r\n * @param {Array|string} set2 - the other pitch class set\r\n * @return {boolean} true if they are equal\r\n * @example\r\n * Pcset.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\r\n */\r\nfunction isEqual(s1, s2) {\r\n    return get(s1).setNum === get(s2).setNum;\r\n}\r\n/**\r\n * Create a function that test if a collection of notes is a\r\n * subset of a given set\r\n *\r\n * The function is curryfied.\r\n *\r\n * @param {PcsetChroma|NoteName[]} set - the superset to test against (chroma or\r\n * list of notes)\r\n * @return{function(PcsetChroma|NoteNames[]): boolean} a function accepting a set\r\n * to test against (chroma or list of notes)\r\n * @example\r\n * const inCMajor = Pcset.isSubsetOf([\"C\", \"E\", \"G\"])\r\n * inCMajor([\"e6\", \"c4\"]) // => true\r\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\r\n */\r\nfunction isSubsetOf(set) {\r\n    const s = get(set).setNum;\r\n    return (notes) => {\r\n        const o = get(notes).setNum;\r\n        // tslint:disable-next-line: no-bitwise\r\n        return s && s !== o && (o & s) === o;\r\n    };\r\n}\r\n/**\r\n * Create a function that test if a collection of notes is a\r\n * superset of a given set (it contains all notes and at least one more)\r\n *\r\n * @param {Set} set - an array of notes or a chroma set string to test against\r\n * @return {(subset: Set): boolean} a function that given a set\r\n * returns true if is a subset of the first one\r\n * @example\r\n * const extendsCMajor = Pcset.isSupersetOf([\"C\", \"E\", \"G\"])\r\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\r\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\r\n */\r\nfunction isSupersetOf(set) {\r\n    const s = get(set).setNum;\r\n    return (notes) => {\r\n        const o = get(notes).setNum;\r\n        // tslint:disable-next-line: no-bitwise\r\n        return s && s !== o && (o | s) === o;\r\n    };\r\n}\r\n/**\r\n * Test if a given pitch class set includes a note\r\n *\r\n * @param {Array<string>} set - the base set to test against\r\n * @param {string} note - the note to test\r\n * @return {boolean} true if the note is included in the pcset\r\n *\r\n * Can be partially applied\r\n *\r\n * @example\r\n * const isNoteInCMajor = isNoteIncludedIn(['C', 'E', 'G'])\r\n * isNoteInCMajor('C4') // => true\r\n * isNoteInCMajor('C#4') // => false\r\n */\r\nfunction isNoteIncludedIn(set) {\r\n    const s = get(set);\r\n    return (noteName) => {\r\n        const n = note(noteName);\r\n        return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\r\n    };\r\n}\r\n/** @deprecated use: isNoteIncludedIn */\r\nconst includes = isNoteIncludedIn;\r\n/**\r\n * Filter a list with a pitch class set\r\n *\r\n * @param {Array|string} set - the pitch class set notes\r\n * @param {Array|string} notes - the note list to be filtered\r\n * @return {Array} the filtered notes\r\n *\r\n * @example\r\n * Pcset.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\r\n * Pcset.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\r\n */\r\nfunction filter(set) {\r\n    const isIncluded = isNoteIncludedIn(set);\r\n    return (notes) => {\r\n        return notes.filter(isIncluded);\r\n    };\r\n}\r\nvar index = {\r\n    get,\r\n    chroma,\r\n    num,\r\n    intervals,\r\n    chromas,\r\n    isSupersetOf,\r\n    isSubsetOf,\r\n    isNoteIncludedIn,\r\n    isEqual,\r\n    filter,\r\n    modes,\r\n    // deprecated\r\n    pcset,\r\n};\r\n//// PRIVATE ////\r\nfunction chromaRotations(chroma) {\r\n    const binary = chroma.split(\"\");\r\n    return binary.map((_, i) => rotate(i, binary).join(\"\"));\r\n}\r\nfunction chromaToPcset(chroma) {\r\n    const setNum = chromaToNumber(chroma);\r\n    const normalizedNum = chromaRotations(chroma)\r\n        .map(chromaToNumber)\r\n        .filter((n) => n >= 2048)\r\n        .sort()[0];\r\n    const normalized = setNumToChroma(normalizedNum);\r\n    const intervals = chromaToIntervals(chroma);\r\n    return {\r\n        empty: false,\r\n        name: \"\",\r\n        setNum,\r\n        chroma,\r\n        normalized,\r\n        intervals,\r\n    };\r\n}\r\nfunction listToChroma(set) {\r\n    if (set.length === 0) {\r\n        return EmptyPcset.chroma;\r\n    }\r\n    let pitch;\r\n    const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < set.length; i++) {\r\n        pitch = note(set[i]);\r\n        // tslint:disable-next-line: curly\r\n        if (pitch.empty)\r\n            pitch = interval(set[i]);\r\n        // tslint:disable-next-line: curly\r\n        if (!pitch.empty)\r\n            binary[pitch.chroma] = 1;\r\n    }\r\n    return binary.join(\"\");\r\n}\n\nexport default index;\nexport { EmptyPcset, chromaToIntervals, chromas, filter, get, includes, isEqual, isNoteIncludedIn, isSubsetOf, isSupersetOf, modes, pcset };\n//# sourceMappingURL=index.es.js.map\n","import { deprecate } from '@tonaljs/core';\nimport { get as get$1, EmptyPcset } from '@tonaljs/pcset';\n\n/**\r\n * @private\r\n * Chord List\r\n * Source: https://en.wikibooks.org/wiki/Music_Theory/Complete_List_of_Chord_Patterns\r\n * Format: [\"intervals\", \"full name\", \"abrv1 abrv2\"]\r\n */\r\nconst CHORDS = [\r\n    // ==Major==\r\n    [\"1P 3M 5P\", \"major\", \"M ^ \"],\r\n    [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 Δ ma7 M7 Maj7 ^7\"],\r\n    [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 Δ9 ^9\"],\r\n    [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\r\n    [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\r\n    [\"1P 3M 5P 6M 9M\", \"sixth/ninth\", \"6/9 69 M69\"],\r\n    [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\r\n    [\r\n        \"1P 3M 5P 7M 11A\",\r\n        \"major seventh sharp eleventh\",\r\n        \"maj#4 Δ#4 Δ#11 M7#11 ^7#11 maj7#11\",\r\n    ],\r\n    // ==Minor==\r\n    // '''Normal'''\r\n    [\"1P 3m 5P\", \"minor\", \"m min -\"],\r\n    [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\r\n    [\r\n        \"1P 3m 5P 7M\",\r\n        \"minor/major seventh\",\r\n        \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -Δ7 mΔ -^7\",\r\n    ],\r\n    [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\r\n    [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\r\n    [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\r\n    [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\r\n    [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\r\n    // '''Diminished'''\r\n    [\"1P 3m 5d\", \"diminished\", \"dim ° o\"],\r\n    [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 °7 o7\"],\r\n    [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 ø -7b5 h7 h\"],\r\n    // ==Dominant/Seventh==\r\n    // '''Normal'''\r\n    [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\r\n    [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\r\n    [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\r\n    [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\r\n    // '''Altered'''\r\n    [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\r\n    [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\r\n    [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\r\n    // '''Suspended'''\r\n    [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\r\n    [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\r\n    [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\r\n    [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\r\n    [\r\n        \"1P 4P 5P 7m 9m\",\r\n        \"suspended fourth flat ninth\",\r\n        \"b9sus phryg 7b9sus 7b9sus4\",\r\n    ],\r\n    // ==Other==\r\n    [\"1P 5P\", \"fifth\", \"5\"],\r\n    [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\r\n    [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\r\n    [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\r\n    [\r\n        \"1P 3M 5P 7M 9M 11A\",\r\n        \"major sharp eleventh (lydian)\",\r\n        \"maj9#11 Δ9#11 ^9#11\",\r\n    ],\r\n    // ==Legacy==\r\n    [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\r\n    [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\r\n    [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\r\n    [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\r\n    [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\r\n    [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\r\n    [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\r\n    [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\r\n    [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\r\n    [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\r\n    [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\r\n    [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\r\n    [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\r\n    [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\r\n    [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\r\n    [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\r\n    [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\r\n    [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\r\n    [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\r\n    [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\r\n    [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\r\n    [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\r\n    [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\r\n    [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\r\n    [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\r\n    [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\r\n    [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\r\n    [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\r\n    [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\r\n    [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\r\n    [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\r\n    [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\r\n    [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\r\n    [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\r\n    [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\r\n    [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\r\n    [\"1P 3M 5d\", \"\", \"Mb5\"],\r\n    [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\r\n    [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\r\n    [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\r\n    [\"1P 3M 5d 7m\", \"\", \"7b5\"],\r\n    [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\r\n    [\"1P 3M 7m\", \"\", \"7no5\"],\r\n    [\"1P 3M 7m 13m\", \"\", \"7b13\"],\r\n    [\"1P 3M 7m 9M\", \"\", \"9no5\"],\r\n    [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\r\n    [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\r\n    [\"1P 3m 4P 5P\", \"\", \"madd4\"],\r\n    [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\r\n    [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\r\n    [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\r\n    [\"1P 3m 5P 9M\", \"\", \"madd9\"],\r\n    [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\r\n    [\"1P 3m 5d 7M\", \"\", \"oM7\"],\r\n    [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\r\n    [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\r\n    [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\r\n    [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\r\n    [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\r\n    [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\r\n    [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\r\n    [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\r\n    [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\r\n    [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\r\n    [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\r\n    [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\r\n    [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\r\n    [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\r\n    [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\r\n    [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"],\r\n];\n\nconst NoChordType = {\r\n    ...EmptyPcset,\r\n    name: \"\",\r\n    quality: \"Unknown\",\r\n    intervals: [],\r\n    aliases: [],\r\n};\r\nlet dictionary = [];\r\nlet index = {};\r\n/**\r\n * Given a chord name or chroma, return the chord properties\r\n * @param {string} source - chord name or pitch class set chroma\r\n * @example\r\n * import { get } from 'tonaljs/chord-type'\r\n * get('major') // => { name: 'major', ... }\r\n */\r\nfunction get(type) {\r\n    return index[type] || NoChordType;\r\n}\r\nconst chordType = deprecate(\"ChordType.chordType\", \"ChordType.get\", get);\r\n/**\r\n * Get all chord (long) names\r\n */\r\nfunction names() {\r\n    return dictionary.map((chord) => chord.name).filter((x) => x);\r\n}\r\n/**\r\n * Get all chord symbols\r\n */\r\nfunction symbols() {\r\n    return dictionary.map((chord) => chord.aliases[0]).filter((x) => x);\r\n}\r\n/**\r\n * Keys used to reference chord types\r\n */\r\nfunction keys() {\r\n    return Object.keys(index);\r\n}\r\n/**\r\n * Return a list of all chord types\r\n */\r\nfunction all() {\r\n    return dictionary.slice();\r\n}\r\nconst entries = deprecate(\"ChordType.entries\", \"ChordType.all\", all);\r\n/**\r\n * Clear the dictionary\r\n */\r\nfunction removeAll() {\r\n    dictionary = [];\r\n    index = {};\r\n}\r\n/**\r\n * Add a chord to the dictionary.\r\n * @param intervals\r\n * @param aliases\r\n * @param [fullName]\r\n */\r\nfunction add(intervals, aliases, fullName) {\r\n    const quality = getQuality(intervals);\r\n    const chord = {\r\n        ...get$1(intervals),\r\n        name: fullName || \"\",\r\n        quality,\r\n        intervals,\r\n        aliases,\r\n    };\r\n    dictionary.push(chord);\r\n    if (chord.name) {\r\n        index[chord.name] = chord;\r\n    }\r\n    index[chord.setNum] = chord;\r\n    index[chord.chroma] = chord;\r\n    chord.aliases.forEach((alias) => addAlias(chord, alias));\r\n}\r\nfunction addAlias(chord, alias) {\r\n    index[alias] = chord;\r\n}\r\nfunction getQuality(intervals) {\r\n    const has = (interval) => intervals.indexOf(interval) !== -1;\r\n    return has(\"5A\")\r\n        ? \"Augmented\"\r\n        : has(\"3M\")\r\n            ? \"Major\"\r\n            : has(\"5d\")\r\n                ? \"Diminished\"\r\n                : has(\"3m\")\r\n                    ? \"Minor\"\r\n                    : \"Unknown\";\r\n}\r\nCHORDS.forEach(([ivls, fullName, names]) => add(ivls.split(\" \"), names.split(\" \"), fullName));\r\ndictionary.sort((a, b) => a.setNum - b.setNum);\r\nvar index$1 = {\r\n    names,\r\n    symbols,\r\n    get,\r\n    all,\r\n    add,\r\n    removeAll,\r\n    keys,\r\n    // deprecated\r\n    entries,\r\n    chordType,\r\n};\n\nexport default index$1;\nexport { add, addAlias, all, chordType, entries, get, keys, names, removeAll, symbols };\n//# sourceMappingURL=index.es.js.map\n","import { all } from '@tonaljs/chord-type';\nimport { note } from '@tonaljs/core';\nimport { modes } from '@tonaljs/pcset';\n\nconst namedSet = (notes) => {\r\n    const pcToName = notes.reduce((record, n) => {\r\n        const chroma = note(n).chroma;\r\n        if (chroma !== undefined) {\r\n            record[chroma] = record[chroma] || note(n).name;\r\n        }\r\n        return record;\r\n    }, {});\r\n    return (chroma) => pcToName[chroma];\r\n};\r\nfunction detect(source) {\r\n    const notes = source.map((n) => note(n).pc).filter((x) => x);\r\n    if (note.length === 0) {\r\n        return [];\r\n    }\r\n    const found = findExactMatches(notes, 1);\r\n    return found\r\n        .filter((chord) => chord.weight)\r\n        .sort((a, b) => b.weight - a.weight)\r\n        .map((chord) => chord.name);\r\n}\r\nfunction findExactMatches(notes, weight) {\r\n    const tonic = notes[0];\r\n    const tonicChroma = note(tonic).chroma;\r\n    const noteName = namedSet(notes);\r\n    // we need to test all chormas to get the correct baseNote\r\n    const allModes = modes(notes, false);\r\n    const found = [];\r\n    allModes.forEach((mode, index) => {\r\n        // some chords could have the same chroma but different interval spelling\r\n        const chordTypes = all().filter((chordType) => chordType.chroma === mode);\r\n        chordTypes.forEach((chordType) => {\r\n            const chordName = chordType.aliases[0];\r\n            const baseNote = noteName(index);\r\n            const isInversion = index !== tonicChroma;\r\n            if (isInversion) {\r\n                found.push({\r\n                    weight: 0.5 * weight,\r\n                    name: `${baseNote}${chordName}/${tonic}`,\r\n                });\r\n            }\r\n            else {\r\n                found.push({ weight: 1 * weight, name: `${baseNote}${chordName}` });\r\n            }\r\n        });\r\n    });\r\n    return found;\r\n}\r\nvar index = { detect };\n\nexport default index;\nexport { detect };\n//# sourceMappingURL=index.es.js.map\n","import { deprecate } from '@tonaljs/core';\nimport { EmptyPcset, get as get$1 } from '@tonaljs/pcset';\n\n// SCALES\r\n// Format: [\"intervals\", \"name\", \"alias1\", \"alias2\", ...]\r\nconst SCALES = [\r\n    // 5-note scales\r\n    [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\r\n    [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\r\n    [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\r\n    [\"1P 2M 4P 5P 6M\", \"ritusen\"],\r\n    [\"1P 2M 4P 5P 7m\", \"egyptian\"],\r\n    [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\r\n    [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\r\n    [\"1P 2m 3m 5P 6m\", \"pelog\"],\r\n    [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\r\n    [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\r\n    [\"1P 2m 4P 5d 7m\", \"iwato\"],\r\n    [\"1P 2m 4P 5P 7m\", \"in-sen\"],\r\n    [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\r\n    [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\r\n    [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\r\n    [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\r\n    [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\r\n    [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\r\n    [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\r\n    [\"1P 2m 3M 5P 6M\", \"scriabin\"],\r\n    [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\r\n    [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\r\n    [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\r\n    [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\r\n    [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\r\n    // 6-note scales\r\n    [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\r\n    [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\r\n    [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\r\n    [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\r\n    [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\r\n    [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\r\n    [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\r\n    [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\r\n    [\"1P 2M 3M 4A 5A 7m\", \"whole tone\", \"messiaen's mode #1\"],\r\n    [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\r\n    [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\r\n    // 7-note scales\r\n    [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\r\n    [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\r\n    [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\r\n    [\r\n        \"1P 2m 3m 4d 5d 6m 7m\",\r\n        \"altered\",\r\n        \"super locrian\",\r\n        \"diminished whole tone\",\r\n        \"pomeroy\",\r\n    ],\r\n    [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\r\n    [\r\n        \"1P 2M 3M 4P 5P 6m 7m\",\r\n        \"mixolydian b6\",\r\n        \"melodic minor fifth mode\",\r\n        \"hindu\",\r\n    ],\r\n    [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\r\n    [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\r\n    [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\r\n    [\r\n        \"1P 2m 3m 4P 5P 6M 7m\",\r\n        \"dorian b2\",\r\n        \"phrygian #6\",\r\n        \"melodic minor second mode\",\r\n    ],\r\n    [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\r\n    [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\r\n    [\r\n        \"1P 2m 3m 4d 5d 6m 7d\",\r\n        \"ultralocrian\",\r\n        \"superlocrian bb7\",\r\n        \"·superlocrian diminished\",\r\n    ],\r\n    [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\r\n    [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\r\n    [\"1P 2M 3m 5d 5P 6M 7m\", \"romanian minor\"],\r\n    [\"1P 2M 3m 4A 5P 6M 7m\", \"dorian #4\"],\r\n    [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\r\n    [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\r\n    [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\r\n    [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\r\n    [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\r\n    [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\r\n    [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\r\n    [\"1P 2M 3m 4P 5P 6m 7m\", \"aeolian\", \"minor\"],\r\n    [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\r\n    [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\r\n    [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\r\n    [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\r\n    [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\r\n    [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\r\n    [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\r\n    [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\r\n    [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\r\n    [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\r\n    [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\r\n    [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\r\n    [\r\n        \"1P 2M 3M 4P 5A 6M 7M\",\r\n        \"major augmented\",\r\n        \"major #5\",\r\n        \"ionian augmented\",\r\n        \"ionian #5\",\r\n    ],\r\n    [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\r\n    // 8-note scales\r\n    [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\r\n    [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\r\n    [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\r\n    [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\r\n    [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\r\n    [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\r\n    [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\r\n    [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\r\n    [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\r\n    [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\r\n    [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\r\n    [\r\n        \"1P 2m 3m 3M 4A 5P 6M 7m\",\r\n        \"half-whole diminished\",\r\n        \"dominant diminished\",\r\n        \"messiaen's mode #2\",\r\n    ],\r\n    [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\r\n    [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\r\n    // 9-note scales\r\n    [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\r\n    [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\r\n    // 10-note scales\r\n    [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\r\n    // 12-note scales\r\n    [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"],\r\n];\n\nconst NoScaleType = {\r\n    ...EmptyPcset,\r\n    intervals: [],\r\n    aliases: [],\r\n};\r\nlet dictionary = [];\r\nlet index = {};\r\nfunction names() {\r\n    return dictionary.map((scale) => scale.name);\r\n}\r\n/**\r\n * Given a scale name or chroma, return the scale properties\r\n *\r\n * @param {string} type - scale name or pitch class set chroma\r\n * @example\r\n * import { get } from 'tonaljs/scale-type'\r\n * get('major') // => { name: 'major', ... }\r\n */\r\nfunction get(type) {\r\n    return index[type] || NoScaleType;\r\n}\r\nconst scaleType = deprecate(\"ScaleDictionary.scaleType\", \"ScaleType.get\", get);\r\n/**\r\n * Return a list of all scale types\r\n */\r\nfunction all() {\r\n    return dictionary.slice();\r\n}\r\nconst entries = deprecate(\"ScaleDictionary.entries\", \"ScaleType.all\", all);\r\n/**\r\n * Keys used to reference scale types\r\n */\r\nfunction keys() {\r\n    return Object.keys(index);\r\n}\r\n/**\r\n * Clear the dictionary\r\n */\r\nfunction removeAll() {\r\n    dictionary = [];\r\n    index = {};\r\n}\r\n/**\r\n * Add a scale into dictionary\r\n * @param intervals\r\n * @param name\r\n * @param aliases\r\n */\r\nfunction add(intervals, name, aliases = []) {\r\n    const scale = { ...get$1(intervals), name, intervals, aliases };\r\n    dictionary.push(scale);\r\n    index[scale.name] = scale;\r\n    index[scale.setNum] = scale;\r\n    index[scale.chroma] = scale;\r\n    scale.aliases.forEach((alias) => addAlias(scale, alias));\r\n    return scale;\r\n}\r\nfunction addAlias(scale, alias) {\r\n    index[alias] = scale;\r\n}\r\nSCALES.forEach(([ivls, name, ...aliases]) => add(ivls.split(\" \"), name, aliases));\r\nvar index$1 = {\r\n    names,\r\n    get,\r\n    all,\r\n    add,\r\n    removeAll,\r\n    keys,\r\n    // deprecated\r\n    entries,\r\n    scaleType,\r\n};\n\nexport default index$1;\nexport { NoScaleType, add, addAlias, all, entries, get, keys, names, removeAll, scaleType };\n//# sourceMappingURL=index.es.js.map\n","import { detect } from '@tonaljs/chord-detect';\nexport { detect } from '@tonaljs/chord-detect';\nimport { get as get$1, all as all$1 } from '@tonaljs/chord-type';\nimport { tokenizeNote, note, distance, transpose as transpose$1, deprecate } from '@tonaljs/core';\nimport { isSupersetOf, isSubsetOf } from '@tonaljs/pcset';\nimport { all } from '@tonaljs/scale-type';\n\nconst NoChord = {\r\n    empty: true,\r\n    name: \"\",\r\n    symbol: \"\",\r\n    root: \"\",\r\n    rootDegree: 0,\r\n    type: \"\",\r\n    tonic: null,\r\n    setNum: NaN,\r\n    quality: \"Unknown\",\r\n    chroma: \"\",\r\n    normalized: \"\",\r\n    aliases: [],\r\n    notes: [],\r\n    intervals: [],\r\n};\r\n// 6, 64, 7, 9, 11 and 13 are consider part of the chord\r\n// (see https://github.com/danigb/tonal/issues/55)\r\nconst NUM_TYPES = /^(6|64|7|9|11|13)$/;\r\n/**\r\n * Tokenize a chord name. It returns an array with the tonic and chord type\r\n * If not tonic is found, all the name is considered the chord name.\r\n *\r\n * This function does NOT check if the chord type exists or not. It only tries\r\n * to split the tonic and chord type.\r\n *\r\n * @function\r\n * @param {string} name - the chord name\r\n * @return {Array} an array with [tonic, type]\r\n * @example\r\n * tokenize(\"Cmaj7\") // => [ \"C\", \"maj7\" ]\r\n * tokenize(\"C7\") // => [ \"C\", \"7\" ]\r\n * tokenize(\"mMaj7\") // => [ null, \"mMaj7\" ]\r\n * tokenize(\"Cnonsense\") // => [ null, \"nonsense\" ]\r\n */\r\nfunction tokenize(name) {\r\n    const [letter, acc, oct, type] = tokenizeNote(name);\r\n    if (letter === \"\") {\r\n        return [\"\", name];\r\n    }\r\n    // aug is augmented (see https://github.com/danigb/tonal/issues/55)\r\n    if (letter === \"A\" && type === \"ug\") {\r\n        return [\"\", \"aug\"];\r\n    }\r\n    // see: https://github.com/tonaljs/tonal/issues/70\r\n    if (!type && (oct === \"4\" || oct === \"5\")) {\r\n        return [letter + acc, oct];\r\n    }\r\n    if (NUM_TYPES.test(oct)) {\r\n        return [letter + acc, oct + type];\r\n    }\r\n    else {\r\n        return [letter + acc + oct, type];\r\n    }\r\n}\r\n/**\r\n * Get a Chord from a chord name.\r\n */\r\nfunction get(src) {\r\n    if (src === \"\") {\r\n        return NoChord;\r\n    }\r\n    if (Array.isArray(src) && src.length === 2) {\r\n        return getChord(src[1], src[0]);\r\n    }\r\n    else {\r\n        const [tonic, type] = tokenize(src);\r\n        const chord = getChord(type, tonic);\r\n        return chord.empty ? getChord(src) : chord;\r\n    }\r\n}\r\n/**\r\n * Get chord properties\r\n *\r\n * @param typeName - the chord type name\r\n * @param [tonic] - Optional tonic\r\n * @param [root]  - Optional root (requires a tonic)\r\n */\r\nfunction getChord(typeName, optionalTonic, optionalRoot) {\r\n    const type = get$1(typeName);\r\n    const tonic = note(optionalTonic || \"\");\r\n    const root = note(optionalRoot || \"\");\r\n    if (type.empty ||\r\n        (optionalTonic && tonic.empty) ||\r\n        (optionalRoot && root.empty)) {\r\n        return NoChord;\r\n    }\r\n    const rootInterval = distance(tonic.pc, root.pc);\r\n    const rootDegree = type.intervals.indexOf(rootInterval) + 1;\r\n    if (!root.empty && !rootDegree) {\r\n        return NoChord;\r\n    }\r\n    const intervals = Array.from(type.intervals);\r\n    for (let i = 1; i < rootDegree; i++) {\r\n        const num = intervals[0][0];\r\n        const quality = intervals[0][1];\r\n        const newNum = parseInt(num, 10) + 7;\r\n        intervals.push(`${newNum}${quality}`);\r\n        intervals.shift();\r\n    }\r\n    const notes = tonic.empty\r\n        ? []\r\n        : intervals.map((i) => transpose$1(tonic, i));\r\n    typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\r\n    const symbol = `${tonic.empty ? \"\" : tonic.pc}${typeName}${root.empty || rootDegree <= 1 ? \"\" : \"/\" + root.pc}`;\r\n    const name = `${optionalTonic ? tonic.pc + \" \" : \"\"}${type.name}${rootDegree > 1 && optionalRoot ? \" over \" + root.pc : \"\"}`;\r\n    return {\r\n        ...type,\r\n        name,\r\n        symbol,\r\n        type: type.name,\r\n        root: root.name,\r\n        intervals,\r\n        rootDegree,\r\n        tonic: tonic.name,\r\n        notes,\r\n    };\r\n}\r\nconst chord = deprecate(\"Chord.chord\", \"Chord.get\", get);\r\n/**\r\n * Transpose a chord name\r\n *\r\n * @param {string} chordName - the chord name\r\n * @return {string} the transposed chord\r\n *\r\n * @example\r\n * transpose('Dm7', 'P4') // => 'Gm7\r\n */\r\nfunction transpose(chordName, interval) {\r\n    const [tonic, type] = tokenize(chordName);\r\n    if (!tonic) {\r\n        return chordName;\r\n    }\r\n    return transpose$1(tonic, interval) + type;\r\n}\r\n/**\r\n * Get all scales where the given chord fits\r\n *\r\n * @example\r\n * chordScales('C7b9')\r\n * // => [\"phrygian dominant\", \"flamenco\", \"spanish heptatonic\", \"half-whole diminished\", \"chromatic\"]\r\n */\r\nfunction chordScales(name) {\r\n    const s = get(name);\r\n    const isChordIncluded = isSupersetOf(s.chroma);\r\n    return all()\r\n        .filter((scale) => isChordIncluded(scale.chroma))\r\n        .map((scale) => scale.name);\r\n}\r\n/**\r\n * Get all chords names that are a superset of the given one\r\n * (has the same notes and at least one more)\r\n *\r\n * @function\r\n * @example\r\n * extended(\"CMaj7\")\r\n * // => [ 'Cmaj#4', 'Cmaj7#9#11', 'Cmaj9', 'CM7add13', 'Cmaj13', 'Cmaj9#11', 'CM13#11', 'CM7b9' ]\r\n */\r\nfunction extended(chordName) {\r\n    const s = get(chordName);\r\n    const isSuperset = isSupersetOf(s.chroma);\r\n    return all$1()\r\n        .filter((chord) => isSuperset(chord.chroma))\r\n        .map((chord) => s.tonic + chord.aliases[0]);\r\n}\r\n/**\r\n * Find all chords names that are a subset of the given one\r\n * (has less notes but all from the given chord)\r\n *\r\n * @example\r\n */\r\nfunction reduced(chordName) {\r\n    const s = get(chordName);\r\n    const isSubset = isSubsetOf(s.chroma);\r\n    return all$1()\r\n        .filter((chord) => isSubset(chord.chroma))\r\n        .map((chord) => s.tonic + chord.aliases[0]);\r\n}\r\nvar index = {\r\n    getChord,\r\n    get,\r\n    detect,\r\n    chordScales,\r\n    extended,\r\n    reduced,\r\n    tokenize,\r\n    transpose,\r\n    // deprecate\r\n    chord,\r\n};\n\nexport default index;\nexport { chord, chordScales, extended, get, getChord, reduced, tokenize, transpose };\n//# sourceMappingURL=index.es.js.map\n","// source: https://en.wikipedia.org/wiki/Note_value\r\nconst DATA = [\r\n    [\r\n        0.125,\r\n        \"dl\",\r\n        [\"large\", \"duplex longa\", \"maxima\", \"octuple\", \"octuple whole\"],\r\n    ],\r\n    [0.25, \"l\", [\"long\", \"longa\"]],\r\n    [0.5, \"d\", [\"double whole\", \"double\", \"breve\"]],\r\n    [1, \"w\", [\"whole\", \"semibreve\"]],\r\n    [2, \"h\", [\"half\", \"minim\"]],\r\n    [4, \"q\", [\"quarter\", \"crotchet\"]],\r\n    [8, \"e\", [\"eighth\", \"quaver\"]],\r\n    [16, \"s\", [\"sixteenth\", \"semiquaver\"]],\r\n    [32, \"t\", [\"thirty-second\", \"demisemiquaver\"]],\r\n    [64, \"sf\", [\"sixty-fourth\", \"hemidemisemiquaver\"]],\r\n    [128, \"h\", [\"hundred twenty-eighth\"]],\r\n    [256, \"th\", [\"two hundred fifty-sixth\"]],\r\n];\n\nconst VALUES = [];\r\nDATA.forEach(([denominator, shorthand, names]) => add(denominator, shorthand, names));\r\nconst NoDuration = {\r\n    empty: true,\r\n    name: \"\",\r\n    value: 0,\r\n    fraction: [0, 0],\r\n    shorthand: \"\",\r\n    dots: \"\",\r\n    names: [],\r\n};\r\nfunction names() {\r\n    return VALUES.reduce((names, duration) => {\r\n        duration.names.forEach((name) => names.push(name));\r\n        return names;\r\n    }, []);\r\n}\r\nfunction shorthands() {\r\n    return VALUES.map((dur) => dur.shorthand);\r\n}\r\nconst REGEX = /^([^.]+)(\\.*)$/;\r\nfunction get(name) {\r\n    const [_, simple, dots] = REGEX.exec(name) || [];\r\n    const base = VALUES.find((dur) => dur.shorthand === simple || dur.names.includes(simple));\r\n    if (!base) {\r\n        return NoDuration;\r\n    }\r\n    const fraction = calcDots(base.fraction, dots.length);\r\n    const value = fraction[0] / fraction[1];\r\n    return { ...base, name, dots, value, fraction };\r\n}\r\nconst value = (name) => get(name).value;\r\nconst fraction = (name) => get(name).fraction;\r\nvar index = { names, shorthands, get, value, fraction };\r\n//// PRIVATE ////\r\nfunction add(denominator, shorthand, names) {\r\n    VALUES.push({\r\n        empty: false,\r\n        dots: \"\",\r\n        name: \"\",\r\n        value: 1 / denominator,\r\n        fraction: denominator < 1 ? [1 / denominator, 1] : [1, denominator],\r\n        shorthand,\r\n        names,\r\n    });\r\n}\r\nfunction calcDots(fraction, dots) {\r\n    const pow = Math.pow(2, dots);\r\n    let numerator = fraction[0] * pow;\r\n    let denominator = fraction[1] * pow;\r\n    const base = numerator;\r\n    // add fractions\r\n    for (let i = 0; i < dots; i++) {\r\n        numerator += base / Math.pow(2, i + 1);\r\n    }\r\n    // simplify\r\n    while (numerator % 2 === 0 && denominator % 2 === 0) {\r\n        numerator /= 2;\r\n        denominator /= 2;\r\n    }\r\n    return [numerator, denominator];\r\n}\n\nexport default index;\nexport { fraction, get, names, shorthands, value };\n//# sourceMappingURL=index.es.js.map\n","import { interval, distance as distance$1, coordToInterval } from '@tonaljs/core';\n\n/**\r\n * Get the natural list of names\r\n */\r\nfunction names() {\r\n    return \"1P 2M 3M 4P 5P 6m 7m\".split(\" \");\r\n}\r\n/**\r\n * Get properties of an interval\r\n *\r\n * @function\r\n * @example\r\n * Interval.get('P4') // => {\"alt\": 0,  \"dir\": 1,  \"name\": \"4P\", \"num\": 4, \"oct\": 0, \"q\": \"P\", \"semitones\": 5, \"simple\": 4, \"step\": 3, \"type\": \"perfectable\"}\r\n */\r\nconst get = interval;\r\n/**\r\n * Get name of an interval\r\n *\r\n * @function\r\n * @example\r\n * Interval.name('4P') // => \"4P\"\r\n * Interval.name('P4') // => \"4P\"\r\n * Interval.name('C4') // => \"\"\r\n */\r\nconst name = (name) => interval(name).name;\r\n/**\r\n * Get semitones of an interval\r\n * @function\r\n * @example\r\n * Interval.semitones('P4') // => 5\r\n */\r\nconst semitones = (name) => interval(name).semitones;\r\n/**\r\n * Get quality of an interval\r\n * @function\r\n * @example\r\n * Interval.quality('P4') // => \"P\"\r\n */\r\nconst quality = (name) => interval(name).q;\r\n/**\r\n * Get number of an interval\r\n * @function\r\n * @example\r\n * Interval.num('P4') // => 4\r\n */\r\nconst num = (name) => interval(name).num;\r\n/**\r\n * Get the simplified version of an interval.\r\n *\r\n * @function\r\n * @param {string} interval - the interval to simplify\r\n * @return {string} the simplified interval\r\n *\r\n * @example\r\n * Interval.simplify(\"9M\") // => \"2M\"\r\n * Interval.simplify(\"2M\") // => \"2M\"\r\n * Interval.simplify(\"-2M\") // => \"7m\"\r\n * [\"8P\", \"9M\", \"10M\", \"11P\", \"12P\", \"13M\", \"14M\", \"15P\"].map(Interval.simplify)\r\n * // => [ \"8P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\r\n */\r\nfunction simplify(name) {\r\n    const i = interval(name);\r\n    return i.empty ? \"\" : i.simple + i.q;\r\n}\r\n/**\r\n * Get the inversion (https://en.wikipedia.org/wiki/Inversion_(music)#Intervals)\r\n * of an interval.\r\n *\r\n * @function\r\n * @param {string} interval - the interval to invert in interval shorthand\r\n * notation or interval array notation\r\n * @return {string} the inverted interval\r\n *\r\n * @example\r\n * Interval.invert(\"3m\") // => \"6M\"\r\n * Interval.invert(\"2M\") // => \"7m\"\r\n */\r\nfunction invert(name) {\r\n    const i = interval(name);\r\n    if (i.empty) {\r\n        return \"\";\r\n    }\r\n    const step = (7 - i.step) % 7;\r\n    const alt = i.type === \"perfectable\" ? -i.alt : -(i.alt + 1);\r\n    return interval({ step, alt, oct: i.oct, dir: i.dir }).name;\r\n}\r\n// interval numbers\r\nconst IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\r\n// interval qualities\r\nconst IQ = \"P m M m M P d P m M m M\".split(\" \");\r\n/**\r\n * Get interval name from semitones number. Since there are several interval\r\n * names for the same number, the name it's arbitrary, but deterministic.\r\n *\r\n * @param {Integer} num - the number of semitones (can be negative)\r\n * @return {string} the interval name\r\n * @example\r\n * Interval.fromSemitones(7) // => \"5P\"\r\n * Interval.fromSemitones(-7) // => \"-5P\"\r\n */\r\nfunction fromSemitones(semitones) {\r\n    const d = semitones < 0 ? -1 : 1;\r\n    const n = Math.abs(semitones);\r\n    const c = n % 12;\r\n    const o = Math.floor(n / 12);\r\n    return d * (IN[c] + 7 * o) + IQ[c];\r\n}\r\n/**\r\n * Find interval between two notes\r\n *\r\n * @example\r\n * Interval.distance(\"C4\", \"G4\"); // => \"5P\"\r\n */\r\nconst distance = distance$1;\r\n/**\r\n * Adds two intervals\r\n *\r\n * @function\r\n * @param {string} interval1\r\n * @param {string} interval2\r\n * @return {string} the added interval name\r\n * @example\r\n * Interval.add(\"3m\", \"5P\") // => \"7m\"\r\n */\r\nconst add = combinator((a, b) => [a[0] + b[0], a[1] + b[1]]);\r\n/**\r\n * Returns a function that adds an interval\r\n *\r\n * @function\r\n * @example\r\n * ['1P', '2M', '3M'].map(Interval.addTo('5P')) // => [\"5P\", \"6M\", \"7M\"]\r\n */\r\nconst addTo = (interval) => (other) => add(interval, other);\r\n/**\r\n * Subtracts two intervals\r\n *\r\n * @function\r\n * @param {string} minuendInterval\r\n * @param {string} subtrahendInterval\r\n * @return {string} the substracted interval name\r\n * @example\r\n * Interval.substract('5P', '3M') // => '3m'\r\n * Interval.substract('3M', '5P') // => '-3m'\r\n */\r\nconst substract = combinator((a, b) => [a[0] - b[0], a[1] - b[1]]);\r\nfunction transposeFifths(interval, fifths) {\r\n    const ivl = get(interval);\r\n    if (ivl.empty)\r\n        return \"\";\r\n    const [nFifths, nOcts, dir] = ivl.coord;\r\n    return coordToInterval([nFifths + fifths, nOcts, dir]).name;\r\n}\r\nvar index = {\r\n    names,\r\n    get,\r\n    name,\r\n    num,\r\n    semitones,\r\n    quality,\r\n    fromSemitones,\r\n    distance,\r\n    invert,\r\n    simplify,\r\n    add,\r\n    addTo,\r\n    substract,\r\n    transposeFifths,\r\n};\r\nfunction combinator(fn) {\r\n    return (a, b) => {\r\n        const coordA = interval(a).coord;\r\n        const coordB = interval(b).coord;\r\n        if (coordA && coordB) {\r\n            const coord = fn(coordA, coordB);\r\n            return coordToInterval(coord).name;\r\n        }\r\n    };\r\n}\n\nexport default index;\nexport { add, addTo, distance, fromSemitones, get, invert, name, names, num, quality, semitones, simplify, substract, transposeFifths };\n//# sourceMappingURL=index.es.js.map\n","import { note } from '@tonaljs/core';\n\nfunction isMidi(arg) {\r\n    return +arg >= 0 && +arg <= 127;\r\n}\r\n/**\r\n * Get the note midi number (a number between 0 and 127)\r\n *\r\n * It returns undefined if not valid note name\r\n *\r\n * @function\r\n * @param {string|number} note - the note name or midi number\r\n * @return {Integer} the midi number or undefined if not valid note\r\n * @example\r\n * import { toMidi } from '@tonaljs/midi'\r\n * toMidi(\"C4\") // => 60\r\n * toMidi(60) // => 60\r\n * toMidi('60') // => 60\r\n */\r\nfunction toMidi(note$1) {\r\n    if (isMidi(note$1)) {\r\n        return +note$1;\r\n    }\r\n    const n = note(note$1);\r\n    return n.empty ? null : n.midi;\r\n}\r\n/**\r\n * Get the frequency in hertzs from midi number\r\n *\r\n * @param {number} midi - the note midi number\r\n * @param {number} [tuning = 440] - A4 tuning frequency in Hz (440 by default)\r\n * @return {number} the frequency or null if not valid note midi\r\n * @example\r\n * import { midiToFreq} from '@tonaljs/midi'\r\n * midiToFreq(69) // => 440\r\n */\r\nfunction midiToFreq(midi, tuning = 440) {\r\n    return Math.pow(2, (midi - 69) / 12) * tuning;\r\n}\r\nconst L2 = Math.log(2);\r\nconst L440 = Math.log(440);\r\n/**\r\n * Get the midi number from a frequency in hertz. The midi number can\r\n * contain decimals (with two digits precission)\r\n *\r\n * @param {number} frequency\r\n * @return {number}\r\n * @example\r\n * import { freqToMidi} from '@tonaljs/midi'\r\n * freqToMidi(220)); //=> 57\r\n * freqToMidi(261.62)); //=> 60\r\n * freqToMidi(261)); //=> 59.96\r\n */\r\nfunction freqToMidi(freq) {\r\n    const v = (12 * (Math.log(freq) - L440)) / L2 + 69;\r\n    return Math.round(v * 100) / 100;\r\n}\r\nconst SHARPS = \"C C# D D# E F F# G G# A A# B\".split(\" \");\r\nconst FLATS = \"C Db D Eb E F Gb G Ab A Bb B\".split(\" \");\r\n/**\r\n * Given a midi number, returns a note name. The altered notes will have\r\n * flats unless explicitly set with the optional `useSharps` parameter.\r\n *\r\n * @function\r\n * @param {number} midi - the midi note number\r\n * @param {Object} options = default: `{ sharps: false, pitchClass: false }`\r\n * @param {boolean} useSharps - (Optional) set to true to use sharps instead of flats\r\n * @return {string} the note name\r\n * @example\r\n * import { midiToNoteName } from '@tonaljs/midi'\r\n * midiToNoteName(61) // => \"Db4\"\r\n * midiToNoteName(61, { pitchClass: true }) // => \"Db\"\r\n * midiToNoteName(61, { sharps: true }) // => \"C#4\"\r\n * midiToNoteName(61, { pitchClass: true, sharps: true }) // => \"C#\"\r\n * // it rounds to nearest note\r\n * midiToNoteName(61.7) // => \"D4\"\r\n */\r\nfunction midiToNoteName(midi, options = {}) {\r\n    if (isNaN(midi) || midi === -Infinity || midi === Infinity)\r\n        return \"\";\r\n    midi = Math.round(midi);\r\n    const pcs = options.sharps === true ? SHARPS : FLATS;\r\n    const pc = pcs[midi % 12];\r\n    if (options.pitchClass) {\r\n        return pc;\r\n    }\r\n    const o = Math.floor(midi / 12) - 1;\r\n    return pc + o;\r\n}\r\nvar index = { isMidi, toMidi, midiToFreq, midiToNoteName, freqToMidi };\n\nexport default index;\nexport { freqToMidi, isMidi, midiToFreq, midiToNoteName, toMidi };\n//# sourceMappingURL=index.es.js.map\n","import { note, transpose as transpose$1, coordToNote } from '@tonaljs/core';\nimport { midiToNoteName, freqToMidi } from '@tonaljs/midi';\n\nconst NAMES = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\r\nconst toName = (n) => n.name;\r\nconst onlyNotes = (array) => array.map(note).filter((n) => !n.empty);\r\n/**\r\n * Return the natural note names without octave\r\n * @function\r\n * @example\r\n * Note.names(); // => [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"]\r\n */\r\nfunction names(array) {\r\n    if (array === undefined) {\r\n        return NAMES.slice();\r\n    }\r\n    else if (!Array.isArray(array)) {\r\n        return [];\r\n    }\r\n    else {\r\n        return onlyNotes(array).map(toName);\r\n    }\r\n}\r\n/**\r\n * Get a note from a note name\r\n *\r\n * @function\r\n * @example\r\n * Note.get('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\r\n */\r\nconst get = note;\r\n/**\r\n * Get the note name\r\n * @function\r\n */\r\nconst name = (note) => get(note).name;\r\n/**\r\n * Get the note pitch class name\r\n * @function\r\n */\r\nconst pitchClass = (note) => get(note).pc;\r\n/**\r\n * Get the note accidentals\r\n * @function\r\n */\r\nconst accidentals = (note) => get(note).acc;\r\n/**\r\n * Get the note octave\r\n * @function\r\n */\r\nconst octave = (note) => get(note).oct;\r\n/**\r\n * Get the note midi\r\n * @function\r\n */\r\nconst midi = (note) => get(note).midi;\r\n/**\r\n * Get the note midi\r\n * @function\r\n */\r\nconst freq = (note) => get(note).freq;\r\n/**\r\n * Get the note chroma\r\n * @function\r\n */\r\nconst chroma = (note) => get(note).chroma;\r\n/**\r\n * Given a midi number, returns a note name. Uses flats for altered notes.\r\n *\r\n * @function\r\n * @param {number} midi - the midi note number\r\n * @return {string} the note name\r\n * @example\r\n * Note.fromMidi(61) // => \"Db4\"\r\n * Note.fromMidi(61.7) // => \"D4\"\r\n */\r\nfunction fromMidi(midi) {\r\n    return midiToNoteName(midi);\r\n}\r\n/**\r\n * Given a midi number, returns a note name. Uses flats for altered notes.\r\n */\r\nfunction fromFreq(freq) {\r\n    return midiToNoteName(freqToMidi(freq));\r\n}\r\n/**\r\n * Given a midi number, returns a note name. Uses flats for altered notes.\r\n */\r\nfunction fromFreqSharps(freq) {\r\n    return midiToNoteName(freqToMidi(freq), { sharps: true });\r\n}\r\n/**\r\n * Given a midi number, returns a note name. Uses flats for altered notes.\r\n *\r\n * @function\r\n * @param {number} midi - the midi note number\r\n * @return {string} the note name\r\n * @example\r\n * Note.fromMidiSharps(61) // => \"C#4\"\r\n */\r\nfunction fromMidiSharps(midi) {\r\n    return midiToNoteName(midi, { sharps: true });\r\n}\r\n/**\r\n * Transpose a note by an interval\r\n */\r\nconst transpose = transpose$1;\r\nconst tr = transpose$1;\r\n/**\r\n * Transpose by an interval.\r\n * @function\r\n * @param {string} interval\r\n * @return {function} a function that transposes by the given interval\r\n * @example\r\n * [\"C\", \"D\", \"E\"].map(Note.transposeBy(\"5P\"));\r\n * // => [\"G\", \"A\", \"B\"]\r\n */\r\nconst transposeBy = (interval) => (note) => transpose(note, interval);\r\nconst trBy = transposeBy;\r\n/**\r\n * Transpose from a note\r\n * @function\r\n * @param {string} note\r\n * @return {function}  a function that transposes the the note by an interval\r\n * [\"1P\", \"3M\", \"5P\"].map(Note.transposeFrom(\"C\"));\r\n * // => [\"C\", \"E\", \"G\"]\r\n */\r\nconst transposeFrom = (note) => (interval) => transpose(note, interval);\r\nconst trFrom = transposeFrom;\r\n/**\r\n * Transpose a note by a number of perfect fifths.\r\n *\r\n * @function\r\n * @param {string} note - the note name\r\n * @param {number} fifhts - the number of fifths\r\n * @return {string} the transposed note name\r\n *\r\n * @example\r\n * import { transposeFifths } from \"@tonaljs/note\"\r\n * transposeFifths(\"G4\", 1) // => \"D\"\r\n * [0, 1, 2, 3, 4].map(fifths => transposeFifths(\"C\", fifths)) // => [\"C\", \"G\", \"D\", \"A\", \"E\"]\r\n */\r\nfunction transposeFifths(noteName, fifths) {\r\n    const note = get(noteName);\r\n    if (note.empty) {\r\n        return \"\";\r\n    }\r\n    const [nFifths, nOcts] = note.coord;\r\n    const transposed = nOcts === undefined\r\n        ? coordToNote([nFifths + fifths])\r\n        : coordToNote([nFifths + fifths, nOcts]);\r\n    return transposed.name;\r\n}\r\nconst trFifths = transposeFifths;\r\nconst ascending = (a, b) => a.height - b.height;\r\nconst descending = (a, b) => b.height - a.height;\r\nfunction sortedNames(notes, comparator) {\r\n    comparator = comparator || ascending;\r\n    return onlyNotes(notes).sort(comparator).map(toName);\r\n}\r\nfunction sortedUniqNames(notes) {\r\n    return sortedNames(notes, ascending).filter((n, i, a) => i === 0 || n !== a[i - 1]);\r\n}\r\n/**\r\n * Simplify a note\r\n *\r\n * @function\r\n * @param {string} note - the note to be simplified\r\n * - sameAccType: default true. Use same kind of accidentals that source\r\n * @return {string} the simplified note or '' if not valid note\r\n * @example\r\n * simplify(\"C##\") // => \"D\"\r\n * simplify(\"C###\") // => \"D#\"\r\n * simplify(\"C###\")\r\n * simplify(\"B#4\") // => \"C5\"\r\n */\r\nconst simplify = (noteName) => {\r\n    const note = get(noteName);\r\n    if (note.empty) {\r\n        return \"\";\r\n    }\r\n    return midiToNoteName(note.midi || note.chroma, {\r\n        sharps: note.alt > 0,\r\n        pitchClass: note.midi === null,\r\n    });\r\n};\r\n/**\r\n * Get enharmonic of a note\r\n *\r\n * @function\r\n * @param {string} note\r\n * @param [string] - [optional] Destination pitch class\r\n * @return {string} the enharmonic note name or '' if not valid note\r\n * @example\r\n * Note.enharmonic(\"Db\") // => \"C#\"\r\n * Note.enharmonic(\"C\") // => \"C\"\r\n * Note.enharmonic(\"F2\",\"E#\") // => \"E#2\"\r\n */\r\nfunction enharmonic(noteName, destName) {\r\n    const src = get(noteName);\r\n    if (src.empty) {\r\n        return \"\";\r\n    }\r\n    // destination: use given or generate one\r\n    const dest = get(destName ||\r\n        midiToNoteName(src.midi || src.chroma, {\r\n            sharps: src.alt < 0,\r\n            pitchClass: true,\r\n        }));\r\n    // ensure destination is valid\r\n    if (dest.empty || dest.chroma !== src.chroma) {\r\n        return \"\";\r\n    }\r\n    // if src has no octave, no need to calculate anything else\r\n    if (src.oct === undefined) {\r\n        return dest.pc;\r\n    }\r\n    // detect any octave overflow\r\n    const srcChroma = src.chroma - src.alt;\r\n    const destChroma = dest.chroma - dest.alt;\r\n    const destOctOffset = srcChroma > 11 || destChroma < 0\r\n        ? -1\r\n        : srcChroma < 0 || destChroma > 11\r\n            ? +1\r\n            : 0;\r\n    // calculate the new octave\r\n    const destOct = src.oct + destOctOffset;\r\n    return dest.pc + destOct;\r\n}\r\nvar index = {\r\n    names,\r\n    get,\r\n    name,\r\n    pitchClass,\r\n    accidentals,\r\n    octave,\r\n    midi,\r\n    ascending,\r\n    descending,\r\n    sortedNames,\r\n    sortedUniqNames,\r\n    fromMidi,\r\n    fromMidiSharps,\r\n    freq,\r\n    fromFreq,\r\n    fromFreqSharps,\r\n    chroma,\r\n    transpose,\r\n    tr,\r\n    transposeBy,\r\n    trBy,\r\n    transposeFrom,\r\n    trFrom,\r\n    transposeFifths,\r\n    trFifths,\r\n    simplify,\r\n    enharmonic,\r\n};\n\nexport default index;\nexport { accidentals, ascending, chroma, descending, enharmonic, freq, fromFreq, fromFreqSharps, fromMidi, fromMidiSharps, get, midi, name, names, octave, pitchClass, simplify, sortedNames, sortedUniqNames, tr, trBy, trFifths, trFrom, transpose, transposeBy, transposeFifths, transposeFrom };\n//# sourceMappingURL=index.es.js.map\n","import { isPitch, altToAcc, isNamed, deprecate, accToAlt, interval } from '@tonaljs/core';\n\nconst NoRomanNumeral = { empty: true, name: \"\", chordType: \"\" };\r\nconst cache = {};\r\n/**\r\n * Get properties of a roman numeral string\r\n *\r\n * @function\r\n * @param {string} - the roman numeral string (can have type, like: Imaj7)\r\n * @return {Object} - the roman numeral properties\r\n * @param {string} name - the roman numeral (tonic)\r\n * @param {string} type - the chord type\r\n * @param {string} num - the number (1 = I, 2 = II...)\r\n * @param {boolean} major - major or not\r\n *\r\n * @example\r\n * romanNumeral(\"VIIb5\") // => { name: \"VII\", type: \"b5\", num: 7, major: true }\r\n */\r\nfunction get(src) {\r\n    return typeof src === \"string\"\r\n        ? cache[src] || (cache[src] = parse(src))\r\n        : typeof src === \"number\"\r\n            ? get(NAMES[src] || \"\")\r\n            : isPitch(src)\r\n                ? fromPitch(src)\r\n                : isNamed(src)\r\n                    ? get(src.name)\r\n                    : NoRomanNumeral;\r\n}\r\nconst romanNumeral = deprecate(\"RomanNumeral.romanNumeral\", \"RomanNumeral.get\", get);\r\n/**\r\n * Get roman numeral names\r\n *\r\n * @function\r\n * @param {boolean} [isMajor=true]\r\n * @return {Array<String>}\r\n *\r\n * @example\r\n * names() // => [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"]\r\n */\r\nfunction names(major = true) {\r\n    return (major ? NAMES : NAMES_MINOR).slice();\r\n}\r\nfunction fromPitch(pitch) {\r\n    return get(altToAcc(pitch.alt) + NAMES[pitch.step]);\r\n}\r\nconst REGEX = /^(#{1,}|b{1,}|x{1,}|)(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2})([^IViv]*)$/;\r\nfunction tokenize(str) {\r\n    return (REGEX.exec(str) || [\"\", \"\", \"\", \"\"]);\r\n}\r\nconst ROMANS = \"I II III IV V VI VII\";\r\nconst NAMES = ROMANS.split(\" \");\r\nconst NAMES_MINOR = ROMANS.toLowerCase().split(\" \");\r\nfunction parse(src) {\r\n    const [name, acc, roman, chordType] = tokenize(src);\r\n    if (!roman) {\r\n        return NoRomanNumeral;\r\n    }\r\n    const upperRoman = roman.toUpperCase();\r\n    const step = NAMES.indexOf(upperRoman);\r\n    const alt = accToAlt(acc);\r\n    const dir = 1;\r\n    return {\r\n        empty: false,\r\n        name,\r\n        roman,\r\n        interval: interval({ step, alt, dir }).name,\r\n        acc,\r\n        chordType,\r\n        alt,\r\n        step,\r\n        major: roman === upperRoman,\r\n        oct: 0,\r\n        dir,\r\n    };\r\n}\r\nvar index = {\r\n    names,\r\n    get,\r\n    // deprecated\r\n    romanNumeral,\r\n};\n\nexport default index;\nexport { get, names, tokenize };\n//# sourceMappingURL=index.es.js.map\n","import { note, transpose, altToAcc, accToAlt } from '@tonaljs/core';\nimport { transposeFifths } from '@tonaljs/note';\nimport { get } from '@tonaljs/roman-numeral';\n\nconst Empty = Object.freeze([]);\r\nconst NoKey = {\r\n    type: \"major\",\r\n    tonic: \"\",\r\n    alteration: 0,\r\n    keySignature: \"\",\r\n};\r\nconst NoKeyScale = {\r\n    tonic: \"\",\r\n    grades: Empty,\r\n    intervals: Empty,\r\n    scale: Empty,\r\n    chords: Empty,\r\n    chordsHarmonicFunction: Empty,\r\n    chordScales: Empty,\r\n};\r\nconst NoMajorKey = {\r\n    ...NoKey,\r\n    ...NoKeyScale,\r\n    type: \"major\",\r\n    minorRelative: \"\",\r\n    scale: Empty,\r\n    secondaryDominants: Empty,\r\n    secondaryDominantsMinorRelative: Empty,\r\n    substituteDominants: Empty,\r\n    substituteDominantsMinorRelative: Empty,\r\n};\r\nconst NoMinorKey = {\r\n    ...NoKey,\r\n    type: \"minor\",\r\n    relativeMajor: \"\",\r\n    natural: NoKeyScale,\r\n    harmonic: NoKeyScale,\r\n    melodic: NoKeyScale,\r\n};\r\nconst mapScaleToType = (scale, list, sep = \"\") => list.map((type, i) => `${scale[i]}${sep}${type}`);\r\nfunction keyScale(grades, chords, harmonicFunctions, chordScales) {\r\n    return (tonic) => {\r\n        const intervals = grades.map((gr) => get(gr).interval || \"\");\r\n        const scale = intervals.map((interval) => transpose(tonic, interval));\r\n        return {\r\n            tonic,\r\n            grades,\r\n            intervals,\r\n            scale,\r\n            chords: mapScaleToType(scale, chords),\r\n            chordsHarmonicFunction: harmonicFunctions.slice(),\r\n            chordScales: mapScaleToType(scale, chordScales, \" \"),\r\n        };\r\n    };\r\n}\r\nconst distInFifths = (from, to) => {\r\n    const f = note(from);\r\n    const t = note(to);\r\n    return f.empty || t.empty ? 0 : t.coord[0] - f.coord[0];\r\n};\r\nconst MajorScale = keyScale(\"I II III IV V VI VII\".split(\" \"), \"maj7 m7 m7 maj7 7 m7 m7b5\".split(\" \"), \"T SD T SD D T D\".split(\" \"), \"major,dorian,phrygian,lydian,mixolydian,minor,locrian\".split(\",\"));\r\nconst NaturalScale = keyScale(\"I II bIII IV V bVI bVII\".split(\" \"), \"m7 m7b5 maj7 m7 m7 maj7 7\".split(\" \"), \"T SD T SD D SD SD\".split(\" \"), \"minor,locrian,major,dorian,phrygian,lydian,mixolydian\".split(\",\"));\r\nconst HarmonicScale = keyScale(\"I II bIII IV V bVI VII\".split(\" \"), \"mMaj7 m7b5 +maj7 m7 7 maj7 o7\".split(\" \"), \"T SD T SD D SD D\".split(\" \"), \"harmonic minor,locrian 6,major augmented,lydian diminished,phrygian dominant,lydian #9,ultralocrian\".split(\",\"));\r\nconst MelodicScale = keyScale(\"I II bIII IV V VI VII\".split(\" \"), \"m6 m7 +maj7 7 7 m7b5 m7b5\".split(\" \"), \"T SD T SD D  \".split(\" \"), \"melodic minor,dorian b2,lydian augmented,lydian dominant,mixolydian b6,locrian #2,altered\".split(\",\"));\r\n/**\r\n * Get a major key properties in a given tonic\r\n * @param tonic\r\n */\r\nfunction majorKey(tonic) {\r\n    const pc = note(tonic).pc;\r\n    if (!pc)\r\n        return NoMajorKey;\r\n    const keyScale = MajorScale(pc);\r\n    const alteration = distInFifths(\"C\", pc);\r\n    const romanInTonic = (src) => {\r\n        const r = get(src);\r\n        if (r.empty)\r\n            return \"\";\r\n        return transpose(tonic, r.interval) + r.chordType;\r\n    };\r\n    return {\r\n        ...keyScale,\r\n        type: \"major\",\r\n        minorRelative: transpose(pc, \"-3m\"),\r\n        alteration,\r\n        keySignature: altToAcc(alteration),\r\n        secondaryDominants: \"- VI7 VII7 I7 II7 III7 -\".split(\" \").map(romanInTonic),\r\n        secondaryDominantsMinorRelative: \"- IIIm7b5 IV#m7 Vm7 VIm7 VIIm7b5 -\"\r\n            .split(\" \")\r\n            .map(romanInTonic),\r\n        substituteDominants: \"- bIII7 IV7 bV7 bVI7 bVII7 -\"\r\n            .split(\" \")\r\n            .map(romanInTonic),\r\n        substituteDominantsMinorRelative: \"- IIIm7 Im7 IIbm7 VIm7 IVm7 -\"\r\n            .split(\" \")\r\n            .map(romanInTonic),\r\n    };\r\n}\r\n/**\r\n * Get minor key properties in a given tonic\r\n * @param tonic\r\n */\r\nfunction minorKey(tnc) {\r\n    const pc = note(tnc).pc;\r\n    if (!pc)\r\n        return NoMinorKey;\r\n    const alteration = distInFifths(\"C\", pc) - 3;\r\n    return {\r\n        type: \"minor\",\r\n        tonic: pc,\r\n        relativeMajor: transpose(pc, \"3m\"),\r\n        alteration,\r\n        keySignature: altToAcc(alteration),\r\n        natural: NaturalScale(pc),\r\n        harmonic: HarmonicScale(pc),\r\n        melodic: MelodicScale(pc),\r\n    };\r\n}\r\n/**\r\n * Given a key signature, returns the tonic of the major key\r\n * @param sigature\r\n * @example\r\n * majorTonicFromKeySignature('###') // => 'A'\r\n */\r\nfunction majorTonicFromKeySignature(sig) {\r\n    if (typeof sig === \"number\") {\r\n        return transposeFifths(\"C\", sig);\r\n    }\r\n    else if (typeof sig === \"string\" && /^b+|#+$/.test(sig)) {\r\n        return transposeFifths(\"C\", accToAlt(sig));\r\n    }\r\n    return null;\r\n}\r\nvar index = { majorKey, majorTonicFromKeySignature, minorKey };\n\nexport default index;\nexport { majorKey, majorTonicFromKeySignature, minorKey };\n//# sourceMappingURL=index.es.js.map\n","import { rotate } from '@tonaljs/collection';\nimport { deprecate, transpose } from '@tonaljs/core';\nimport { simplify, transposeFifths } from '@tonaljs/interval';\nimport { chromaToIntervals, EmptyPcset } from '@tonaljs/pcset';\n\nconst MODES = [\r\n    [0, 2773, 0, \"ionian\", \"\", \"Maj7\", \"major\"],\r\n    [1, 2902, 2, \"dorian\", \"m\", \"m7\"],\r\n    [2, 3418, 4, \"phrygian\", \"m\", \"m7\"],\r\n    [3, 2741, -1, \"lydian\", \"\", \"Maj7\"],\r\n    [4, 2774, 1, \"mixolydian\", \"\", \"7\"],\r\n    [5, 2906, 3, \"aeolian\", \"m\", \"m7\", \"minor\"],\r\n    [6, 3434, 5, \"locrian\", \"dim\", \"m7b5\"],\r\n];\r\nconst NoMode = {\r\n    ...EmptyPcset,\r\n    name: \"\",\r\n    alt: 0,\r\n    modeNum: NaN,\r\n    triad: \"\",\r\n    seventh: \"\",\r\n    aliases: [],\r\n};\r\nconst modes = MODES.map(toMode);\r\nconst index = {};\r\nmodes.forEach((mode) => {\r\n    index[mode.name] = mode;\r\n    mode.aliases.forEach((alias) => {\r\n        index[alias] = mode;\r\n    });\r\n});\r\n/**\r\n * Get a Mode by it's name\r\n *\r\n * @example\r\n * get('dorian')\r\n * // =>\r\n * // {\r\n * //   intervals: [ '1P', '2M', '3m', '4P', '5P', '6M', '7m' ],\r\n * //   modeNum: 1,\r\n * //   chroma: '101101010110',\r\n * //   normalized: '101101010110',\r\n * //   name: 'dorian',\r\n * //   setNum: 2902,\r\n * //   alt: 2,\r\n * //   triad: 'm',\r\n * //   seventh: 'm7',\r\n * //   aliases: []\r\n * // }\r\n */\r\nfunction get(name) {\r\n    return typeof name === \"string\"\r\n        ? index[name.toLowerCase()] || NoMode\r\n        : name && name.name\r\n            ? get(name.name)\r\n            : NoMode;\r\n}\r\nconst mode = deprecate(\"Mode.mode\", \"Mode.get\", get);\r\n/**\r\n * Get a list of all modes\r\n */\r\nfunction all() {\r\n    return modes.slice();\r\n}\r\nconst entries = deprecate(\"Mode.mode\", \"Mode.all\", all);\r\n/**\r\n * Get a list of all mode names\r\n */\r\nfunction names() {\r\n    return modes.map((mode) => mode.name);\r\n}\r\nfunction toMode(mode) {\r\n    const [modeNum, setNum, alt, name, triad, seventh, alias] = mode;\r\n    const aliases = alias ? [alias] : [];\r\n    const chroma = Number(setNum).toString(2);\r\n    const intervals = chromaToIntervals(chroma);\r\n    return {\r\n        empty: false,\r\n        intervals,\r\n        modeNum,\r\n        chroma,\r\n        normalized: chroma,\r\n        name,\r\n        setNum,\r\n        alt,\r\n        triad,\r\n        seventh,\r\n        aliases,\r\n    };\r\n}\r\nfunction notes(modeName, tonic) {\r\n    return get(modeName).intervals.map((ivl) => transpose(tonic, ivl));\r\n}\r\nfunction chords(chords) {\r\n    return (modeName, tonic) => {\r\n        const mode = get(modeName);\r\n        if (mode.empty)\r\n            return [];\r\n        const triads = rotate(mode.modeNum, chords);\r\n        const tonics = mode.intervals.map((i) => transpose(tonic, i));\r\n        return triads.map((triad, i) => tonics[i] + triad);\r\n    };\r\n}\r\nconst triads = chords(MODES.map((x) => x[4]));\r\nconst seventhChords = chords(MODES.map((x) => x[5]));\r\nfunction distance(destination, source) {\r\n    const from = get(source);\r\n    const to = get(destination);\r\n    if (from.empty || to.empty)\r\n        return \"\";\r\n    return simplify(transposeFifths(\"1P\", to.alt - from.alt));\r\n}\r\nfunction relativeTonic(destination, source, tonic) {\r\n    return transpose(tonic, distance(destination, source));\r\n}\r\nvar index$1 = {\r\n    get,\r\n    names,\r\n    all,\r\n    distance,\r\n    relativeTonic,\r\n    notes,\r\n    triads,\r\n    seventhChords,\r\n    // deprecated\r\n    entries,\r\n    mode,\r\n};\n\nexport default index$1;\nexport { all, distance, entries, get, mode, names, notes, relativeTonic, seventhChords, triads };\n//# sourceMappingURL=index.es.js.map\n","import { compact, range } from '@tonaljs/collection';\nimport { toMidi, midiToNoteName } from '@tonaljs/midi';\n\n/**\r\n * Create a numeric range. You supply a list of notes or numbers and it will\r\n * be connected to create complex ranges.\r\n *\r\n * @param {Array} notes - the list of notes or midi numbers used\r\n * @return {Array} an array of numbers or empty array if not valid parameters\r\n *\r\n * @example\r\n * numeric([\"C5\", \"C4\"]) // => [ 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60 ]\r\n * // it works midi notes\r\n * numeric([10, 5]) // => [ 10, 9, 8, 7, 6, 5 ]\r\n * // complex range\r\n * numeric([\"C4\", \"E4\", \"Bb3\"]) // => [60, 61, 62, 63, 64, 63, 62, 61, 60, 59, 58]\r\n */\r\nfunction numeric(notes) {\r\n    const midi = compact(notes.map(toMidi));\r\n    if (!notes.length || midi.length !== notes.length) {\r\n        // there is no valid notes\r\n        return [];\r\n    }\r\n    return midi.reduce((result, note) => {\r\n        const last = result[result.length - 1];\r\n        return result.concat(range(last, note).slice(1));\r\n    }, [midi[0]]);\r\n}\r\n/**\r\n * Create a range of chromatic notes. The altered notes will use flats.\r\n *\r\n * @function\r\n * @param {Array} notes - the list of notes or midi note numbers to create a range from\r\n * @param {Object} options - The same as `midiToNoteName` (`{ sharps: boolean, pitchClass: boolean }`)\r\n * @return {Array} an array of note names\r\n *\r\n * @example\r\n * Range.chromatic([\"C2, \"E2\", \"D2\"]) // => [\"C2\", \"Db2\", \"D2\", \"Eb2\", \"E2\", \"Eb2\", \"D2\"]\r\n * // with sharps\r\n * Range.chromatic([\"C2\", \"C3\"], { sharps: true }) // => [ \"C2\", \"C#2\", \"D2\", \"D#2\", \"E2\", \"F2\", \"F#2\", \"G2\", \"G#2\", \"A2\", \"A#2\", \"B2\", \"C3\" ]\r\n */\r\nfunction chromatic(notes, options) {\r\n    return numeric(notes).map((midi) => midiToNoteName(midi, options));\r\n}\r\nvar index = { numeric, chromatic };\n\nexport default index;\nexport { chromatic, numeric };\n//# sourceMappingURL=index.es.js.map\n","import { all } from '@tonaljs/chord-type';\nimport { rotate, range } from '@tonaljs/collection';\nimport { note, transpose, deprecate } from '@tonaljs/core';\nimport { sortedUniqNames } from '@tonaljs/note';\nimport { isSubsetOf, isSupersetOf, modes } from '@tonaljs/pcset';\nimport { names as names$1, get as get$1, all as all$1 } from '@tonaljs/scale-type';\n\n/**\r\n * References:\r\n * - https://www.researchgate.net/publication/327567188_An_Algorithm_for_Spelling_the_Pitches_of_Any_Musical_Scale\r\n * @module scale\r\n */\r\nconst NoScale = {\r\n    empty: true,\r\n    name: \"\",\r\n    type: \"\",\r\n    tonic: null,\r\n    setNum: NaN,\r\n    chroma: \"\",\r\n    normalized: \"\",\r\n    aliases: [],\r\n    notes: [],\r\n    intervals: [],\r\n};\r\n/**\r\n * Given a string with a scale name and (optionally) a tonic, split\r\n * that components.\r\n *\r\n * It retuns an array with the form [ name, tonic ] where tonic can be a\r\n * note name or null and name can be any arbitrary string\r\n * (this function doesn\"t check if that scale name exists)\r\n *\r\n * @function\r\n * @param {string} name - the scale name\r\n * @return {Array} an array [tonic, name]\r\n * @example\r\n * tokenize(\"C mixolydean\") // => [\"C\", \"mixolydean\"]\r\n * tokenize(\"anything is valid\") // => [\"\", \"anything is valid\"]\r\n * tokenize() // => [\"\", \"\"]\r\n */\r\nfunction tokenize(name) {\r\n    if (typeof name !== \"string\") {\r\n        return [\"\", \"\"];\r\n    }\r\n    const i = name.indexOf(\" \");\r\n    const tonic = note(name.substring(0, i));\r\n    if (tonic.empty) {\r\n        const n = note(name);\r\n        return n.empty ? [\"\", name] : [n.name, \"\"];\r\n    }\r\n    const type = name.substring(tonic.name.length + 1);\r\n    return [tonic.name, type.length ? type : \"\"];\r\n}\r\n/**\r\n * Get all scale names\r\n * @function\r\n */\r\nconst names = names$1;\r\n/**\r\n * Get a Scale from a scale name.\r\n */\r\nfunction get(src) {\r\n    const tokens = Array.isArray(src) ? src : tokenize(src);\r\n    const tonic = note(tokens[0]).name;\r\n    const st = get$1(tokens[1]);\r\n    if (st.empty) {\r\n        return NoScale;\r\n    }\r\n    const type = st.name;\r\n    const notes = tonic\r\n        ? st.intervals.map((i) => transpose(tonic, i))\r\n        : [];\r\n    const name = tonic ? tonic + \" \" + type : type;\r\n    return { ...st, name, type, tonic, notes };\r\n}\r\nconst scale = deprecate(\"Scale.scale\", \"Scale.get\", get);\r\n/**\r\n * Get all chords that fits a given scale\r\n *\r\n * @function\r\n * @param {string} name - the scale name\r\n * @return {Array<string>} - the chord names\r\n *\r\n * @example\r\n * scaleChords(\"pentatonic\") // => [\"5\", \"64\", \"M\", \"M6\", \"Madd9\", \"Msus2\"]\r\n */\r\nfunction scaleChords(name) {\r\n    const s = get(name);\r\n    const inScale = isSubsetOf(s.chroma);\r\n    return all()\r\n        .filter((chord) => inScale(chord.chroma))\r\n        .map((chord) => chord.aliases[0]);\r\n}\r\n/**\r\n * Get all scales names that are a superset of the given one\r\n * (has the same notes and at least one more)\r\n *\r\n * @function\r\n * @param {string} name\r\n * @return {Array} a list of scale names\r\n * @example\r\n * extended(\"major\") // => [\"bebop\", \"bebop dominant\", \"bebop major\", \"chromatic\", \"ichikosucho\"]\r\n */\r\nfunction extended(name) {\r\n    const s = get(name);\r\n    const isSuperset = isSupersetOf(s.chroma);\r\n    return all$1()\r\n        .filter((scale) => isSuperset(scale.chroma))\r\n        .map((scale) => scale.name);\r\n}\r\n/**\r\n * Find all scales names that are a subset of the given one\r\n * (has less notes but all from the given scale)\r\n *\r\n * @function\r\n * @param {string} name\r\n * @return {Array} a list of scale names\r\n *\r\n * @example\r\n * reduced(\"major\") // => [\"ionian pentatonic\", \"major pentatonic\", \"ritusen\"]\r\n */\r\nfunction reduced(name) {\r\n    const isSubset = isSubsetOf(get(name).chroma);\r\n    return all$1()\r\n        .filter((scale) => isSubset(scale.chroma))\r\n        .map((scale) => scale.name);\r\n}\r\n/**\r\n * Given an array of notes, return the scale: a pitch class set starting from\r\n * the first note of the array\r\n *\r\n * @function\r\n * @param {string[]} notes\r\n * @return {string[]} pitch classes with same tonic\r\n * @example\r\n * scaleNotes(['C4', 'c3', 'C5', 'C4', 'c4']) // => [\"C\"]\r\n * scaleNotes(['D4', 'c#5', 'A5', 'F#6']) // => [\"D\", \"F#\", \"A\", \"C#\"]\r\n */\r\nfunction scaleNotes(notes) {\r\n    const pcset = notes.map((n) => note(n).pc).filter((x) => x);\r\n    const tonic = pcset[0];\r\n    const scale = sortedUniqNames(pcset);\r\n    return rotate(scale.indexOf(tonic), scale);\r\n}\r\n/**\r\n * Find mode names of a scale\r\n *\r\n * @function\r\n * @param {string} name - scale name\r\n * @example\r\n * modeNames(\"C pentatonic\") // => [\r\n *   [\"C\", \"major pentatonic\"],\r\n *   [\"D\", \"egyptian\"],\r\n *   [\"E\", \"malkos raga\"],\r\n *   [\"G\", \"ritusen\"],\r\n *   [\"A\", \"minor pentatonic\"]\r\n * ]\r\n */\r\nfunction modeNames(name) {\r\n    const s = get(name);\r\n    if (s.empty) {\r\n        return [];\r\n    }\r\n    const tonics = s.tonic ? s.notes : s.intervals;\r\n    return modes(s.chroma)\r\n        .map((chroma, i) => {\r\n        const modeName = get(chroma).name;\r\n        return modeName ? [tonics[i], modeName] : [\"\", \"\"];\r\n    })\r\n        .filter((x) => x[0]);\r\n}\r\nfunction getNoteNameOf(scale) {\r\n    const names = Array.isArray(scale) ? scaleNotes(scale) : get(scale).notes;\r\n    const chromas = names.map((name) => note(name).chroma);\r\n    return (noteOrMidi) => {\r\n        const height = typeof noteOrMidi === \"number\" ? noteOrMidi : note(noteOrMidi).height;\r\n        if (height === undefined)\r\n            return undefined;\r\n        const chroma = height % 12;\r\n        const oct = Math.floor(height / 12) - 1;\r\n        const position = chromas.indexOf(chroma);\r\n        if (position === -1)\r\n            return undefined;\r\n        return names[position] + oct;\r\n    };\r\n}\r\nfunction rangeOf(scale) {\r\n    const getName = getNoteNameOf(scale);\r\n    return (fromNote, toNote) => {\r\n        const from = note(fromNote).height;\r\n        const to = note(toNote).height;\r\n        if (from === undefined || to === undefined)\r\n            return [];\r\n        return range(from, to)\r\n            .map(getName)\r\n            .filter((x) => x);\r\n    };\r\n}\r\nvar index = {\r\n    get,\r\n    names,\r\n    extended,\r\n    modeNames,\r\n    reduced,\r\n    scaleChords,\r\n    scaleNotes,\r\n    tokenize,\r\n    rangeOf,\r\n    // deprecated\r\n    scale,\r\n};\n\nexport default index;\nexport { extended, get, modeNames, names, rangeOf, reduced, scale, scaleChords, scaleNotes, tokenize };\n//# sourceMappingURL=index.es.js.map\n","import { group } from 'd3';\nimport { arrayShallowEquals } from '../utils/ArrayUtils';\nimport { Chord } from '@tonaljs/tonal';\nimport Note from '../types/Note'; /* eslint-disable-line no-unused-vars */\n\n\n/**\n * @module Chords\n */\n\n/**\n * Detects chords as those notes that have the exact same start time, only works\n * for ground truth (since recordings are not exact)\n * Does only work if groundtruth is aligned! TuxGuitar produces unaligned MIDI.\n *\n * @param {Note[]} notes notes\n * @returns {Note[][]} array of chord arrays\n */\nexport function detectChordsByExactStart(notes) {\n    const grouped = group(notes, d => d.start);\n    const chords = [...grouped]\n        .map(d => d[1])\n        // Sort chords by time\n        .sort((a, b) => a[0].start - b[0].start)\n        // Sort notes in each chord by pitch\n        .map(chord => chord.sort((a, b) => a.pitch - b.pitch));\n    return chords;\n}\n\n/**\n * Detects chords, by simply looking for notes that overlap each other in time.\n * Example:\n *    =======\n *       =========\n *         ========\n * Important: Notes must be sorted by start time for this to work correctly.\n *\n * @todo not used yet\n * @todo optional minimum overlap ratio\n * @todo new definition of chord? i.e. notes have to start 'together'\n * @param {Note[]} notes array of Note objects\n * @param {boolean} sortByPitch sort chords by pitch? (otherwise sorted\n *      by note start time)\n * @returns {Note[][]} array of chord arrays\n */\nexport function detectChordsByOverlap(notes, sortByPitch = true) {\n    if (!notes || notes.length === 0) { return []; }\n    if (notes.length === 1) { return [[notes[0]]]; }\n    const sorted = notes.slice().sort((a, b) => { a.start !== b.start ? (a.start - b.start) : a.pitch - b.pitch; });\n    const notesTodo = new Set(sorted);\n    const chords = [];\n    // Find all overlaps with brute force\n    while (notesTodo.size > 0) {\n        // Take a new note and make a new chord\n        const note1 = notesTodo.values().next().value;\n        notesTodo.delete(note1);\n        let chord = [note1];\n        // Add all notes that overap note1\n        for (const note2 of notesTodo.values()) {\n            if (note1.overlapInSeconds(note2) >= 0.5 * note1.getDuration()) {\n                chord.push(note2);\n                notesTodo.delete(note2);\n            }\n        }\n        if (sortByPitch) {\n            chord = chord.sort((a, b) => a.pitch - b.pitch);\n        }\n        chords.push(chord);\n    }\n    return chords;\n}\n// export function detectChordsByOverlap(notes, sortByPitch = true) {\n//     if (!notes || !notes.length) { return []; }\n//     if (notes.length === 1) { return [[notes[0]]]; }\n//     const chords = [];\n//     let currentChord = [notes[0]];\n//     for (let i = 1; i < notes.length; i++) {\n//         const note = notes[i];\n//         console.log(i);\n//         console.log(currentChord);\n//         console.log(note);\n\n//         // Check for overlap with current chord\n//         let overlaps = false;\n//         for (let note2 of currentChord) {\n//             if (note.overlapsInTime(note2)) {\n//                 overlaps = true;\n//                 break;\n//             }\n//         }\n//         console.log(overlaps);\n//         if (overlaps) {\n//             currentChord.push(note);\n//             // TODO: also check the distance from the first note of the chord!\n//             // TODO:jump ahead to not count the cord multiple times (partially)\n//         } else {\n//             // If not, the previous chord is finished\n//             // Sort chord by pitch?\n//             if (sortByPitch) {\n//                 currentChord = currentChord.sort((a, b) => a.pitch - b.pitch);\n//             }\n//             chords.push(currentChord);\n//             // Start new chord\n//             if (i < notes.length - 1) {\n//                 currentChord = [notes[i + 1]];\n//                 i++;\n//             }\n//         }\n//     }\n//     // finish last chord\n//     chords.push(currentChord);\n//     return chords;\n// }\n\n\n/**\n * Maps number of steps (number of notes -1) to possible chord types\n */\nconst chordTypes = new Map([\n    [\n        1,\n        [\n            // TODO: how to handle inversions?\n            { steps: [5], name: 'Inverted power chord', suffix: '?' },\n            { steps: [7], name: 'Power chord', suffix: '5' },\n        ],\n    ],\n    [\n        2,\n        [\n            { steps: [2, 7], name: 'Suspended second', suffix: 'sus2' },\n            { steps: [3, 6], name: 'Diminished', suffix: 'dim' },\n            { steps: [3, 7], name: 'Minor', suffix: 'min' },\n            { steps: [4, 10], name: 'Seventh', suffix: '7' },\n            { steps: [4, 7], name: 'Major', suffix: '' },\n            { steps: [4, 8], name: 'Augmented', suffix: 'aug' },\n            { steps: [4, 9], name: 'Sixth', suffix: '6' },\n            { steps: [5, 7], name: 'Suspended fourth', suffix: 'sus4' },\n        ],\n    ],\n    [\n        3,\n        [\n            { steps: [2, 3, 7], name: 'Minor, added ninth', suffix: 'm(add9)' },\n            { steps: [2, 4, 7], name: 'Added ninth', suffix: 'add9' },\n            { steps: [3, 6, 10], name: 'Minor seventh, flat fifth', suffix: 'm7b5' },\n            { steps: [3, 7, 10], name: 'Minor seventh', suffix: 'm7' },\n            { steps: [3, 7, 11], name: 'Minor, major seventh', suffix: 'm(Maj7)' },\n            { steps: [3, 7, 8], name: 'Minor, flat sixth', suffix: 'mb6' },\n            { steps: [3, 7, 9], name: 'Minor sixth', suffix: 'm6' },\n            { steps: [4, 5, 11], name: 'Major eleventh (no fifth, no ninth)', suffix: 'Maj11' },\n            { steps: [4, 5, 7], name: 'Added fourth', suffix: 'add4' },\n            { steps: [4, 7, 10], name: 'Dominant seventh', suffix: '7' },\n            { steps: [4, 7, 11], name: 'Major seventh', suffix: 'Maj7' },\n            { steps: [4, 7, 9], name: 'Major Sixth', suffix: 'Maj6' },\n        ],\n    ],\n    [\n        4,\n        [\n            { steps: [2, 3, 6, 10], name: 'Minor ninth flat fifth', suffix: 'm9b5' },\n            { steps: [2, 3, 7, 10], name: 'Minor ninth', suffix: 'm9' },\n            { steps: [2, 3, 7, 11], name: 'Minor ninth, major seventh', suffix: 'm9(Maj7)' },\n            { steps: [2, 3, 7, 9], name: 'Minor sixth, added ninth', suffix: 'm6/9' },\n            { steps: [2, 4, 7, 11], name: 'Major ninth', suffix: 'Maj9' },\n            { steps: [2, 4, 7, 9], name: 'Sixth, added ninth', suffix: '6/9' },\n            { steps: [4, 5, 7, 11], name: 'Major eleventh (no ninth)', suffix: 'Maj11' },\n            { steps: [4, 6, 7, 10], name: 'Seventh, sharp eleventh', suffix: '7#11' },\n            { steps: [4, 6, 7, 11], name: 'Major seventh, sharp eleventh', suffix: 'Maj7#11' },\n        ],\n    ],\n    [\n        5,\n        [\n            { steps: [2, 4, 5, 7, 11], name: 'Major eleventh', suffix: 'Maj11' },\n            { steps: [2, 4, 7, 9, 11], name: 'Major thirteen', suffix: 'Maj13' },\n        ],\n    ],\n    [\n        6,\n        [\n            { steps: [2, 3, 4, 6, 7, 10], name: 'Minor thirteen', suffix: 'm13' },\n        ],\n    ],\n]);\n\n/**\n * Returns chord type, e.g. 'Major', 'Diminished', ...\n * Important: Notes must be sorted by pitch ascending\n *\n * @todo some chords might be multiple types\n * @param {Note[]} notes notes (sorted by pitch asc.)\n * @returns {string} chord type\n */\nexport function getChordType(notes) {\n    if (!notes || notes.length === 0) { return { name: 'No note' }; }\n    if (notes.length === 1) { return { name: 'Single note' }; }\n    // Get distances in semitones\n    let steps = [];\n    const lowest = notes[0].pitch;\n    for (let index = 1; index < notes.length; index++) {\n        steps.push(notes[index].pitch - lowest);\n    }\n    // Normalize higher than octave\n    steps = steps.map(d => d % 12);\n    // Filter doubles\n    steps = [...new Set(steps)];\n    // Filter octaves\n    steps = steps.filter(d => d !== 0);\n    if (steps.length === 0) { return { name: 'Octave' }; }\n    steps.sort((a, b) => a - b);\n\n    // Now get the chord type\n    const candidates = chordTypes.get(steps.length);\n    if (candidates) {\n        for (const cand of candidates) {\n            if (arrayShallowEquals(steps, cand.steps)) {\n                return cand;\n            }\n        }\n    }\n    return { name: 'Unknown chord type' };\n}\n\n/**\n * https://github.com/tonaljs/tonal/tree/master/packages/chord\n * Detected chords can be used with https://github.com/tonaljs/tonal/tree/master/packages/chord-type\n *\n * @param {Note[]} notes notes\n * @returns {string[]} possible chord types\n */\nexport function getChordName(notes) {\n    const noteLetters = notes\n        .sort((a, b) => a.pitch - b.pitch)\n        .map(d => d.getLetter());\n    const chords = Chord.detect(noteLetters);\n    return chords;\n}\n\n// /**\n//  * Estimates the name of a given chord of notes\n//  *\n//  * @param {string} chord name\n//  * @return {Note[]} notes array of Note objects\n//  * @todo use tonaljs\n//  * @todo use this https://github.com/greird/chordictionaryjs\n//  */\n// export function getNotesFromChordName(name, length = 1, start = 0) {\n//     console.error('NIY');\n// }\n","// CONSTANTS\r\nconst NONE = {\r\n    empty: true,\r\n    name: \"\",\r\n    upper: undefined,\r\n    lower: undefined,\r\n    type: undefined,\r\n    additive: [],\r\n};\r\nconst NAMES = [\"4/4\", \"3/4\", \"2/4\", \"2/2\", \"12/8\", \"9/8\", \"6/8\", \"3/8\"];\r\n// PUBLIC API\r\nfunction names() {\r\n    return NAMES.slice();\r\n}\r\nconst REGEX = /^(\\d?\\d(?:\\+\\d)*)\\/(\\d)$/;\r\nconst CACHE = new Map();\r\nfunction get(literal) {\r\n    const cached = CACHE.get(literal);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const ts = build(parse(literal));\r\n    CACHE.set(literal, ts);\r\n    return ts;\r\n}\r\nfunction parse(literal) {\r\n    if (typeof literal === \"string\") {\r\n        const [_, up, low] = REGEX.exec(literal) || [];\r\n        return parse([up, low]);\r\n    }\r\n    const [up, down] = literal;\r\n    const denominator = +down;\r\n    if (typeof up === \"number\") {\r\n        return [up, denominator];\r\n    }\r\n    const list = up.split(\"+\").map((n) => +n);\r\n    return list.length === 1 ? [list[0], denominator] : [list, denominator];\r\n}\r\nvar index = { names, parse, get };\r\n// PRIVATE\r\nfunction build([up, down]) {\r\n    const upper = Array.isArray(up) ? up.reduce((a, b) => a + b, 0) : up;\r\n    const lower = down;\r\n    if (upper === 0 || lower === 0) {\r\n        return NONE;\r\n    }\r\n    const name = Array.isArray(up) ? `${up.join(\"+\")}/${down}` : `${up}/${down}`;\r\n    const additive = Array.isArray(up) ? up : [];\r\n    const type = lower === 4 || lower === 2\r\n        ? \"simple\"\r\n        : lower === 8 && upper % 3 === 0\r\n            ? \"compound\"\r\n            : \"irregular\";\r\n    return {\r\n        empty: false,\r\n        name,\r\n        type,\r\n        upper,\r\n        lower,\r\n        additive,\r\n    };\r\n}\n\nexport default index;\nexport { get, names, parse };\n//# sourceMappingURL=index.es.js.map\n","import { difference, extent, intersection, max } from 'd3';\nimport { getMidiNoteByLabel, getMidiNoteByNr } from '../fileFormats/Midi';\nimport { detectChordsByExactStart } from '../chords/Chords';\nimport Note from '../types/Note';\nimport { bpmToSecondsPerBeat } from '../utils/MiscUtils';\n\n/**\n * @module instruments/Lamellophone\n */\n\n/**\n * Represents Lamellophone tunings\n */\nexport class LamellophoneTuning {\n    /**\n     * Represents a tuning of lamellophone.\n     *\n     * @param {string} name name\n     * @param {string[]} notes array of notes, same order as on instrument\n     *      e.g. [..., 'D4','C4', 'F#4', ...]\n     */\n    constructor(name, notes) {\n        this.name = name;\n        this.notes = notes;\n        this.short = notes.join(' ');\n        this.pitches = notes.map(note => getMidiNoteByLabel(note).pitch);\n        this.pitchesSorted = this.pitches\n            .slice()\n            .sort((a, b) => a - b);\n        this.keyCount = notes.length;\n    }\n\n    /**\n     * Returns an array of the tuning's notes as number representation:\n     * Tuning notes:  C4, D4, ... C5, D5, ... C6,  D6\n     * Number format: 1,  2,  ... 1°, 2°, ... 1°°, 2°°\n     *\n     * @returns {string[]} array with tuning notes in number representation\n     */\n    getNumbers() {\n        const pitches = this.pitchesSorted;\n        const numbers = new Map();\n        for (const [index, pitch] of pitches.entries()) {\n            let number = index + 1;\n            let ending = '';\n            let lowerOctave = pitch - 12;\n            while (lowerOctave > 0 && numbers.has(lowerOctave)) {\n                number = numbers.get(lowerOctave).number;\n                ending += '°';\n                lowerOctave -= 12;\n            }\n            numbers.set(pitch, { number, numberString: `${number}${ending}` });\n        }\n        return [...numbers.values()]\n            .map(d => d.numberString);\n    }\n\n    /**\n     * Returns an array of the tuning's notes as letter representation:\n     * Tuning notes:  C4, D4, ... C5, D5, ... C6,  D6\n     * Number format: C,  D,  ... C°, D°, ... C°°, D°°\n     *\n     * @returns {string[]} array with tuning notes in letter representation\n     */\n    getLetters() {\n        const pitches = this.pitchesSorted;\n        const numbers = new Map();\n        for (const [index, pitch] of pitches.entries()) {\n            let number = index + 1;\n            let ending = '';\n            let lowerOctave = pitch - 12;\n            while (lowerOctave > 0 && numbers.has(lowerOctave)) {\n                number = numbers.get(lowerOctave).number;\n                ending += '°';\n                lowerOctave -= 12;\n            }\n            const letter = getMidiNoteByNr(pitch).name;\n            numbers.set(pitch, { number, letterString: `${letter}${ending}` });\n        }\n        return [...numbers.values()].map(d => d.letterString);\n    }\n}\n\n/**\n * Tunings.\n * Notes are in the same order as on the instrument\n */\nexport const lamellophoneTunings = new Map([\n    ['Kalimba', new Map([\n        [\n            '9 A Major',\n            new LamellophoneTuning('9 A Major', ['A5', 'C#6', 'C#5', 'A5', 'A4', 'F#5', 'E5', 'E6', 'B5']),\n        ],\n        [\n            '9 A Minor',\n            new LamellophoneTuning('9 A Minor', ['A5', 'C6', 'C5', 'A5', 'A4', 'F5', 'E5', 'E6', 'B5']),\n        ],\n        [\n            '9 A Minor 7',\n            new LamellophoneTuning('9 A Minor 7', ['A5', 'C6', 'C5', 'A5', 'A4', 'F#5', 'E5', 'E6', 'B5']),\n        ],\n        [\n            '9 A Ake Bono',\n            new LamellophoneTuning('9 A Ake Bono', ['A5', 'D6', 'D5', 'A5', 'A4', 'F5', 'E5', 'E6', 'A#5']),\n        ],\n        [\n            '9 A Hijaz',\n            new LamellophoneTuning('9 A Hijaz', ['G5', 'D6', 'D5', 'A5', 'A4', 'F#5', 'D#5', 'D#6', 'A#5']),\n        ],\n        [\n            '9 A Pygmy',\n            new LamellophoneTuning('9 A Pygmy', ['G5', 'C6', 'C5', 'G5', 'G4', 'D#5', 'D5', 'D#6', 'A#5']),\n        ],\n        [\n            '17 C Major',\n            new LamellophoneTuning('17 C Major', ['D6', 'B5', 'G5', 'E5', 'C5', 'A4', 'F4', 'D4', 'C4', 'E4', 'G4', 'B4', 'D5', 'F5', 'A5', 'C6', 'E6']),\n        ],\n        [\n            '21 C Major',\n            new LamellophoneTuning('21 C Major', ['D6', 'B5', 'G5', 'E5', 'C5', 'A4', 'F4', 'D4', 'B3', 'G3', 'F3', 'A3', 'C4', 'E4', 'G4', 'B4', 'D5', 'F5', 'A5', 'C6', 'E6']),\n        ],\n    ])],\n]);\n\n\n/**\n * Parses a tab into notes\n *\n * @param {string} tab in letter format\n * @param {LamellophoneTuning} tuning tuning\n * @param {number} tempo tempo in bpm\n * @returns {Note[]} notes\n */\nexport function convertTabToNotes(tab, tuning, tempo = 120) {\n    if (!tab || tab.length === 0) { return []; }\n    // Create a mapping symbol->pitch\n    const symbolToPitchMap = new Map();\n    const symbols = tuning.getLetters();\n    for (let index = 0; index < tuning.keyCount; index++) {\n        symbolToPitchMap.set(symbols[index], tuning.pitchesSorted[index]);\n    }\n    // Parse tab to notes\n    const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n    const noteNamesSet = new Set(noteNames);\n    const lowestNote = tuning.pitchesSorted[0];\n    const startOct = getMidiNoteByNr(lowestNote).octave;\n    const secondsPerBeat = bpmToSecondsPerBeat(tempo);\n    let insideChord = false;\n    let insideNote = false;\n    let currentTime = 0;\n    let currentPitch = 0;\n    let currentOctOffset = 0;\n    const notes = [];\n    tab = `${tab.toUpperCase().replaceAll('\\n', ' \\n')} `;\n    // This is needed more often\n    const finishNote = () => {\n        try {\n            notes.push(Note.from({\n                pitch: currentPitch + 12 * (startOct + 1 + currentOctOffset),\n                start: currentTime,\n                end: currentTime + secondsPerBeat,\n            }));\n            currentOctOffset = 0;\n            if (!insideChord) {\n                currentTime += secondsPerBeat;\n            }\n        } catch {\n            console.log(currentPitch);\n        }\n        insideNote = false;\n    };\n    for (const char of tab) {\n        if (char === '(') {\n            // Start chord (but finish current if any)\n            if (insideChord) {\n                insideChord = false;\n            }\n            if (insideNote) {\n                finishNote();\n            }\n            insideChord = true;\n        } else if (noteNamesSet.has(char)) {\n            // Start note (but finish current if any)\n            if (insideNote) {\n                finishNote();\n            }\n            insideNote = true;\n            currentPitch = noteNames.indexOf(char);\n        } else if (char === '#') {\n            // Sharpen note\n            currentPitch++;\n        } else if (char === '°') {\n            // Increase ocatve\n            currentOctOffset++;\n        } else if (char === ' ' || char === '\\n' || char === ')') {\n            // End chord and note if inside\n            if (char === ')') {\n                insideChord = false;\n            }\n            if (char === '\\n') {\n                insideChord = false;\n                currentTime += secondsPerBeat;\n            }\n            if (insideNote) {\n                finishNote();\n            }\n        }\n    }\n    return notes;\n}\n\n/**\n * Converts an array of notes into a text tab\n *\n * @param {Note[]} notes notes\n * @param {LamellophoneTuning} tuning tuning\n * @param {'letter'|'number'} mode mode\n * @param {number} restSize number of seconds for a gap between chords to insert\n *     a line break\n * @returns {string} text tab\n */\nexport function convertNotesToTab(notes, tuning, mode = 'letter', restSize = 0.1) {\n    if (!notes || notes.length === 0) { return []; }\n    // Create a mapping pitch->symbol\n    const pitchToSymbolMap = new Map();\n    const symbols = mode === 'letter' ? tuning.getLetters() : tuning.getNumbers();\n    for (let index = 0; index < tuning.keyCount; index++) {\n        pitchToSymbolMap.set(tuning.pitchesSorted[index], symbols[index]);\n    }\n    // Get chords\n    const chords = detectChordsByExactStart(notes);\n    // Create tab\n    let tab = '';\n    let previousEnd = 0;\n    for (const chord of chords) {\n        // Format chord's notes\n        let chordString = chord\n            .map(note => {\n                if (pitchToSymbolMap.has(note.pitch)) {\n                    return pitchToSymbolMap.get(note.pitch) || `[${note.pitch}]`;\n                } else {\n                    return mode === 'letter' ? getMidiNoteByNr(note.pitch)?.name ?? note.pitch : note.pitch;\n                }\n            })\n            .join(' ');\n        if (chord.length > 1) {\n            // Mark chords with backets (for multiple notes)\n            chordString = `(${chordString})`;\n        }\n        tab = chord[0].start - previousEnd > restSize ? `${tab}\\n${chordString}` : `${tab} ${chordString}`;\n        // Update last end time of chord\n        previousEnd = max(chord, n => n.end);\n    }\n    // Remove leading space\n    return tab.slice(1);\n}\n\n/**\n * Converts an array of notes into an HTML tab with colored notes\n *\n * @param {Note[]} notes notes\n * @param {LamellophoneTuning} tuning tuning\n * @param {'letter'|'number'} mode mode\n * @param {number} restSize number of seconds for a gap between chords to insert\n *     a line break\n * @param {Function} colormap color map function: pitch to color\n * @returns {string} HTML tab\n */\nexport function convertNotesToHtmlTab(\n    notes,\n    tuning,\n    mode = 'letter',\n    restSize = 0.1,\n    colormap = () => 'black',\n) {\n    if (!notes || notes.length === 0) { return []; }\n    // Create a mapping pitch->symbol\n    const pitchToSymbolMap = new Map();\n    const symbols = mode === 'letter' ? tuning.getLetters() : tuning.getNumbers();\n    for (let index = 0; index < tuning.keyCount; index++) {\n        pitchToSymbolMap.set(tuning.pitches[index], symbols[index]);\n    }\n    // Get chords\n    const chords = detectChordsByExactStart(notes);\n    // Create tab\n    let tab = '';\n    let previousEnd = 0;\n    for (const chord of chords) {\n        // Format chord's notes\n        let chordString = chord\n            .map(note => {\n                let string;\n                if (pitchToSymbolMap.has(note.pitch)) {\n                    string = pitchToSymbolMap.get(note.pitch) || `[${note.pitch}]`;\n                } else {\n                    string = mode === 'letter' ? getMidiNoteByNr(note.pitch)?.name ?? note.pitch : note.pitch;\n                }\n                const color = colormap(note.pitch);\n                return `<span class='note' style='background-color: ${color}'>${string}</span>`;\n            })\n            .join('\\n');\n        if (chord.length > 1) {\n            // Mark chords with backets (for multiple notes)\n            chordString = `<span class='chord'>${chordString}</span>`;\n        }\n        tab = chord[0].start - previousEnd > restSize ? `${tab}<br/>${chordString}` : `${tab}${chordString}`;\n        // Update last end time of chord\n        previousEnd = max(chord, n => n.end);\n    }\n    return tab;\n}\n\n/**\n * Converts a number-based tab to note letter format\n *\n * @param {string} numberTab tab text with number format\n * @param {Map<number, string>} numberLetterMap maps numbers to letters\n * @returns {string} tab in letter format\n */\nexport function convertNumbersToLetters(numberTab, numberLetterMap) {\n    if (!numberTab || numberTab.length === 0) { return ''; }\n    // Normalize to °\n    numberTab = numberTab.replaceAll('\\'', '°');\n    numberTab = numberTab.replaceAll('’', '°');\n    numberTab = numberTab.replaceAll('*', '°');\n    numberTab = numberTab.replaceAll('º', '°');\n    numberTab = numberTab.replaceAll('^', '°');\n    for (const [key, value] of numberLetterMap.entries()) {\n        numberTab = numberTab.replaceAll(key, value);\n    }\n    return numberTab;\n}\n\n/**\n * Tries to find a transposition s.t. the tuning is able to play all notes.\n * If not not possible, return the transposition that requires the least keys to\n * be retuned.\n *\n * @todo tests fail\n * @param {Note[]} notes notes\n * @param {LamellophoneTuning} tuning tuning\n * @returns {object} {transpose: number, retune: Map}\n */\nexport function bestTransposition(notes, tuning) {\n    if (!notes || notes.length === 0) {\n        return { transpose: 0, retune: new Map() };\n    }\n\n    const occuringPitches = new Set(notes.map(n => n.pitch));\n    if (occuringPitches.size > tuning.keyCount) {\n        // Cannot play all notes, no matter the transp. and tuning\n        // TODO:\n        // just choose best approx?\n\n    }\n    const notePitches = [...occuringPitches];\n\n    // Already perfect? return now\n    if (difference(notePitches, tuning.pitches).size === 0) {\n        return { transpose: 0, retune: new Map() };\n    }\n\n    const [minPitch, maxPitch] = extent(notePitches);\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const transpose = (array, steps) => array.map(d => d + steps);\n\n    // Just brute force through all transpositions\n    let bestSteps = 0;\n    let bestTransposed;\n    let commonPitches;\n    for (let steps = -minPitch; steps <= 127 - maxPitch; steps++) {\n        const transposed = transpose(notePitches, steps);\n        const common = intersection(transposed, tuning.pitches);\n        if (!commonPitches || common.size > commonPitches.size) {\n            bestSteps = steps;\n            bestTransposed = transposed;\n        }\n    }\n    bestTransposed = new Set(bestTransposed);\n\n    // Get pitches in tuning but not in notes and other way round\n    const uncommon = difference(bestTransposed, tuning.pitches);\n    console.log(uncommon);\n\n    const freePitches = new Set();\n    const neededPitches = [];\n    for (const p of uncommon) {\n        if (bestTransposed.has(p)) {\n            neededPitches.push(p);\n        } else {\n            freePitches.add(p);\n        }\n    }\n    console.log(neededPitches);\n    console.log(freePitches);\n\n    if (neededPitches.length === 0) {\n        // Everything is fine!\n        return {\n            transpose: bestSteps,\n            retune: new Map(),\n        };\n    }\n    if (freePitches.size === 0) {\n        // Cannot solve this!\n        return {\n            transpose: bestSteps,\n            retune: new Map(),\n        };\n    }\n\n\n    // Get closest free pitch for each needed one\n    const retune = new Map();\n    for (const neededPitch of neededPitches) {\n        let bestMatch = null;\n        const bestDiff = Number.POSITIVE_INFINITY;\n        let freePitch;\n        for (freePitch of freePitches) {\n            const diff = Math.abs(neededPitch - freePitch);\n            if (diff < bestDiff) {\n                bestMatch = freePitch;\n            }\n        }\n        freePitches.delete(bestMatch);\n        retune.set(freePitch, neededPitch);\n    }\n\n    return {\n        transpose: bestSteps,\n        retune,\n    };\n}\n","/**\n * @module instruments/Piano\n */\n\n/**\n * Map:keyCount->pitchRange\n * pitchRange is {minPitch:number, maxPitch:number}\n */\nexport const pianoPitchRange = new Map([\n    [72, { minPitch: 24, maxPitch: 95 }],\n    [88, { minPitch: 21, maxPitch: 108 }],\n    [128, { minPitch: 0, maxPitch: 127 }],\n]);\n\n/**\n *\n * @param {Note[]} notes notes with only MIDI information\n * @returns {?} notes with fingering information\n */\n// export function fingeringFromMidi(notes) {\n// TODO: detect chords first?\n// TODO: then lookup chords' fingerings from a lookup table\n\n// TODO: alternatively (as fallback) use heuristics\n\n// TODO: or try to do it like humans do when playing\n\n\n\n// }\n","/**\n * @module utils/BlobUtils\n */\n\n/**\n * Converts a Blob to a base64 string\n *\n * @param {Blob} blob Blob\n * @returns {Promise<string,undefined>} base64 string\n */\nexport function blobToBase64(blob) {\n    return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result);\n        reader.readAsDataURL(blob);\n    });\n}\n\n/**\n * Extracts the file extension from a Blob, so it can be saved as a file with\n * an appropriate extension.\n *\n * @param {Blob} blob Blob\n * @returns {string} file extension\n */\nexport function blobToFileExtension(blob) {\n    return blob.type.split('/')[1].split(';')[0];\n}\n","/**\n * @module utils/FormattingUtils\n */\n\n/**\n * Formats a time in seconds to <minutes>:<seconds>.<milliseconds>\n *\n * @param {number|null} seconds in seconds\n * @param {boolean} includeMillis include milli seconds in string?\n * @returns {string} 0-padded time string <minutes>:<seconds>.<milliseconds>\n */\nexport function formatTime(seconds, includeMillis = true) {\n    if (seconds === undefined || seconds === null) {\n        return includeMillis ? '--:--.---' : '--:--';\n    }\n    const s = Math.floor(seconds);\n    let min = (Math.floor(s / 60)).toString();\n    let sec = (s % 60).toString();\n    min = min.length < 2 ? `0${min}` : min;\n    sec = sec.length < 2 ? `0${sec}` : sec;\n    if (!includeMillis) {\n        return `${min}:${sec}`;\n    }\n    let ms = (Math.round((seconds - s) * 1000)).toString();\n    if (ms.length < 2) {\n        ms = `00${ms}`;\n    } else if (ms.length < 3) {\n        ms = `0${ms}`;\n    }\n    return `${min}:${sec}.${ms}`;\n}\n\n/**\n * Formats a Date to a string with format\n *      YYYY-mm-DDTHH:MM:SS\n * or when replaceT == true\n *      YYYY-mm-DD HH:MM:SS\n *\n * @param {Date} date date\n * @param {boolean} replaceT replace the 'T'?\n * @param {boolean} keepMillis keep milliseconds?\n * @returns {string} formatted date\n */\nexport function formatDate(date, replaceT = false, keepMillis = true) {\n    let string = date.toISOString()\n        .split(':')\n        .join('-');\n    if (!keepMillis) {\n        string = string.slice(0, string.indexOf('.'));\n    }\n    if (replaceT) {\n        string = string.replace('T', ' ');\n    }\n    return string;\n}\n\n/**\n * Formats the song title (e.g. remove file extension and shorten)\n *\n * @param {string} title song title\n * @param {number} maxLength shorten to this length\n * @returns {string} formatted song title\n */\nexport function formatSongTitle(title, maxLength = 30) {\n    if (!title) {\n        return '[No Song]';\n    }\n    // Remove file extension\n    if (title.lastIndexOf('.') !== -1) {\n        title = title.slice(0, title.lastIndexOf('.'));\n    }\n    // Shorten\n    if (title.length > maxLength) {\n        title = `${title.slice(0, maxLength - 3)}...`;\n    }\n    return title;\n}\n","/**\n * @module utils/LocalStorageUtils\n */\n\n/**\n * Stringifies an object and stores it in the localStorage\n *\n * @param {string} key key\n * @param {object} object JSON compatible object\n */\nexport function storeObjectInLocalStorage(key, object) {\n    const string = JSON.stringify(object);\n    localStorage.setItem(key, string);\n}\n\n/**\n * Retrieves a stringified object from the localStorage and parses it.\n *\n * @param {string} key key\n * @returns {object|null} object or null of not possible\n */\nexport function getObjectFromLocalStorage(key) {\n    const string = localStorage.getItem(key);\n    if (string === null) {\n        // console.warn(`LocalStorage has no key ${key}`);\n        return null;\n    }\n    try {\n        return JSON.parse(string);\n    } catch {\n        return null;\n    }\n}\n","import { hsl, interpolateRgb } from 'd3';\n\n/**\n * @module utils/NoteColorUtils\n */\n\n// TODO: move to colors/ folder?\n\n/**\n * Maps each note to a color\n * Colors from https://www.svpwiki.com/music+note+or+sound+colors\n * Order is C, C#, ... B\n */\nconst noteColormap = [\n    '#ff0000',\n    '#ff4e00',\n    '#db7b00',\n    '#ffcc00',\n    '#e4ed00',\n    '#81d700',\n    '#00ffb4',\n    '#00ffea',\n    '#00baff',\n    '#3c00ff',\n    '#a800ff',\n    '#ff00fd',\n].map(d => {\n    // Make colors less saturated\n    const c = hsl(d);\n    c.s = 0.5;\n    return c.toString();\n});\n/**\n * Colorblind save colors from\n * Malandrino et al. - Visualization and Music Harmony: Design, Implementation,\n * and Evaluation https://ieeexplore.ieee.org/abstract/document/8564210\n * Order is C, C#, ... B\n */\n// export const noteColormapAccessible = new Map([\n//     ['C', '#9aebff'],\n//     ['C#', '#add5ff'],\n//     ['D', '#d6d6ff'],\n//     ['D#', '#ebd5ff'],\n//     ['E', '#ffc2eb'],\n//     ['F', '#ffcbcc'],\n//     ['F#', '#ffd5c2'],\n//     ['G', '#ffebc2'],\n//     ['G#', '#ebffc2'],\n//     ['A', '#c2d599'],\n//     ['A#', '#99ebbe'],\n//     ['B', '#adebeb'],\n// ]);\nconst noteColormapAccessible = [\n    '#6699ff',\n    '#66ffff',\n    '#000000',\n    '#647878',\n    '#993366',\n    '#ff0000',\n    '#ffcc99',\n    '#ffff01',\n    '#ff9900',\n    '#009900',\n    '#66ff99',\n    '#0000cc',\n];\n\n/**\n * Gradient color map from black to steelblue\n */\nconst colorInterpolator = interpolateRgb('black', 'steelblue');\nconst noteColormapGradientArray = Array.from({ length: 12 })\n    .map((d, index) => colorInterpolator(index / 11));\n\n/**\n * Returns the note color depending on the given pitch.\n * (Simplifies note color lookup by looking up the color for pitch%12.)\n *\n * @param {number} pitch MIDI pitch in [0, 127]\n * @param {string} colormap one of 'default', 'accessible', 'gradient'\n * @returns {string} color code\n */\nexport function noteColorFromPitch(pitch, colormap = 'default') {\n    switch (colormap) {\n    case 'accessible':\n        return noteColormapAccessible[pitch % 12];\n    case 'gradient':\n        return noteColormapGradientArray[pitch % 12];\n    default:\n        return noteColormap[pitch % 12];\n    }\n}\n","import { quantile, mean, deviation } from 'd3';\n\n/**\n * @module utils/StatisticsUtils\n */\n\n/**\n * Calculates a 95% confidence interval\n *\n * @see https://www.alchemer.com/resources/blog/how-to-calculate-confidence-intervals/\n * @param {numnber[]} values values\n * @returns {object} {mean, low, high}\n */\nexport function confidenceInterval(values) {\n    const n = values.length;\n    const m = mean(values);\n    const s = deviation(values);\n    const z = 1.96; // 95% CI\n    // const z = 2.576; // 99% CI\n    const part = z * (s / Math.sqrt(n));\n    const low = m - part;\n    const high = m + part;\n    return { mean: m, low, high };\n}\n\n/**\n * Given an array of Note objects, returns the numbers\n * that are drawn in a box plot (of the Note.start property)\n *\n * @param {number[]} values values\n * @returns {object} { q1, q2, q3, r0, r1 }\n */\nexport function getBoxplotCharacteristics(values) {\n    values.sort((a, b) => a - b);\n    const minValue = values[0];\n    const maxValue = values[values.length - 1];\n    const q1 = quantile(values, 0.25);\n    const q2 = quantile(values, 0.5);\n    const q3 = quantile(values, 0.75);\n    const iqr = q3 - q1;\n    const r0 = Math.max(minValue, q1 - iqr * 1.5);\n    const r1 = Math.min(maxValue, q3 + iqr * 1.5);\n    return { q1, q2, q3, r0, r1 };\n}\n\n/**\n * Returns a kernel desity estimator function.\n *\n * @see https://www.d3-graph-gallery.com/graph/violin_basicDens.html\n * @example\n * // With x being a d3.scaleLinear() scale\n * const kde = kernelDensityEstimator(kernelEpanechnikov(0.2), x.ticks(50));\n * const estimate = kde(data);\n * @param {Function} kernel kernel function\n * @param {number[]} X domain\n * @returns {Function} kernel density estimator\n *\n */\nexport function kernelDensityEstimator(kernel, X) {\n    /**\n     * Kernel desity estimator\n     * For each value of X it computes the estimated density of the data values\n     * in V. The result has the form [ [x1, est1], [x2, est2], ... ]\n     *\n     * @param {number[]} V values\n     * @returns {number[][]} estimates for points of X\n     */\n    const estimator = (V) => {\n        return X.map(x => [\n            x,\n            mean(V, (v) => kernel(x - v)),\n        ]);\n    };\n    return estimator;\n}\n\n/**\n * Epanechnikov kernel\n *\n * @param {number} k kernel size\n * @returns {Function} kernel function with curried k\n */\nexport function kernelEpanechnikov(k) {\n    /**\n     * Epanechnokov kernel function\n     *\n     * @param {number} v value\n     * @returns {number} result\n     */\n    const epKernel = (v) => Math.abs(v /= k) <= 1 ?\n        0.75 * (1 - v * v) / k :\n        0;\n    return epKernel;\n}\n\n/**\n * Gauss kernel\n *\n * @param {number} k kernel size\n * @returns {Function} kernel function with curried k\n */\nexport function kernelGauss(k) {\n    /**\n     * Gaussian kernel function\n     *\n     * @param {number} v value\n     * @returns {number} result\n     */\n    const gaKernel = (v) => Math.abs(v / k) <= 1 ?\n        ((1 / Math.sqrt(2 * Math.PI)) * Math.E ** ((-1 / 2) * v * v)) :\n        0;\n    return gaKernel;\n}\n","import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n","import { scaleLinear, extent, group, max } from 'd3';\nimport Note from '../types/Note';\nimport { bpmToSecondsPerBeat } from './MiscUtils';\nimport { kernelDensityEstimator, kernelEpanechnikov } from './StatisticsUtils';\nimport { findLocalMaxima } from './MathUtils';\nimport Recording from '../types/Recording'; /* eslint-disable-line no-unused-vars */\n\n/**\n * @module utils/RecordingsUtils\n */\n\n/**\n * Filters notes of a recording to remove noise from the MIDI device or pickup\n *\n * @todo detect gaps and fill them\n * @param {Recording} recording a recording\n * @param {number} velocityThreshold notes with velocity < velocityThreshold\n *      are removed\n * @param {number} durationThreshold notes with duration < velocityThreshold\n *      are removed (value in seconds)\n * @returns {Recording} clone of the recording with filtered notes\n */\nexport function filterRecordingNoise(recording, velocityThreshold = 0, durationThreshold = 0) {\n    const result = recording\n        .clone()\n        .filter(note => {\n            if (note.velocity < velocityThreshold) {\n                return false;\n            }\n            if (note.getDuration() < durationThreshold) {\n                return false;\n            }\n            return true;\n        });\n    // console.log(`Filtered recording, ${result.length()} of ${recording.length()} notes left`);\n    return result;\n}\n\n/**\n * Removes notes from a recordings which are outside the range of the ground\n * truth and therefore likely noise.\n * Looks up the pitch range from the track of the GT that the recording was made\n * for.\n *\n * @param {Recording[]} recordings recordings\n * @param {Note[][]} groundTruth ground truth\n * @returns {Recording[]} filtered recordings\n */\nexport function clipRecordingsPitchesToGtRange(recordings, groundTruth) {\n    // Speed up by getting range only once for all tracks\n    const pitchRanges = new Map();\n    for (const [index, part] of groundTruth.entries()) {\n        const extension = extent(part, d => d.pitch);\n        pitchRanges.set(index, extension);\n    }\n    return recordings.map(recording => {\n        const track = recording.selectedTrack;\n        const [minPitch, maxPitch] = pitchRanges.get(track);\n        return recording.clone().filter(note => note.pitch >= minPitch && note.pitch <= maxPitch);\n    });\n}\n\n/**\n * Aligns notes to a rhythmic pattern\n *\n * @todo not used\n * @param {Note[]} notes notes\n * @param {number} bpm e.g. 120 for tempo 120\n * @param {number} timeDivision e.g. 16 for 16th note steps\n * @returns {Note[]} aligned notes\n */\nexport function alignNotesToBpm(notes, bpm, timeDivision = 16) {\n    const secondsPerBeat = bpmToSecondsPerBeat(bpm);\n    const secondsPerDivision = secondsPerBeat / timeDivision;\n    return notes.map(note => {\n        const n = note.clone();\n        n.start = Math.round(n.start / secondsPerDivision) * secondsPerDivision;\n        n.end = Math.round(n.end / secondsPerDivision) * secondsPerDivision;\n        return n;\n    });\n}\n\n\n/**\n * Calculates a heatmap either pitch- or channel-wise.\n * Pitch-time heatmap:\n * Calculates a heatmap of multiple recordings, to see the note density in the\n * pitch-time-space.\n * Channel-time heatmap:\n * Calculates a heatmap of multiple recordings, to see the note density in the\n * channel-time-space. Channel could be a guitar string or left and right hand\n * for example.\n *\n * @param {Note[]} recNotes recordings\n * @param {number} nRecs number of recordings\n * @param {number} binSize time bin size in milliseconds\n * @param {string} attribute 'pitch' | 'channel'\n * @returns {Map} pitch->heatmap; heatmap is number[] for all time slices\n */\nexport function recordingsHeatmap(recNotes, nRecs, binSize = 10, attribute = 'pitch') {\n    let groupedByAttribute;\n    if (attribute === 'pitch') {\n        groupedByAttribute = group(recNotes, d => d.pitch);\n    } else if (attribute === 'channel') {\n        groupedByAttribute = group(recNotes, d => d.channel);\n    } else {\n        console.warn(`Invalid attribute parameter '${attribute}'`);\n    }\n\n    const heatmapByAttribute = new Map();\n    for (const [attribute_, notes] of groupedByAttribute.entries()) {\n        // Calculate heatmap\n        const maxTime = max(notes, d => d.end);\n        const nBins = Math.ceil((maxTime * 1000) / binSize) + 1;\n        const heatmap = Array.from({ length: nBins }).fill(0);\n        for (const note of notes) {\n            const start = Math.round(note.start * 1000 / binSize);\n            const end = Math.round(note.end * 1000 / binSize);\n            for (let bin = start; bin <= end; bin++) {\n                heatmap[bin] += 1;\n            }\n        }\n        // Normalize\n        for (let bin = 0; bin < heatmap.length; bin++) {\n            heatmap[bin] /= nRecs;\n        }\n        heatmapByAttribute.set(attribute_, heatmap);\n    }\n    return heatmapByAttribute;\n}\n\n/**\n * 'Averages' multiple recordings of the same piece to get an approximation of\n * the ground truth.\n *\n * @todo use velocity?\n * @param {Map} heatmapByPitch haetmap from recordingsHeatmap()\n * @param {number} binSize size of time bins in milliseconds\n * @param {number} threshold note is regarded as true when this ratio of\n *      recordings has a note there\n * @returns {Note[]} approximated ground truth notes\n */\nexport function averageRecordings(heatmapByPitch, binSize, threshold = 0.8) {\n    const newNotes = [];\n    for (const [pitch, heatmap] of heatmapByPitch.entries()) {\n        // Threshold to get note timespans -> array with booleans (is note here?)\n        // TODO: use Canny Edge Detector? Fill Gaps?\n        for (let bin = 0; bin < heatmap.length; bin++) {\n            heatmap[bin] = heatmap[bin] > threshold;\n        }\n        // Extract notes\n        let currentNote = null;\n        for (let bin = 0; bin < heatmap.length; bin++) {\n            // Detect note start\n            if (!currentNote && heatmap[bin]) {\n                const time = bin * binSize / 1000;\n                currentNote = new Note(pitch, time, 127, 0);\n            }\n            // Detect note end or end of array\n            if (currentNote && (!heatmap[bin] || bin === heatmap.length - 1)) {\n                const time = bin * binSize / 1000;\n                currentNote.end = time;\n                newNotes.push(currentNote);\n                currentNote = null;\n            }\n        }\n    }\n    // Sort new notes\n    newNotes.sort((a, b) => a.start - b.start);\n    return newNotes;\n}\n\n/**\n * Extracts a probable ground truth from multiple recordings. Uses one KDE for\n * each note starts and ends, detects maxima in the KDE and thresholds them.\n * Then uses alternating start end end candidates to create notes.\n *\n * @param {Note[]} recNotes recordings notes\n * @param {number} bandwidth kernel bandwidth\n * @param {number} ticksPerSecond number of ticks per second\n * @param {number} threshold threshold\n * @returns {Note[]} new notes\n */\nexport function averageRecordings2(recNotes, bandwidth = 0.01, ticksPerSecond, threshold) {\n    const groupedByPitch = group(recNotes, d => d.pitch);\n    const newNotes = [];\n    for (const [pitch, notes] of groupedByPitch.entries()) {\n        const starts = notes.map(d => d.start);\n        const ends = notes.map(d => d.end);\n        // Create KDE\n        const duration = max(ends);\n        const ticks = Math.ceil(ticksPerSecond * duration);\n        const x = scaleLinear()\n            .domain([0, duration])\n            .range([0, duration]);\n        const kde = kernelDensityEstimator(kernelEpanechnikov(bandwidth), x.ticks(ticks));\n        const estimateStarts = kde(starts);\n        const estimateEnds = kde(ends);\n        // Search for density maxima\n        const maximaStarts = findLocalMaxima(estimateStarts.map(d => d[1]));\n        const maximaEnds = findLocalMaxima(estimateEnds.map(d => d[1]));\n        // If density value > threshold, update note state\n        const chosenStarts = maximaStarts\n            .filter(d => estimateStarts[d][1] > threshold)\n            .map(d => estimateStarts[d][0]);\n        const chosenEnds = maximaEnds\n            .filter(d => estimateEnds[d][1] > threshold)\n            .map(d => estimateEnds[d][0]);\n        // Create notes\n        while (chosenStarts.length > 0) {\n            const nextStart = chosenStarts.shift();\n            // Remove ends before nextStart\n            while (chosenEnds.length > 0 && chosenEnds[0] < nextStart) {\n                chosenEnds.shift();\n            }\n            const nextEnd = chosenEnds.shift();\n            // Remove starts before nextEnd\n            while (chosenStarts.length > 0 && chosenStarts[0] < nextEnd) {\n                chosenStarts.shift();\n            }\n            newNotes.push(new Note(pitch, nextStart, 127, 0, nextEnd));\n        }\n    }\n    // Sort new notes\n    newNotes.sort((a, b) => a.start - b.start);\n    return newNotes;\n}\n\n\n/**\n * Returns a Map: pitch->differenceMap, differenceMap is an Array with time bins\n * and each bin is either\n *      0 (none, neither GT nor rec have a note here)\n *      1 (missing, only GT has a note here)\n *      2 (additional, only rec has a note here)\n *      3 (both, both have a note here)\n *\n * @todo move to comparison\n * @param {Note[]} gtNotes ground truth notes\n * @param {Note[]} recNotes recrodings notes\n * @param {number} binSize size of a time bin\n * @returns {Map} pitch->differenceMap; differenceMap is number[] for all time slices\n */\nexport function differenceMap(gtNotes, recNotes, binSize) {\n    const recHeatmap = recordingsHeatmap(recNotes, 1, binSize);\n    const gtHeatmap = recordingsHeatmap(gtNotes, 1, binSize);\n    const allPitches = [...new Set([\n        ...recHeatmap.keys(),\n        ...gtHeatmap.keys(),\n    ])];\n    const resultMap = new Map();\n    for (const pitch of allPitches) {\n        let result;\n        // Handle pitches that occur only in one of both\n        if (!recHeatmap.has(pitch)) {\n            // All notes are missing\n            result = gtHeatmap.get(pitch).map(d => d !== 0 ? 1 : 0);\n        } else if (!gtHeatmap.has(pitch)) {\n            // All notes are additional\n            result = recHeatmap.get(pitch).map(d => d !== 0 ? 2 : 0);\n        } else {\n            // Compare both bins for each time slice\n            const recH = recHeatmap.get(pitch);\n            const gtH = gtHeatmap.get(pitch);\n            const nBins = Math.max(recH.length, gtH.length);\n            result = Array.from({ length: nBins }).fill(0);\n            for (let index = 0; index < result.length; index++) {\n                const gtValue = gtH[index] || 0;\n                const recValue = recH[index] || 0;\n                if (gtValue === 0 && recValue === 0) {\n                    // None\n                    result[index] = 0;\n                }\n                if (gtValue !== 0 && recValue === 0) {\n                    // Missing\n                    result[index] = 1;\n                }\n                if (gtValue === 0 && recValue !== 0) {\n                    // Additional\n                    result[index] = 2;\n                }\n                if (gtValue !== 0 && recValue !== 0) {\n                    // Both\n                    result[index] = 3;\n                }\n            }\n        }\n        resultMap.set(pitch, result);\n    }\n    return resultMap;\n}\n\n/**\n * Computes the 'area' of error from a differenceMap normalized by total area.\n * The area is simply the number of bins with each value, total area is max.\n * number of bins in all pitches * the number of pitches.\n *\n * @todo move to comparison\n * @todo not used or tested yet\n * @todo add threshold for small errors (i.e. ignore area left and right of notes' start and end (masking?)))\n *\n * @param {Map} differenceMap differenceMap from differenceMap()\n * @returns {object} {missing, additional, correct} area ratio\n */\nexport function differenceMapErrorAreas(differenceMap) {\n    // Count bins for each error type\n    let missingBins = 0;\n    let additionalBins = 0;\n    let correctBins = 0;\n\n    for (const diffMap of differenceMap.values()) {\n        for (const bin of diffMap) {\n            if (bin === 1) { missingBins++; }\n            else if (bin === 2) { additionalBins++; }\n            else if (bin === 3) { correctBins++; }\n        }\n    }\n\n    // Normalize\n    const maxLength = max([...differenceMap], d => d[1].length);\n    const totalArea = differenceMap.size * maxLength;\n\n    return {\n        missing: missingBins / totalArea,\n        additional: additionalBins / totalArea,\n        correct: correctBins / totalArea,\n    };\n}\n","/**\n * @module utils/WebMidiUtils\n */\n\n/**\n * Allows to ping a MIDI device that loops back to measure latency.\n * The tool loopMIDI does exactly this:\n *\n * @see https://www.tobias-erichsen.de/software/loopmidi.html.\n * @example pingMidiDevice('loopMIDI Port', 10);\n * @param {string} deviceName name of the MIDI device\n * @param {number} howOften how many times to ping the device\n */\nexport function pingMidiDevice(deviceName, howOften = 1) {\n    if (!navigator.requestMIDIAccess) {\n        console.error('MIDI: WebMIDI is not supported in this browser.');\n    } else {\n        let sentCount = 0;\n        let sentTime;\n        let totalTime = 0;\n        // Start listening for incoming data\n        const receiveFunction = () => {\n            const ping = Date.now() - sentTime;\n            totalTime += ping;\n            const avg = totalTime / sentCount;\n            console.log(`Received MIDI from ${deviceName} after ${ping} ms (avg: ${avg})`);\n        };\n        navigator.requestMIDIAccess().then(midiAccess => {\n            for (const input of midiAccess.inputs.values()) {\n                if (deviceName === input.name) {\n                    input.onmidimessage = receiveFunction;\n                }\n            }\n            // Get output device\n            let outputDevice = null;\n            for (const output of midiAccess.outputs.values()) {\n                if (deviceName === output.name) {\n                    outputDevice = output;\n                }\n            }\n            if (!outputDevice) {\n                console.error(`Cannot ping output device ${deviceName} because it is not there`);\n            }\n            // Send data once a second\n            const pingFunction = () => {\n                if (sentCount < howOften) {\n                    sentCount++;\n                    console.log(`Ping ${sentCount}/${howOften} Sending MIDI ping to ${deviceName}`);\n                    sentTime = new Date();\n                    outputDevice.send([0x90, 0x45, 0x7F]);\n                    setTimeout(pingFunction, 1000);\n                }\n            };\n            setTimeout(pingFunction, 1000);\n        }, () => console.error('Cannot get MIDI access'),\n        );\n    }\n}\n","import { group } from 'd3';\nimport * as Utils from '../utils';\nimport { Note } from '../types/Note'; /* eslint-disable-line no-unused-vars */\n\n/**\n * @module comparison/Matching\n */\n\n/**\n * For one recording, separately for each pitch,\n * matches each recorded note to its closest ground truth note.\n * If there are multiple matches, the best (smallest time difference)\n * will be kept and others will be regarded as additional notes.\n * Ground truth notes without match will be regarded as missing notes.\n *\n * Result format (separated by pitch in a Map):\n * Map:pitch->{\n *    gtRecMap           matched rec. note for each GT note Map:gtNoteStart->recNote,\n *    additionalNotes:   rec. notes without matched GT note\n *    missingNotes:      GT notes without matched rec. note\n *    gtNotes:           all GT notes\n * }\n *\n * @todo add max distance?\n * @param {Note[]} recNotes recorded notes of a single recording\n * @param {Note[]} gtNotes ground truth notes\n * @returns {Map} result\n */\nexport function matchGtAndRecordingNotes(recNotes, gtNotes) {\n    const groupedByPitch = group(gtNotes, d => d.pitch);\n    const groupedByPitchRec = group(recNotes, d => d.pitch);\n    const result = new Map();\n    // For each pitch, map recorded notes to GT notes\n    for (const [pitch, gtNotes] of groupedByPitch.entries()) {\n        const gtRecMap = new Map();\n        const additionalNotes = [];\n        const missingNotes = [];\n        for (const n of gtNotes) {\n            gtRecMap.set(n.start, null);\n        }\n        // Recording might be missing this pitch, then all notes are missing\n        if (!groupedByPitchRec.has(pitch)) {\n            result.set(pitch, {\n                gtRecMap: new Map(),\n                additionalNotes: [],\n                missingNotes: gtNotes,\n                gtNotes: gtNotes,\n            });\n            continue;\n        }\n        const recNotes = groupedByPitchRec.get(pitch);\n        for (const r of recNotes) {\n            // Match each recorded note to the closest ground truth note\n            const nearest = Utils.findNearest(gtNotes, r);\n            const currentEntry = gtRecMap.get(nearest.start);\n            if (currentEntry === null) {\n                // If empty, take\n                gtRecMap.set(nearest.start, r);\n            } else {\n                // If it is taken, overtake it if the new match is closer\n                if (Math.abs(nearest.start - r.start) < Math.abs(currentEntry.start - r.start)) {\n                    // If it can overtake, add the old note to 'wrong additional notes' list\n                    gtRecMap.set(nearest.start, r);\n                    additionalNotes.push(currentEntry);\n                } else {\n                    // If it cannot overtake, add note to 'wrong additional notes' list\n                    additionalNotes.push(r);\n                }\n            }\n        }\n        // Go trough all GT notes, those that have no recording assigned to it are missing notes\n        for (const n of gtNotes) {\n            if (gtRecMap.get(n.start) === null) {\n                missingNotes.push(n);\n            }\n        }\n        // Store result in map pitch->groupings\n        result.set(pitch, {\n            gtRecMap,\n            additionalNotes,\n            missingNotes,\n            gtNotes: gtNotes,\n        });\n    }\n    // If a recording has a pitch that GT has not, all those notes are additional notes\n    for (const [pitch, recNotes] of groupedByPitchRec.entries()) {\n        if (!groupedByPitch.has(pitch)) {\n            result.set(pitch, {\n                gtRecMap: new Map(),\n                additionalNotes: recNotes,\n                missingNotes: [],\n                gtNotes: [],\n            });\n\n        }\n    }\n    // console.log(result);\n    return result;\n}\n\n/**\n * Matches all recorded notes from multiple recordings to the nearest\n * ground truth (GT) note.\n * Contrary to the matching created by matchGtAndRecordingNotes()\n * missing and additional notes are not considered, so multiple notes\n * from a single recording can be matched to the same GT note.\n *\n * Result format:\n * Map:pitch->Map:gtStart->arrayOfMatchedRecNotes\n *\n * @param {Recording[]} recordings recordings\n * @param {Note[]} gtNotes ground truth notes\n * @returns {Map} matching\n */\nexport function matchGtAndMultipleRecordings(recordings, gtNotes) {\n    const allRecNotes = recordings.map(d => d.notes).flat();\n    const groupedByPitch = group(gtNotes, d => d.pitch);\n    const groupedByPitchRec = group(allRecNotes, d => d.pitch);\n    const result = new Map();\n    // For each pitch, map recorded notes to GT notes and keep track of misses\n    for (const [pitch, gtNotes] of groupedByPitch.entries()) {\n        const gtRecMap = new Map();\n        for (const n of gtNotes) {\n            gtRecMap.set(n.start, []);\n        }\n        // Recording might be missing this pitch, then match is empty\n        if (!groupedByPitchRec.has(pitch)) {\n            result.set(pitch, new Map());\n            continue;\n        }\n        const recNotes = groupedByPitchRec.get(pitch);\n        for (const r of recNotes) {\n            // Match each recorded note to the closest ground truth note\n            const nearest = Utils.findNearest(gtNotes, r);\n            const currentEntry = gtRecMap.get(nearest.start);\n            currentEntry.push(r);\n            gtRecMap.set(nearest.start, currentEntry);\n        }\n        // Store result in map pitch->groupings\n        result.set(pitch, gtRecMap);\n    }\n    // console.log(result);\n    return result;\n}\n\n/**\n * Calculates (for each pitch) the average error for each GT note (averaged\n * over all matched notes in the recordings),\n * as well as the maximum of all those average errors.\n * GT notes that have no matched recorded notes will have an error of 0.\n *\n * @param {Map} multiMatching matching with a GT and multiple recordings\n * @param {number} errorThreshold number seconds of deviation above which\n *      to exclude an error\n * @returns {Map} error summary Map:pitch->{gtErrorMap, maxError},\n *      gtErrorMap is Map:gtStart->error (error is average over all time\n *      differences between the GT note and matched recNotes)\n */\nexport function getMultiMatchingErrorPerNote(multiMatching, errorThreshold = 3) {\n    const result = new Map();\n    for (const [pitch, gtRecMap] of multiMatching.entries()) {\n        const gtErrorMap = new Map();\n        let maxError = 0;\n        // Go through all gtStart and matched notes\n        for (const [gtStart, matchedRecNotes] of gtRecMap.entries()) {\n            let error = 0;\n            if (matchedRecNotes.length > 0) {\n                for (const note of matchedRecNotes) {\n                    const error_ = Math.abs(note.start - gtStart);\n                    if (error_ <= errorThreshold) {\n                        error += error_;\n                    }\n                }\n                error /= matchedRecNotes.length;\n                if (error > maxError) {\n                    maxError = error;\n                }\n            }\n            gtErrorMap.set(gtStart, error);\n        }\n        result.set(pitch, {\n            gtErrorMap,\n            maxError,\n        });\n    }\n    return result;\n}\n\n/**\n * Calculates the error of a matching by applying penalties and summing up\n *\n * @param {Map} matching a matching created by matchGtAndRecordingNotes\n * @param {number} addPenalty penalty for each additonal note\n * @param {number} missPenalty penalty for each missing note\n * @param {number} timingPenalty penalty for note timing differences in seconds\n * @param {number} timeThreshold timing errors below it (absolute) are ignored\n * @returns {object} errors by category\n */\nexport function getMatchingError(matching, addPenalty, missPenalty, timingPenalty, timeThreshold = 0) {\n    const result = {\n        total: 0,\n        totalAdd: 0,\n        totalMiss: 0,\n        totalCorrect: 0,\n        totalTime: 0,\n        totalNumberOfGtNotes: 0,\n        perPitch: new Map(),\n    };\n    for (const [pitch, m] of matching.entries()) {\n        const { gtRecMap, additionalNotes, missingNotes, gtNotes } = m;\n        const addError = additionalNotes.length * addPenalty;\n        const missError = missingNotes.length * missPenalty;\n        let correct = 0;\n        let timeError = 0;\n        for (const [gtStart, matchedRecNote] of gtRecMap.entries()) {\n            // If it is null, this is handled in missingNotes\n            if (matchedRecNote !== null) {\n                correct++;\n                const error = Math.abs(matchedRecNote.start - gtStart);\n                if (error > timeThreshold) {\n                    timeError += error;\n                }\n            }\n        }\n        const total = addError + missError + timeError * timingPenalty;\n        result.perPitch.set(pitch, {\n            total,\n            addError,\n            missError,\n            correct,\n            timeError,\n            numberOfGtNotes: gtNotes.length,\n        });\n        // Update total\n        result.totalAdd += addError;\n        result.totalMiss += missError;\n        result.totalCorrect += correct;\n        result.totalTime += timeError;\n        result.total += total;\n        result.totalNumberOfGtNotes += gtNotes.length;\n    }\n    return result;\n}\n\n/**\n * Cuts a section from a matching by filtering on the start times\n * of ground truth, missing, and additonal notes\n *\n * @param {Map} matching matching\n * @param {number} start start time (inclusive)\n * @param {number} end end time (exclusive)\n * @returns {Map} section of matching\n */\nexport function getMatchingSection(matching, start, end) {\n    const result = new Map();\n    for (const [pitch, m] of matching.entries()) {\n        const { gtRecMap, additionalNotes, missingNotes, gtNotes } = m;\n        const newGtRecMap = new Map();\n        for (const [gtStart, matchedRecNote] of gtRecMap.entries()) {\n            // If it is null, this is handled in missingNotes\n            if (matchedRecNote !== null && gtStart >= start && gtStart < end) {\n                newGtRecMap.set(gtStart, matchedRecNote);\n            }\n        }\n        result.set(pitch, {\n            gtRecMap: newGtRecMap,\n            additionalNotes: additionalNotes.filter(d => d.start >= start && d.start < end),\n            missingNotes: missingNotes.filter(d => d.start >= start && d.start < end),\n            gtNotes: gtNotes,\n        });\n    }\n    return result;\n}\n\n/**\n * Shortcut for getMatchingSection and getMatchingError,\n * see them for parameter details.\n *\n * @param {Map} matching matching\n * @param {number} start start time (inclusive)\n * @param {number} end end time (exclusive)\n * @param {number} addPenalty penalty for each additonal note\n * @param {number} missPenalty penalty for each missing note\n * @param {number} timingPenalty penalty for note timing differences in seconds\n * @returns {object} error by category\n */\nexport function getMatchingSliceError(matching, start, end, addPenalty, missPenalty, timingPenalty) {\n    const section = getMatchingSection(matching, start, end);\n    const error = getMatchingError(section, addPenalty, missPenalty, timingPenalty);\n    return error;\n}\n","import { matchGtAndRecordingNotes } from '../comparison/Matching';\nimport { randomInt, randomLcg, randomUniform, median } from 'd3';\nimport * as Drums from '../instruments/Drums';\nimport Note from '../types/Note';\nimport NoteArray from '../types/NoteArray';\n\n/**\n * @module comparison/Alignment\n */\n\n/**\n * Given two NoteArrays, shift the second one in time such that they are aligned\n *\n * @todo use https://en.wikipedia.org/wiki/Smith%E2%80%93Waterman_algorithm\n *      to find note alignment, then only use those for force calculation\n * @param {NoteArray} gt a NoteArray, e.g. the ground truth\n * @param {NoteArray} rec a NoteArray to align to a\n * @returns {NoteArray} an aligned copy of b\n */\nexport function alignNoteArrays(gt, rec) {\n    rec = rec.clone();\n    const f = alignmentForce(gt.getNotes(), rec.getNotes());\n    rec = rec.shiftTime(f);\n    // console.log(`Aligned recording via shifting by ${f.toFixed(3)} seconds`);\n    return {\n        aligned: rec,\n        timeDifference: f,\n    };\n}\n\n/**\n * Given two NoteArrays, shift the second one in time such that they are aligned\n *\n * @param {NoteArray} gt a NoteArray, e.g. the ground truth\n * @param {NoteArray} rec a NoteArray to align to a\n * @returns {NoteArray} an aligned copy of b\n */\nexport function alignNoteArrays2(gt, rec) {\n    let timeDifference = 0;\n    let tries = 0;\n    rec = rec.clone();\n    while (tries < 25) {\n        // Get a 1-to-1 matching between gt and rec notes so noise has less impact\n        const matching = matchGtAndRecordingNotes(rec.getNotes(), gt.getNotes());\n        // Get average time difference between matched notes\n        let timeDiff = 0;\n        let count = 0;\n        for (const m of matching.values()) {\n            const { gtRecMap } = m;\n            for (const [gtStart, matchedRecNote] of gtRecMap.entries()) {\n                if (matchedRecNote !== null) {\n                    count++;\n                    timeDiff += gtStart - matchedRecNote.start;\n                }\n            }\n        }\n        timeDiff /= count;\n        // Shift recording\n        rec.shiftTime(timeDiff);\n        timeDifference += timeDiff;\n        // console.log(`${tries} shifting by ${timeDiff.toFixed(3)} seconds`);\n        // Stop while loop when finished\n        if (Math.abs(timeDiff) < 0.0005) {\n            break;\n        }\n        tries++;\n    }\n    return {\n        aligned: rec,\n        timeDifference,\n    };\n}\n\n/**\n * Given two NoteArrays, shift the second one in time such that they are aligned\n *\n * @todo use median instead of average?\n * @param {NoteArray} gt a NoteArray, e.g. the ground truth\n * @param {NoteArray} rec a NoteArray to align to a\n * @returns {NoteArray} an aligned copy of b\n */\nexport function alignNoteArrays3(gt, rec) {\n    let timeDifference = 0;\n    let tries = 0;\n    rec = rec.clone();\n    while (tries < 25) {\n        // Get a 1-to-1 matching between gt and rec notes so noise has less impact\n        const matching = matchGtAndRecordingNotes(rec.getNotes(), gt.getNotes());\n        // Get time differences\n        const timeDiffs = [];\n        for (const m of matching.values()) {\n            for (const [gtStart, matchedRecNote] of m.gtRecMap.entries()) {\n                if (matchedRecNote !== null) {\n                    timeDiffs.push(gtStart - matchedRecNote.start);\n                }\n            }\n        }\n        const shift = median(timeDiffs);\n        // Shift recording\n        rec.shiftTime(shift);\n        timeDifference += shift;\n        // console.log(`${tries} shifting by ${shift.toFixed(3)} seconds`);\n        // Stop while loop when finished\n        if (Math.abs(shift) < 0.0001) {\n            break;\n        }\n        tries++;\n    }\n    return {\n        aligned: rec,\n        timeDifference,\n    };\n}\n\n\n\n/**\n * Calculates the mean difference between all notes in a and the nearest same-\n * pitched notes in b\n *\n * @param {Note[]} a array with notes\n * @param {Note[]} b array with notes\n * @returns {number} mean time difference\n */\nfunction alignmentForce(a, b) {\n    let difference = 0;\n    let count = 0;\n    // For each note in a, search the closest note in b with the same pitch and calculate the distance\n    for (const noteA of a) {\n        let distance = Number.POSITIVE_INFINITY;\n        let diff = Number.POSITIVE_INFINITY;\n        for (const noteB of b) {\n            if (noteA.pitch === noteB.pitch) {\n                const dist = Math.abs(noteA.start - noteB.start);\n                if (dist < distance) {\n                    distance = dist;\n                    diff = noteA.start - noteB.start;\n                    // TODO: Larger distances might be errors\n                    // if (diff > 1) {\n                    //     diff = Math.sqrt(diff);\n                    // }\n                }\n            }\n        }\n        // (If not found, this does not change alignment)\n        if (distance < Number.POSITIVE_INFINITY) {\n            difference += diff;\n            count++;\n        }\n    }\n    return difference / count;\n}\n\n/**\n * Test function\n *\n * @todo move to test\n */\nexport function testAlignment() {\n    const test = (a, b, title) => {\n        console.log(title);\n        console.log(b.getNotes().map(n => n.start));\n        const aligned = alignNoteArrays(a, b);\n        console.log(aligned.getNotes().map(n => n.start));\n    };\n    const a = new NoteArray([\n        new Note(69, 0, 127, 0, 1),\n        new Note(70, 1, 127, 0, 2),\n        new Note(71, 2, 127, 0, 3),\n    ]);\n    console.log(a.getNotes().map(n => n.start));\n\n    let b;\n\n    b = a.clone().shiftTime(2);\n    test(a, b, 'shifted by 2');\n\n    b = a.clone().shiftTime(-2);\n    test(a, b, 'shifted by -2');\n\n    b = a.clone()\n        .shiftTime(3)\n        .addNotes([new Note(72, 2, 127, 0, 3)]);\n    test(a, b, 'shifted by 3, added note');\n\n    b = a.clone().repeat(2);\n    test(a, b, 'repeated');\n\n    b = a.clone()\n        .repeat(2)\n        .shiftTime(3);\n    test(a, b, 'repeated, shifted by 3');\n}\n\n\n\n/**\n * @todo Benchmark different aligment functions on a randomly generated test set\n * This allows to check the calculated alignment against a known ground truth\n */\nexport function alignmentBenchmark() {\n    // Use random seed for reproducability\n    const seed = 0.44871573888282423; // any number in [0, 1)\n    const rand127 = randomInt.source(randomLcg(seed))(0, 127);\n    const maxTime = 500;\n    const randTime = randomUniform.source(randomLcg(seed))(0, maxTime);\n    const randDuration = randomUniform.source(randomLcg(seed))(1 / 64, 2);\n\n    // Create random notes\n    const randomNotes = Array.from({ length: 200 }).fill(0).map(() => {\n        const start = randTime();\n        return new Note(\n            rand127(),\n            start,\n            127,\n            0,\n            start + randDuration(),\n        );\n    });\n    const notes = new NoteArray(randomNotes).sortByTime();\n    console.log('true notes', notes.getNotes());\n\n    // Shift notes by some amount of seconds (this is what alignment should calculate!)\n    const shift = 3;\n    const shifted = notes.clone().shiftTime(shift);\n    console.log('shifted', shifted);\n\n\n    // Introduce errors, as a human would\n    const deviation = 0.1;\n    const pAdd = 0.1;\n    const pRemove = 0.1;\n    let variation = Drums.generateDrumVariation(shifted.getNotes(), deviation, pAdd, pRemove);\n    variation = new NoteArray(variation);\n    console.log('variation', variation);\n\n\n    // Run all functions\n    const funcs = [alignNoteArrays, alignNoteArrays2, alignNoteArrays3];\n    console.log(`True time shift: ${shift} seconds`);\n\n    console.log('Only shifted');\n    for (const f of funcs) {\n        const { timeDifference } = f(notes, shifted);\n        const error = Math.abs(timeDifference - -shift);\n        console.log(`${f.name}\\nshift: ${timeDifference.toFixed(3)} \\nError ${error.toFixed(3)}`);\n    }\n\n    console.log('Shifted & variation');\n    for (const f of funcs) {\n        const { timeDifference } = f(notes, variation);\n        const error = Math.abs(timeDifference - -shift);\n        console.log(`${f.name}\\nshift: ${timeDifference.toFixed(3)} \\nError ${error.toFixed(3)}`);\n    }\n}\n","import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n","import NoteArray from '../types/NoteArray';\nimport { group, max } from 'd3';\n\n/**\n * Global alignment.\n *\n * Returns an array with matches sorted by magnitude of agreement.\n * The offsetMilliseconds value describes at what time the first note of the\n * recording should start.\n *\n * Goal: Know which part of ground truth (GT) was played in recording (rec)\n * Assumptions:\n * - Rec has same tempo as GT\n * - Rec does not start before GT\n * - Rec does not repeat something that is not repeated in the GT\n * - Rec does not have gaps\n * Ideas:\n * - Brute-force\n * - Sliding window\n * - Using diff between time-pitch matrix of GT and rec\n * - Only compute agreement (correct diff part) for the current overlap\n * - For each time position save the agreement magnitude\n * - Optionally: repeat around local maxima with finer binSize\n *\n * @param {Note[]} gtNotes ground truth notes\n * @param {Note[]} recNotes recorded notes\n * @param {number} binSize time bin size in milliseconds\n * @returns {object[]} best offsets with agreements\n */\nexport function alignGtAndRecToMinimizeDiffError(gtNotes, recNotes, binSize) {\n    gtNotes = new NoteArray(gtNotes);\n    recNotes = new NoteArray(recNotes).shiftToStartAt(0);\n    const gtDuration = gtNotes.getDuration();\n    const recDuration = recNotes.getDuration();\n    const nBins = Math.ceil((gtDuration * 1000) / binSize) + 1;\n    const nRecBins = Math.ceil((recDuration * 1000) / binSize) + 1;\n    // TODO: just switch them around?\n    if (nRecBins > nBins) {\n        console.warn('Cannot compare GT and rec if rec is longer');\n    }\n    // Get activation maps\n    const gtActivation = activationMap(gtNotes.getNotes(), binSize);\n    const recActivation = activationMap(recNotes.getNotes(), binSize);\n    // Compare with sliding window\n    const agreementsPerOffset = [];\n    for (let offset = 0; offset < nBins - nRecBins + 1; offset++) {\n        const currentAgreement = agreement(gtActivation, recActivation, offset);\n        // console.log(`Comparing gt bins ${offset}...${offset + nRecBins} to rec\\nGot agreement ${currentAgreement}`);\n        agreementsPerOffset.push({\n            offsetBins: offset,\n            offsetMilliseconds: offset * binSize,\n            agreement: currentAgreement,\n        });\n    }\n    // Sort by best match\n    const sorted = agreementsPerOffset.sort((a, b) => b.agreement - a.agreement);\n    return sorted;\n}\n\n/**\n * Returns an activation map, that maps pitch to an array of time bins.\n * Each bin contains a 0 when there is no note or a 1 when there is one.\n *\n * @param {Note[]} allNotes notes\n * @param {number} binSize time bin size in milliseconds\n * @returns {Map} activation map\n */\nexport function activationMap(allNotes, binSize = 100) {\n    const activationMap = new Map();\n    for (const [pitch, notes] of group(allNotes, d => d.pitch).entries()) {\n        const maxTime = max(notes, d => d.end);\n        const nBins = Math.ceil((maxTime * 1000) / binSize) + 1;\n        const pitchActivationMap = Array.from({ length: nBins }).fill(0);\n        // Calculate heatmap by writing 1 where a note is active\n        for (const note of notes) {\n            const start = Math.round(note.start * 1000 / binSize);\n            const end = Math.round(note.end * 1000 / binSize);\n            for (let bin = start; bin <= end; bin++) {\n                pitchActivationMap[bin] = 1;\n            }\n        }\n        activationMap.set(pitch, pitchActivationMap);\n    }\n    return activationMap;\n}\n\n/**\n * Given two activation maps, simply counts the number of bins [pitch, time]\n * where both have a 1, so an acitve note\n * Gtmust be longer than rec\n *\n * @todo also count common 0s?\n * @param {Map} gtActivations see activationMap()\n * @param {Map} recActivations see activationMap()\n * @param {number} offset offset for activation2 when comparing\n * @returns {number} agreement\n */\nexport function agreement(gtActivations, recActivations, offset) {\n    const allPitches = [...new Set([\n        ...gtActivations.keys(),\n        ...recActivations.keys(),\n    ])];\n    let agreement = 0;\n    for (const pitch of allPitches) {\n        // Handle pitches that occur only in one of both\n        if (!gtActivations.has(pitch)) {\n            // All notes are missing\n        } else if (!recActivations.has(pitch)) {\n            // All notes are additional\n        } else {\n            // Compare both bins for each time slice\n            const gtA = gtActivations.get(pitch);\n            const recA = recActivations.get(pitch);\n            // Go through full rec, and compare to current section of GT\n            // eslint-disable-next-line unicorn/no-for-loop\n            for (let index = 0; index < recA.length; index++) {\n                const gtValue = gtA[index + offset] || 0;\n                const recValue = recA[index] || 0;\n                if (gtValue === 1 && recValue === 1) {\n                    agreement++;\n                }\n            }\n\n        }\n    }\n    return agreement;\n}\n\n/**\n * Aligns the recording to the best fitting position of the ground truth\n *\n * @param {Note[]} gtNotes ground truth notes\n * @param {Recording} recording a Recording object\n * @param {number} binSize time bin size in milliseconds\n * @returns {Recording} aligned recording\n */\nexport function alignRecordingToBestFit(gtNotes, recording, binSize = 100) {\n    const recNotes = recording.getNotes();\n    const bestFit = alignGtAndRecToMinimizeDiffError(gtNotes, recNotes, binSize)[0];\n    const newRec = recording.clone().shiftToStartAt(bestFit.offsetMilliseconds / 1000);\n    return newRec;\n}\n","export default class DynamicTimeWarping {\r\n    constructor(ts1, ts2, distanceFunction) {\r\n        this.ser1 = ts1;\r\n        this.ser2 = ts2;\r\n        this.distFunc = distanceFunction;\r\n        this.distance = null;\r\n        this.matrix = null;\r\n        this.path = null;\r\n    }\r\n\r\n    getDistance() {\r\n        if (this.distance !== null) {\r\n            return this.distance;\r\n        }\r\n        this.matrix = [];\r\n        for (var i = 0; i < this.ser1.length; i++) {\r\n            this.matrix[i] = [];\r\n            for (var j = 0; j < this.ser2.length; j++) {\r\n                var cost = Infinity;\r\n                if (i > 0) {\r\n                    cost = Math.min(cost, this.matrix[i - 1][j]);\r\n                    if (j > 0) {\r\n                        cost = Math.min(cost, this.matrix[i - 1][j - 1]);\r\n                        cost = Math.min(cost, this.matrix[i][j - 1]);\r\n                    }\r\n                } else {\r\n                    if (j > 0) {\r\n                        cost = Math.min(cost, this.matrix[i][j - 1]);\r\n                    } else {\r\n                        cost = 0;\r\n                    }\r\n                }\r\n                this.matrix[i][j] = cost + this.distFunc(this.ser1[i], this.ser2[j]);\r\n            }\r\n        }\r\n        this.distance = this.matrix[this.ser1.length - 1][this.ser2.length - 1];\r\n        return this.distance;\r\n    }\r\n\r\n    getPath() {\r\n        if (this.path !== null) {\r\n            return this.path;\r\n        }\r\n        if (this.matrix === null) {\r\n            this.getDistance();\r\n        }\r\n        var i = this.ser1.length - 1;\r\n        var j = this.ser2.length - 1;\r\n        this.path = [[i, j]];\r\n        while (i > 0 || j > 0) {\r\n            if (i > 0) {\r\n                if (j > 0) {\r\n                    if (this.matrix[i - 1][j] < this.matrix[i - 1][j - 1]) {\r\n                        if (this.matrix[i - 1][j] < this.matrix[i][j - 1]) {\r\n                            this.path.push([i - 1, j]);\r\n                            i--;\r\n                        } else {\r\n                            this.path.push([i, j - 1]);\r\n                            j--;\r\n                        }\r\n                    } else {\r\n                        if (this.matrix[i - 1][j - 1] < this.matrix[i][j - 1]) {\r\n                            this.path.push([i - 1, j - 1]);\r\n                            i--;\r\n                            j--;\r\n                        } else {\r\n                            this.path.push([i, j - 1]);\r\n                            j--;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.path.push([i - 1, j]);\r\n                    i--;\r\n                }\r\n            } else {\r\n                this.path.push([i, j - 1]);\r\n                j--;\r\n            }\r\n        }\r\n        this.path = this.path.reverse();\r\n        return this.path;\r\n    }\r\n}\r\n","import { max, min } from 'd3';\nimport DynamicTimeWarping from 'dynamic-time-warping-2';\nimport { Note } from '../types/Note'; /* eslint-disable-line no-unused-vars */\n\n/**\n * @module comparison/Similarity\n */\n\n/**\n * Given a track, a selected time interval and a threshold,\n * this function searches for parts in the track that are\n * similar to the selection.\n * It uses a sliding window with the size of the selection\n * and a stride given as argument.\n *\n * @param {Note[]} track array of Note objects\n * @param {number[]} selectedInterval [startTime, endTime] in seconds\n * @param {number} stride stride for the sliding window in number of bins\n * @param {number} threshold distance threshold below which parts are considered similar\n * @param {number} secondsPerBin time bin size in seconds\n * @param {string} distance one of: 'dtw', 'euclidean', 'nearest'\n * @returns {object} similar parts\n */\nexport function getSimilarParts(track, selectedInterval, stride, threshold, secondsPerBin = 1 / 16, distance = 'euclidean') {\n    console.log(`Searching for similar parts based on selection, using ${distance}`);\n    if (track === undefined || track.length === 0) {\n        console.warn('No or empty track given');\n        return;\n    }\n    // Discretize track (instead of doing this for every part)\n    const minTime = min(track, d => d.start);\n    const maxTime = max(track, d => d.end);\n    const binCount = Math.ceil((maxTime - minTime) / secondsPerBin);\n    const discrTrack = discretizeTime(track, secondsPerBin);\n    // Selection\n    const startBin = Math.floor((selectedInterval[0] - minTime) / secondsPerBin);\n    const endBin = Math.ceil((selectedInterval[1] - minTime) / secondsPerBin);\n    const selection = sliceDiscretizedTrack(discrTrack, startBin, endBin);\n    const selectionSize = endBin - startBin;\n    // Sliding window through the track\n    const similarParts = [];\n    for (let pos = 0; pos < binCount - selectionSize; pos += stride) {\n        const pos2 = pos + selectionSize;\n        // Ignore intersections with selection\n        if (!(pos >= startBin && pos <= endBin) && !(pos2 >= startBin && pos2 <= endBin)) {\n            const part = sliceDiscretizedTrack(discrTrack, pos, pos2);\n            const dist = getTrackSimilarity(selection, part, distance);\n            if (dist <= threshold) {\n                similarParts.push({\n                    startBin: pos,\n                    endBin: pos2,\n                    startTime: minTime + pos * secondsPerBin,\n                    endTime: minTime + pos2 * secondsPerBin,\n                    dist,\n                });\n            }\n        }\n    }\n    return {\n        selection: {\n            startBin,\n            endBin,\n            startTime: minTime + startBin * secondsPerBin,\n            endTime: minTime + endBin * secondsPerBin,\n        },\n        similarParts,\n    };\n}\n\n/**\n * Uses dynamic time warping (DTW) to calculate the distance between\n * two discretized tracks, for each pitch separately.\n * Pitch-wise distances are averaged and a penalty if added to the distance\n * for pitches that are not occuring in both tracks\n *\n * @see https://github.com/GordonLesti/dynamic-time-warping\n *\n * @param {Map} discrA discretized track\n * @param {Map} discrB discretized track\n * @param {string} distance one of: 'dtw', 'euclidean', 'nearest'\n * @returns {number} distance\n */\nexport function getTrackSimilarity(discrA, discrB, distance) {\n    // Get common pitches\n    const common = [];\n    for (const key of discrA.keys()) {\n        if (discrB.has(key)) {\n            common.push(key);\n        }\n    }\n    // Get distance for each pitch and add to weighted average\n    let totalDist = 0;\n    // Get DTW distance for each common pitch\n    for (const pitch of common) {\n        const binsA = discrA.get(pitch);\n        const binsB = discrB.get(pitch);\n        let dist;\n        if (distance === 'dtw') {\n            const dtw = new DynamicTimeWarping(binsA, binsB, (a, b) => Math.abs(a - b));\n            dist = dtw.getDistance();\n        } else if (distance === 'euclidean') {\n            dist = euclideanDistanceSquared(binsA, binsB);\n        } else if (distance === 'nearest') {\n            dist = neirestNeighborDistance(binsA, binsB);\n        }\n        // Get weighted average\n        // TODO: How to weight the average?\n        const weight = 1;\n        // const weight = countActiveNoteBins(binsA) + countActiveNoteBins(binsB);\n        // const weight = 1 / (countActiveNoteBins(binsA) + countActiveNoteBins(binsB));\n        totalDist += weight * dist;\n    }\n    // TODO: add penalty for uncommon pitches\n    // Depending on number of 1s?\n    let penaltyWeight = 0;\n    for (const discr of [discrA, discrB]) {\n        for (const key of discr.keys()) {\n            if (!common.includes(key)) {\n                penaltyWeight += countActiveNoteBins(discr.get(key));\n            }\n        }\n    }\n    return totalDist + penaltyWeight;\n}\n\n/**\n * - Normalizes Note times to be between 0 and (maxTime - minTime),\n * - discretizes the start and end time by using Math.round to get\n * the closest time bin (beat) and\n * - Creates one array for each pitch, where each entry contains\n * either a 0 (no note at that time bin) or a 1 (note at that time bin)\n *\n * @param {Note[]} track an array of Note objects\n * @param {number} secondsPerBin time bin size in seconds\n * @returns {Map} pitch to binArray\n */\nexport function discretizeTime(track, secondsPerBin) {\n    const minTime = min(track, d => d.start);\n    const maxTime = max(track, d => d.end);\n    const binCount = Math.ceil((maxTime - minTime) / secondsPerBin);\n    // Map pitch->timeBinArray\n    const result = new Map();\n    for (const note of track) {\n        const startBin = Math.round((note.start - minTime) / secondsPerBin);\n        const endBin = Math.round((note.end - minTime) / secondsPerBin);\n        const pitch = note.pitch;\n        let binArray;\n        binArray = result.has(pitch) ? result.get(pitch) : Array.from({ length: binCount }).fill(0);\n        for (let bin = startBin; bin <= endBin; bin++) {\n            binArray[bin] = 1;\n        }\n        result.set(pitch, binArray);\n    }\n    return result;\n}\n\n/**\n * Counts the occurence of 1 in an array\n *\n * @param {number[]} binArray array\n * @returns {number} occurence of 1\n */\nfunction countActiveNoteBins(binArray) {\n    let count = 0;\n    for (const bin of binArray) {\n        if (bin === 1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n/**\n * Slices bins out of a discretices track.\n * This is done for each pitch separately\n *\n * @param {Map} trackMap Map pitch->binArray\n * @param {number} startBin index of first bin\n * @param {number} endBin index of last bin\n * @returns {Map} map with sliced arrays\n */\nfunction sliceDiscretizedTrack(trackMap, startBin, endBin) {\n    const slice = new Map();\n    for (const [key, value] of trackMap.entries()) {\n        slice.set(key, value.slice(startBin, endBin));\n    }\n    return slice;\n}\n\n\n/**\n * Returns sum_{i=0}^{N-1}{(a_i-b_i)^2},\n * i.e. Euclidean distance but without square root\n *\n * @param {number[]} A an array\n * @param {number[]} B  another array\n * @returns {number} Euclidean distance\n */\nfunction euclideanDistanceSquared(A, B) {\n    const maxBins = Math.max(A.length, B.length);\n    let sum = 0;\n    for (let index = 0; index < maxBins; index++) {\n        // If undefined (because one array is shorter)\n        // use 0 as padding value\n        const a = A[index] || 0;\n        const b = B[index] || 0;\n        const diff = a - b;\n        sum += diff * diff;\n    }\n    return sum;\n}\n\n/**\n * Given two arrays containing 1s and 0s, this algorithm\n * goes through all bins and for each bin where one array\n * has a 1 and the other a 0, it searches for the closest 1\n * next to the 0.\n * The distance is then added to the global distance.\n *\n * @param {number[]} A an array\n * @param {number[]} B  another array\n * @returns {number} nearest neighbor distance\n */\nfunction neirestNeighborDistance(A, B) {\n    const maxBins = Math.max(A.length, B.length);\n    const maxOffset = Math.round(maxBins / 4);\n    let sum = 0;\n    for (let index = 0; index < maxBins; index++) {\n        let offset = 0;\n        // If undefined (because one array is shorter)\n        // use 0 as padding value\n        const a = A[index] || 0;\n        const b = B[index] || 0;\n        if (a === b) {\n            // 0 cost\n        } else if (a === 0 && b === 1) {\n            // If b == 1, look for the nearest 1 in a\n            // Out of bounds does not matter since undefined !== 1\n            // while (i - offset > 0 && i + offset < (maxBins-1) && offset <= maxOffset) {\n            while (offset <= maxOffset) {\n                offset++;\n                if (a[index - offset] === 1 || a[index + offset === 1]) {\n                    break;\n                }\n            }\n        } else if (a === 1 && b === 0) {\n            // If a == 1, look for the nearest 1 in b\n            while (offset <= maxOffset) {\n                offset++;\n                if (b[index - offset] === 1 || b[index + offset === 1]) {\n                    break;\n                }\n            }\n        }\n        sum += offset;\n    }\n    return sum;\n}\n\n\n// TODO: get similarity without binning by just comparing note start times\n\n\n\n\n/**\n * @param {Note[]} notes notes\n * @todo abandones for now\n * @todo use a greedy approach:\n * Start at the first notes start and take the first 2 notes\n *\n * @returns {void}\n */\nexport function getSimilarPartsViaMatching(notes) {\n    // TODO: Sort notes by time AND pitch to make sure chords are in the same order?\n\n    if (notes === undefined) {\n        console.log('[Similarity] Undefined notes');\n        return [];\n    }\n\n    if (notes.length < 5) {\n        console.log('[Similarity] Not enough notes to calculate similar parts');\n        return [];\n    }\n\n    let finished = [];\n\n    for (let sequenceStart = 0; sequenceStart < notes.length - 3; sequenceStart++) {\n        // Take first note\n        let currentIndex = sequenceStart;\n        const startNote = notes[currentIndex];\n\n        // Get all notes with same pitch\n        let candidateSequences = [];\n        for (const [index, n] of notes.entries()) {\n            if (n.pitch === startNote.pitch) {\n                candidateSequences.push({\n                    startIndex: index,\n                    length: 1,\n                });\n            }\n        }\n        currentIndex++;\n\n        // For each of those start notes, see if the following notes are the same\n        while (currentIndex < notes.length && candidateSequences.length > 1) {\n            const nextPitch = notes[currentIndex].pitch;\n            // Only keep best candidates\n            candidateSequences = candidateSequences.filter(cs => {\n                const nextIndex = cs.startIndex + currentIndex;\n                if (nextIndex < notes.length) {\n                    const next = notes[nextIndex];\n                    if (next.pitch === nextPitch) {\n                        cs.length++;\n                        return true;\n                    }\n                }\n                // Remove\n                finished.push(cs);\n                return false;\n            });\n            currentIndex++;\n        }\n    }\n\n    // Filter out short sequences\n    finished = finished.filter(d => d.length > 4).sort((a, b) => a.length - b.length);\n\n    for (const f of finished) {\n        const { startIndex, length } = f;\n        const end = startIndex + length;\n        console.log(`Sequence ${startIndex} - ${end} length ${length}`);\n        const seq = notes.slice(startIndex, end);\n        console.log(seq.map(d => d.pitch).join(', '));\n    }\n\n\n\n}\n","/**\n * Computes the Levenshtein distance of two strings or arrays.\n *\n * @see https://gist.github.com/andrei-m/982927#gistcomment-1931258\n * @author https://github.com/kigiri\n * @license MIT\n *\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {number} Levenshtein distance\n */\nexport function levenshtein(a, b) {\n    if (a.length === 0) { return b.length; }\n    if (b.length === 0) { return a.length; }\n    let i, j, previous, value;\n    // swap to save some memory O(min(a,b)) instead of O(a)\n    if (a.length > b.length) {\n        const temporary = a;\n        a = b;\n        b = temporary;\n    }\n    // init the row\n    const row = Array.from({ length: a.length + 1 });\n    for (i = 0; i <= a.length; i++) {\n        row[i] = i;\n    }\n    // fill in the rest\n    for (i = 1; i <= b.length; i++) {\n        previous = i;\n        for (j = 1; j <= a.length; j++) {\n            value = b[i - 1] === a[j - 1] ? row[j - 1] : Math.min(\n                row[j - 1] + 1, // substitution\n                Math.min(\n                    previous + 1,   // insertion\n                    row[j] + 1,  // deletion\n                ),\n            );\n            row[j - 1] = previous;\n            previous = value;\n        }\n        row[a.length] = previous;\n    }\n    return row[a.length];\n}\n\n\n/**\n * Computes the Damerau-Levenshtein distance of two strings or arrays.\n *\n * @see https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {number} Levenshtein distance\n */\nexport function damerauLevenshtein(a, b) {\n    if (a.length === 0) { return b.length; }\n    if (b.length === 0) { return a.length; }\n    const d = Array.from({ length: a.length + 1 })\n        .map(() => Array.from({ length: b.length }));\n    for (let i = 0; i <= a.length; i++) {\n        d[i][0] = i;\n    }\n    for (let i = 0; i <= b.length; i++) {\n        d[0][i] = i;\n    }\n    let cost;\n    for (let i = 1; i <= a.length; i++) {\n        for (let j = 1; j <= b.length; j++) {\n            cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(\n                d[i - 1][j] + 1,        // deletion\n                d[i][j - 1] + 1,        // insertion\n                d[i - 1][j - 1] + cost,  // substitution\n            );\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                // transposition\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + 1);\n            }\n        }\n    }\n    return d[a.length][b.length];\n}\n\n\n/**\n * Normalizes the result of levenshtein() by dividing by the longer string's\n * length.\n *\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {number} Levenshtein distance\n */\nexport function normalizedLevenshtein(a, b) {\n    const longerLength = Math.max(a.length, b.length);\n    if (longerLength === 0) {\n        return 0;\n    }\n    return levenshtein(a, b) / longerLength;\n}\n","import { levenshtein } from '../stringBased/Levenshtein';\nimport PitchSequence from '../types/PitchSequence';\n\n\n/**\n * @module comparison/SimilarSections\n */\n\n/**\n * Turns an array of notes into a string to perform pattern matching search for similar\n * patterns.\n *\n * @param {Note[]} notes notes, must be sorted by Note.start\n * @param {number} startTime start time of the section to search\n * @param {number} endTime end time for the section to search\n * @param {number} threshold threshold for normalized Levenshtein distance in [0, 1]\n * @returns {object[]} {index, distance, startTime, endTime}\n */\nexport function findSimilarNoteSections(notes, startTime, endTime, threshold = 0.5) {\n    const selectedNotes = notes.filter(d => d.start >= startTime && d.end <= endTime);\n    // Convert to string\n    const dataString = PitchSequence.fromNotes(notes).getPitches();\n    const searchString = PitchSequence.fromNotes(selectedNotes).getPitches();\n    const length = searchString.length;\n    if (length < 3) {\n        return [];\n    }\n    // Find matches\n    const matches = findSimilarStringSections(dataString, searchString, threshold);\n    // Get time spans\n    return matches.map(m => {\n        const { index } = m;\n        const note1 = notes[index];\n        const note2 = notes[index + length];\n        return {\n            ...m,\n            startTime: note1.start,\n            endTime: note2.end,\n        };\n    });\n}\n\n/**\n * Finds similar sections in a string via Levenshtein distance\n *\n * @param {stringArray} dataString they string to search in\n * @param {stringArray} searchString the string to search for\n * @param {number} threshold threshold for normalized Levenshtein distance in [0, 1]\n * @returns {object[]} {index, distance}\n */\nexport function findSimilarStringSections(dataString, searchString, threshold = 0.5) {\n    const length = searchString.length;\n    const matches = [];\n    for (let index = 0; index < dataString.length - length; index++) {\n        const slice = dataString.slice(index, index + length);\n        const distance = levenshtein(searchString, slice) / length;\n        if (distance < threshold) {\n            matches.push({ index: index, distance });\n        }\n    }\n    // Filter overlapping matches by removing the ones with larger distances\n    const filtered = [];\n    // Therefore, sort by distance ascending and add them one by one\n    matches.sort((a, b) => a.distance - b.distance);\n    // Speed up hit detection by keeping track of indices that are already occupied\n    const occupied = Array.from({ length: dataString.length }).fill(false);\n    for (const m of matches) {\n        const { index } = m;\n        // Check if occupied\n        let occ = false;\n        for (let i = index; i < index + length; i++) {\n            if (occupied[i]) {\n                occ = true;\n                break;\n            }\n        }\n        // If not occupied, add and occupy\n        if (!occ) {\n            filtered.push(m);\n            for (let i = index; i < index + length; i++) {\n                occupied[i] = true;\n            }\n        }\n    }\n    return filtered;\n}\n","/**\n * Calculates the longest common subsequence.\n *\n * @see https://rosettacode.org/wiki/Longest_common_subsequence#JavaScript\n * @example\n * const lcs = StringBased.LongestCommonSubsequence.lcs('hello world!', 'world');\n * // world\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {string|Array} the longest common subsequence\n */\nexport function lcs(a, b) {\n    // Make sure shorter string is the column string\n    const m = a.length;\n    const n = b.length;\n    // Return now if one (or both) empty\n    if (a.length === 0) { return a; }\n    if (b.length === 0) { return b; }\n    let i, j, row = [], left, diagonal, latch;\n    const lcs = [];\n    const c = [];\n    // Build the c-table\n    for (j = 0; j < n; row[j++] = 0);\n    for (i = 0; i < m; i++) {\n        c[i] = row = row.slice();\n        for (diagonal = 0, j = 0; j < n; j++, diagonal = latch) {\n            latch = row[j];\n            if (a[i] === b[j]) {\n                row[j] = diagonal + 1;\n            } else {\n                left = row[j - 1] || 0;\n                if (left > row[j]) {\n                    row[j] = left;\n                }\n            }\n        }\n    }\n    i--;\n    j--;\n    // row[j] now contains the length of the lcs\n    // Recover the lcs from the table\n    while (i > -1 && j > -1) {\n        switch (c[i][j]) {\n        default:\n            j--;\n            lcs.unshift(a[i]);\n        case (i && c[i - 1][j]): // eslint-disable-line no-fallthrough\n            i--;\n            continue;\n        case (j && c[i][j - 1]):\n            j--;\n        }\n    }\n    // Only join when x and y are strings\n    return (Array.isArray(a)) || (Array.isArray(b)) ? lcs : lcs.join('');\n}\n\n/**\n * Calculates the *length* of the longest common subsequence.\n * Also works with arrays.\n *\n * @see https://rosettacode.org/wiki/Longest_common_subsequence#JavaScript\n * @example\n * const lcsLength = StringBased.LongestCommonSubsequence.lcs('hello world!', 'world');\n * // 5\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {number} the length of longest common subsequence\n */\nexport function lcsLength(a, b) {\n    // Make sure shorter string is the column string\n    const m = a.length;\n    const n = b.length;\n    // Return now if one (or both) empty\n    if (a.length === 0) { return 0; }\n    if (b.length === 0) { return 0; }\n    let i, j, row = [], left, diagonal, latch;\n    const c = [];\n    // Build the c-table\n    for (j = 0; j < n; row[j++] = 0);\n    for (i = 0; i < m; i++) {\n        c[i] = row = row.slice();\n        for (diagonal = 0, j = 0; j < n; j++, diagonal = latch) {\n            latch = row[j];\n            if (a[i] === b[j]) {\n                row[j] = diagonal + 1;\n            } else {\n                left = row[j - 1] || 0;\n                if (left > row[j]) {\n                    row[j] = left;\n                }\n            }\n        }\n    }\n    i--;\n    j--;\n    // row[j] now contains the length of the lcs\n    return row[j];\n}\n\n\n/**\n * Normalizes the result of lcsLength() by dividing by the longer string's\n * length.\n *\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {number} normalized length of longest common subsequence\n */\nexport function normalizedLcsLength(a, b) {\n    const longerLength = Math.max(a.length, b.length);\n    if (longerLength === 0) {\n        return 0;\n    }\n    return lcsLength(a, b) / longerLength;\n}\n","/**\n * Calculates the SIMILARITY for two strings or arrays.\n * Similar to NeedlemanWunsch but O(n^2) instead of O(n^3)\n * IMPORTANT: This metric is not symmetric!\n *\n * @todo normalize to [0, 1], but how?\n * @todo somehow the the matched sequences and gaps...\n * @see https://de.wikipedia.org/wiki/Gotoh-Algorithmus\n * @param {string|Array} seqA a sequence\n * @param {string|Array} seqB a sequence\n * @param {Function} similarityFunction a function that takes two elements and\n *      returns their similarity score (higher => more similar)\n *      (a:any, b:any):number\n * @param {number} gapPenaltyStart cost for starting a new gap (negative)\n * @param {number} gapPenaltyExtend cost for continuing a gap (negative)\n * @returns {number} similarity score\n */\nexport function gotoh(\n    seqA,\n    seqB,\n    similarityFunction = matchMissmatchSimilarity,\n    gapPenaltyStart = -1,\n    gapPenaltyExtend = -0.1,\n) {\n    // check if strings are empty\n    if (seqA.length === 0 && seqB.length === 0) { return 0; }\n    // gap penalty function\n    const gap = (index) => gapPenaltyStart + (index - 1) * gapPenaltyExtend;\n    const lengthA = seqA.length;\n    const lengthB = seqB.length;\n    // initialize matrices\n    const a = Array.from({ length: lengthA + 1 }).map(() => Array.from({ length: lengthB + 1 }));\n    const b = Array.from({ length: lengthA + 1 }).map(() => Array.from({ length: lengthB + 1 }));\n    const c = Array.from({ length: lengthA + 1 }).map(() => Array.from({ length: lengthB + 1 }));\n    a[0][0] = 0;\n    b[0][0] = 0;\n    c[0][0] = 0;\n    for (let i = 1; i <= lengthA; i++) {\n        a[i][0] = c[i][0] = Number.NEGATIVE_INFINITY;\n        b[i][0] = gap(i);\n    }\n    for (let i = 1; i <= lengthB; i++) {\n        a[0][i] = b[0][i] = Number.NEGATIVE_INFINITY;\n        c[0][i] = gap(i);\n    }\n    // compute matrices\n    for (let i = 1; i <= lengthA; i++) {\n        for (let j = 1; j <= lengthB; j++) {\n            const sim = similarityFunction(seqA[i - 1], seqB[j - 1]);\n            a[i][j] = Math.max(\n                a[i - 1][j - 1],\n                b[i - 1][j - 1],\n                c[i - 1][j - 1]) + sim;\n            b[i][j] = Math.max(\n                a[i - 1][j] + gapPenaltyStart,\n                b[i - 1][j] + gapPenaltyExtend,\n                c[i - 1][j] + gapPenaltyStart);\n            c[i][j] = Math.max(\n                a[i][j - 1] + gapPenaltyStart,\n                b[i][j - 1] + gapPenaltyStart,\n                c[i][j - 1] + gapPenaltyExtend);\n        }\n    }\n    return Math.max(\n        a[lengthA][lengthB],\n        b[lengthA][lengthB],\n        c[lengthA][lengthB],\n    );\n}\n\n/**\n * Idea: what would the max. similarity value be? the string with itself!\n * So just compare the longer string to itself and use that similarity to\n * normalize\n *\n * @todo does this work with negative costs and/or results?\n * @todo can this be optimized since only the similarityFunction is needed?\n * @param {string|Array} seqA a sequence\n * @param {string|Array} seqB a sequence\n * @param {Function} similarityFunction a function that takes two elements and\n *      returns their similarity score (higher => more similar)\n *      (a:any, b:any):number\n * @param {number} gapPenaltyStart cost for starting a new gap (negative)\n * @param {number} gapPenaltyExtend cost for continuing a gap (negative)\n * @returns {number} normalized similarity score\n */\nexport function normalizedGotoh(\n    seqA,\n    seqB,\n    similarityFunction = matchMissmatchSimilarity,\n    gapPenaltyStart = -1,\n    gapPenaltyExtend = -0.1,\n) {\n    const similarity = gotoh(seqA, seqB, similarityFunction, gapPenaltyStart, gapPenaltyExtend);\n    const longer = seqA.length >= seqB.length ? seqA : seqB;\n    const maxSimilarity = gotoh(longer, longer, similarityFunction, gapPenaltyStart, gapPenaltyExtend);\n    if (maxSimilarity === 0) {\n        // TODO: can this happen? what would be reasonable here?\n        return similarity;\n    }\n    return similarity / maxSimilarity;\n}\n\n/**\n * Cost function that simply checks whether two values are equal or not with ===\n *\n * @param {any} a some value\n * @param {any} b some value\n * @returns {number} 1 if equal, -1 otherwise\n */\nexport const matchMissmatchSimilarity = (a, b) => a === b ? 1 : -1;\n\n\n/**\n * Cost function that takes the negative absolute value of the value's\n * difference, assuming that close values are more similar\n *\n * @param {number} a some value\n * @param {number} b some value\n * @returns {number} -Math.abs(a - b)\n */\nexport const differenceSimilarity = (a, b) => -Math.abs(a - b);\n","/* eslint-disable unicorn/prefer-spread */\nimport { arrayShallowEquals } from '../utils/ArrayUtils';\n\n/**\n * @see https://github.com/eikes/suffixtree/blob/master/js/suffixtree.js\n */\nclass SuffixTree {\n    /**\n     * SuffixTree for strings or Arrays\n     *\n     * @param {string|Array} array string or Array to process\n     */\n    constructor(array) {\n        // Split string to array\n        if (typeof array === 'string') {\n            array = array.split('');\n        }\n        this.node = new TreeNode();\n        if (array && array.length > 0) {\n            for (let index = 0; index < array.length; index++) {\n                this.node.addSuffix(array.slice(index));\n            }\n        }\n    }\n\n    /**\n     * Returns the longest repeated substring\n     *\n     * @returns {Array} longest repeated substring\n     */\n    getLongestRepeatedSubString() {\n        return this.node.getLongestRepeatedSubString();\n    }\n\n    /**\n     * Returns a readable string format of this tree\n     *\n     * @returns {string} string\n     */\n    toString() {\n        return this.node.toString();\n    }\n\n    /**\n     * Returns a JSON representation of this tree\n     *\n     * @returns {string} JSON\n     */\n    toJson() {\n        return JSON.stringify(this.node);\n    }\n}\n\n/**\n * TreeNode\n */\nclass TreeNode {\n    /**\n     *\n     */\n    constructor() {\n        this.value = [];\n        this.leaves = [];\n        this.nodes = [];\n    }\n\n    /**\n     * @param {string|Array} suf suffix\n     * @returns {boolean} true if first entry of suf equals the value of a child\n     */\n    checkNodes(suf) {\n        let node;\n        for (let index = 0; index < this.nodes.length; index++) {\n            node = this.nodes[index];\n            if (arrayShallowEquals(node.value, [suf[0]])) {\n                node.addSuffix(suf.slice(1));\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @param {string|Array} suf suffix\n     */\n    checkLeaves(suf) {\n        let node, leaf;\n        for (let index = 0; index < this.leaves.length; index++) {\n            leaf = this.leaves[index];\n            if (leaf[0] === suf[0]) {\n                node = new TreeNode();\n                node.value = [leaf[0]];\n                node.addSuffix(suf.slice(1));\n                node.addSuffix(leaf.slice(1));\n                this.nodes.push(node);\n                this.leaves.splice(index, 1);\n                return;\n            }\n        }\n        this.leaves.push(suf);\n    }\n\n    /**\n     * @param {string|Array} suf suffix\n     */\n    addSuffix(suf) {\n        if (suf.length === 0) {\n            return;\n        }\n        if (!this.checkNodes(suf)) {\n            this.checkLeaves(suf);\n        }\n    }\n\n    /**\n     * Returns the longest repeated substring\n     *\n     * @returns {Array} longest substring\n     */\n    getLongestRepeatedSubString() {\n        let array = [];\n        let temporary = [];\n        for (let index = 0; index < this.nodes.length; index++) {\n            temporary = this.nodes[index].getLongestRepeatedSubString();\n            if (temporary.length > array.length) {\n                array = temporary;\n            }\n        }\n        return this.value.concat(array);\n    }\n\n    /**\n     * Readable string representation of this node and its children\n     *\n     * @param {number} indent indentation\n     * @returns {string} string representation\n     */\n    toString(indent = 1) {\n        const ind = ' |'.repeat(indent);\n        let string = '';\n        string += this.value.length > 0 ? `-N '${this.value}'` : 'root';\n        if (this.nodes.length > 0) {\n            for (let index = 0; index < this.nodes.length; index++) {\n                string += `\\n${ind}${this.nodes[index].toString(indent + 1)}`;\n            }\n        }\n        if (this.leaves.length > 0) {\n            for (let index = 0; index < this.leaves.length; index++) {\n                string += `\\n${ind}-L ${this.leaves[index]}`;\n            }\n        }\n        return string;\n    }\n}\n\nexport default SuffixTree;\n","/* eslint-disable unicorn/prefer-spread */\n/**\n * Needleman-Wunsch algorithm\n *\n * @see https://github.com/blievrouw/needleman-wunsch/blob/master/src/needleman_wunsch.js\n * @todo does not support cost matrix\n * @todo extend by matchMismathFunction\n */\nclass NeedlemanWunsch {\n    /**\n     * @param {string|Array} seq1 a string\n     * @param {string|Array} seq2 another string\n     * @param {number} match_score score for matching characters\n     * @param {number} mismatch_penalty penalty for mismatching characters\n     * @param {number} gap_penalty penalty for a gap\n     */\n    constructor(seq1, seq2, match_score = 1, mismatch_penalty = -1, gap_penalty = -1) {\n        // Compared sequences\n        this.seq1 = seq1;\n        this.seq2 = seq2;\n        // Scoring parameters\n        this.match_score = match_score;\n        this.mismatch_penalty = mismatch_penalty;\n        this.gap_penalty = gap_penalty;\n        // Intermediate scores matrix (scores for [`insert`, `match`, `delete`] positions)\n        this.I = [];\n        // Score matrix (best score out of intermediate scores)\n        this.S = [];\n        // Traceback matrix (boolean values for [`insert`, `match`, `delete`] positions)\n        this.T = [];\n        // Alignments\n        this.finalAlignments = [];\n\n        // Calculate scores and tracebacks\n        this.calcScoresAndTracebacks();\n    }\n\n    /**\n     * Calculates (intermediate) scores and tracebacks using provided parameters\n     */\n    calcScoresAndTracebacks() {\n        this.S.push([0]);\n        this.I.push([[null, null, null]]);\n        this.T.push([[false, false, false]]);\n\n        // Calculate scores and traceback on first row\n        for (let i = 1; i < this.seq2.length + 1; i++) {\n            this.S[0].push(this.S[0][this.S[0].length - 1] + this.gap_penalty);\n            this.I[0].push([null, null, null]);\n            this.T[0].push([true, false, false]);\n        }\n\n        // Generate other rows\n        for (let i = 1; i < this.seq1.length + 1; i++) {\n            this.S.push([this.S[i - 1][0] + this.gap_penalty]);\n            this.I.push([[null, null, null]]);\n            this.T.push([[false, false, true]]);\n            for (let j = 1; j < this.seq2.length + 1; j++) {\n                const insert = this.S[i][j - 1] + this.gap_penalty;\n                const del = this.S[i - 1][j] + this.gap_penalty;\n                // similarity\n                // TODO: support function here\n                let sim_score;\n                sim_score = this.seq1[i - 1] === this.seq2[j - 1] ? this.match_score : this.mismatch_penalty;\n                const match = this.S[i - 1][j - 1] + sim_score;\n                const intermediate_scores = [insert, match, del];\n                const score = Math.max(...intermediate_scores);\n                const tracebackTypeStatus = intermediate_scores.map(entry => entry === score);\n                this.S[i].push(score);\n                this.I[i].push(intermediate_scores);\n                this.T[i].push(tracebackTypeStatus);\n            }\n        }\n\n        // set best match score\n        const lastRow = this.S[this.S.length - 1];\n        this.score = lastRow[lastRow.length - 1];\n    }\n\n    /**\n     * Finds next alignment locations (children) from a position in scoring matrix\n     *\n     * @param {number[]} pos m- Position in scoring matrix\n     * @returns {object[]} children - Children positions and alignment types\n     */\n    alignmentChildren(pos) {\n        const [i, j] = pos;\n        const children = [];\n        const traceback_type_status = this.T[i][j];\n        if (traceback_type_status[0]) {\n            // insert\n            children.push({ pos: [i, j - 1], tracebackType: 0 });\n        }\n        if (traceback_type_status[1]) {\n            // match\n            children.push({ pos: [i - 1, j - 1], tracebackType: 1 });\n        }\n        if (traceback_type_status[2]) {\n            // delete\n            children.push({ pos: [i - 1, j], tracebackType: 2 });\n        }\n        return children;\n    }\n\n    /**\n     * Runs through scoring matrix from bottom-right to top-left using traceback values to create all optimal alignments\n     *\n     * @returns {object[]} e.g. [{ seq1: '-4321', seq2: '54321' }]\n     */\n    alignmentTraceback() {\n        const finalAlignments = [];\n        const root = {\n            next: null,\n            pos: [this.seq1.length, this.seq2.length],\n            alignment: {\n                seq1: '',\n                seq2: '',\n                // score: this.score,\n            },\n        };\n        let current, child, children, length, alignment, pos, t;\n        current = root;\n        while (current) {\n            pos = current.pos;\n            alignment = current.alignment;\n            // Get children alignments\n            children = this.alignmentChildren(current.pos);\n            // Store completed alignments\n            if (children.length === 0) {\n                finalAlignments.push(alignment);\n            }\n            current = current.next;\n            for (t = 0, length = children.length; t < length; t++) {\n                child = children[t];\n                child.alignment = {\n                    // -1 refers to offset between  scoring matrix and the sequence\n                    seq1: alignment.seq1.concat(child.tracebackType === 0 ? '-' : this.seq1[pos[0] - 1]),\n                    seq2: alignment.seq2.concat(child.tracebackType === 2 ? '-' : this.seq2[pos[1] - 1]),\n                    // TODO: add score for this alignment\n                    // score: alignment.score - this.S[pos[0]][pos[1]]\n                };\n                // Move down a layer\n                child.next = current;\n                current = child;\n            }\n        }\n        return finalAlignments;\n    }\n}\n\nexport default NeedlemanWunsch;\n"],"sourceRoot":""}