{"version":3,"sources":["webpack://musicvislib/webpack/universalModuleDefinition","webpack://musicvislib/./node_modules/@tonejs/midi/dist/BinarySearch.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/ControlChange.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/ControlChanges.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/Encode.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/Header.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/Instrument.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/InstrumentMaps.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/Midi.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/Note.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/PitchBend.js","webpack://musicvislib/./node_modules/@tonejs/midi/dist/Track.js","webpack://musicvislib/./node_modules/@tonejs/midi/node_modules/array-flatten/array-flatten.js","webpack://musicvislib/./node_modules/@tonejs/midi/node_modules/midi-file/index.js","webpack://musicvislib/./node_modules/@tonejs/midi/node_modules/midi-file/lib/midi-parser.js","webpack://musicvislib/./node_modules/@tonejs/midi/node_modules/midi-file/lib/midi-writer.js","webpack://musicvislib/./node_modules/midi-parser-js/src/main.js","webpack://musicvislib/webpack/bootstrap","webpack://musicvislib/webpack/runtime/define property getters","webpack://musicvislib/webpack/runtime/hasOwnProperty shorthand","webpack://musicvislib/webpack/runtime/make namespace object","webpack://musicvislib/./src/fileFormats/Midi.js","webpack://musicvislib/./src/types/Note.js","webpack://musicvislib/./src/types/GuitarNote.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/extent.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/identity.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/group.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/max.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/mean.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/min.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/ascending.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/quickselect.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/quantile.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/number.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/difference.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/set.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/intersection.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selector.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/array.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selectorAll.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/matcher.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/selectChild.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/selectChildren.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/sparse.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/enter.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/constant.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/data.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/sort.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/namespaces.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/namespace.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/attr.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/window.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/style.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/property.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/classed.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/text.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/html.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/raise.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/lower.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/creator.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/insert.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/remove.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/clone.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/on.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/dispatch.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/index.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/select.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/selectAll.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/filter.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/exit.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/join.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/merge.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/order.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/call.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/nodes.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/node.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/size.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/empty.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/each.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/append.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/datum.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-selection/src/selection/iterator.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-dispatch/src/dispatch.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-timer/src/timer.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-timer/src/timeout.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/schedule.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/number.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/transform/decompose.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/transform/parse.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/transform/index.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/tween.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-color/src/define.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-color/src/color.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/basis.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/constant.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/color.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/rgb.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/basisClosed.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/string.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/interpolate.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/attr.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/attrTween.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/delay.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/duration.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/ease.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/on.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/selection.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/style.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/styleTween.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/textTween.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/index.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/select.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/selectAll.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/filter.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/merge.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/transition.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/text.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/remove.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/easeVarying.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/transition/end.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/selection/transition.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-ease/src/cubic.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/selection/index.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/selection/interrupt.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-transition/src/interrupt.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-brush/src/brush.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/defaultSource.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/uniform.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/int.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/normal.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-random/src/lcg.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/ticks.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/bisector.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/bisect.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/array.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/date.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/object.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/numberArray.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/value.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-interpolate/src/round.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/number.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/continuous.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/constant.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/init.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatSpecifier.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatPrefixAuto.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatDecimal.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/exponent.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatRounded.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatTypes.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/identity.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/locale.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/defaultLocale.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/linear.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-scale/src/tickFormat.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/precisionPrefix.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/precisionRound.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/precisionFixed.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-zoom/src/transform.js","webpack://musicvislib/./src/utils/MathUtils.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatGroup.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatNumerals.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-format/src/formatTrim.js","webpack://musicvislib/./src/types/NoteArray.js","webpack://musicvislib/./src/utils/ArrayUtils.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/union.js","webpack://musicvislib/./src/types/Recording.js","webpack://musicvislib/./src/fileFormats/MusicXmlParser.js","webpack://musicvislib/./src/utils/MiscUtils.js","webpack://musicvislib/./src/fileFormats/MidiParser.js","webpack://musicvislib/./src/types/MusicPiece.js","webpack://musicvislib/./src/types/PitchSequence.js","webpack://musicvislib/./src/graphics/Canvas.js","webpack://musicvislib/./src/input/AudioRecorder.js","webpack://musicvislib/./src/input/MidiRecorder.js","webpack://musicvislib/./src/input/MidiInputManager.js","webpack://musicvislib/./src/instruments/Drums.js","webpack://musicvislib/./src/instruments/Guitar.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/core/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/collection/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/pcset/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/chord-type/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/chord-detect/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/scale-type/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/chord/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/duration-value/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/interval/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/midi/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/note/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/roman-numeral/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/key/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/mode/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/range/dist/index.es.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/scale/dist/index.es.js","webpack://musicvislib/./src/chords/Chords.js","webpack://musicvislib/./node_modules/@tonaljs/tonal/node_modules/@tonaljs/time-signature/dist/index.es.js","webpack://musicvislib/./src/instruments/Lamellophone.js","webpack://musicvislib/./src/instruments/Piano.js","webpack://musicvislib/./src/utils/BlobUtils.js","webpack://musicvislib/./src/utils/FormattingUtils.js","webpack://musicvislib/./src/utils/LocalStorageUtils.js","webpack://musicvislib/./src/utils/MusicUtils.js","webpack://musicvislib/./src/utils/NoteColorUtils.js","webpack://musicvislib/./src/utils/StatisticsUtils.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/deviation.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/variance.js","webpack://musicvislib/./src/utils/RecordingsUtils.js","webpack://musicvislib/./src/utils/WebMidiUtils.js","webpack://musicvislib/./src/comparison/Matching.js","webpack://musicvislib/./src/alignment/Alignment.js","webpack://musicvislib/./node_modules/d3/node_modules/d3-array/src/median.js","webpack://musicvislib/./src/alignment/DiffAlignment.js","webpack://musicvislib/./src/comparison/Similarity.js","webpack://musicvislib/./src/stringBased/Levenshtein.js","webpack://musicvislib/./src/comparison/SimilarSections.js","webpack://musicvislib/./src/stringBased/LongestCommonSubsequence.js","webpack://musicvislib/./src/stringBased/Gotoh.js","webpack://musicvislib/./src/stringBased/SuffixTree.js","webpack://musicvislib/./src/stringBased/NeedlemanWunsch.js"],"names":["root","factory","exports","module","define","amd","this","search","array","value","prop","beginning","len","length","end","midPoint","Math","floor","event_1","nextEvent","i","Object","defineProperty","insert","event","index","splice","push","controlChangeNames","1","2","4","5","7","8","10","64","65","66","67","68","84","controlChangeIds","keys","reduce","obj","key","privateHeaderMap","WeakMap","privateCCNumberMap","ControlChange","header","set","controllerType","ticks","absoluteTime","prototype","get","enumerable","configurable","number","ticksToSeconds","t","secondsToTicks","toJSON","time","ControlChange_1","createControlChanges","Proxy","target","handler","hasOwnProperty","__spreadArrays","s","il","arguments","r","Array","k","a","j","jl","__importDefault","mod","__esModule","midi_file_1","Header_1","array_flatten_1","encodeControlChange","cc","channel","deltaTime","type","encodeInstrument","track","programNumber","instrument","encode","midi","midiData","format","numTracks","tracks","ticksPerBeat","ppq","meta","text","name","keySignatures","map","keySig","keyIndex","keySignatureKeys","indexOf","scale","encodeKeySignature","e","textEvent","tempos","tempo","microsecondsPerBeat","bpm","encodeTempo","timeSignatures","timeSig","denominator","timeSignature","metronome","numerator","thirtyseconds","encodeTimeSignature","default","notes","note","noteNumber","velocity","durationTicks","noteOffVelocity","encodeNote","encodeNotes","controlChanges","forEach","encodeControlChanges","pitchBends","pb","encodePitchBend","encodePitchBends","sort","b","lastTime","Uint8Array","writeMidi","BinarySearch_1","privatePPQMap","Header","_this","update","currentTime","lastEventBeats","lastBPM","beats","elapsedSeconds","lastEvent","elapsedMeasures","measures","tempoTime","elapsedBeats","ticksToMeasures","timeSigEvent","seconds","round","fromJSON","json","assign","setTempo","InstrumentMaps_1","privateTrackMap","Instrument","trackData","programChange","find","percussion","DrumKitByPatchID","instrumentByPatchID","n","patchNumber","InstrumentFamilyByID","family","0","16","24","25","32","40","48","56","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","call","pop","Encode_1","Track_1","Midi","midiArray","ArrayBuffer","parseMidi","currentTicks","newTracks","defaultTrack","trackMap","Map","currentProgram","fill","_i","_a","targetTrack","undefined","trackKey","has","size","splitTracks","Track","duration","shift","fromUrl","url","response","fetch","ok","arrayBuffer","Error","durations","max","addTrack","toArray","trackJSON","clone","Track_2","Header_2","midiToPitchClass","regexp","noteToScaleIndex","pitchToMidi","cbb","cb","c","cx","dbb","db","d","dx","ebb","eb","ex","fbb","fb","fx","gbb","gb","gx","abb","ab","ax","bbb","bb","bx","split","exec","pitch","octave","toLowerCase","parseInt","Note","noteOn","noteOff","toString","o","diff","p","noteEndTicks","PitchBend","ControlChanges_1","PitchBend_1","Instrument_1","Note_1","nameEvent","noteOns","filter","noteOffs","_loop_1","currentNote","this_1","offIndex","findIndex","addNote","addCC","addPitchBend","pow","endOfTrackEvent","endOfTrackTicks","props","isArray","maxDuration","flattenFrom","flattenDown","flattenFromDepth","depth","flattenDownDepth","from","fromDepth","parseTrack","data","lastEventTypeByte","Parser","events","eof","readEvent","readVarInt","eventTypeByte","readUInt8","readBytes","metatypeByte","readUInt16","readString","port","readUInt24","hourByte","frameRate","hour","min","sec","frame","subFrame","readInt8","param1","running","eventType","byte9","amount","buffer","bufferLen","pos","u","readInt16","readInt24","readUInt32","bytes","slice","String","fromCharCode","readChunk","id","headerChunk","timeDivision","framesPerSecond","ticksPerFrame","parseHeader","trackChunk","writeTrack","w","opts","Writer","writeEvent","useByte9ForNoteOff","writeChunk","writeVarInt","writeUInt8","writeUInt16","writeString","writeUInt24","29","30","log","LN2","writeInt8","writeBytes","value14","lsb14","msb14","b0","b1","writeInt16","b2","writeInt24","writeUInt32","b3","writeInt32","arr","concat","str","codePointAt","reverse","h","writeHeader","MidiParser","debug","parse","input","_callback","Uint8","Base64","HTMLElement","addListener","_fileElement","File","FileReader","tagName","console","warn","addEventListener","InputEvt","files","reader","readAsArrayBuffer","onload","b64String","raw","string","b64","replace","test","bitmap","r1","r2","charAt","_atob","rawLength","t_array","charCodeAt","FileAsUint8Array","file","pointer","movePointer","_bytes","readInt","byteLength","getUint8","readStr","char","readIntVLV","FirstBytes","lastByte","dt","DataView","byteOffset","MIDI","formatType","timeDivisionByte1","timeDivisionByte2","headerValidation","statusByte","laststatusByte","endOfTrack","metaType","metaEventLength","customInterpreter","info","unshift","event_length","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","toStringTag","MidiNoteByPitch","MidiNoteByLabel","MidiInstrumentByNumber","MidiInstrumentByNumberLev2","getMidiNoteByNr","nr","getMidiNoteByLabel","getMidiNoteByNameAndOctave","getMidiInstrumentByNr","getMidiInstrumentByNrL2","subNr","getMidiDrumNoteByNr","GENERAL_MIDI_DRUM_NOTE_NUMBERS","isSharp","SHARPS","getNoteNameFromNoteNr","NOTE_NAMES","flatToSharp","sharpToFlat","MIDI_NOTES","frequency","Set","MIDI_COMMANDS","description","params","MIDI_INSTRUMENTS","group","MIDI_INSTRUMENTS_Lev2","subnumber","MIDI_NOTE_RANGES","instrNr","nrL2","subNrL2","constructor","start","object","Number","isNaN","getDuration","getName","getLetter","getOctave","shiftTime","addedSeconds","scaleTime","factor","overlapsInTime","otherNote","overlapInSeconds","laterStart","equals","short","GuitarNote","fret","super","toNote","values","valueof","x","regroup","groups","keyof","nest","mean","count","sum","NaN","quickselect","left","right","compare","ascending","m","z","exp","sd","sqrt","swap","quantile","Float64Array","numbers","i0","value0","subarray","difference","others","other","delete","intersection","out","none","selector","querySelector","empty","querySelectorAll","matches","childMatcher","node","childFirst","firstElementChild","children","EnterNode","parent","datum","ownerDocument","namespaceURI","_next","_parent","__data__","bindIndex","enter","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","appendChild","child","insertBefore","xhtml","svg","xlink","xml","xmlns","prefix","namespaces","space","local","attrRemove","removeAttribute","attrRemoveNS","fullname","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","defaultView","document","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","trim","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","remove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","parentNode","lower","previousSibling","firstChild","creatorInherit","uri","documentElement","createElement","createElementNS","creatorFixed","namespace","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","parseTypenames","typenames","onRemove","typename","on","__on","removeEventListener","listener","options","onAdd","contextListener","dispatchEvent","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","join","contains","Selection","parents","_groups","_parents","selection","select","subgroups","subnode","subgroup","selectAll","arrayAll","selectorAll","selectChild","match","childFind","selectChildren","childrenFilter","matcher","bind","enterGroup","updateGroup","exitGroup","previous","i1","_enter","_exit","sparse","onenter","onupdate","onexit","append","merge","order","groups0","groups1","m0","m1","merges","group0","group1","compareDocumentPosition","compareNode","sortgroups","sortgroup","callback","nodes","each","attr","getAttributeNS","property","classed","html","create","creator","before","deep","dispatch","noop","Dispatch","types","T","copy","that","args","taskHead","taskTail","timeout","interval","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","requestAnimationFrame","setTimeout","clearNow","Timer","_call","_time","timer","delay","restart","wake","timerFlush","t0","t2","t1","Infinity","sleep","nap","poke","clearTimeout","clearInterval","setInterval","elapsed","stop","emptyOn","emptyTween","timing","schedules","__transition","self","tween","state","tick","ease","init","schedule","svgNode","degrees","PI","translateX","translateY","rotate","skewX","scaleX","scaleY","atan2","atan","interpolateTransform","pxComma","pxParen","degParen","q","xa","ya","xb","yb","translate","interpolateTransformCss","DOMMatrix","WebKitCSSMatrix","isIdentity","decompose","interpolateTransformSvg","transform","baseVal","consolidate","matrix","tweenRemove","tween0","tween1","tweenFunction","tweenValue","transition","_id","extend","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","color","l","rgbn","Rgb","rgba","hsla","rgbConvert","opacity","rgb_formatHex","hex","rgb_formatRgb","Hsl","hslConvert","hsl","hsl2rgb","m2","basis","v0","v1","v2","v3","t3","channels","displayable","formatHsl","nogamma","linear","rgbGamma","exponential","gamma","rgbSpline","spline","colors","reA","reB","source","am","bm","bs","bi","lastIndex","one","zero","interpolate","value1","string00","interpolate0","string1","string0","string10","attrInterpolate","attrInterpolateNS","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","every","styleInterpolate","styleTween","textInterpolate","textTween","_name","newId","selection_prototype","inherit","id0","id1","styleNull","listener0","styleMaybeRemove","removeFunction","easeVarying","cancel","interrupt","defaultTiming","active","abs","sourceRandomUniform","randomUniform","defaultSource","sourceRandomInt","randomInt","sourceRandomNormal","randomNormal","mu","sigma","eps","lcg","seed","random","e10","e5","e2","tickIncrement","power","LN10","error","delta","lo","hi","mid","ascendingComparator","center","ascendingBisect","bisector","bisectRight","genericArray","nb","na","setTime","date","isView","valueOf","unit","normalize","bimap","domain","range","d0","d1","r0","polymap","bisect","clamp","unknown","continuous","untransform","piecewise","output","rescale","invert","rangeRound","transformer","initRange","prefixExponent","re","formatSpecifier","specifier","FormatSpecifier","align","sign","symbol","width","comma","precision","formatDecimalParts","toExponential","coefficient","exponent","toFixed","toLocaleString","toPrecision","formatRounded","toUpperCase","formatPrefix","prefixes","linearish","isFinite","ceil","tickFormat","step0","step1","tickStep","precisionPrefix","precisionRound","precisionFixed","nice","prestep","maxIter","randFloat","choose","clipValue","minValue","maxValue","roundToNDecimals","swapSoSmallerFirst","countOnesOfBinary","integer","findLocalMaxima","maximaIndices","last","current","locale","grouping","thousands","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","percent","minus","nan","newFormat","formatTypes","suffix","maybeSuffix","valuePrefix","valueSuffix","valueNegative","formatTrim","padding","point","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","NoteArray","_notes","getNotes","addNotes","sortByTime","noteArray","gap","repeat","times","getStartTime","noteEnd","shiftToStartAt","startTime","offset","func","element","sortFunction","mapFunction","sliceTime","endTime","mode","filterFunc","sliceAtTimes","slices","filterFunction","filterPitches","pitches","transpose","steps","removeOctaves","newNote","otherNoteArray","entries","arrayShallowEquals","arrayHasSameElements","checkLength","setA","setB","jaccardIndex","set1","set2","union","removeDuplicates","arrayContainsArray","getMatrixMax","maximum","NEGATIVE_INFINITY","row","formatMatrix","colSeparator","rowSeparator","formatter","binarySearch","accessor","closest","POSITIVE_INFINITY","value_","diff2","pivotPosition","pivotElement","pivotValue","Recording","speed","selectedTrack","timeSelection","dateString","toISOString","otherRecording","getTime","notes1","notes2","toSimpleObject","preprocessMusicXmlPart","part","drumInstrumentMap","hasStringFretNotes","backups","backup","handleStaveAndTab","resultMeasures","currentRepeatedSection","isAlternativeEndingOne","measure","endingMarks","repetitionMarks","repetition","direction","firstRepetition","allMeasuresUntilHere","endingMark","duplicateRepeatedMeasures","divisions","beatType","defaultVelocity","tempoChanges","beatTypeChanges","keySignatureChanges","noteObjs","measureLinePositions","currentTimeRounded","soundElements","tempoValue","secondsPerBeat","fifths","keySignatureMap","lastNoteDuration","nodeName","getDurationInSeconds","durationInSeconds","instrumentId","alter","dynamicsTag","dynamicsMap","tieElement","staff","totalTime","tuning","getTuningPitches","tuningPitches","staffTunings","st","tuningNote","tuningOctave","bpmToSecondsPerBeat","deepCloneFlatObjectMap","groupNotesByPitch","allNotes","flat","reverseString","findNearest","targetNote","nearest","dist","targetStart","newDist","parseMidiTrack","currentTick","milliSecondsPerTick","getMillisecondsPerTick","tickOfLastTempoChange","timeOfLastTempoChange","unfinishedNotes","EVENT_TYPES","btc","ksc","mostRecentTempoChange","neededToFix","trackName","instrumentName","META_TYPES","getInstrumentAndTrackName","noteAftertouch","controller","channelAftertouch","pitchBend","sequenceNumber","copyright","lyrics","marker","cuePoint","channelPrefix","smpteOffset","keySignature","sequencerSpecific","KEY_SIG_MAP","MusicPiece","measureTimes","currentTempo","currentTimeSig","currentKeySig","midiFile","parsed","splitFormat0IntoTracks","groupCollapsed","parsedTracks","lastTempo","milliSecondsPerQuarter","newEntry","getSignatureChanges","grouped","splittedTracks","splitFormat0","measureLines","currentBeatsInMeasure","timeSinceLastTempoChange","getMeasureLines","groupEnd","preprocessMidiFileData","midiParser","TempoDefinition","TimeSignature","KeySignature","fromMidi","xmlFile","xmlDocument","DOMParser","parseFromString","partNameElements","instruments","partNames","instrumentNames","partMap","scoreParts","scorePart","partId","instruMap","midiInstrs","midiInstr","instrId","getDrumInstrumentMap","parts","parsedParts","preprocessMusicXmlData","fromMusicXml","getAllNotes","flatMap","getNotesFromTracks","indices","includes","change","hasStringFret","signature","PitchSequence","getPitches","toCharString","toNoteNameString","toIntervals","otherPitchSequence","setupCanvas","canvas","dpr","devicePixelRatio","rect","getBoundingClientRect","height","context","getContext","drawLine","x1","y1","x2","y2","beginPath","moveTo","lineTo","stroke","drawCircle","radius","arc","drawFilledCircle","drawTriangle","halfSize","closePath","drawDiamond","drawX","save","lineWidth","restore","drawNoteTrapezoid","height2","drawNoteTrapezoidUpwards","width2","drawRoundedRect","quadraticCurveTo","drawCornerLine","xFirst","drawRoundedCornerLine","maxRadius","xDist","yDist","cy","drawHexagon","angle","cos","sin","recordAudio","async","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","audioBitsPerSecond","audioChunks","blobOptions","mimeType","audioBlob","Blob","recordMidi","midiAccess","requestMIDIAccess","messages","addMessage","message","inputs","onmidimessage","currentNotes","device","timeStamp","commandAndChannel","command","processMidiMessagesToNotes","getMidiLiveData","setMidiLiveData","addCurrentNote","removeCurrentNote","_handleMIDIMessage","_noteOff","_noteOn","_onMIDISuccess","_onMIDIFailure","alert","drumPitchReplacementMapMPS850","repPitch","zone","line","shape","generateDrumVariation","deviation","pAdd","pRemove","usedPitches","randVelocity","randTime","variation","simplifyDrumPitches","replacementMap","errors","oldPitch","newPitch","getPitch2PositionMap","uniqeRows","StringedTuning","stringCount","stringedTunings","guitarNoteFromNote","reversedString","getTuningFromPitches","stringCountMap","tunings","getTuningPitchRange","fretCount","openMax","stringColors","getPitchFromFretboardPos","getNoteInfoFromFretboardPos","getFretboardPositionsFromPitch","positions","openPitch","getFretboardPositionsFromNoteName","lowestPitch","generateExampleData","fretboardPositionsFromMidi","minPitch","maxPitch","possibleNotes","errorPitches","bestPos","minDataPitch","maxDataPitch","extent","advice","fillStr","deprecate","original","alternative","fn","isNamed","src","isPitch","alt","FIFTHS","STEPS_TO_OCTS","oct","dir","FIFTHS_TO_STEPS","decode","coord","unaltered","NoNote","pc","acc","cache","altToAcc","accToAlt","cached","noteName","tokens","tokenizeNote","letter","octStr","chroma","SEMI","freq","stepToLetter","pitchName","REGEX","NoInterval","REGEX$1","cache$1","tokenizeInterval","num","TYPES","simple","qToAlt","semitones","SIZES","parse$1","altToQ","pitchName$1","coordToInterval","intervalName","note$1","interval$1","noteCoord","intervalCoord","coordToNote","EmptyPcset","setNum","normalized","intervals","setNumToChroma","chromaToNumber","isChroma","isPcsetNum","binary","listToChroma","isPcset","normalizedNum","chromaRotations","chromaToIntervals","chromaToPcset","IVLS","isSupersetOf","NoChordType","quality","aliases","dictionary","ivls","fullName","getQuality","chord","alias","addAlias","NoScaleType","NoChord","rootDegree","tonic","NUM_TYPES","getChord","typeName","optionalTonic","optionalRoot","rootInterval","fromNote","to","fcoord","tcoord","distance","newNum","detect","weight","tonicChroma","pcToName","record","namedSet","allModes","modes","found","chordType","chordName","baseNote","findExactMatches","chordScales","isChordIncluded","extended","isSuperset","reduced","isSubset","isSubsetOf","tokenize","VALUES","shorthand","dots","fraction","combinator","coordA","coordB","NoRomanNumeral","roman","upperRoman","major","ROMANS","freeze","mapScaleToType","sep","keyScale","grades","chords","harmonicFunctions","gr","chordsHarmonicFunction","MODES","NoMode","modeNum","triad","seventh","modeName","triads","tonics","NoScale","detectChordsByExactStart","detectChordsByOverlap","sortByPitch","sorted","notesTodo","note1","note2","chordTypes","getChordType","lowest","candidates","cand","getChordName","noteLetters","Chord","LamellophoneTuning","pitchesSorted","keyCount","getNumbers","ending","lowerOctave","numberString","getLetters","letterString","lamellophoneTunings","convertTabToNotes","tab","symbolToPitchMap","symbols","noteNames","noteNamesSet","startOct","insideChord","insideNote","currentPitch","currentOctOffset","replaceAll","finishNote","convertNotesToTab","restSize","pitchToSymbolMap","previousEnd","chordString","convertNotesToHtmlTab","colormap","convertNumbersToLetters","numberTab","numberLetterMap","bestTransposition","retune","occuringPitches","notePitches","bestTransposed","bestSteps","transposed","uncommon","freePitches","neededPitches","neededPitch","bestMatch","bestDiff","freePitch","pianoPitchRange","blobToBase64","blob","onloadend","readAsDataURL","blobToFileExtension","formatTime","includeMillis","ms","formatDate","replaceT","keepMillis","formatSongTitle","title","maxLength","lastIndexOf","storeObjectInLocalStorage","JSON","stringify","localStorage","setItem","getObjectFromLocalStorage","getItem","chordToInteger","chordIntegerJaccardIndex","chord1","chord2","noteTypeDurationRatios","baseDurations","toAdd","dot","noteDurationToNoteType","quarterDuration","noteColormap","noteColormapAccessible","colorInterpolator","interpolateRgb","noteColormapGradientArray","noteColorFromPitch","confidenceInterval","variance","low","high","getBoxplotCharacteristics","q1","q2","q3","iqr","kernelDensityEstimator","kernel","X","V","kernelEpanechnikov","kernelGauss","E","filterRecordingNoise","recording","velocityThreshold","durationThreshold","clipRecordingsPitchesToGtRange","recordings","groundTruth","pitchRanges","extension","alignNotesToBpm","secondsPerDivision","recordingsHeatmap","recNotes","nRecs","binSize","attribute","groupedByAttribute","heatmapByAttribute","attribute_","maxTime","nBins","heatmap","bin","averageRecordings","heatmapByPitch","threshold","newNotes","averageRecordings2","bandwidth","ticksPerSecond","groupedByPitch","starts","ends","scaleLinear","kde","estimateStarts","estimateEnds","maximaStarts","maximaEnds","chosenStarts","chosenEnds","nextStart","nextEnd","differenceMap","gtNotes","recHeatmap","gtHeatmap","allPitches","resultMap","recH","gtH","gtValue","recValue","differenceMapErrorAreas","missingBins","additionalBins","correctBins","diffMap","totalArea","missing","additional","correct","pingMidiDevice","deviceName","howOften","sentTime","sentCount","receiveFunction","ping","avg","outputDevice","outputs","pingFunction","send","matchGtAndRecordingNotes","groupedByPitchRec","gtRecMap","additionalNotes","missingNotes","Utils","currentEntry","matchGtAndMultipleRecordings","allRecNotes","getMultiMatchingErrorPerNote","multiMatching","errorThreshold","gtErrorMap","maxError","gtStart","matchedRecNotes","error_","getMatchingError","matching","addPenalty","missPenalty","timingPenalty","timeThreshold","total","totalAdd","totalMiss","totalCorrect","totalNumberOfGtNotes","perPitch","addError","missError","timeError","matchedRecNote","numberOfGtNotes","getMatchingSection","newGtRecMap","getMatchingSliceError","alignNoteArrays","gt","rec","noteA","noteB","alignmentForce","aligned","timeDifference","alignNoteArrays2","tries","timeDiff","alignNoteArrays3","timeDiffs","median","testAlignment","alignmentBenchmark","rand127","randomLcg","randDuration","randomNotes","shifted","Drums","funcs","alignGtAndRecToMinimizeDiffError","gtDuration","recDuration","nRecBins","gtActivation","activationMap","recActivation","agreementsPerOffset","currentAgreement","agreement","offsetBins","offsetMilliseconds","pitchActivationMap","gtActivations","recActivations","gtA","recA","alignRecordingToBestFit","bestFit","getSimilarParts","selectedInterval","stride","secondsPerBin","minTime","binCount","discrTrack","discretizeTime","startBin","endBin","sliceDiscretizedTrack","selectionSize","similarParts","pos2","getTrackSimilarity","discrA","discrB","common","totalDist","binsA","binsB","euclideanDistanceSquared","neirestNeighborDistance","penaltyWeight","discr","countActiveNoteBins","binArray","A","B","maxBins","maxOffset","levenshtein","temporary","damerauLevenshtein","cost","findSimilarNoteSections","selectedNotes","dataString","searchString","findSimilarStringSections","filtered","occupied","occ","lcs","diagonal","latch","lcsLength","normalizedLcsLength","longerLength","gotoh","seqA","seqB","similarityFunction","matchMissmatchSimilarity","gapPenaltyStart","gapPenaltyExtend","lengthA","lengthB","sim","normalizedGotoh","similarity","longer","maxSimilarity","differenceSimilarity","TreeNode","leaves","checkNodes","suf","addSuffix","checkLeaves","leaf","getLongestRepeatedSubString","indent","ind","toJson","seq1","seq2","match_score","mismatch_penalty","gap_penalty","I","S","finalAlignments","calcScoresAndTracebacks","del","sim_score","intermediate_scores","score","tracebackTypeStatus","entry","lastRow","alignmentChildren","traceback_type_status","tracebackType","alignmentTraceback","alignment"],"mappings":"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","file":"musicvislib.wp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"musicvislib\"] = factory();\n\telse\n\t\troot[\"musicvislib\"] = factory();\n})(this, function() {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Return the index of the element at or before the given property\n * @hidden\n */\nfunction search(array, value, prop) {\n    if (prop === void 0) { prop = \"ticks\"; }\n    var beginning = 0;\n    var len = array.length;\n    var end = len;\n    if (len > 0 && array[len - 1][prop] <= value) {\n        return len - 1;\n    }\n    while (beginning < end) {\n        // calculate the midpoint for roughly equal partition\n        var midPoint = Math.floor(beginning + (end - beginning) / 2);\n        var event_1 = array[midPoint];\n        var nextEvent = array[midPoint + 1];\n        if (event_1[prop] === value) {\n            // choose the last one that has the same value\n            for (var i = midPoint; i < array.length; i++) {\n                var testEvent = array[i];\n                if (testEvent[prop] === value) {\n                    midPoint = i;\n                }\n            }\n            return midPoint;\n        }\n        else if (event_1[prop] < value && nextEvent[prop] > value) {\n            return midPoint;\n        }\n        else if (event_1[prop] > value) {\n            // search lower\n            end = midPoint;\n        }\n        else if (event_1[prop] < value) {\n            // search upper\n            beginning = midPoint + 1;\n        }\n    }\n    return -1;\n}\nexports.search = search;\n/**\n * Does a binary search to insert the note\n * in the correct spot in the array\n * @hidden\n */\nfunction insert(array, event, prop) {\n    if (prop === void 0) { prop = \"ticks\"; }\n    if (array.length) {\n        var index = search(array, event[prop], prop);\n        array.splice(index + 1, 0, event);\n    }\n    else {\n        array.push(event);\n    }\n}\nexports.insert = insert;\n//# sourceMappingURL=BinarySearch.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A map of values to control change names\n * @hidden\n */\nexports.controlChangeNames = {\n    1: \"modulationWheel\",\n    2: \"breath\",\n    4: \"footController\",\n    5: \"portamentoTime\",\n    7: \"volume\",\n    8: \"balance\",\n    10: \"pan\",\n    64: \"sustain\",\n    65: \"portamentoTime\",\n    66: \"sostenuto\",\n    67: \"softPedal\",\n    68: \"legatoFootswitch\",\n    84: \"portamentoControl\",\n};\n/**\n * swap the keys and values\n * @hidden\n */\nexports.controlChangeIds = Object.keys(exports.controlChangeNames).reduce(function (obj, key) {\n    obj[exports.controlChangeNames[key]] = key;\n    return obj;\n}, {});\nvar privateHeaderMap = new WeakMap();\nvar privateCCNumberMap = new WeakMap();\n/**\n * Represents a control change event\n */\nvar ControlChange = /** @class */ (function () {\n    /**\n     * @param event\n     * @param header\n     */\n    function ControlChange(event, header) {\n        privateHeaderMap.set(this, header);\n        privateCCNumberMap.set(this, event.controllerType);\n        this.ticks = event.absoluteTime;\n        this.value = event.value;\n    }\n    Object.defineProperty(ControlChange.prototype, \"number\", {\n        /**\n         * The controller number\n         */\n        get: function () {\n            return privateCCNumberMap.get(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlChange.prototype, \"name\", {\n        /**\n         * return the common name of the control number if it exists\n         */\n        get: function () {\n            if (exports.controlChangeNames[this.number]) {\n                return exports.controlChangeNames[this.number];\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlChange.prototype, \"time\", {\n        /**\n         * The time of the event in seconds\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToSeconds(this.ticks);\n        },\n        set: function (t) {\n            var header = privateHeaderMap.get(this);\n            this.ticks = header.secondsToTicks(t);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ControlChange.prototype.toJSON = function () {\n        return {\n            number: this.number,\n            ticks: this.ticks,\n            time: this.time,\n            value: this.value,\n        };\n    };\n    return ControlChange;\n}());\nexports.ControlChange = ControlChange;\n//# sourceMappingURL=ControlChange.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ControlChange_1 = require(\"./ControlChange\");\n/**\n * Automatically creates an alias for named control values using Proxies\n * @hidden\n */\nfunction createControlChanges() {\n    return new Proxy({}, {\n        // tslint:disable-next-line: typedef\n        get: function (target, handler) {\n            if (target[handler]) {\n                return target[handler];\n            }\n            else if (ControlChange_1.controlChangeIds.hasOwnProperty(handler)) {\n                return target[ControlChange_1.controlChangeIds[handler]];\n            }\n        },\n        // tslint:disable-next-line: typedef\n        set: function (target, handler, value) {\n            if (ControlChange_1.controlChangeIds.hasOwnProperty(handler)) {\n                target[ControlChange_1.controlChangeIds[handler]] = value;\n            }\n            else {\n                target[handler] = value;\n            }\n            return true;\n        },\n    });\n}\nexports.createControlChanges = createControlChanges;\n//# sourceMappingURL=ControlChanges.js.map","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar midi_file_1 = require(\"midi-file\");\nvar Header_1 = require(\"./Header\");\nvar array_flatten_1 = __importDefault(require(\"array-flatten\"));\nfunction encodeNote(note, channel) {\n    return [{\n            absoluteTime: note.ticks,\n            channel: channel,\n            deltaTime: 0,\n            noteNumber: note.midi,\n            type: \"noteOn\",\n            velocity: Math.floor(note.velocity * 127),\n        },\n        {\n            absoluteTime: note.ticks + note.durationTicks,\n            channel: channel,\n            deltaTime: 0,\n            noteNumber: note.midi,\n            type: \"noteOff\",\n            velocity: Math.floor(note.noteOffVelocity * 127),\n        }];\n}\nfunction encodeNotes(track) {\n    return array_flatten_1.default(track.notes.map(function (note) { return encodeNote(note, track.channel); }));\n}\nfunction encodeControlChange(cc, channel) {\n    return {\n        absoluteTime: cc.ticks,\n        channel: channel,\n        controllerType: cc.number,\n        deltaTime: 0,\n        type: \"controller\",\n        value: Math.floor(cc.value * 127),\n    };\n}\nfunction encodeControlChanges(track) {\n    var controlChanges = [];\n    for (var i = 0; i < 127; i++) {\n        if (track.controlChanges.hasOwnProperty(i)) {\n            track.controlChanges[i].forEach(function (cc) {\n                controlChanges.push(encodeControlChange(cc, track.channel));\n            });\n        }\n    }\n    return controlChanges;\n}\nfunction encodePitchBend(pb, channel) {\n    return {\n        absoluteTime: pb.ticks,\n        channel: channel,\n        deltaTime: 0,\n        type: \"pitchBend\",\n        value: pb.value,\n    };\n}\nfunction encodePitchBends(track) {\n    var pitchBends = [];\n    track.pitchBends.forEach(function (pb) {\n        pitchBends.push(encodePitchBend(pb, track.channel));\n    });\n    return pitchBends;\n}\nfunction encodeInstrument(track) {\n    return {\n        absoluteTime: 0,\n        channel: track.channel,\n        deltaTime: 0,\n        programNumber: track.instrument.number,\n        type: \"programChange\",\n    };\n}\nfunction encodeTrackName(name) {\n    return {\n        absoluteTime: 0,\n        deltaTime: 0,\n        meta: true,\n        text: name,\n        type: \"trackName\",\n    };\n}\nfunction encodeTempo(tempo) {\n    return {\n        absoluteTime: tempo.ticks,\n        deltaTime: 0,\n        meta: true,\n        microsecondsPerBeat: Math.floor(60000000 / tempo.bpm),\n        type: \"setTempo\",\n    };\n}\nfunction encodeTimeSignature(timeSig) {\n    return {\n        absoluteTime: timeSig.ticks,\n        deltaTime: 0,\n        denominator: timeSig.timeSignature[1],\n        meta: true,\n        metronome: 24,\n        numerator: timeSig.timeSignature[0],\n        thirtyseconds: 8,\n        type: \"timeSignature\",\n    };\n}\n// function encodeMeta(event: )\nfunction encodeKeySignature(keySig) {\n    var keyIndex = Header_1.keySignatureKeys.indexOf(keySig.key);\n    return {\n        absoluteTime: keySig.ticks,\n        deltaTime: 0,\n        key: keyIndex + 7,\n        meta: true,\n        scale: keySig.scale === \"major\" ? 0 : 1,\n        type: \"keySignature\",\n    };\n}\nfunction encodeText(textEvent) {\n    return {\n        absoluteTime: textEvent.ticks,\n        deltaTime: 0,\n        meta: true,\n        text: textEvent.text,\n        type: textEvent.type,\n    };\n}\n/**\n * Convert the midi object to an array\n */\nfunction encode(midi) {\n    var midiData = {\n        header: {\n            format: 1,\n            numTracks: midi.tracks.length + 1,\n            ticksPerBeat: midi.header.ppq,\n        },\n        tracks: __spreadArrays([\n            __spreadArrays([\n                // the name data\n                {\n                    absoluteTime: 0,\n                    deltaTime: 0,\n                    meta: true,\n                    text: midi.header.name,\n                    type: \"trackName\",\n                }\n            ], midi.header.keySignatures.map(function (keySig) { return encodeKeySignature(keySig); }), midi.header.meta.map(function (e) { return encodeText(e); }), midi.header.tempos.map(function (tempo) { return encodeTempo(tempo); }), midi.header.timeSignatures.map(function (timeSig) { return encodeTimeSignature(timeSig); }))\n        ], midi.tracks.map(function (track) {\n            return __spreadArrays([\n                // add the name\n                encodeTrackName(track.name),\n                // the instrument\n                encodeInstrument(track)\n            ], encodeNotes(track), encodeControlChanges(track), encodePitchBends(track));\n        })),\n    };\n    // sort and set deltaTime of all of the tracks\n    midiData.tracks = midiData.tracks.map(function (track) {\n        track = track.sort(function (a, b) { return a.absoluteTime - b.absoluteTime; });\n        var lastTime = 0;\n        track.forEach(function (note) {\n            note.deltaTime = note.absoluteTime - lastTime;\n            lastTime = note.absoluteTime;\n            delete note.absoluteTime;\n        });\n        // end of track\n        track.push({\n            deltaTime: 0,\n            meta: true,\n            type: \"endOfTrack\",\n        });\n        return track;\n    });\n    // return midiData\n    return new Uint8Array(midi_file_1.writeMidi(midiData));\n}\nexports.encode = encode;\n//# sourceMappingURL=Encode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BinarySearch_1 = require(\"./BinarySearch\");\nvar privatePPQMap = new WeakMap();\n/**\n * @hidden\n */\nexports.keySignatureKeys = [\n    \"Cb\",\n    \"Gb\",\n    \"Db\",\n    \"Ab\",\n    \"Eb\",\n    \"Bb\",\n    \"F\",\n    \"C\",\n    \"G\",\n    \"D\",\n    \"A\",\n    \"E\",\n    \"B\",\n    \"F#\",\n    \"C#\",\n];\n/** The parsed midi file header */\nvar Header = /** @class */ (function () {\n    function Header(midiData) {\n        // look through all the tracks for tempo changes\n        var _this = this;\n        /**\n         * The array of all the tempo events\n         */\n        this.tempos = [];\n        /**\n         * The time signatures\n         */\n        this.timeSignatures = [];\n        /**\n         * The time signatures\n         */\n        this.keySignatures = [];\n        /**\n         * Additional meta events\n         */\n        this.meta = [];\n        /**\n         * The name of the midi file\n         */\n        this.name = \"\";\n        privatePPQMap.set(this, 480);\n        if (midiData) {\n            privatePPQMap.set(this, midiData.header.ticksPerBeat);\n            // check time signature and tempo events from all of the tracks\n            midiData.tracks.forEach(function (track) {\n                return track.forEach(function (event) {\n                    if (event.meta) {\n                        if (event.type === \"timeSignature\") {\n                            _this.timeSignatures.push({\n                                ticks: event.absoluteTime,\n                                timeSignature: [\n                                    event.numerator,\n                                    event.denominator,\n                                ],\n                            });\n                        }\n                        else if (event.type === \"setTempo\") {\n                            _this.tempos.push({\n                                bpm: 60000000 / event.microsecondsPerBeat,\n                                ticks: event.absoluteTime,\n                            });\n                        }\n                        else if (event.type === \"keySignature\") {\n                            _this.keySignatures.push({\n                                key: exports.keySignatureKeys[event.key + 7],\n                                scale: event.scale === 0 ? \"major\" : \"minor\",\n                                ticks: event.absoluteTime,\n                            });\n                        }\n                    }\n                });\n            });\n            // check the first track for other relevant data\n            midiData.tracks[0].forEach(function (event) {\n                if (event.meta) {\n                    if (event.type === \"trackName\") {\n                        _this.name = event.text;\n                    }\n                    else if (event.type === \"text\" ||\n                        event.type === \"cuePoint\" ||\n                        event.type === \"marker\" ||\n                        event.type === \"lyrics\") {\n                        _this.meta.push({\n                            text: event.text,\n                            ticks: event.absoluteTime,\n                            type: event.type,\n                        });\n                    }\n                }\n            });\n            this.update();\n        }\n    }\n    /**\n     * This must be invoked after any changes are made to the tempo array\n     * or the timeSignature array for the updated values to be reflected.\n     */\n    Header.prototype.update = function () {\n        var _this = this;\n        var currentTime = 0;\n        var lastEventBeats = 0;\n        // make sure it's sorted\n        this.tempos.sort(function (a, b) { return a.ticks - b.ticks; });\n        this.tempos.forEach(function (event, index) {\n            var lastBPM = index > 0 ? _this.tempos[index - 1].bpm : _this.tempos[0].bpm;\n            var beats = event.ticks / _this.ppq - lastEventBeats;\n            var elapsedSeconds = (60 / lastBPM) * beats;\n            event.time = elapsedSeconds + currentTime;\n            currentTime = event.time;\n            lastEventBeats += beats;\n        });\n        this.timeSignatures.sort(function (a, b) { return a.ticks - b.ticks; });\n        this.timeSignatures.forEach(function (event, index) {\n            var lastEvent = index > 0\n                ? _this.timeSignatures[index - 1]\n                : _this.timeSignatures[0];\n            var elapsedBeats = (event.ticks - lastEvent.ticks) / _this.ppq;\n            var elapsedMeasures = elapsedBeats /\n                lastEvent.timeSignature[0] /\n                (lastEvent.timeSignature[1] / 4);\n            lastEvent.measures = lastEvent.measures || 0;\n            event.measures = elapsedMeasures + lastEvent.measures;\n        });\n    };\n    /**\n     * Convert ticks into seconds based on the tempo changes\n     */\n    Header.prototype.ticksToSeconds = function (ticks) {\n        // find the relevant position\n        var index = BinarySearch_1.search(this.tempos, ticks);\n        if (index !== -1) {\n            var tempo = this.tempos[index];\n            var tempoTime = tempo.time;\n            var elapsedBeats = (ticks - tempo.ticks) / this.ppq;\n            return tempoTime + (60 / tempo.bpm) * elapsedBeats;\n        }\n        else {\n            // assume 120\n            var beats = ticks / this.ppq;\n            return (60 / 120) * beats;\n        }\n    };\n    /**\n     * Convert ticks into measures based off of the time signatures\n     */\n    Header.prototype.ticksToMeasures = function (ticks) {\n        var index = BinarySearch_1.search(this.timeSignatures, ticks);\n        if (index !== -1) {\n            var timeSigEvent = this.timeSignatures[index];\n            var elapsedBeats = (ticks - timeSigEvent.ticks) / this.ppq;\n            return (timeSigEvent.measures +\n                elapsedBeats /\n                    (timeSigEvent.timeSignature[0] /\n                        timeSigEvent.timeSignature[1]) /\n                    4);\n        }\n        else {\n            return ticks / this.ppq / 4;\n        }\n    };\n    Object.defineProperty(Header.prototype, \"ppq\", {\n        /**\n         * The number of ticks per quarter note\n         */\n        get: function () {\n            return privatePPQMap.get(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Convert seconds to ticks based on the tempo events\n     */\n    Header.prototype.secondsToTicks = function (seconds) {\n        // find the relevant position\n        var index = BinarySearch_1.search(this.tempos, seconds, \"time\");\n        if (index !== -1) {\n            var tempo = this.tempos[index];\n            var tempoTime = tempo.time;\n            var elapsedTime = seconds - tempoTime;\n            var elapsedBeats = elapsedTime / (60 / tempo.bpm);\n            return Math.round(tempo.ticks + elapsedBeats * this.ppq);\n        }\n        else {\n            // assume 120\n            var beats = seconds / (60 / 120);\n            return Math.round(beats * this.ppq);\n        }\n    };\n    /**\n     * Convert the header into an object.\n     */\n    Header.prototype.toJSON = function () {\n        return {\n            keySignatures: this.keySignatures,\n            meta: this.meta,\n            name: this.name,\n            ppq: this.ppq,\n            tempos: this.tempos.map(function (t) {\n                return {\n                    bpm: t.bpm,\n                    ticks: t.ticks,\n                };\n            }),\n            timeSignatures: this.timeSignatures,\n        };\n    };\n    /**\n     * parse a header json object.\n     */\n    Header.prototype.fromJSON = function (json) {\n        this.name = json.name;\n        // clone all the attributes\n        this.tempos = json.tempos.map(function (t) { return Object.assign({}, t); });\n        this.timeSignatures = json.timeSignatures.map(function (t) {\n            return Object.assign({}, t);\n        });\n        this.keySignatures = json.keySignatures.map(function (t) {\n            return Object.assign({}, t);\n        });\n        this.meta = json.meta.map(function (t) { return Object.assign({}, t); });\n        privatePPQMap.set(this, json.ppq);\n        this.update();\n    };\n    /**\n     * Update the tempo of the midi to a single tempo. Will remove and replace\n     * any other tempos currently set and update all of the event timing.\n     * @param bpm The tempo in beats per second\n     */\n    Header.prototype.setTempo = function (bpm) {\n        this.tempos = [\n            {\n                bpm: bpm,\n                ticks: 0,\n            },\n        ];\n        this.update();\n    };\n    return Header;\n}());\nexports.Header = Header;\n//# sourceMappingURL=Header.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar InstrumentMaps_1 = require(\"./InstrumentMaps\");\n/**\n * @hidden\n */\nvar privateTrackMap = new WeakMap();\n/**\n * Describes the midi instrument of a track\n */\nvar Instrument = /** @class */ (function () {\n    /**\n     * @param trackData\n     * @param track\n     */\n    function Instrument(trackData, track) {\n        /**\n         * The instrument number\n         */\n        this.number = 0;\n        privateTrackMap.set(this, track);\n        this.number = 0;\n        if (trackData) {\n            var programChange = trackData.find(function (e) { return e.type === \"programChange\"; });\n            if (programChange) {\n                this.number = programChange.programNumber;\n            }\n        }\n    }\n    Object.defineProperty(Instrument.prototype, \"name\", {\n        /**\n         * The common name of the instrument\n         */\n        get: function () {\n            if (this.percussion) {\n                return InstrumentMaps_1.DrumKitByPatchID[this.number];\n            }\n            else {\n                return InstrumentMaps_1.instrumentByPatchID[this.number];\n            }\n        },\n        set: function (n) {\n            var patchNumber = InstrumentMaps_1.instrumentByPatchID.indexOf(n);\n            if (patchNumber !== -1) {\n                this.number = patchNumber;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"family\", {\n        /**\n         * The instrument family, e.g. \"piano\".\n         */\n        get: function () {\n            if (this.percussion) {\n                return \"drums\";\n            }\n            else {\n                return InstrumentMaps_1.InstrumentFamilyByID[Math.floor(this.number / 8)];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Instrument.prototype, \"percussion\", {\n        /**\n         * If the instrument is a percussion instrument\n         */\n        get: function () {\n            var track = privateTrackMap.get(this);\n            return track.channel === 9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Convert it to JSON form\n     */\n    Instrument.prototype.toJSON = function () {\n        return {\n            family: this.family,\n            name: this.name,\n            number: this.number,\n        };\n    };\n    /**\n     * Convert from JSON form\n     */\n    Instrument.prototype.fromJSON = function (json) {\n        this.number = json.number;\n    };\n    return Instrument;\n}());\nexports.Instrument = Instrument;\n//# sourceMappingURL=Instrument.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.instrumentByPatchID = [\n    \"acoustic grand piano\",\n    \"bright acoustic piano\",\n    \"electric grand piano\",\n    \"honky-tonk piano\",\n    \"electric piano 1\",\n    \"electric piano 2\",\n    \"harpsichord\",\n    \"clavi\",\n    \"celesta\",\n    \"glockenspiel\",\n    \"music box\",\n    \"vibraphone\",\n    \"marimba\",\n    \"xylophone\",\n    \"tubular bells\",\n    \"dulcimer\",\n    \"drawbar organ\",\n    \"percussive organ\",\n    \"rock organ\",\n    \"church organ\",\n    \"reed organ\",\n    \"accordion\",\n    \"harmonica\",\n    \"tango accordion\",\n    \"acoustic guitar (nylon)\",\n    \"acoustic guitar (steel)\",\n    \"electric guitar (jazz)\",\n    \"electric guitar (clean)\",\n    \"electric guitar (muted)\",\n    \"overdriven guitar\",\n    \"distortion guitar\",\n    \"guitar harmonics\",\n    \"acoustic bass\",\n    \"electric bass (finger)\",\n    \"electric bass (pick)\",\n    \"fretless bass\",\n    \"slap bass 1\",\n    \"slap bass 2\",\n    \"synth bass 1\",\n    \"synth bass 2\",\n    \"violin\",\n    \"viola\",\n    \"cello\",\n    \"contrabass\",\n    \"tremolo strings\",\n    \"pizzicato strings\",\n    \"orchestral harp\",\n    \"timpani\",\n    \"string ensemble 1\",\n    \"string ensemble 2\",\n    \"synthstrings 1\",\n    \"synthstrings 2\",\n    \"choir aahs\",\n    \"voice oohs\",\n    \"synth voice\",\n    \"orchestra hit\",\n    \"trumpet\",\n    \"trombone\",\n    \"tuba\",\n    \"muted trumpet\",\n    \"french horn\",\n    \"brass section\",\n    \"synthbrass 1\",\n    \"synthbrass 2\",\n    \"soprano sax\",\n    \"alto sax\",\n    \"tenor sax\",\n    \"baritone sax\",\n    \"oboe\",\n    \"english horn\",\n    \"bassoon\",\n    \"clarinet\",\n    \"piccolo\",\n    \"flute\",\n    \"recorder\",\n    \"pan flute\",\n    \"blown bottle\",\n    \"shakuhachi\",\n    \"whistle\",\n    \"ocarina\",\n    \"lead 1 (square)\",\n    \"lead 2 (sawtooth)\",\n    \"lead 3 (calliope)\",\n    \"lead 4 (chiff)\",\n    \"lead 5 (charang)\",\n    \"lead 6 (voice)\",\n    \"lead 7 (fifths)\",\n    \"lead 8 (bass + lead)\",\n    \"pad 1 (new age)\",\n    \"pad 2 (warm)\",\n    \"pad 3 (polysynth)\",\n    \"pad 4 (choir)\",\n    \"pad 5 (bowed)\",\n    \"pad 6 (metallic)\",\n    \"pad 7 (halo)\",\n    \"pad 8 (sweep)\",\n    \"fx 1 (rain)\",\n    \"fx 2 (soundtrack)\",\n    \"fx 3 (crystal)\",\n    \"fx 4 (atmosphere)\",\n    \"fx 5 (brightness)\",\n    \"fx 6 (goblins)\",\n    \"fx 7 (echoes)\",\n    \"fx 8 (sci-fi)\",\n    \"sitar\",\n    \"banjo\",\n    \"shamisen\",\n    \"koto\",\n    \"kalimba\",\n    \"bag pipe\",\n    \"fiddle\",\n    \"shanai\",\n    \"tinkle bell\",\n    \"agogo\",\n    \"steel drums\",\n    \"woodblock\",\n    \"taiko drum\",\n    \"melodic tom\",\n    \"synth drum\",\n    \"reverse cymbal\",\n    \"guitar fret noise\",\n    \"breath noise\",\n    \"seashore\",\n    \"bird tweet\",\n    \"telephone ring\",\n    \"helicopter\",\n    \"applause\",\n    \"gunshot\",\n];\nexports.InstrumentFamilyByID = [\n    \"piano\",\n    \"chromatic percussion\",\n    \"organ\",\n    \"guitar\",\n    \"bass\",\n    \"strings\",\n    \"ensemble\",\n    \"brass\",\n    \"reed\",\n    \"pipe\",\n    \"synth lead\",\n    \"synth pad\",\n    \"synth effects\",\n    \"world\",\n    \"percussive\",\n    \"sound effects\",\n];\nexports.DrumKitByPatchID = {\n    0: \"standard kit\",\n    8: \"room kit\",\n    16: \"power kit\",\n    24: \"electronic kit\",\n    25: \"tr-808 kit\",\n    32: \"jazz kit\",\n    40: \"brush kit\",\n    48: \"orchestra kit\",\n    56: \"sound fx kit\",\n};\n//# sourceMappingURL=InstrumentMaps.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar midi_file_1 = require(\"midi-file\");\nvar Encode_1 = require(\"./Encode\");\nvar Header_1 = require(\"./Header\");\nvar Track_1 = require(\"./Track\");\n/**\n * The main midi parsing class\n */\nvar Midi = /** @class */ (function () {\n    /**\n     * Parse the midi data\n     */\n    function Midi(midiArray) {\n        var _this = this;\n        // parse the midi data if there is any\n        var midiData = null;\n        if (midiArray) {\n            if (midiArray instanceof ArrayBuffer) {\n                midiArray = new Uint8Array(midiArray);\n            }\n            midiData = midi_file_1.parseMidi(midiArray);\n            // add the absolute times to each of the tracks\n            midiData.tracks.forEach(function (track) {\n                var currentTicks = 0;\n                track.forEach(function (event) {\n                    currentTicks += event.deltaTime;\n                    event.absoluteTime = currentTicks;\n                });\n            });\n            // ensure at most one instrument per track\n            midiData.tracks = splitTracks(midiData.tracks);\n        }\n        this.header = new Header_1.Header(midiData);\n        this.tracks = [];\n        // parse the midi data\n        if (midiArray) {\n            // format 0, everything is on the same track\n            this.tracks = midiData.tracks.map(function (trackData) { return new Track_1.Track(trackData, _this.header); });\n            // if it's format 1 and there are no notes on the first track, remove it\n            if (midiData.header.format === 1 && this.tracks[0].duration === 0) {\n                this.tracks.shift();\n            }\n        }\n    }\n    /**\n     * Download and parse the MIDI file. Returns a promise\n     * which resolves to the generated midi file\n     * @param url The url to fetch\n     */\n    Midi.fromUrl = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var response, arrayBuffer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, fetch(url)];\n                    case 1:\n                        response = _a.sent();\n                        if (!response.ok) return [3 /*break*/, 3];\n                        return [4 /*yield*/, response.arrayBuffer()];\n                    case 2:\n                        arrayBuffer = _a.sent();\n                        return [2 /*return*/, new Midi(arrayBuffer)];\n                    case 3: throw new Error(\"could not load \" + url);\n                }\n            });\n        });\n    };\n    Object.defineProperty(Midi.prototype, \"name\", {\n        /**\n         * The name of the midi file, taken from the first track\n         */\n        get: function () {\n            return this.header.name;\n        },\n        set: function (n) {\n            this.header.name = n;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Midi.prototype, \"duration\", {\n        /**\n         * The total length of the file in seconds\n         */\n        get: function () {\n            // get the max of the last note of all the tracks\n            var durations = this.tracks.map(function (t) { return t.duration; });\n            return Math.max.apply(Math, durations);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Midi.prototype, \"durationTicks\", {\n        /**\n         * The total length of the file in ticks\n         */\n        get: function () {\n            // get the max of the last note of all the tracks\n            var durationTicks = this.tracks.map(function (t) { return t.durationTicks; });\n            return Math.max.apply(Math, durationTicks);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Add a track to the midi file\n     */\n    Midi.prototype.addTrack = function () {\n        var track = new Track_1.Track(undefined, this.header);\n        this.tracks.push(track);\n        return track;\n    };\n    /**\n     * Encode the midi as a Uint8Array.\n     */\n    Midi.prototype.toArray = function () {\n        return Encode_1.encode(this);\n    };\n    /**\n     * Convert the midi object to JSON.\n     */\n    Midi.prototype.toJSON = function () {\n        return {\n            header: this.header.toJSON(),\n            tracks: this.tracks.map(function (track) { return track.toJSON(); }),\n        };\n    };\n    /**\n     * Parse a JSON representation of the object. Will overwrite the current\n     * tracks and header.\n     */\n    Midi.prototype.fromJSON = function (json) {\n        var _this = this;\n        this.header = new Header_1.Header();\n        this.header.fromJSON(json.header);\n        this.tracks = json.tracks.map(function (trackJSON) {\n            var track = new Track_1.Track(undefined, _this.header);\n            track.fromJSON(trackJSON);\n            return track;\n        });\n    };\n    /**\n     * Clone the entire object midi object\n     */\n    Midi.prototype.clone = function () {\n        var midi = new Midi();\n        midi.fromJSON(this.toJSON());\n        return midi;\n    };\n    return Midi;\n}());\nexports.Midi = Midi;\nvar Track_2 = require(\"./Track\");\nexports.Track = Track_2.Track;\nvar Header_2 = require(\"./Header\");\nexports.Header = Header_2.Header;\n/**\n * Given a list of MIDI tracks, make sure that each channel corresponds to at\n * most one channel and at most one instrument. This means splitting up tracks\n * that contain more than one channel or instrument.\n */\nfunction splitTracks(tracks) {\n    var newTracks = [];\n    for (var i = 0; i < tracks.length; i++) {\n        var defaultTrack = newTracks.length;\n        // a map from [program, channel] tuples to new track numbers\n        var trackMap = new Map();\n        // a map from channel numbers to current program numbers\n        var currentProgram = Array(16).fill(0);\n        for (var _i = 0, _a = tracks[i]; _i < _a.length; _i++) {\n            var event_1 = _a[_i];\n            var targetTrack = defaultTrack;\n            // If the event has a channel, we need to find that channel's current\n            // program number and the appropriate track for this [program, channel]\n            // pair.\n            var channel = event_1.channel;\n            if (channel !== undefined) {\n                if (event_1.type === \"programChange\") {\n                    currentProgram[channel] = event_1.programNumber;\n                }\n                var program = currentProgram[channel];\n                var trackKey = program + \" \" + channel;\n                if (trackMap.has(trackKey)) {\n                    targetTrack = trackMap.get(trackKey);\n                }\n                else {\n                    targetTrack = defaultTrack + trackMap.size;\n                    trackMap.set(trackKey, targetTrack);\n                }\n            }\n            if (!newTracks[targetTrack]) {\n                newTracks.push([]);\n            }\n            newTracks[targetTrack].push(event_1);\n        }\n    }\n    return newTracks;\n}\n//# sourceMappingURL=Midi.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Convert a midi note into a pitch\n */\nfunction midiToPitch(midi) {\n    var octave = Math.floor(midi / 12) - 1;\n    return midiToPitchClass(midi) + octave.toString();\n}\n/**\n * Convert a midi note to a pitch class (just the pitch no octave)\n */\nfunction midiToPitchClass(midi) {\n    var scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n    var note = midi % 12;\n    return scaleIndexToNote[note];\n}\n/**\n * Convert a pitch class to a MIDI note\n */\nfunction pitchClassToMidi(pitch) {\n    var scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n    return scaleIndexToNote.indexOf(pitch);\n}\n/**\n * Convert a pitch to a midi number\n */\n// tslint:disable-next-line: only-arrow-functions typedef\nvar pitchToMidi = (function () {\n    var regexp = /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i;\n    var noteToScaleIndex = {\n        // tslint:disable-next-line: object-literal-sort-keys\n        cbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n        dbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n        ebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n        fbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n        gbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n        abb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n        bbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n    };\n    return function (note) {\n        var split = regexp.exec(note);\n        var pitch = split[1];\n        var octave = split[2];\n        var index = noteToScaleIndex[pitch.toLowerCase()];\n        return index + (parseInt(octave, 10) + 1) * 12;\n    };\n}());\nvar privateHeaderMap = new WeakMap();\n/**\n * A Note consists of a noteOn and noteOff event\n */\nvar Note = /** @class */ (function () {\n    function Note(noteOn, noteOff, header) {\n        privateHeaderMap.set(this, header);\n        this.midi = noteOn.midi;\n        this.velocity = noteOn.velocity;\n        this.noteOffVelocity = noteOff.velocity;\n        this.ticks = noteOn.ticks;\n        this.durationTicks = noteOff.ticks - noteOn.ticks;\n    }\n    Object.defineProperty(Note.prototype, \"name\", {\n        /**\n         * The note name and octave in scientific pitch notation, e.g. \"C4\"\n         */\n        get: function () {\n            return midiToPitch(this.midi);\n        },\n        set: function (n) {\n            this.midi = pitchToMidi(n);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"octave\", {\n        /**\n         * The notes octave number\n         */\n        get: function () {\n            return Math.floor(this.midi / 12) - 1;\n        },\n        set: function (o) {\n            var diff = o - this.octave;\n            this.midi += diff * 12;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"pitch\", {\n        /**\n         * The pitch class name. e.g. \"A\"\n         */\n        get: function () {\n            return midiToPitchClass(this.midi);\n        },\n        set: function (p) {\n            this.midi = 12 * (this.octave + 1) + pitchClassToMidi(p);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"duration\", {\n        /**\n         * The duration of the segment in seconds\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToSeconds(this.ticks + this.durationTicks) - header.ticksToSeconds(this.ticks);\n        },\n        set: function (d) {\n            var header = privateHeaderMap.get(this);\n            var noteEndTicks = header.secondsToTicks(this.time + d);\n            this.durationTicks = noteEndTicks - this.ticks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"time\", {\n        /**\n         * The time of the event in seconds\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToSeconds(this.ticks);\n        },\n        set: function (t) {\n            var header = privateHeaderMap.get(this);\n            this.ticks = header.secondsToTicks(t);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Note.prototype, \"bars\", {\n        /**\n         * The number of measures (and partial measures) to this beat.\n         * Takes into account time signature changes\n         * @readonly\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToMeasures(this.ticks);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Note.prototype.toJSON = function () {\n        return {\n            duration: this.duration,\n            durationTicks: this.durationTicks,\n            midi: this.midi,\n            name: this.name,\n            ticks: this.ticks,\n            time: this.time,\n            velocity: this.velocity,\n        };\n    };\n    return Note;\n}());\nexports.Note = Note;\n//# sourceMappingURL=Note.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar privateHeaderMap = new WeakMap();\n/**\n * Represents a pitch bend event\n */\nvar PitchBend = /** @class */ (function () {\n    /**\n     * @param event\n     * @param header\n     */\n    function PitchBend(event, header) {\n        privateHeaderMap.set(this, header);\n        this.ticks = event.absoluteTime;\n        this.value = event.value;\n    }\n    Object.defineProperty(PitchBend.prototype, \"time\", {\n        /**\n         * The time of the event in seconds\n         */\n        get: function () {\n            var header = privateHeaderMap.get(this);\n            return header.ticksToSeconds(this.ticks);\n        },\n        set: function (t) {\n            var header = privateHeaderMap.get(this);\n            this.ticks = header.secondsToTicks(t);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PitchBend.prototype.toJSON = function () {\n        return {\n            ticks: this.ticks,\n            time: this.time,\n            value: this.value,\n        };\n    };\n    return PitchBend;\n}());\nexports.PitchBend = PitchBend;\n//# sourceMappingURL=PitchBend.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BinarySearch_1 = require(\"./BinarySearch\");\nvar ControlChange_1 = require(\"./ControlChange\");\nvar ControlChanges_1 = require(\"./ControlChanges\");\nvar PitchBend_1 = require(\"./PitchBend\");\nvar Instrument_1 = require(\"./Instrument\");\nvar Note_1 = require(\"./Note\");\nvar privateHeaderMap = new WeakMap();\n/**\n * A Track is a collection of notes and controlChanges\n */\nvar Track = /** @class */ (function () {\n    function Track(trackData, header) {\n        var _this = this;\n        /**\n         * The name of the track\n         */\n        this.name = \"\";\n        /**\n         * The track's note events\n         */\n        this.notes = [];\n        /**\n         * The control change events\n         */\n        this.controlChanges = ControlChanges_1.createControlChanges();\n        /**\n         * The pitch bend events\n         */\n        this.pitchBends = [];\n        privateHeaderMap.set(this, header);\n        if (trackData) {\n            var nameEvent = trackData.find(function (e) { return e.type === \"trackName\"; });\n            this.name = nameEvent ? nameEvent.text : \"\";\n        }\n        this.instrument = new Instrument_1.Instrument(trackData, this);\n        // defaults to 0\n        this.channel = 0;\n        if (trackData) {\n            var noteOns = trackData.filter(function (event) { return event.type === \"noteOn\"; });\n            var noteOffs = trackData.filter(function (event) { return event.type === \"noteOff\"; });\n            var _loop_1 = function () {\n                var currentNote = noteOns.shift();\n                // set the channel based on the note\n                this_1.channel = currentNote.channel;\n                // find the corresponding note off\n                var offIndex = noteOffs.findIndex(function (note) {\n                    return note.noteNumber === currentNote.noteNumber &&\n                        note.absoluteTime >= currentNote.absoluteTime;\n                });\n                if (offIndex !== -1) {\n                    // once it's got the note off, add it\n                    var noteOff = noteOffs.splice(offIndex, 1)[0];\n                    this_1.addNote({\n                        durationTicks: noteOff.absoluteTime - currentNote.absoluteTime,\n                        midi: currentNote.noteNumber,\n                        noteOffVelocity: noteOff.velocity / 127,\n                        ticks: currentNote.absoluteTime,\n                        velocity: currentNote.velocity / 127,\n                    });\n                }\n            };\n            var this_1 = this;\n            while (noteOns.length) {\n                _loop_1();\n            }\n            var controlChanges = trackData.filter(function (event) { return event.type === \"controller\"; });\n            controlChanges.forEach(function (event) {\n                _this.addCC({\n                    number: event.controllerType,\n                    ticks: event.absoluteTime,\n                    value: event.value / 127,\n                });\n            });\n            var pitchBends = trackData.filter(function (event) { return event.type === \"pitchBend\"; });\n            pitchBends.forEach(function (event) {\n                _this.addPitchBend({\n                    ticks: event.absoluteTime,\n                    // scale the value between -2^13 to 2^13 to -2 to 2\n                    value: event.value / Math.pow(2, 13),\n                });\n            });\n            var endOfTrackEvent = trackData.find(function (event) {\n                return event.type === \"endOfTrack\";\n            });\n            this.endOfTrackTicks =\n                endOfTrackEvent !== undefined\n                    ? endOfTrackEvent.absoluteTime\n                    : undefined;\n        }\n    }\n    /**\n     * Add a note to the notes array\n     * @param props The note properties to add\n     */\n    Track.prototype.addNote = function (props) {\n        var header = privateHeaderMap.get(this);\n        var note = new Note_1.Note({\n            midi: 0,\n            ticks: 0,\n            velocity: 1,\n        }, {\n            ticks: 0,\n            velocity: 0,\n        }, header);\n        Object.assign(note, props);\n        BinarySearch_1.insert(this.notes, note, \"ticks\");\n        return this;\n    };\n    /**\n     * Add a control change to the track\n     * @param props\n     */\n    Track.prototype.addCC = function (props) {\n        var header = privateHeaderMap.get(this);\n        var cc = new ControlChange_1.ControlChange({\n            controllerType: props.number,\n        }, header);\n        delete props.number;\n        Object.assign(cc, props);\n        if (!Array.isArray(this.controlChanges[cc.number])) {\n            this.controlChanges[cc.number] = [];\n        }\n        BinarySearch_1.insert(this.controlChanges[cc.number], cc, \"ticks\");\n        return this;\n    };\n    /**\n     * Add a control change to the track\n     */\n    Track.prototype.addPitchBend = function (props) {\n        var header = privateHeaderMap.get(this);\n        var pb = new PitchBend_1.PitchBend({}, header);\n        Object.assign(pb, props);\n        BinarySearch_1.insert(this.pitchBends, pb, \"ticks\");\n        return this;\n    };\n    Object.defineProperty(Track.prototype, \"duration\", {\n        /**\n         * The end time of the last event in the track\n         */\n        get: function () {\n            if (!this.notes.length) {\n                return 0;\n            }\n            var maxDuration = this.notes[this.notes.length - 1].time +\n                this.notes[this.notes.length - 1].duration;\n            for (var i = 0; i < this.notes.length - 1; i++) {\n                var duration = this.notes[i].time + this.notes[i].duration;\n                if (maxDuration < duration) {\n                    maxDuration = duration;\n                }\n            }\n            return maxDuration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Track.prototype, \"durationTicks\", {\n        /**\n         * The end time of the last event in the track in ticks\n         */\n        get: function () {\n            if (!this.notes.length) {\n                return 0;\n            }\n            var maxDuration = this.notes[this.notes.length - 1].ticks +\n                this.notes[this.notes.length - 1].durationTicks;\n            for (var i = 0; i < this.notes.length - 1; i++) {\n                var duration = this.notes[i].ticks + this.notes[i].durationTicks;\n                if (maxDuration < duration) {\n                    maxDuration = duration;\n                }\n            }\n            return maxDuration;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Assign the json values to this track\n     */\n    Track.prototype.fromJSON = function (json) {\n        var _this = this;\n        this.name = json.name;\n        this.channel = json.channel;\n        this.instrument = new Instrument_1.Instrument(undefined, this);\n        this.instrument.fromJSON(json.instrument);\n        if (json.endOfTrackTicks !== undefined) {\n            this.endOfTrackTicks = json.endOfTrackTicks;\n        }\n        for (var number in json.controlChanges) {\n            if (json.controlChanges[number]) {\n                json.controlChanges[number].forEach(function (cc) {\n                    _this.addCC({\n                        number: cc.number,\n                        ticks: cc.ticks,\n                        value: cc.value,\n                    });\n                });\n            }\n        }\n        json.notes.forEach(function (n) {\n            _this.addNote({\n                durationTicks: n.durationTicks,\n                midi: n.midi,\n                ticks: n.ticks,\n                velocity: n.velocity,\n            });\n        });\n    };\n    /**\n     * Convert the track into a JSON format\n     */\n    Track.prototype.toJSON = function () {\n        // convert all the CCs to JSON\n        var controlChanges = {};\n        for (var i = 0; i < 127; i++) {\n            if (this.controlChanges.hasOwnProperty(i)) {\n                controlChanges[i] = this.controlChanges[i].map(function (c) {\n                    return c.toJSON();\n                });\n            }\n        }\n        var json = {\n            channel: this.channel,\n            controlChanges: controlChanges,\n            pitchBends: this.pitchBends.map(function (pb) { return pb.toJSON(); }),\n            instrument: this.instrument.toJSON(),\n            name: this.name,\n            notes: this.notes.map(function (n) { return n.toJSON(); }),\n        };\n        if (this.endOfTrackTicks !== undefined) {\n            json.endOfTrackTicks = this.endOfTrackTicks;\n        }\n        return json;\n    };\n    return Track;\n}());\nexports.Track = Track;\n//# sourceMappingURL=Track.js.map","'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = flatten\nmodule.exports.from = flattenFrom\nmodule.exports.depth = flattenDepth\nmodule.exports.fromDepth = flattenFromDepth\n\n/**\n * Flatten an array.\n *\n * @param  {Array} array\n * @return {Array}\n */\nfunction flatten (array) {\n  if (!Array.isArray(array)) {\n    throw new TypeError('Expected value to be an array')\n  }\n\n  return flattenFrom(array)\n}\n\n/**\n * Flatten an array-like structure.\n *\n * @param  {Array} array\n * @return {Array}\n */\nfunction flattenFrom (array) {\n  return flattenDown(array, [])\n}\n\n/**\n * Flatten an array-like structure with depth.\n *\n * @param  {Array}  array\n * @param  {number} depth\n * @return {Array}\n */\nfunction flattenDepth (array, depth) {\n  if (!Array.isArray(array)) {\n    throw new TypeError('Expected value to be an array')\n  }\n\n  return flattenFromDepth(array, depth)\n}\n\n/**\n * Flatten an array-like structure with depth.\n *\n * @param  {Array}  array\n * @param  {number} depth\n * @return {Array}\n */\nfunction flattenFromDepth (array, depth) {\n  if (typeof depth !== 'number') {\n    throw new TypeError('Expected the depth to be a number')\n  }\n\n  return flattenDownDepth(array, [], depth)\n}\n\n/**\n * Flatten an array indefinitely.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenDown (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenDown(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {number} depth\n * @return {Array}\n */\nfunction flattenDownDepth (array, result, depth) {\n  depth--\n\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > -1 && Array.isArray(value)) {\n      flattenDownDepth(value, result, depth)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n","exports.parseMidi = require('./lib/midi-parser')\nexports.writeMidi = require('./lib/midi-writer')\n","// data can be any array-like object.  It just needs to support .length, .slice, and an element getter []\n\nfunction parseMidi(data) {\n  var p = new Parser(data)\n\n  var headerChunk = p.readChunk()\n  if (headerChunk.id != 'MThd')\n    throw \"Bad MIDI file.  Expected 'MHdr', got: '\" + headerChunk.id + \"'\"\n  var header = parseHeader(headerChunk.data)\n\n  var tracks = []\n  for (var i=0; !p.eof() && i < header.numTracks; i++) {\n    var trackChunk = p.readChunk()\n    if (trackChunk.id != 'MTrk')\n      throw \"Bad MIDI file.  Expected 'MTrk', got: '\" + trackChunk.id + \"'\"\n    var track = parseTrack(trackChunk.data)\n    tracks.push(track)\n  }\n\n  return {\n    header: header,\n    tracks: tracks\n  }\n}\n\n\nfunction parseHeader(data) {\n  var p = new Parser(data)\n\n  var format = p.readUInt16()\n  var numTracks = p.readUInt16()\n\n  var result = {\n    format: format,\n    numTracks: numTracks\n  }\n\n  var timeDivision = p.readUInt16()\n  if (timeDivision & 0x8000) {\n    result.framesPerSecond = 0x100 - (timeDivision >> 8)\n    result.ticksPerFrame = timeDivision & 0xFF\n  } else {\n    result.ticksPerBeat = timeDivision\n  }\n\n  return result\n}\n\nfunction parseTrack(data) {\n  var p = new Parser(data)\n\n  var events = []\n  while (!p.eof()) {\n    var event = readEvent()\n    events.push(event)\n  }\n\n  return events\n\n  var lastEventTypeByte = null\n\n  function readEvent() {\n    var event = {}\n    event.deltaTime = p.readVarInt()\n\n    var eventTypeByte = p.readUInt8()\n\n    if ((eventTypeByte & 0xf0) === 0xf0) {\n      // system / meta event\n      if (eventTypeByte === 0xff) {\n        // meta event\n        event.meta = true\n        var metatypeByte = p.readUInt8()\n        var length = p.readVarInt()\n        switch (metatypeByte) {\n          case 0x00:\n            event.type = 'sequenceNumber'\n            if (length !== 2) throw \"Expected length for sequenceNumber event is 2, got \" + length\n            event.number = p.readUInt16()\n            return event\n          case 0x01:\n            event.type = 'text'\n            event.text = p.readString(length)\n            return event\n          case 0x02:\n            event.type = 'copyrightNotice'\n            event.text = p.readString(length)\n            return event\n          case 0x03:\n            event.type = 'trackName'\n            event.text = p.readString(length)\n            return event\n          case 0x04:\n            event.type = 'instrumentName'\n            event.text = p.readString(length)\n            return event\n          case 0x05:\n            event.type = 'lyrics'\n            event.text = p.readString(length)\n            return event\n          case 0x06:\n            event.type = 'marker'\n            event.text = p.readString(length)\n            return event\n          case 0x07:\n            event.type = 'cuePoint'\n            event.text = p.readString(length)\n            return event\n          case 0x20:\n            event.type = 'channelPrefix'\n            if (length != 1) throw \"Expected length for channelPrefix event is 1, got \" + length\n            event.channel = p.readUInt8()\n            return event\n          case 0x21:\n            event.type = 'portPrefix'\n            if (length != 1) throw \"Expected length for portPrefix event is 1, got \" + length\n            event.port = p.readUInt8()\n            return event\n          case 0x2f:\n            event.type = 'endOfTrack'\n            if (length != 0) throw \"Expected length for endOfTrack event is 0, got \" + length\n            return event\n          case 0x51:\n            event.type = 'setTempo';\n            if (length != 3) throw \"Expected length for setTempo event is 3, got \" + length\n            event.microsecondsPerBeat = p.readUInt24()\n            return event\n          case 0x54:\n            event.type = 'smpteOffset';\n            if (length != 5) throw \"Expected length for smpteOffset event is 5, got \" + length\n            var hourByte = p.readUInt8()\n            var FRAME_RATES = { 0x00: 24, 0x20: 25, 0x40: 29, 0x60: 30 }\n            event.frameRate = FRAME_RATES[hourByte & 0x60]\n            event.hour = hourByte & 0x1f\n            event.min = p.readUInt8()\n            event.sec = p.readUInt8()\n            event.frame = p.readUInt8()\n            event.subFrame = p.readUInt8()\n            return event\n          case 0x58:\n            event.type = 'timeSignature'\n            if (length != 4) throw \"Expected length for timeSignature event is 4, got \" + length\n            event.numerator = p.readUInt8()\n            event.denominator = (1 << p.readUInt8())\n            event.metronome = p.readUInt8()\n            event.thirtyseconds = p.readUInt8()\n            return event\n          case 0x59:\n            event.type = 'keySignature'\n            if (length != 2) throw \"Expected length for keySignature event is 2, got \" + length\n            event.key = p.readInt8()\n            event.scale = p.readUInt8()\n            return event\n          case 0x7f:\n            event.type = 'sequencerSpecific'\n            event.data = p.readBytes(length)\n            return event\n          default:\n            event.type = 'unknownMeta'\n            event.data = p.readBytes(length)\n            event.metatypeByte = metatypeByte\n            return event\n        }\n      } else if (eventTypeByte == 0xf0) {\n        event.type = 'sysEx'\n        var length = p.readVarInt()\n        event.data = p.readBytes(length)\n        return event\n      } else if (eventTypeByte == 0xf7) {\n        event.type = 'endSysEx'\n        var length = p.readVarInt()\n        event.data = p.readBytes(length)\n        return event\n      } else {\n        throw \"Unrecognised MIDI event type byte: \" + eventTypeByte\n      }\n    } else {\n      // channel event\n      var param1\n      if ((eventTypeByte & 0x80) === 0) {\n        // running status - reuse lastEventTypeByte as the event type.\n        // eventTypeByte is actually the first parameter\n        if (lastEventTypeByte === null)\n          throw \"Running status byte encountered before status byte\"\n        param1 = eventTypeByte\n        eventTypeByte = lastEventTypeByte\n        event.running = true\n      } else {\n        param1 = p.readUInt8()\n        lastEventTypeByte = eventTypeByte\n      }\n      var eventType = eventTypeByte >> 4\n      event.channel = eventTypeByte & 0x0f\n      switch (eventType) {\n        case 0x08:\n          event.type = 'noteOff'\n          event.noteNumber = param1\n          event.velocity = p.readUInt8()\n          return event\n        case 0x09:\n          var velocity = p.readUInt8()\n          event.type = velocity === 0 ? 'noteOff' : 'noteOn'\n          event.noteNumber = param1\n          event.velocity = velocity\n          if (velocity === 0) event.byte9 = true\n          return event\n        case 0x0a:\n          event.type = 'noteAftertouch'\n          event.noteNumber = param1\n          event.amount = p.readUInt8()\n          return event\n        case 0x0b:\n          event.type = 'controller'\n          event.controllerType = param1\n          event.value = p.readUInt8()\n          return event\n        case 0x0c:\n          event.type = 'programChange'\n          event.programNumber = param1\n          return event\n        case 0x0d:\n          event.type = 'channelAftertouch'\n          event.amount = param1\n          return event\n        case 0x0e:\n          event.type = 'pitchBend'\n          event.value = (param1 + (p.readUInt8() << 7)) - 0x2000\n          return event\n        default:\n          throw \"Unrecognised MIDI event type: \" + eventType\n      }\n    }\n  }\n}\n\nfunction Parser(data) {\n  this.buffer = data\n  this.bufferLen = this.buffer.length\n  this.pos = 0\n}\n\nParser.prototype.eof = function() {\n  return this.pos >= this.bufferLen\n}\n\nParser.prototype.readUInt8 = function() {\n  var result = this.buffer[this.pos]\n  this.pos += 1\n  return result\n}\n\nParser.prototype.readInt8 = function() {\n  var u = this.readUInt8()\n  if (u & 0x80)\n    return u - 0x100\n  else\n    return u\n}\n\nParser.prototype.readUInt16 = function() {\n  var b0 = this.readUInt8(),\n      b1 = this.readUInt8()\n\n    return (b0 << 8) + b1\n}\n\nParser.prototype.readInt16 = function() {\n  var u = this.readUInt16()\n  if (u & 0x8000)\n    return u - 0x10000\n  else\n    return u\n}\n\nParser.prototype.readUInt24 = function() {\n  var b0 = this.readUInt8(),\n      b1 = this.readUInt8(),\n      b2 = this.readUInt8()\n\n    return (b0 << 16) + (b1 << 8) + b2\n}\n\nParser.prototype.readInt24 = function() {\n  var u = this.readUInt24()\n  if (u & 0x800000)\n    return u - 0x1000000\n  else\n    return u\n}\n\nParser.prototype.readUInt32 = function() {\n  var b0 = this.readUInt8(),\n      b1 = this.readUInt8(),\n      b2 = this.readUInt8(),\n      b3 = this.readUInt8()\n\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3\n}\n\nParser.prototype.readBytes = function(len) {\n  var bytes = this.buffer.slice(this.pos, this.pos + len)\n  this.pos += len\n  return bytes\n}\n\nParser.prototype.readString = function(len) {\n  var bytes = this.readBytes(len)\n  return String.fromCharCode.apply(null, bytes)\n}\n\nParser.prototype.readVarInt = function() {\n  var result = 0\n  while (!this.eof()) {\n    var b = this.readUInt8()\n    if (b & 0x80) {\n      result += (b & 0x7f)\n      result <<= 7\n    } else {\n      // b is last byte\n      return result + b\n    }\n  }\n  // premature eof\n  return result\n}\n\nParser.prototype.readChunk = function() {\n  var id = this.readString(4)\n  var length = this.readUInt32()\n  var data = this.readBytes(length)\n  return {\n    id: id,\n    length: length,\n    data: data\n  }\n}\n\nmodule.exports = parseMidi\n","// data should be the same type of format returned by parseMidi\n// for maximum compatibililty, returns an array of byte values, suitable for conversion to Buffer, Uint8Array, etc.\n\n// opts:\n// - running              reuse previous eventTypeByte when possible, to compress file\n// - useByte9ForNoteOff   use 0x09 for noteOff when velocity is zero\n\nfunction writeMidi(data, opts) {\n  if (typeof data !== 'object')\n    throw 'Invalid MIDI data'\n\n  opts = opts || {}\n\n  var header = data.header || {}\n  var tracks = data.tracks || []\n  var i, len = tracks.length\n\n  var w = new Writer()\n  writeHeader(w, header, len)\n\n  for (i=0; i < len; i++) {\n    writeTrack(w, tracks[i], opts)\n  }\n\n  return w.buffer\n}\n\nfunction writeHeader(w, header, numTracks) {\n  var format = header.format == null ? 1 : header.format\n\n  var timeDivision = 128\n  if (header.timeDivision) {\n    timeDivision = header.timeDivision\n  } else if (header.ticksPerFrame && header.framesPerSecond) {\n    timeDivision = (-(header.framesPerSecond & 0xFF) << 8) | (header.ticksPerFrame & 0xFF)\n  } else if (header.ticksPerBeat) {\n    timeDivision = header.ticksPerBeat & 0x7FFF\n  }\n\n  var h = new Writer()\n  h.writeUInt16(format)\n  h.writeUInt16(numTracks)\n  h.writeUInt16(timeDivision)\n\n  w.writeChunk('MThd', h.buffer)\n}\n\nfunction writeTrack(w, track, opts) {\n  var t = new Writer()\n  var i, len = track.length\n  var eventTypeByte = null\n  for (i=0; i < len; i++) {\n    // Reuse last eventTypeByte when opts.running is set, or event.running is explicitly set on it.\n    // parseMidi will set event.running for each event, so that we can get an exact copy by default.\n    // Explicitly set opts.running to false, to override event.running and never reuse last eventTypeByte.\n    if (opts.running === false || !opts.running && !track[i].running) eventTypeByte = null\n\n    eventTypeByte = writeEvent(t, track[i], eventTypeByte, opts.useByte9ForNoteOff)\n  }\n  w.writeChunk('MTrk', t.buffer)\n}\n\nfunction writeEvent(w, event, lastEventTypeByte, useByte9ForNoteOff) {\n  var type = event.type\n  var deltaTime = event.deltaTime\n  var text = event.text || ''\n  var data = event.data || []\n  var eventTypeByte = null\n  w.writeVarInt(deltaTime)\n\n  switch (type) {\n    // meta events\n    case 'sequenceNumber':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x00)\n      w.writeVarInt(2)\n      w.writeUInt16(event.number)\n      break;\n\n    case 'text':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x01)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'copyrightNotice':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x02)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'trackName':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x03)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'instrumentName':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x04)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'lyrics':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x05)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'marker':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x06)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'cuePoint':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x07)\n      w.writeVarInt(text.length)\n      w.writeString(text)\n      break;\n\n    case 'channelPrefix':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x20)\n      w.writeVarInt(1)\n      w.writeUInt8(event.channel)\n      break;\n\n    case 'portPrefix':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x21)\n      w.writeVarInt(1)\n      w.writeUInt8(event.port)\n      break;\n\n    case 'endOfTrack':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x2F)\n      w.writeVarInt(0)\n      break;\n\n    case 'setTempo':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x51)\n      w.writeVarInt(3)\n      w.writeUInt24(event.microsecondsPerBeat)\n      break;\n\n    case 'smpteOffset':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x54)\n      w.writeVarInt(5)\n      var FRAME_RATES = { 24: 0x00, 25: 0x20, 29: 0x40, 30: 0x60 }\n      var hourByte = (event.hour & 0x1F) | FRAME_RATES[event.frameRate]\n      w.writeUInt8(hourByte)\n      w.writeUInt8(event.min)\n      w.writeUInt8(event.sec)\n      w.writeUInt8(event.frame)\n      w.writeUInt8(event.subFrame)\n      break;\n\n    case 'timeSignature':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x58)\n      w.writeVarInt(4)\n      w.writeUInt8(event.numerator)\n      var denominator = Math.floor((Math.log(event.denominator) / Math.LN2)) & 0xFF\n      w.writeUInt8(denominator)\n      w.writeUInt8(event.metronome)\n      w.writeUInt8(event.thirtyseconds || 8)\n      break;\n\n    case 'keySignature':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x59)\n      w.writeVarInt(2)\n      w.writeInt8(event.key)\n      w.writeUInt8(event.scale)\n      break;\n\n    case 'sequencerSpecific':\n      w.writeUInt8(0xFF)\n      w.writeUInt8(0x7F)\n      w.writeVarInt(data.length)\n      w.writeBytes(data)\n      break;\n\n    case 'unknownMeta':\n      if (event.metatypeByte != null) {\n        w.writeUInt8(0xFF)\n        w.writeUInt8(event.metatypeByte)\n        w.writeVarInt(data.length)\n        w.writeBytes(data)\n      }\n      break;\n\n    // system-exclusive\n    case 'sysEx':\n      w.writeUInt8(0xF0)\n      w.writeVarInt(data.length)\n      w.writeBytes(data)\n      break;\n\n    case 'endSysEx':\n      w.writeUInt8(0xF7)\n      w.writeVarInt(data.length)\n      w.writeBytes(data)\n      break;\n\n    // channel events\n    case 'noteOff':\n      // Use 0x90 when opts.useByte9ForNoteOff is set and velocity is zero, or when event.byte9 is explicitly set on it.\n      // parseMidi will set event.byte9 for each event, so that we can get an exact copy by default.\n      // Explicitly set opts.useByte9ForNoteOff to false, to override event.byte9 and always use 0x80 for noteOff events.\n      var noteByte = ((useByte9ForNoteOff !== false && event.byte9) || (useByte9ForNoteOff && event.velocity == 0)) ? 0x90 : 0x80\n\n      eventTypeByte = noteByte | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.noteNumber)\n      w.writeUInt8(event.velocity)\n      break;\n\n    case 'noteOn':\n      eventTypeByte = 0x90 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.noteNumber)\n      w.writeUInt8(event.velocity)\n      break;\n\n    case 'noteAftertouch':\n      eventTypeByte = 0xA0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.noteNumber)\n      w.writeUInt8(event.amount)\n      break;\n\n    case 'controller':\n      eventTypeByte = 0xB0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.controllerType)\n      w.writeUInt8(event.value)\n      break;\n\n    case 'programChange':\n      eventTypeByte = 0xC0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.programNumber)\n      break;\n\n    case 'channelAftertouch':\n      eventTypeByte = 0xD0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      w.writeUInt8(event.amount)\n      break;\n\n    case 'pitchBend':\n      eventTypeByte = 0xE0 | event.channel\n      if (eventTypeByte !== lastEventTypeByte) w.writeUInt8(eventTypeByte)\n      var value14 = 0x2000 + event.value\n      var lsb14 = (value14 & 0x7F)\n      var msb14 = (value14 >> 7) & 0x7F\n      w.writeUInt8(lsb14)\n      w.writeUInt8(msb14)\n    break;\n\n    default:\n      throw 'Unrecognized event type: ' + type\n  }\n  return eventTypeByte\n}\n\n\nfunction Writer() {\n  this.buffer = []\n}\n\nWriter.prototype.writeUInt8 = function(v) {\n  this.buffer.push(v & 0xFF)\n}\nWriter.prototype.writeInt8 = Writer.prototype.writeUInt8\n\nWriter.prototype.writeUInt16 = function(v) {\n  var b0 = (v >> 8) & 0xFF,\n      b1 = v & 0xFF\n\n  this.writeUInt8(b0)\n  this.writeUInt8(b1)\n}\nWriter.prototype.writeInt16 = Writer.prototype.writeUInt16\n\nWriter.prototype.writeUInt24 = function(v) {\n  var b0 = (v >> 16) & 0xFF,\n      b1 = (v >> 8) & 0xFF,\n      b2 = v & 0xFF\n\n  this.writeUInt8(b0)\n  this.writeUInt8(b1)\n  this.writeUInt8(b2)\n}\nWriter.prototype.writeInt24 = Writer.prototype.writeUInt24\n\nWriter.prototype.writeUInt32 = function(v) {\n  var b0 = (v >> 24) & 0xFF,\n      b1 = (v >> 16) & 0xFF,\n      b2 = (v >> 8) & 0xFF,\n      b3 = v & 0xFF\n\n  this.writeUInt8(b0)\n  this.writeUInt8(b1)\n  this.writeUInt8(b2)\n  this.writeUInt8(b3)\n}\nWriter.prototype.writeInt32 = Writer.prototype.writeUInt32\n\n\nWriter.prototype.writeBytes = function(arr) {\n  this.buffer = this.buffer.concat(Array.prototype.slice.call(arr, 0))\n}\n\nWriter.prototype.writeString = function(str) {\n  var i, len = str.length, arr = []\n  for (i=0; i < len; i++) {\n    arr.push(str.codePointAt(i))\n  }\n  this.writeBytes(arr)\n}\n\nWriter.prototype.writeVarInt = function(v) {\n  if (v < 0) throw \"Cannot write negative variable-length integer\"\n\n  if (v <= 0x7F) {\n    this.writeUInt8(v)\n  } else {\n    var i = v\n    var bytes = []\n    bytes.push(i & 0x7F)\n    i >>= 7\n    while (i) {\n      var b = i & 0x7F | 0x80\n      bytes.push(b)\n      i >>= 7\n    }\n    this.writeBytes(bytes.reverse())\n  }\n}\n\nWriter.prototype.writeChunk = function(id, data) {\n  this.writeString(id)\n  this.writeUInt32(data.length)\n  this.writeBytes(data)\n}\n\nmodule.exports = writeMidi\n","/*\n    Project Name : midi-parser-js\n    Project Url  : https://github.com/colxi/midi-parser-js/\n    Author       : colxi\n    Author URL   : http://www.colxi.info/\n    Description  : MidiParser library reads .MID binary files, Base64 encoded MIDI Data,\n    or UInt8 Arrays, and outputs as a readable and structured JS object.\n*/\n\n(function(){\n    'use strict';\n\n    /**\n     * CROSSBROWSER & NODEjs POLYFILL for ATOB() -\n     * By: https://github.com/MaxArt2501 (modified)\n     * @param  {string} string [description]\n     * @return {[type]}        [description]\n     */\n    const _atob = function(string) {\n        // base64 character set, plus padding character (=)\n        let b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        // Regular expression to check formal correctness of base64 encoded strings\n        let b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\n        // remove data type signatures at the begining of the string\n        // eg :  \"data:audio/mid;base64,\"\n        string = string.replace( /^.*?base64,/ , '');\n        // atob can work with strings with whitespaces, even inside the encoded part,\n        // but only \\t, \\n, \\f, \\r and ' ', which can be stripped.\n        string = String(string).replace(/[\\t\\n\\f\\r ]+/g, '');\n        if (!b64re.test(string))\n            throw new TypeError('Failed to execute _atob() : The string to be decoded is not correctly encoded.');\n\n        // Adding the padding if missing, for semplicity\n        string += '=='.slice(2 - (string.length & 3));\n        let bitmap, result = '';\n        let r1, r2, i = 0;\n        for (; i < string.length;) {\n            bitmap = b64.indexOf(string.charAt(i++)) << 18 | b64.indexOf(string.charAt(i++)) << 12\n                    | (r1 = b64.indexOf(string.charAt(i++))) << 6 | (r2 = b64.indexOf(string.charAt(i++)));\n\n            result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255)\n                    : r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255)\n                    : String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);\n        }\n        return result;\n    };\n\n\n    /**\n     * [MidiParser description]\n     * @type {Object}\n     */\n    const MidiParser  = {\n        // debug (bool), when enabled will log in console unimplemented events\n        // warnings and internal handled errors.\n        debug: false,\n\n        /**\n         * [parse description]\n         * @param  {[type]} input     [description]\n         * @param  {[type]} _callback [description]\n         * @return {[type]}           [description]\n         */\n        parse: function(input, _callback){\n            if(input instanceof Uint8Array) return MidiParser.Uint8(input);\n            else if(typeof input === 'string') return MidiParser.Base64(input);\n            else if(input instanceof HTMLElement && input.type === 'file') return MidiParser.addListener(input , _callback);\n            else throw new Error('MidiParser.parse() : Invalid input provided');\n        },\n\n        /**\n         * addListener() should be called in order attach a listener to the INPUT HTML element\n         * that will provide the binary data automating the conversion, and returning\n         * the structured data to the provided callback function.\n         */\n        addListener: function(_fileElement, _callback){\n            if(!File || !FileReader) throw new Error('The File|FileReader APIs are not supported in this browser. Use instead MidiParser.Base64() or MidiParser.Uint8()');\n\n            // validate provided element\n            if( _fileElement === undefined ||\n                !(_fileElement instanceof HTMLElement) ||\n                _fileElement.tagName !== 'INPUT' ||\n                _fileElement.type.toLowerCase() !== 'file' \n            ){\n                console.warn('MidiParser.addListener() : Provided element is not a valid FILE INPUT element');\n                return false;\n            }\n            _callback = _callback || function(){};\n\n            _fileElement.addEventListener('change', function(InputEvt){             // set the 'file selected' event handler\n                if (!InputEvt.target.files.length) return false;                    // return false if no elements where selected\n                console.log('MidiParser.addListener() : File detected in INPUT ELEMENT processing data..');\n                let reader = new FileReader();                                      // prepare the file Reader\n                reader.readAsArrayBuffer(InputEvt.target.files[0]);                 // read the binary data\n                reader.onload =  function(e){\n                    _callback( MidiParser.Uint8(new Uint8Array(e.target.result)));  // encode data with Uint8Array and call the parser\n                };\n            });\n        },\n\n        /**\n         * Base64() : convert baset4 string into uint8 array buffer, before performing the\n         * parsing subroutine.\n         */\n        Base64 : function(b64String){\n            b64String = String(b64String);\n\n            let raw = _atob(b64String);\n            let rawLength = raw.length;\n            let t_array = new Uint8Array(new ArrayBuffer(rawLength));\n\n            for(let i=0; i<rawLength; i++) t_array[i] = raw.charCodeAt(i);\n            return  MidiParser.Uint8(t_array) ;\n        },\n\n        /**\n         * parse() : function reads the binary data, interpreting and spliting each chuck\n         * and parsing it to a structured Object. When job is finised returns the object\n         * or 'false' if any error was generated.\n         */\n        Uint8: function(FileAsUint8Array){\n            let file = {\n                data: null,\n                pointer: 0,\n                movePointer: function(_bytes){                                      // move the pointer negative and positive direction\n                    this.pointer += _bytes;\n                    return this.pointer;\n                },\n                readInt: function(_bytes){                                          // get integer from next _bytes group (big-endian)\n                    _bytes = Math.min(_bytes, this.data.byteLength-this.pointer);\n                    if (_bytes < 1) return -1;                                                                      // EOF\n                    let value = 0;\n                    if(_bytes > 1){\n                        for(let i=1; i<= (_bytes-1); i++){\n                            value += this.data.getUint8(this.pointer) * Math.pow(256, (_bytes - i));\n                            this.pointer++;\n                        }\n                    }\n                    value += this.data.getUint8(this.pointer);\n                    this.pointer++;\n                    return value;\n                },\n                readStr: function(_bytes){                                          // read as ASCII chars, the followoing _bytes\n                    let text = '';\n                    for(let char=1; char <= _bytes; char++) text +=  String.fromCharCode(this.readInt(1));\n                    return text;\n                },\n                readIntVLV: function(){                                             // read a variable length value\n                    let value = 0;\n                    if ( this.pointer >= this.data.byteLength ){\n                        return -1;                                                  // EOF\n                    }else if(this.data.getUint8(this.pointer) < 128){               // ...value in a single byte\n                        value = this.readInt(1);\n                    }else{                                                          // ...value in multiple bytes\n                        let FirstBytes = [];\n                        while(this.data.getUint8(this.pointer) >= 128){\n                            FirstBytes.push(this.readInt(1) - 128);\n                        }\n                        let lastByte  = this.readInt(1);\n                        for(let dt = 1; dt <= FirstBytes.length; dt++){\n                            value += FirstBytes[FirstBytes.length - dt] * Math.pow(128, dt);\n                        }\n                        value += lastByte;\n                    }\n                    return value;\n                }\n            };\n\n            file.data = new DataView(FileAsUint8Array.buffer, FileAsUint8Array.byteOffset, FileAsUint8Array.byteLength);                                            // 8 bits bytes file data array\n            //  ** read FILE HEADER\n            if(file.readInt(4) !== 0x4D546864){\n                console.warn('Header validation failed (not MIDI standard or file corrupt.)');\n                return false;                                                       // Header validation failed (not MIDI standard or file corrupt.)\n            }\n            let headerSize          = file.readInt(4);                              // header size (unused var), getted just for read pointer movement\n            let MIDI                = {};                                           // create new midi object\n            MIDI.formatType         = file.readInt(2);                              // get MIDI Format Type\n            MIDI.tracks             = file.readInt(2);                              // get ammount of track chunks\n            MIDI.track              = [];                                           // create array key for track data storing\n            let timeDivisionByte1   = file.readInt(1);                              // get Time Division first byte\n            let timeDivisionByte2   = file.readInt(1);                              // get Time Division second byte\n            if(timeDivisionByte1 >= 128){                                           // discover Time Division mode (fps or tpf)\n                MIDI.timeDivision    = [];\n                MIDI.timeDivision[0] = timeDivisionByte1 - 128;                     // frames per second MODE  (1st byte)\n                MIDI.timeDivision[1] = timeDivisionByte2;                           // ticks in each frame     (2nd byte)\n            }else MIDI.timeDivision  = (timeDivisionByte1 * 256) + timeDivisionByte2;// else... ticks per beat MODE  (2 bytes value)\n\n            //  ** read TRACK CHUNK\n            for(let t=1; t <= MIDI.tracks; t++){\n                MIDI.track[t-1]     = {event: []};                                  // create new Track entry in Array\n                let headerValidation = file.readInt(4);\n                if ( headerValidation === -1 ) break;                               // EOF\n                if(headerValidation !== 0x4D54726B) return false;                   // Track chunk header validation failed.\n                file.readInt(4);                                                    // move pointer. get chunk size (bytes length)\n                let e               = 0;                                            // init event counter\n                let endOfTrack      = false;                                        // FLAG for track reading secuence breaking\n                // ** read EVENT CHUNK\n                let statusByte;\n                let laststatusByte;\n                while(!endOfTrack){\n                    e++;                                                            // increase by 1 event counter\n                    MIDI.track[t-1].event[e-1] = {};                                // create new event object, in events array\n                    MIDI.track[t-1].event[e-1].deltaTime  = file.readIntVLV();      // get DELTA TIME OF MIDI event (Variable Length Value)\n                    statusByte = file.readInt(1);                                   // read EVENT TYPE (STATUS BYTE)\n                    if(statusByte === -1) break;                                    // EOF\n                    else if(statusByte >= 128) laststatusByte = statusByte;         // NEW STATUS BYTE DETECTED\n                    else{                                                           // 'RUNNING STATUS' situation detected\n                        statusByte = laststatusByte;                                // apply last loop, Status Byte\n                        file.movePointer(-1);                                       // move back the pointer (cause readed byte is not status byte)\n                    }\n\n\n                    //\n                    // ** IS META EVENT\n                    //\n                    if(statusByte === 0xFF){                                        // Meta Event type\n                        MIDI.track[t-1].event[e-1].type = 0xFF;                     // assign metaEvent code to array\n                        MIDI.track[t-1].event[e-1].metaType =  file.readInt(1);     // assign metaEvent subtype\n                        let metaEventLength = file.readIntVLV();                    // get the metaEvent length\n                        switch(MIDI.track[t-1].event[e-1].metaType){\n                            case 0x2F:                                              // end of track, has no data byte\n                            case -1:                                                // EOF\n                                endOfTrack = true;                                  // change FLAG to force track reading loop breaking\n                                break;\n                            case 0x01:                                              // Text Event\n                            case 0x02:                                              // Copyright Notice\n                            case 0x03:\n                            case 0x04:                                              // Instrument Name\n                            case 0x05:                                              // Lyrics)\n                            case 0x07:                                              // Cue point                                         // Sequence/Track Name (documentation: http://www.ta7.de/txt/musik/musi0006.htm)\n                            case 0x06:                                              // Marker\n                                MIDI.track[t-1].event[e-1].data = file.readStr(metaEventLength);\n                                break;\n                            case 0x21:                                              // MIDI PORT\n                            case 0x59:                                              // Key Signature\n                            case 0x51:                                              // Set Tempo\n                                MIDI.track[t-1].event[e-1].data = file.readInt(metaEventLength);\n                                break;\n                            case 0x54:                                              // SMPTE Offset\n                                MIDI.track[t-1].event[e-1].data    = [];\n                                MIDI.track[t-1].event[e-1].data[0] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[1] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[2] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[3] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[4] = file.readInt(1);\n                                break;\n                            case 0x58:                                              // Time Signature\n                                MIDI.track[t-1].event[e-1].data    = [];\n                                MIDI.track[t-1].event[e-1].data[0] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[1] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[2] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[3] = file.readInt(1);\n                                break;\n                            default :\n                                // if user provided a custom interpreter, call it\n                                // and assign to event the returned data\n                                if( this.customInterpreter !== null){\n                                    MIDI.track[t-1].event[e-1].data = this.customInterpreter( MIDI.track[t-1].event[e-1].metaType, file, metaEventLength);\n                                }\n                                // if no customInterpretr is provided, or returned\n                                // false (=apply default), perform default action\n                                if(this.customInterpreter === null || MIDI.track[t-1].event[e-1].data === false){\n                                    file.readInt(metaEventLength);\n                                    MIDI.track[t-1].event[e-1].data = file.readInt(metaEventLength);\n                                    if (this.debug) console.info('Unimplemented 0xFF meta event! data block readed as Integer');\n                                }\n                        }\n                    }\n\n                    //\n                    // IS REGULAR EVENT\n                    //\n                    else{                                                           // MIDI Control Events OR System Exclusive Events\n                        statusByte = statusByte.toString(16).split('');             // split the status byte HEX representation, to obtain 4 bits values\n                        if(!statusByte[1]) statusByte.unshift('0');                 // force 2 digits\n                        MIDI.track[t-1].event[e-1].type = parseInt(statusByte[0], 16);// first byte is EVENT TYPE ID\n                        MIDI.track[t-1].event[e-1].channel = parseInt(statusByte[1], 16);// second byte is channel\n                        switch(MIDI.track[t-1].event[e-1].type){\n                            case 0xF:{                                              // System Exclusive Events\n\n                                // if user provided a custom interpreter, call it\n                                // and assign to event the returned data\n                                if( this.customInterpreter !== null){\n                                    MIDI.track[t-1].event[e-1].data = this.customInterpreter( MIDI.track[t-1].event[e-1].type, file , false);\n                                }\n\n                                // if no customInterpretr is provided, or returned\n                                // false (=apply default), perform default action\n                                if(this.customInterpreter === null || MIDI.track[t-1].event[e-1].data === false){\n                                    let event_length = file.readIntVLV();\n                                    MIDI.track[t-1].event[e-1].data = file.readInt(event_length);\n                                    if (this.debug) console.info('Unimplemented 0xF exclusive events! data block readed as Integer');\n                                }\n                                break;\n                            }\n                            case 0xA:                                               // Note Aftertouch\n                            case 0xB:                                               // Controller\n                            case 0xE:                                               // Pitch Bend Event\n                            case 0x8:                                               // Note off\n                            case 0x9:                                               // Note On\n                                MIDI.track[t-1].event[e-1].data = [];\n                                MIDI.track[t-1].event[e-1].data[0] = file.readInt(1);\n                                MIDI.track[t-1].event[e-1].data[1] = file.readInt(1);\n                                break;\n                            case 0xC:                                               // Program Change\n                            case 0xD:                                               // Channel Aftertouch\n                                MIDI.track[t-1].event[e-1].data = file.readInt(1);\n                                break;\n                            case -1:                                                // EOF\n                                endOfTrack = true;                                  // change FLAG to force track reading loop breaking\n                                break;\n                            default:\n                                // if user provided a custom interpreter, call it\n                                // and assign to event the returned data\n                                if( this.customInterpreter !== null){\n                                    MIDI.track[t-1].event[e-1].data = this.customInterpreter( MIDI.track[t-1].event[e-1].metaType, file , false);\n                                }\n\n                                // if no customInterpretr is provided, or returned\n                                // false (=apply default), perform default action\n                                if(this.customInterpreter === null || MIDI.track[t-1].event[e-1].data === false){\n                                    console.log('Unknown EVENT detected... reading cancelled!');\n                                    return false;\n                                }\n                        }\n                    }\n                }\n            }\n            return MIDI;\n        },\n\n        /**\n         * custom function to handle unimplemented, or custom midi messages.\n         * If message is a meta-event, the value of metaEventLength will be >0.\n         * Function must return the value to store, and pointer of dataView needs\n         * to be manually increased\n         * If you want default action to be performed, return false\n         */\n        customInterpreter : null // function( e_type , arrayByffer, metaEventLength){ return e_data_int }\n    };\n\n\n    // if running in NODE export module\n    if(typeof module !== 'undefined') module.exports = MidiParser;\n    else{\n        // if running in Browser, set a global variable.\n        let _global = typeof window === 'object' && window.self === window && window ||\n                    typeof self === 'object' && self.self === self && self ||\n                    typeof global === 'object' && global.global === global && global;\n\n        _global.MidiParser = MidiParser;\n    }\n\n\n    \n})();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Lookup for many MIDI specifications.\n *\n * @module fileFormats/Midi\n * @see https://soundprogramming.net/file-formats/\n */\n\n\n\n/**\n * @typedef {object} MidiNote A MIDI note\n * @property {number} pitch the MIDI note number e.g. 60 for C4\n * @property {string} name e.g. C#\n * @property {number} octave number in [-1, 9]\n * @property {string} label name and octave, e.g. C#5\n * @property {number} frequency physical frequency\n * @example <caption>Example for a MIDI note</caption>\n *      { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\n */\n\n\nconst MidiNoteByPitch = new Map();\nconst MidiNoteByLabel = new Map();\nconst MidiInstrumentByNumber = new Map();\nconst MidiInstrumentByNumberLev2 = new Map();\n\n/**\n * Returns information on the MIDI note with the specified number.\n *\n * @param {number} nr MIDI note number in [0, 127]\n * @returns {...MidiNote} MIDI note information as a {@link MidiNote}\n */\nexport function getMidiNoteByNr(nr) {\n    return MidiNoteByPitch.get(nr);\n}\n\n/**\n * Returns information on the MIDI note with the specified label.\n *\n * @param {string} label note label, e.g. 'D#0'\n *      (upper-case and sharp notation necessary)\n * @returns {...MidiNote} MIDI note information as a {@link MidiNote}\n */\nexport function getMidiNoteByLabel(label) {\n    return MidiNoteByLabel.get(label);\n}\n\n/**\n * Returns information on the MIDI note with the specified name and octave.\n *\n * @param {string} name note name, e.g. 'D#'\n *      (upper-case and sharp notation necessary)\n * @param {number} octave octave in [-1, 9]\n * @returns {...MidiNote} MIDI note information as a {@link MidiNote}\n */\nexport function getMidiNoteByNameAndOctave(name, octave) {\n    return MidiNoteByLabel.get(`${name}${octave}`);\n}\n\n/**\n * Returns information on the MIDI instrument with the specified number.\n *\n * @param {number} nr MIDI instrument number in [0, 127]\n * @returns {object} note info, e.g.\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\n */\nexport function getMidiInstrumentByNr(nr) {\n    return MidiInstrumentByNumber.get(nr);\n}\n\n/**\n * Returns information on the MIDI instrument (MIDI level 2) with the\n * specified number.\n *\n * @param {number} nr MIDI instrument number in [0, 127]\n * @param {number} subNr MIDI instrument sub number in [0, 127]\n * @returns {object} note info, e.g.\n *      { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' }\n */\nexport function getMidiInstrumentByNrL2(nr, subNr) {\n    const key = `${nr}-${subNr}`;\n    return MidiInstrumentByNumberLev2.get(key);\n}\n\n/**\n * Returns information on the MIDI instrument with the specified number.\n *\n * @param {number} nr MIDI drum note number in [27, 87]\n * @returns {string} note name, e.g. 'Bass Drum 1\n */\nexport function getMidiDrumNoteByNr(nr) {\n    return GENERAL_MIDI_DRUM_NOTE_NUMBERS.get(nr);\n}\n\n/**\n * Returns true if a given MIDI pitch refers to a sharp note.\n *\n * @param {number} nr MIDI note number in [0, 127]\n * @returns {boolean} true if sharp, false otherwise\n */\nexport function isSharp(nr) {\n    return SHARPS.has(nr);\n}\n\n/**\n * Returns a note name such as 'C#' (without octave) for a given MIDI\n * note number.\n *\n * @param {number} nr MIDI note number in [0, 127]\n * @returns {string} note name such as 'C#'\n */\nexport function getNoteNameFromNoteNr(nr) {\n    return NOTE_NAMES[nr % 12];\n}\n\n/**\n * Maps flats to sharps, e.g. flatToSharp.get('Db') === 'C#'\n *\n * @type {Map<string,string>}\n */\nexport const flatToSharp = new Map([\n    ['Cb', 'B'],\n    ['Db', 'C#'],\n    ['Eb', 'D#'],\n    ['Fb', 'E'],\n    ['Gb', 'F#'],\n    ['Ab', 'G#'],\n    ['Bb', 'A#'],\n]);\n\n/**\n * Maps shaprs to flats, e.g. sharpToFlat.get('C#') === 'Db'\n *\n * @type {Map<string,string>}\n */\nexport const sharpToFlat = new Map([\n    ['C#', 'Db'],\n    ['D#', 'Eb'],\n    ['E#', 'F'],\n    ['F#', 'Gb'],\n    ['G#', 'Ab'],\n    ['A#', 'Bb'],\n    ['B#', 'C'],\n]);\n\n/**\n * Names of notes, indexed like MIDI numbers, i.e. C is 0\n *\n * @type {string[]}\n */\nexport const NOTE_NAMES = [\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n    'A',\n    'A#',\n    'B',\n];\n\n/**\n * Index equals MIDI note number\n *\n * @type {Array<MidiNote>}\n */\nexport const MIDI_NOTES = [\n    { pitch: 0, name: 'C', octave: -1, label: 'C-1', frequency: 8.176 },\n    { pitch: 1, name: 'C#', octave: -1, label: 'C#-1', frequency: 8.662 },\n    { pitch: 2, name: 'D', octave: -1, label: 'D-1', frequency: 9.177 },\n    { pitch: 3, name: 'D#', octave: -1, label: 'D#-1', frequency: 9.723 },\n    { pitch: 4, name: 'E', octave: -1, label: 'E-1', frequency: 10.301 },\n    { pitch: 5, name: 'F', octave: -1, label: 'F-1', frequency: 10.913 },\n    { pitch: 6, name: 'F#', octave: -1, label: 'F#-1', frequency: 11.562 },\n    { pitch: 7, name: 'G', octave: -1, label: 'G-1', frequency: 12.25 },\n    { pitch: 8, name: 'G#', octave: -1, label: 'G#-1', frequency: 12.978 },\n    { pitch: 9, name: 'A', octave: -1, label: 'A-1', frequency: 13.75 },\n    { pitch: 10, name: 'A#', octave: -1, label: 'A#-1', frequency: 14.568 },\n    { pitch: 11, name: 'B', octave: -1, label: 'B-1', frequency: 15.434 },\n    { pitch: 12, name: 'C', octave: 0, label: 'C0', frequency: 16.352 },\n    { pitch: 13, name: 'C#', octave: 0, label: 'C#0', frequency: 17.324 },\n    { pitch: 14, name: 'D', octave: 0, label: 'D0', frequency: 18.354 },\n    { pitch: 15, name: 'D#', octave: 0, label: 'D#0', frequency: 19.445 },\n    { pitch: 16, name: 'E', octave: 0, label: 'E0', frequency: 20.602 },\n    { pitch: 17, name: 'F', octave: 0, label: 'F0', frequency: 21.827 },\n    { pitch: 18, name: 'F#', octave: 0, label: 'F#0', frequency: 23.125 },\n    { pitch: 19, name: 'G', octave: 0, label: 'G0', frequency: 24.5 },\n    { pitch: 20, name: 'G#', octave: 0, label: 'G#0', frequency: 25.957 },\n    { pitch: 21, name: 'A', octave: 0, label: 'A0', frequency: 27.5 },\n    { pitch: 22, name: 'A#', octave: 0, label: 'A#0', frequency: 29.135 },\n    { pitch: 23, name: 'B', octave: 0, label: 'B0', frequency: 30.868 },\n    { pitch: 24, name: 'C', octave: 1, label: 'C1', frequency: 32.703 },\n    { pitch: 25, name: 'C#', octave: 1, label: 'C#1', frequency: 34.648 },\n    { pitch: 26, name: 'D', octave: 1, label: 'D1', frequency: 36.708 },\n    { pitch: 27, name: 'D#', octave: 1, label: 'D#1', frequency: 38.891 },\n    { pitch: 28, name: 'E', octave: 1, label: 'E1', frequency: 41.203 },\n    { pitch: 29, name: 'F', octave: 1, label: 'F1', frequency: 43.654 },\n    { pitch: 30, name: 'F#', octave: 1, label: 'F#1', frequency: 46.249 },\n    { pitch: 31, name: 'G', octave: 1, label: 'G1', frequency: 48.999 },\n    { pitch: 32, name: 'G#', octave: 1, label: 'G#1', frequency: 51.913 },\n    { pitch: 33, name: 'A', octave: 1, label: 'A1', frequency: 55 },\n    { pitch: 34, name: 'A#', octave: 1, label: 'A#1', frequency: 58.27 },\n    { pitch: 35, name: 'B', octave: 1, label: 'B1', frequency: 61.735 },\n    { pitch: 36, name: 'C', octave: 2, label: 'C2', frequency: 65.406 },\n    { pitch: 37, name: 'C#', octave: 2, label: 'C#2', frequency: 69.296 },\n    { pitch: 38, name: 'D', octave: 2, label: 'D2', frequency: 73.416 },\n    { pitch: 39, name: 'D#', octave: 2, label: 'D#2', frequency: 77.782 },\n    { pitch: 40, name: 'E', octave: 2, label: 'E2', frequency: 82.407 },\n    { pitch: 41, name: 'F', octave: 2, label: 'F2', frequency: 87.307 },\n    { pitch: 42, name: 'F#', octave: 2, label: 'F#2', frequency: 92.499 },\n    { pitch: 43, name: 'G', octave: 2, label: 'G2', frequency: 97.999 },\n    { pitch: 44, name: 'G#', octave: 2, label: 'G#2', frequency: 103.826 },\n    { pitch: 45, name: 'A', octave: 2, label: 'A2', frequency: 110 },\n    { pitch: 46, name: 'A#', octave: 2, label: 'A#2', frequency: 116.541 },\n    { pitch: 47, name: 'B', octave: 2, label: 'B2', frequency: 123.471 },\n    { pitch: 48, name: 'C', octave: 3, label: 'C3', frequency: 130.813 },\n    { pitch: 49, name: 'C#', octave: 3, label: 'C#3', frequency: 138.591 },\n    { pitch: 50, name: 'D', octave: 3, label: 'D3', frequency: 146.832 },\n    { pitch: 51, name: 'D#', octave: 3, label: 'D#3', frequency: 155.563 },\n    { pitch: 52, name: 'E', octave: 3, label: 'E3', frequency: 164.814 },\n    { pitch: 53, name: 'F', octave: 3, label: 'F3', frequency: 174.614 },\n    { pitch: 54, name: 'F#', octave: 3, label: 'F#3', frequency: 184.997 },\n    { pitch: 55, name: 'G', octave: 3, label: 'G3', frequency: 195.998 },\n    { pitch: 56, name: 'G#', octave: 3, label: 'G#3', frequency: 207.652 },\n    { pitch: 57, name: 'A', octave: 3, label: 'A3', frequency: 220 },\n    { pitch: 58, name: 'A#', octave: 3, label: 'A#3', frequency: 233.082 },\n    { pitch: 59, name: 'B', octave: 3, label: 'B3', frequency: 246.942 },\n    { pitch: 60, name: 'C', octave: 4, label: 'C4', frequency: 261.626 },\n    { pitch: 61, name: 'C#', octave: 4, label: 'C#4', frequency: 277.183 },\n    { pitch: 62, name: 'D', octave: 4, label: 'D4', frequency: 293.665 },\n    { pitch: 63, name: 'D#', octave: 4, label: 'D#4', frequency: 311.127 },\n    { pitch: 64, name: 'E', octave: 4, label: 'E4', frequency: 329.628 },\n    { pitch: 65, name: 'F', octave: 4, label: 'F4', frequency: 349.228 },\n    { pitch: 66, name: 'F#', octave: 4, label: 'F#4', frequency: 369.994 },\n    { pitch: 67, name: 'G', octave: 4, label: 'G4', frequency: 391.995 },\n    { pitch: 68, name: 'G#', octave: 4, label: 'G#4', frequency: 415.305 },\n    { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440 },\n    { pitch: 70, name: 'A#', octave: 4, label: 'A#4', frequency: 466.164 },\n    { pitch: 71, name: 'B', octave: 4, label: 'B4', frequency: 493.883 },\n    { pitch: 72, name: 'C', octave: 5, label: 'C5', frequency: 523.251 },\n    { pitch: 73, name: 'C#', octave: 5, label: 'C#5', frequency: 554.365 },\n    { pitch: 74, name: 'D', octave: 5, label: 'D5', frequency: 587.33 },\n    { pitch: 75, name: 'D#', octave: 5, label: 'D#5', frequency: 622.254 },\n    { pitch: 76, name: 'E', octave: 5, label: 'E5', frequency: 659.255 },\n    { pitch: 77, name: 'F', octave: 5, label: 'F5', frequency: 698.456 },\n    { pitch: 78, name: 'F#', octave: 5, label: 'F#5', frequency: 739.989 },\n    { pitch: 79, name: 'G', octave: 5, label: 'G5', frequency: 783.991 },\n    { pitch: 80, name: 'G#', octave: 5, label: 'G#5', frequency: 830.609 },\n    { pitch: 81, name: 'A', octave: 5, label: 'A5', frequency: 880 },\n    { pitch: 82, name: 'A#', octave: 5, label: 'A#5', frequency: 932.328 },\n    { pitch: 83, name: 'B', octave: 5, label: 'B5', frequency: 987.767 },\n    { pitch: 84, name: 'C', octave: 6, label: 'C6', frequency: 1046.502 },\n    { pitch: 85, name: 'C#', octave: 6, label: 'C#6', frequency: 1108.731 },\n    { pitch: 86, name: 'D', octave: 6, label: 'D6', frequency: 1174.659 },\n    { pitch: 87, name: 'D#', octave: 6, label: 'D#6', frequency: 1244.508 },\n    { pitch: 88, name: 'E', octave: 6, label: 'E6', frequency: 1318.51 },\n    { pitch: 89, name: 'F', octave: 6, label: 'F6', frequency: 1396.913 },\n    { pitch: 90, name: 'F#', octave: 6, label: 'F#6', frequency: 1479.978 },\n    { pitch: 91, name: 'G', octave: 6, label: 'G6', frequency: 1567.982 },\n    { pitch: 92, name: 'G#', octave: 6, label: 'G#6', frequency: 1661.219 },\n    { pitch: 93, name: 'A', octave: 6, label: 'A6', frequency: 1760 },\n    { pitch: 94, name: 'A#', octave: 6, label: 'A#6', frequency: 1864.655 },\n    { pitch: 95, name: 'B', octave: 6, label: 'B6', frequency: 1975.533 },\n    { pitch: 96, name: 'C', octave: 7, label: 'C7', frequency: 2093.005 },\n    { pitch: 97, name: 'C#', octave: 7, label: 'C#7', frequency: 2217.461 },\n    { pitch: 98, name: 'D', octave: 7, label: 'D7', frequency: 2349.318 },\n    { pitch: 99, name: 'D#', octave: 7, label: 'D#7', frequency: 2489.016 },\n    { pitch: 100, name: 'E', octave: 7, label: 'E7', frequency: 2637.02 },\n    { pitch: 101, name: 'F', octave: 7, label: 'F7', frequency: 2793.826 },\n    { pitch: 102, name: 'F#', octave: 7, label: 'F#7', frequency: 2959.955 },\n    { pitch: 103, name: 'G', octave: 7, label: 'G7', frequency: 3135.963 },\n    { pitch: 104, name: 'G#', octave: 7, label: 'G#7', frequency: 3322.438 },\n    { pitch: 105, name: 'A', octave: 7, label: 'A7', frequency: 3520 },\n    { pitch: 106, name: 'A#', octave: 7, label: 'A#7', frequency: 3729.31 },\n    { pitch: 107, name: 'B', octave: 7, label: 'B7', frequency: 3951.066 },\n    { pitch: 108, name: 'C', octave: 8, label: 'C8', frequency: 4186.009 },\n    { pitch: 109, name: 'C#', octave: 8, label: 'C#8', frequency: 4434.922 },\n    { pitch: 110, name: 'D', octave: 8, label: 'D8', frequency: 4698.636 },\n    { pitch: 111, name: 'D#', octave: 8, label: 'D#8', frequency: 4978.032 },\n    { pitch: 112, name: 'E', octave: 8, label: 'E8', frequency: 5274.041 },\n    { pitch: 113, name: 'F', octave: 8, label: 'F8', frequency: 5587.652 },\n    { pitch: 114, name: 'F#', octave: 8, label: 'F#8', frequency: 5919.911 },\n    { pitch: 115, name: 'G', octave: 8, label: 'G8', frequency: 6271.927 },\n    { pitch: 116, name: 'G#', octave: 8, label: 'G#8', frequency: 6644.875 },\n    { pitch: 117, name: 'A', octave: 8, label: 'A8', frequency: 7040 },\n    { pitch: 118, name: 'A#', octave: 8, label: 'A#8', frequency: 7458.62 },\n    { pitch: 119, name: 'B', octave: 8, label: 'B8', frequency: 7902.133 },\n    { pitch: 120, name: 'C', octave: 9, label: 'C9', frequency: 8372.018 },\n    { pitch: 121, name: 'C#', octave: 9, label: 'C#9', frequency: 8869.844 },\n    { pitch: 122, name: 'D', octave: 9, label: 'D9', frequency: 9397.273 },\n    { pitch: 123, name: 'D#', octave: 9, label: 'D#9', frequency: 9956.063 },\n    { pitch: 124, name: 'E', octave: 9, label: 'E9', frequency: 10548.08 },\n    { pitch: 125, name: 'F', octave: 9, label: 'F9', frequency: 11175.3 },\n    { pitch: 126, name: 'F#', octave: 9, label: 'F#9', frequency: 11839.82 },\n    { pitch: 127, name: 'G', octave: 9, label: 'G9', frequency: 12543.85 },\n];\n\n/**\n * Set of all MIDI notes that are sharp/flat\n *\n * @type {Set<number>}\n * @example <caption>Find out if a note is sharp/flat</caption>\n *      const midiNr = 42;\n *      const isSharp = Midi.SHARPS.has(midiNr);\n *      // true\n */\nexport const SHARPS = new Set([\n    1,\n    3,\n    6,\n    8,\n    10,\n    13,\n    15,\n    18,\n    20,\n    22,\n    25,\n    27,\n    30,\n    32,\n    34,\n    37,\n    39,\n    42,\n    44,\n    46,\n    49,\n    51,\n    54,\n    56,\n    58,\n    61,\n    63,\n    66,\n    68,\n    70,\n    73,\n    75,\n    78,\n    80,\n    82,\n    85,\n    87,\n    90,\n    92,\n    94,\n    97,\n    99,\n    102,\n    104,\n    106,\n    109,\n    111,\n    114,\n    116,\n    118,\n    121,\n    123,\n    126,\n]);\n\n/**\n * @typedef {object} MidiCommand A MIDI command\n * @property {string} name e.g. 'noteOn'\n * @property {string} description e.g. 'Note-on'\n * @property {string[]|undefined} params additional prameters of that command\n * @example <caption>Example for a MIDI command</caption>\n *      { name: 'noteOn', description: 'Note-on', params: ['key', 'velocity'] }],\n */\n\n/**\n * MIDI commands with code, name, and parameters\n * From: https://ccrma.stanford.edu/~craig/articles/linuxmidi/misc/essenmidi.html\n * https://www.midi.org/specifications/item/table-1-summary-of-midi-message\n *\n * @type {Map<number,MidiCommand>}\n */\nexport const MIDI_COMMANDS = new Map([\n    [0x80, { name: 'noteOff', description: 'Note-off', params: ['key', 'velocity'] }],\n    [0x90, { name: 'noteOn', description: 'Note-on', params: ['key', 'velocity'] }],\n    [0xA0, { name: 'aftertouch', description: 'Aftertouch', params: ['key', 'touch'] }],\n    [0xB0, { name: 'continuousController', description: 'Continuous controller', params: ['controller #', 'controller value'] }],\n    [0xC0, { name: 'patchChange', description: 'Patch change', params: ['instrument number', 'instrument number'] }],\n    [0xD0, { name: 'channelPressure', description: 'Channel Pressure', params: ['pressure'] }],\n    [0xE0, { name: 'pitchBend', description: 'Pitch bend', params: ['lsb (7 bits)', 'msb (7 bits)'] }],\n    [0xF0, { name: 'sysExStart', description: 'start of system exclusive message' }],\n    [0xF1, { name: 'timeCodeQuarter', description: 'MIDI Time Code Quarter Frame (Sys Common)' }],\n    [0xF2, { name: 'posPointer', description: 'Song Position Pointer (Sys Common)' }],\n    [0xF3, { name: 'songSelect', description: 'Song Select (Sys Common)' }],\n    [0xF4, { name: 'unknown1', description: '???' }],\n    [0xF5, { name: 'unknown2', description: '???' }],\n    [0xF6, { name: 'tuneRequest', description: 'Tune Request (Sys Common)' }],\n    [0xF7, { name: 'syExEnd', description: 'end of system exclusive message 0' }],\n    [0xF8, { name: 'timingClock', description: 'Timing Clock (Sys Realtime)' }],\n    [0xFA, { name: 'start', description: 'Start (Sys Realtime)' }],\n    [0xFB, { name: 'continue', description: 'Continue (Sys Realtime)' }],\n    [0xFC, { name: 'stop', description: 'Stop (Sys Realtime)' }],\n    [0xFD, { name: 'unknwon3', description: '???' }],\n    [0xFE, { name: 'activeSensing', description: 'Active Sensing (Sys Realtime)' }],\n    [0xFF, { name: 'systemReset', description: 'System Reset (Sys Realtime)' }],\n]);\n\n/*\n * MIDI instruments with number, group, and label\n */\nconst MIDI_INSTRUMENTS = [\n    { number: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\n    { number: 1, group: 'Piano', label: 'Bright Acoustic Piano' },\n    { number: 2, group: 'Piano', label: 'Electric Grand Piano' },\n    { number: 3, group: 'Piano', label: 'Honky-tonk Piano' },\n    { number: 4, group: 'Piano', label: 'Electric Piano 1' },\n    { number: 5, group: 'Piano', label: 'Electric Piano 2' },\n    { number: 6, group: 'Piano', label: 'Harpsichord' },\n    { number: 7, group: 'Piano', label: 'Clavinet' },\n    { number: 8, group: 'Chromatic Percussion', label: 'Celesta' },\n    { number: 9, group: 'Chromatic Percussion', label: 'Glockenspiel' },\n    { number: 10, group: 'Chromatic Percussion', label: 'Music Box' },\n    { number: 11, group: 'Chromatic Percussion', label: 'Vibraphone' },\n    { number: 12, group: 'Chromatic Percussion', label: 'Marimba' },\n    { number: 13, group: 'Chromatic Percussion', label: 'Xylophone' },\n    { number: 14, group: 'Chromatic Percussion', label: 'Tubular Bells' },\n    { number: 15, group: 'Chromatic Percussion', label: 'Dulcimer' },\n    { number: 16, group: 'Organ', label: 'Drawbar Organ' },\n    { number: 17, group: 'Organ', label: 'Percussive Organ' },\n    { number: 18, group: 'Organ', label: 'Rock Organ' },\n    { number: 19, group: 'Organ', label: 'Church Organ' },\n    { number: 20, group: 'Organ', label: 'Reed Organ' },\n    { number: 21, group: 'Organ', label: 'Accordion' },\n    { number: 22, group: 'Organ', label: 'Harmonica' },\n    { number: 23, group: 'Organ', label: 'Tango Accordion' },\n    { number: 24, group: 'Guitar', label: 'Acoustic Guitar(nylon)' },\n    { number: 25, group: 'Guitar', label: 'Acoustic Guitar(steel)' },\n    { number: 26, group: 'Guitar', label: 'Electric Guitar(jazz)' },\n    { number: 27, group: 'Guitar', label: 'Electric Guitar(clean)' },\n    { number: 28, group: 'Guitar', label: 'Electric Guitar(muted)' },\n    { number: 29, group: 'Guitar', label: 'Overdriven Guitar' },\n    { number: 30, group: 'Guitar', label: 'Distortion Guitar' },\n    { number: 31, group: 'Guitar', label: 'Guitar harmonics' },\n    { number: 32, group: 'Bass', label: 'Acoustic Bass' },\n    { number: 33, group: 'Bass', label: 'Electric Bass(finger)' },\n    { number: 34, group: 'Bass', label: 'Electric Bass(pick)' },\n    { number: 35, group: 'Bass', label: 'Fretless Bass' },\n    { number: 36, group: 'Bass', label: 'Slap Bass 1' },\n    { number: 37, group: 'Bass', label: 'Slap Bass 2' },\n    { number: 38, group: 'Bass', label: 'Synth Bass 1' },\n    { number: 39, group: 'Bass', label: 'Synth Bass 2' },\n    { number: 40, group: 'Strings', label: 'Violin' },\n    { number: 41, group: 'Strings', label: 'Viola' },\n    { number: 42, group: 'Strings', label: 'Cello' },\n    { number: 43, group: 'Strings', label: 'Contrabass' },\n    { number: 44, group: 'Strings', label: 'Tremolo Strings' },\n    { number: 45, group: 'Strings', label: 'Pizzicato Strings' },\n    { number: 46, group: 'Strings', label: 'Orchestral Harp' },\n    { number: 47, group: 'Strings', label: 'Timpani' },\n    { number: 48, group: 'Strings (continued)', label: 'String Ensemble 1' },\n    { number: 49, group: 'Strings (continued)', label: 'String Ensemble 2' },\n    { number: 50, group: 'Strings (continued)', label: 'Synth Strings 1' },\n    { number: 51, group: 'Strings (continued)', label: 'Synth Strings 2' },\n    { number: 52, group: 'Strings (continued)', label: 'Choir Aahs' },\n    { number: 53, group: 'Strings (continued)', label: 'Voice Oohs' },\n    { number: 54, group: 'Strings (continued)', label: 'Synth Voice' },\n    { number: 55, group: 'Strings (continued)', label: 'Orchestra Hit' },\n    { number: 56, group: 'Brass', label: 'Trumpet' },\n    { number: 57, group: 'Brass', label: 'Trombone' },\n    { number: 58, group: 'Brass', label: 'Tuba' },\n    { number: 59, group: 'Brass', label: 'Muted Trumpet' },\n    { number: 60, group: 'Brass', label: 'French Horn' },\n    { number: 61, group: 'Brass', label: 'Brass Section' },\n    { number: 62, group: 'Brass', label: 'Synth Brass 1' },\n    { number: 63, group: 'Brass', label: 'Synth Brass 2' },\n    { number: 64, group: 'Reed', label: 'Soprano Sax' },\n    { number: 65, group: 'Reed', label: 'Alto Sax' },\n    { number: 66, group: 'Reed', label: 'Tenor Sax' },\n    { number: 67, group: 'Reed', label: 'Baritone Sax' },\n    { number: 68, group: 'Reed', label: 'Oboe' },\n    { number: 69, group: 'Reed', label: 'English Horn' },\n    { number: 70, group: 'Reed', label: 'Bassoon' },\n    { number: 71, group: 'Reed', label: 'Clarinet' },\n    { number: 72, group: 'Pipe', label: 'Piccolo' },\n    { number: 73, group: 'Pipe', label: 'Flute' },\n    { number: 74, group: 'Pipe', label: 'Recorder' },\n    { number: 75, group: 'Pipe', label: 'Pan Flute' },\n    { number: 76, group: 'Pipe', label: 'Blown Bottle' },\n    { number: 77, group: 'Pipe', label: 'Shakuhachi' },\n    { number: 78, group: 'Pipe', label: 'Whistle' },\n    { number: 79, group: 'Pipe', label: 'Ocarina' },\n    { number: 80, group: 'Synth Lead', label: 'Lead 1(square)' },\n    { number: 81, group: 'Synth Lead', label: 'Lead 2(sawtooth)' },\n    { number: 82, group: 'Synth Lead', label: 'Lead 3(calliope)' },\n    { number: 83, group: 'Synth Lead', label: 'Lead 4(chiff)' },\n    { number: 84, group: 'Synth Lead', label: 'Lead 5(charang)' },\n    { number: 85, group: 'Synth Lead', label: 'Lead 6(voice)' },\n    { number: 86, group: 'Synth Lead', label: 'Lead 7(fifths)' },\n    { number: 87, group: 'Synth Lead', label: 'Lead 8(bass + lead)' },\n    { number: 88, group: 'Synth Pad', label: 'Pad 1(new age)' },\n    { number: 89, group: 'Synth Pad', label: 'Pad 2(warm)' },\n    { number: 90, group: 'Synth Pad', label: 'Pad 3(polysynth)' },\n    { number: 91, group: 'Synth Pad', label: 'Pad 4(choir)' },\n    { number: 92, group: 'Synth Pad', label: 'Pad 5(bowed)' },\n    { number: 93, group: 'Synth Pad', label: 'Pad 6(metallic)' },\n    { number: 94, group: 'Synth Pad', label: 'Pad 7(halo)' },\n    { number: 95, group: 'Synth Pad', label: 'Pad 8(sweep)' },\n    { number: 96, group: 'Synth Effects', label: 'FX 1(rain)' },\n    { number: 97, group: 'Synth Effects', label: 'FX 2(soundtrack)' },\n    { number: 98, group: 'Synth Effects', label: 'FX 3(crystal)' },\n    { number: 99, group: 'Synth Effects', label: 'FX 4(atmosphere)' },\n    { number: 100, group: 'Synth Effects', label: 'FX 5(brightness)' },\n    { number: 101, group: 'Synth Effects', label: 'FX 6(goblins)' },\n    { number: 102, group: 'Synth Effects', label: 'FX 7(echoes)' },\n    { number: 103, group: 'Synth Effects', label: 'FX 8(sci-fi)' },\n    { number: 104, group: 'Ethnic', label: 'Sitar' },\n    { number: 105, group: 'Ethnic', label: 'Banjo' },\n    { number: 106, group: 'Ethnic', label: 'Shamisen' },\n    { number: 107, group: 'Ethnic', label: 'Koto' },\n    { number: 108, group: 'Ethnic', label: 'Kalimba' },\n    { number: 109, group: 'Ethnic', label: 'Bag pipe' },\n    { number: 110, group: 'Ethnic', label: 'Fiddle' },\n    { number: 111, group: 'Ethnic', label: 'Shanai' },\n    { number: 112, group: 'Percussive', label: 'Tinkle Bell' },\n    { number: 113, group: 'Percussive', label: 'Agogo' },\n    { number: 114, group: 'Percussive', label: 'Steel Drums' },\n    { number: 115, group: 'Percussive', label: 'Woodblock' },\n    { number: 116, group: 'Percussive', label: 'Taiko Drum' },\n    { number: 117, group: 'Percussive', label: 'Melodic Tom' },\n    { number: 118, group: 'Percussive', label: 'Synth Drum' },\n    { number: 119, group: 'Sound Effects', label: 'Reverse Cymbal' },\n    { number: 120, group: 'Sound Effects', label: 'Guitar Fret Noise' },\n    { number: 121, group: 'Sound Effects', label: 'Breath Noise' },\n    { number: 122, group: 'Sound Effects', label: 'Seashore' },\n    { number: 123, group: 'Sound Effects', label: 'Bird Tweet' },\n    { number: 124, group: 'Sound Effects', label: 'Telephone Ring' },\n    { number: 125, group: 'Sound Effects', label: 'Helicopter' },\n    { number: 126, group: 'Sound Effects', label: 'Applause' },\n    { number: 127, group: 'Sound Effects', label: 'Gunshot' },\n];\n\nconst MIDI_INSTRUMENTS_Lev2 = [\n    { number: 1, subnumber: 0, group: 'Piano', label: 'Acoustic Grand Piano' },\n    { number: 1, subnumber: 1, group: 'Piano', label: 'Wide Acoustic Grand' },\n    { number: 1, subnumber: 2, group: 'Piano', label: 'Dark Acoustic Grand' },\n    { number: 2, subnumber: 0, group: 'Piano', label: 'Bright Acoustic Piano' },\n    { number: 2, subnumber: 1, group: 'Piano', label: 'Wide Bright Acoustic' },\n    { number: 3, subnumber: 0, group: 'Piano', label: 'Electric Grand Piano' },\n    { number: 3, subnumber: 1, group: 'Piano', label: 'Wide Electric Grand' },\n    { number: 4, subnumber: 0, group: 'Piano', label: 'Honky-tonk Piano' },\n    { number: 4, subnumber: 1, group: 'Piano', label: 'Wide Honky-tonk' },\n    { number: 5, subnumber: 0, group: 'Piano', label: 'Rhodes Piano' },\n    { number: 5, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 1' },\n    { number: 5, subnumber: 2, group: 'Piano', label: 'Electric Piano 1 Variation' },\n    { number: 5, subnumber: 3, group: 'Piano', label: '60\\'s Electric Piano' },\n    { number: 6, subnumber: 0, group: 'Piano', label: 'Chorused Electric Piano' },\n    { number: 6, subnumber: 1, group: 'Piano', label: 'Detuned Electric Piano 2' },\n    { number: 6, subnumber: 2, group: 'Piano', label: 'Electric Piano 2 Variation' },\n    { number: 6, subnumber: 3, group: 'Piano', label: 'Electric Piano Legend' },\n    { number: 6, subnumber: 4, group: 'Piano', label: 'Electric Piano Phase' },\n    { number: 7, subnumber: 0, group: 'Piano', label: 'Harpsichord' },\n    { number: 7, subnumber: 1, group: 'Piano', label: 'Coupled Harpsichord' },\n    { number: 7, subnumber: 2, group: 'Piano', label: 'Wide Harpsichord' },\n    { number: 7, subnumber: 3, group: 'Piano', label: 'Open Harpsichord' },\n    { number: 8, subnumber: 0, group: 'Piano', label: 'Clavinet' },\n    { number: 8, subnumber: 1, group: 'Piano', label: 'Pulse Clavinet' },\n    { number: 9, subnumber: 0, group: 'Chromatic Percussion', label: 'Celesta' },\n    { number: 10, subnumber: 0, group: 'Chromatic Percussion', label: 'Glockenspiel' },\n    { number: 11, subnumber: 0, group: 'Chromatic Percussion', label: 'Music Box' },\n    { number: 12, subnumber: 0, group: 'Chromatic Percussion', label: 'Vibraphone' },\n    { number: 12, subnumber: 1, group: 'Chromatic Percussion', label: 'Wet Vibraphone' },\n    { number: 13, subnumber: 0, group: 'Chromatic Percussion', label: 'Marimba' },\n    { number: 13, subnumber: 1, group: 'Chromatic Percussion', label: 'Wide Marimba' },\n    { number: 14, subnumber: 0, group: 'Chromatic Percussion', label: 'Xylophone' },\n    { number: 15, subnumber: 0, group: 'Chromatic Percussion', label: 'Tubular Bells' },\n    { number: 15, subnumber: 1, group: 'Chromatic Percussion', label: 'Church Bells' },\n    { number: 15, subnumber: 2, group: 'Chromatic Percussion', label: 'Carillon' },\n    { number: 16, subnumber: 0, group: 'Chromatic Percussion', label: 'Dulcimer / Santur' },\n    { number: 17, subnumber: 0, group: 'Organ', label: 'Hammond Organ' },\n    { number: 17, subnumber: 1, group: 'Organ', label: 'Detuned Organ 1' },\n    { number: 17, subnumber: 2, group: 'Organ', label: '60\\'s Organ 1' },\n    { number: 17, subnumber: 3, group: 'Organ', label: 'Organ 4' },\n    { number: 18, subnumber: 0, group: 'Organ', label: 'Percussive Organ' },\n    { number: 18, subnumber: 1, group: 'Organ', label: 'Detuned Organ 2' },\n    { number: 18, subnumber: 2, group: 'Organ', label: 'Organ 5' },\n    { number: 19, subnumber: 0, group: 'Organ', label: 'Rock Organ' },\n    { number: 20, subnumber: 0, group: 'Organ', label: 'Church Organ 1' },\n    { number: 20, subnumber: 1, group: 'Organ', label: 'Church Organ 2' },\n    { number: 20, subnumber: 2, group: 'Organ', label: 'Church Organ 3' },\n    { number: 21, subnumber: 0, group: 'Organ', label: 'Reed Organ' },\n    { number: 21, subnumber: 1, group: 'Organ', label: 'Puff Organ' },\n    { number: 22, subnumber: 0, group: 'Organ', label: 'French Accordion' },\n    { number: 22, subnumber: 1, group: 'Organ', label: 'Italian Accordion' },\n    { number: 23, subnumber: 0, group: 'Organ', label: 'Harmonica' },\n    { number: 24, subnumber: 0, group: 'Organ', label: 'Bandoneon' },\n    { number: 25, subnumber: 0, group: 'Guitar', label: 'Nylon-String Guitar' },\n    { number: 25, subnumber: 1, group: 'Guitar', label: 'Ukelele' },\n    { number: 25, subnumber: 2, group: 'Guitar', label: 'Open Nylon Guitar' },\n    { number: 25, subnumber: 3, group: 'Guitar', label: 'Nylon Guitar 2' },\n    { number: 26, subnumber: 0, group: 'Guitar', label: 'Steel-String Guitar' },\n    { number: 26, subnumber: 1, group: 'Guitar', label: '12-String Guitar' },\n    { number: 26, subnumber: 2, group: 'Guitar', label: 'Mandolin' },\n    { number: 26, subnumber: 3, group: 'Guitar', label: 'Steel + Body' },\n    { number: 27, subnumber: 0, group: 'Guitar', label: 'Jazz Guitar' },\n    { number: 27, subnumber: 1, group: 'Guitar', label: 'Hawaiian Guitar' },\n    { number: 28, subnumber: 0, group: 'Guitar', label: 'Clean Electric Guitar' },\n    { number: 28, subnumber: 1, group: 'Guitar', label: 'Chorus Guitar' },\n    { number: 28, subnumber: 2, group: 'Guitar', label: 'Mid Tone Guitar' },\n    { number: 29, subnumber: 0, group: 'Guitar', label: 'Muted Electric Guitar' },\n    { number: 29, subnumber: 1, group: 'Guitar', label: 'Funk Guitar' },\n    { number: 29, subnumber: 2, group: 'Guitar', label: 'Funk Guitar 2' },\n    { number: 29, subnumber: 3, group: 'Guitar', label: 'Jazz Man' },\n    { number: 30, subnumber: 0, group: 'Guitar', label: 'Overdriven Guitar' },\n    { number: 30, subnumber: 1, group: 'Guitar', label: 'Guitar Pinch' },\n    { number: 31, subnumber: 0, group: 'Guitar', label: 'Distortion Guitar' },\n    { number: 31, subnumber: 1, group: 'Guitar', label: 'Feedback Guitar' },\n    { number: 31, subnumber: 2, group: 'Guitar', label: 'Distortion Rtm Guitar' },\n    { number: 32, subnumber: 0, group: 'Guitar', label: 'Guitar Harmonics' },\n    { number: 32, subnumber: 1, group: 'Guitar', label: 'Guitar Feedback' },\n    { number: 33, subnumber: 0, group: 'Bass', label: 'Acoustic Bass' },\n    { number: 34, subnumber: 0, group: 'Bass', label: 'Fingered Bass' },\n    { number: 34, subnumber: 1, group: 'Bass', label: 'Finger Slap' },\n    { number: 35, subnumber: 0, group: 'Bass', label: 'Picked Bass' },\n    { number: 36, subnumber: 0, group: 'Bass', label: 'Fretless Bass' },\n    { number: 37, subnumber: 0, group: 'Bass', label: 'Slap Bass 1' },\n    { number: 38, subnumber: 0, group: 'Bass', label: 'Slap Bass 2' },\n    { number: 39, subnumber: 0, group: 'Bass', label: 'Synth Bass 1' },\n    { number: 39, subnumber: 1, group: 'Bass', label: 'Synth Bass 101' },\n    { number: 39, subnumber: 2, group: 'Bass', label: 'Synth Bass 3' },\n    { number: 39, subnumber: 3, group: 'Bass', label: 'Clavi Bass' },\n    { number: 39, subnumber: 4, group: 'Bass', label: 'Hammer' },\n    { number: 40, subnumber: 0, group: 'Bass', label: 'Synth Bass 2' },\n    { number: 40, subnumber: 1, group: 'Bass', label: 'Synth Bass 4' },\n    { number: 40, subnumber: 2, group: 'Bass', label: 'Rubber Bass' },\n    { number: 40, subnumber: 3, group: 'Bass', label: 'Attack Pulse' },\n    { number: 41, subnumber: 0, group: 'Strings', label: 'Violin' },\n    { number: 41, subnumber: 1, group: 'Strings', label: 'Slow Violin' },\n    { number: 42, subnumber: 0, group: 'Strings', label: 'Viola' },\n    { number: 43, subnumber: 0, group: 'Strings', label: 'Cello' },\n    { number: 44, subnumber: 0, group: 'Strings', label: 'Contrabass' },\n    { number: 45, subnumber: 0, group: 'Strings', label: 'Tremolo Strings' },\n    { number: 46, subnumber: 0, group: 'Strings', label: 'Pizzicato Strings' },\n    { number: 47, subnumber: 0, group: 'Strings', label: 'Harp' },\n    { number: 47, subnumber: 1, group: 'Strings', label: 'Yang Qin' },\n    { number: 48, subnumber: 0, group: 'Strings', label: 'Timpani' },\n    { number: 49, subnumber: 0, group: 'Orchestral Ensemble', label: 'String Ensemble' },\n    { number: 49, subnumber: 1, group: 'Orchestral Ensemble', label: 'Orchestra Strings' },\n    { number: 49, subnumber: 2, group: 'Orchestral Ensemble', label: '60\\'s Strings' },\n    { number: 50, subnumber: 0, group: 'Orchestral Ensemble', label: 'Slow String Ensemble' },\n    { number: 51, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 1' },\n    { number: 51, subnumber: 1, group: 'Orchestral Ensemble', label: 'Synth Strings 3' },\n    { number: 52, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Strings 2' },\n    { number: 53, subnumber: 0, group: 'Orchestral Ensemble', label: 'Choir Aahs' },\n    { number: 53, subnumber: 1, group: 'Orchestral Ensemble', label: 'Choir Aahs 2' },\n    { number: 54, subnumber: 0, group: 'Orchestral Ensemble', label: 'Voice Oohs' },\n    { number: 54, subnumber: 1, group: 'Orchestral Ensemble', label: 'Humming' },\n    { number: 55, subnumber: 0, group: 'Orchestral Ensemble', label: 'Synth Voice' },\n    { number: 55, subnumber: 1, group: 'Orchestral Ensemble', label: 'Analog Voice' },\n    { number: 56, subnumber: 0, group: 'Orchestral Ensemble', label: 'Orchestra Hit' },\n    { number: 56, subnumber: 1, group: 'Orchestral Ensemble', label: 'Bass Hit' },\n    { number: 56, subnumber: 2, group: 'Orchestral Ensemble', label: '6th Hit' },\n    { number: 56, subnumber: 3, group: 'Orchestral Ensemble', label: 'Euro Hit' },\n    { number: 57, subnumber: 0, group: 'Brass', label: 'Trumpet' },\n    { number: 57, subnumber: 1, group: 'Brass', label: 'Dark Trumpet' },\n    { number: 58, subnumber: 0, group: 'Brass', label: 'Trombone' },\n    { number: 58, subnumber: 1, group: 'Brass', label: 'Trombone 2' },\n    { number: 58, subnumber: 2, group: 'Brass', label: 'Bright Trombone' },\n    { number: 59, subnumber: 0, group: 'Brass', label: 'Tuba' },\n    { number: 60, subnumber: 0, group: 'Brass', label: 'Muted Trumpet' },\n    { number: 60, subnumber: 1, group: 'Brass', label: 'Muted Trumpet 2' },\n    { number: 61, subnumber: 0, group: 'Brass', label: 'French Horn' },\n    { number: 61, subnumber: 1, group: 'Brass', label: 'French Horn 2' },\n    { number: 62, subnumber: 0, group: 'Brass', label: 'Brass Section' },\n    { number: 62, subnumber: 1, group: 'Brass', label: 'Brass Section' },\n    { number: 63, subnumber: 0, group: 'Brass', label: 'Synth Brass 1' },\n    { number: 63, subnumber: 1, group: 'Brass', label: 'Synth Brass 3' },\n    { number: 63, subnumber: 2, group: 'Brass', label: 'Analog Brass 1' },\n    { number: 63, subnumber: 3, group: 'Brass', label: 'Jump Brass' },\n    { number: 64, subnumber: 0, group: 'Brass', label: 'Synth Brass 2' },\n    { number: 64, subnumber: 1, group: 'Brass', label: 'Synth Brass 4' },\n    { number: 64, subnumber: 2, group: 'Brass', label: 'Analog Brass 2' },\n    { number: 65, subnumber: 0, group: 'Reed', label: 'Soprano Sax' },\n    { number: 66, subnumber: 0, group: 'Reed', label: 'Alto Sax' },\n    { number: 67, subnumber: 0, group: 'Reed', label: 'Tenor Sax' },\n    { number: 68, subnumber: 0, group: 'Reed', label: 'Baritone Sax' },\n    { number: 69, subnumber: 0, group: 'Reed', label: 'Oboe' },\n    { number: 70, subnumber: 0, group: 'Reed', label: 'English Horn' },\n    { number: 71, subnumber: 0, group: 'Reed', label: 'Bassoon' },\n    { number: 72, subnumber: 0, group: 'Reed', label: 'Clarinet' },\n    { number: 73, subnumber: 0, group: 'Wind', label: 'Piccolo' },\n    { number: 74, subnumber: 0, group: 'Wind', label: 'Flute' },\n    { number: 75, subnumber: 0, group: 'Wind', label: 'Recorder' },\n    { number: 76, subnumber: 0, group: 'Wind', label: 'Pan Flute' },\n    { number: 77, subnumber: 0, group: 'Wind', label: 'Blown Bottle' },\n    { number: 78, subnumber: 0, group: 'Wind', label: 'Shakuhachi' },\n    { number: 79, subnumber: 0, group: 'Wind', label: 'Whistle' },\n    { number: 80, subnumber: 0, group: 'Wind', label: 'Ocarina' },\n    { number: 81, subnumber: 0, group: 'Lead', label: 'Square Lead' },\n    { number: 81, subnumber: 1, group: 'Lead', label: 'Square Wave' },\n    { number: 81, subnumber: 2, group: 'Lead', label: 'Sine Wave' },\n    { number: 82, subnumber: 0, group: 'Lead', label: 'Saw Lead' },\n    { number: 82, subnumber: 1, group: 'Lead', label: 'Saw Wave' },\n    { number: 82, subnumber: 2, group: 'Lead', label: 'Doctor Solo' },\n    { number: 82, subnumber: 3, group: 'Lead', label: 'Natural Lead' },\n    { number: 82, subnumber: 4, group: 'Lead', label: 'Sequenced Saw' },\n    { number: 83, subnumber: 0, group: 'Lead', label: 'Synth Calliope' },\n    { number: 84, subnumber: 0, group: 'Lead', label: 'Chiffer Lead' },\n    { number: 85, subnumber: 0, group: 'Lead', label: 'Charang' },\n    { number: 85, subnumber: 1, group: 'Lead', label: 'Wire Lead' },\n    { number: 86, subnumber: 0, group: 'Lead', label: 'Solo Synth Vox' },\n    { number: 87, subnumber: 0, group: 'Lead', label: '5th Saw Wave' },\n    { number: 88, subnumber: 0, group: 'Lead', label: 'Bass & Lead' },\n    { number: 88, subnumber: 1, group: 'Lead', label: 'Delayed Lead' },\n    { number: 89, subnumber: 0, group: 'Synth Pad', label: 'Fantasia Pad' },\n    { number: 90, subnumber: 0, group: 'Synth Pad', label: 'Warm Pad' },\n    { number: 90, subnumber: 1, group: 'Synth Pad', label: 'Sine Pad' },\n    { number: 91, subnumber: 0, group: 'Synth Pad', label: 'Polysynth Pad' },\n    { number: 92, subnumber: 0, group: 'Synth Pad', label: 'Space Voice Pad' },\n    { number: 92, subnumber: 1, group: 'Synth Pad', label: 'Itopia' },\n    { number: 93, subnumber: 0, group: 'Synth Pad', label: 'Bowed Glass Pad' },\n    { number: 94, subnumber: 0, group: 'Synth Pad', label: 'Metal Pad' },\n    { number: 95, subnumber: 0, group: 'Synth Pad', label: 'Halo Pad' },\n    { number: 96, subnumber: 0, group: 'Synth Pad', label: 'Sweep Pad' },\n    { number: 97, subnumber: 0, group: 'Synth Effects', label: 'Ice Rain' },\n    { number: 98, subnumber: 0, group: 'Synth Effects', label: 'Soundtrack' },\n    { number: 99, subnumber: 0, group: 'Synth Effects', label: 'Crystal' },\n    { number: 99, subnumber: 1, group: 'Synth Effects', label: 'Synth Mallet' },\n    { number: 100, subnumber: 0, group: 'Synth Effects', label: 'Atmosphere' },\n    { number: 101, subnumber: 0, group: 'Synth Effects', label: 'Brightness' },\n    { number: 102, subnumber: 0, group: 'Synth Effects', label: 'Goblin' },\n    { number: 103, subnumber: 0, group: 'Synth Effects', label: 'Echo Drops' },\n    { number: 103, subnumber: 1, group: 'Synth Effects', label: 'Echo Bell' },\n    { number: 103, subnumber: 2, group: 'Synth Effects', label: 'Echo Pan' },\n    { number: 104, subnumber: 0, group: 'Synth Effects', label: 'Star Theme' },\n    { number: 105, subnumber: 0, group: 'Ethnic', label: 'Sitar' },\n    { number: 105, subnumber: 1, group: 'Ethnic', label: 'Sitar 2' },\n    { number: 106, subnumber: 0, group: 'Ethnic', label: 'Banjo' },\n    { number: 107, subnumber: 0, group: 'Ethnic', label: 'Shamisen' },\n    { number: 108, subnumber: 0, group: 'Ethnic', label: 'Koto' },\n    { number: 108, subnumber: 1, group: 'Ethnic', label: 'Taisho Koto' },\n    { number: 109, subnumber: 0, group: 'Ethnic', label: 'Kalimba' },\n    { number: 110, subnumber: 0, group: 'Ethnic', label: 'Bagpipe' },\n    { number: 111, subnumber: 0, group: 'Ethnic', label: 'Fiddle' },\n    { number: 112, subnumber: 0, group: 'Ethnic', label: 'Shanai' },\n    { number: 113, subnumber: 0, group: 'Percussive', label: 'Tinkle Bell' },\n    { number: 114, subnumber: 0, group: 'Percussive', label: 'Agogo' },\n    { number: 115, subnumber: 0, group: 'Percussive', label: 'Steel Drums' },\n    { number: 116, subnumber: 0, group: 'Percussive', label: 'Woodblock' },\n    { number: 116, subnumber: 1, group: 'Percussive', label: 'Castanets' },\n    { number: 117, subnumber: 0, group: 'Percussive', label: 'Taiko Drum' },\n    { number: 117, subnumber: 1, group: 'Percussive', label: 'Concert Bass Drum' },\n    { number: 118, subnumber: 0, group: 'Percussive', label: 'Melodic Tom 1' },\n    { number: 118, subnumber: 1, group: 'Percussive', label: 'Melodic Tom 2' },\n    { number: 119, subnumber: 0, group: 'Percussive', label: 'Synth Drum' },\n    { number: 119, subnumber: 1, group: 'Percussive', label: '808 Tom' },\n    { number: 119, subnumber: 2, group: 'Percussive', label: 'Electric Percussion' },\n    { number: 120, subnumber: 0, group: 'Percussive', label: 'Reverse Cymbal' },\n    { number: 121, subnumber: 0, group: 'Sound Effects', label: 'Guitar Fret Noise' },\n    { number: 121, subnumber: 1, group: 'Sound Effects', label: 'Guitar Cut Noise' },\n    { number: 121, subnumber: 2, group: 'Sound Effects', label: 'String Slap' },\n    { number: 122, subnumber: 0, group: 'Sound Effects', label: 'Breath Noise' },\n    { number: 122, subnumber: 1, group: 'Sound Effects', label: 'Flute Key Click' },\n    { number: 123, subnumber: 0, group: 'Sound Effects', label: 'Seashore' },\n    { number: 123, subnumber: 1, group: 'Sound Effects', label: 'Rain' },\n    { number: 123, subnumber: 2, group: 'Sound Effects', label: 'Thunder' },\n    { number: 123, subnumber: 3, group: 'Sound Effects', label: 'Wind' },\n    { number: 123, subnumber: 4, group: 'Sound Effects', label: 'Stream' },\n    { number: 123, subnumber: 5, group: 'Sound Effects', label: 'Bubble' },\n    { number: 124, subnumber: 0, group: 'Sound Effects', label: 'Bird Tweet' },\n    { number: 124, subnumber: 1, group: 'Sound Effects', label: 'Dog' },\n    { number: 124, subnumber: 2, group: 'Sound Effects', label: 'Horse Gallop' },\n    { number: 124, subnumber: 3, group: 'Sound Effects', label: 'Bird 2' },\n    { number: 125, subnumber: 0, group: 'Sound Effects', label: 'Telephone 1' },\n    { number: 125, subnumber: 1, group: 'Sound Effects', label: 'Telephone 2' },\n    { number: 125, subnumber: 2, group: 'Sound Effects', label: 'Door Creaking' },\n    { number: 125, subnumber: 3, group: 'Sound Effects', label: 'Door Closing' },\n    { number: 125, subnumber: 4, group: 'Sound Effects', label: 'Scratch' },\n    { number: 125, subnumber: 5, group: 'Sound Effects', label: 'Wind Chimes' },\n    { number: 126, subnumber: 0, group: 'Sound Effects', label: 'Helicopter' },\n    { number: 126, subnumber: 1, group: 'Sound Effects', label: 'Car Engine' },\n    { number: 126, subnumber: 2, group: 'Sound Effects', label: 'Car Stop' },\n    { number: 126, subnumber: 3, group: 'Sound Effects', label: 'Car Pass' },\n    { number: 126, subnumber: 4, group: 'Sound Effects', label: 'Car Crash' },\n    { number: 126, subnumber: 5, group: 'Sound Effects', label: 'Siren' },\n    { number: 126, subnumber: 6, group: 'Sound Effects', label: 'Train' },\n    { number: 126, subnumber: 7, group: 'Sound Effects', label: 'Jetplane' },\n    { number: 126, subnumber: 8, group: 'Sound Effects', label: 'Starship' },\n    { number: 126, subnumber: 9, group: 'Sound Effects', label: 'Burst Noise' },\n    { number: 127, subnumber: 0, group: 'Sound Effects', label: 'Applause' },\n    { number: 127, subnumber: 1, group: 'Sound Effects', label: 'Laughing' },\n    { number: 127, subnumber: 2, group: 'Sound Effects', label: 'Screaming' },\n    { number: 127, subnumber: 3, group: 'Sound Effects', label: 'Punch' },\n    { number: 127, subnumber: 4, group: 'Sound Effects', label: 'Heart Beat' },\n    { number: 127, subnumber: 5, group: 'Sound Effects', label: 'Footsteps' },\n    { number: 128, subnumber: 0, group: 'Sound Effects', label: 'Gun Shot' },\n    { number: 128, subnumber: 1, group: 'Sound Effects', label: 'Machine Gun' },\n    { number: 128, subnumber: 2, group: 'Sound Effects', label: 'Lasergun' },\n    { number: 128, subnumber: 3, group: 'Sound Effects', label: 'Explosion' },\n];\n\n/**\n * @type {Map<number,string>}\n */\nconst GENERAL_MIDI_DRUM_NOTE_NUMBERS = new Map([\n    [27, 'High Q(GM2)'],\n    [28, 'Slap(GM2)'],\n    [29, 'Scratch Push(GM2)'],\n    [30, 'Scratch Pull(GM2)'],\n    [31, 'Sticks(GM2)'],\n    [32, 'Square Click(GM2)'],\n    [33, 'Metronome Click(GM2)'],\n    [34, 'Metronome Bell(GM2)'],\n    [35, 'Bass Drum 2'],\n    [36, 'Bass Drum 1'],\n    [37, 'Side Stick'],\n    [38, 'Snare Drum 1'],\n    [39, 'Hand Clap'],\n    [40, 'Snare Drum 2'],\n    [41, 'Low Tom 2'],\n    [42, 'Closed Hi-hat'],\n    [43, 'Low Tom 1'],\n    [44, 'Pedal Hi-hat'],\n    [45, 'Mid Tom 2'],\n    [46, 'Open Hi-hat'],\n    [47, 'Mid Tom 1'],\n    [48, 'High Tom 2'],\n    [49, 'Crash Cymbal 1'],\n    [50, 'High Tom 1'],\n    [51, 'Ride Cymbal 1'],\n    [52, 'Chinese Cymbal'],\n    [53, 'Ride Bell'],\n    [54, 'Tambourine'],\n    [55, 'Splash Cymbal'],\n    [56, 'Cowbell'],\n    [57, 'Crash Cymbal 2'],\n    [58, 'Vibra Slap'],\n    [59, 'Ride Cymbal 2'],\n    [60, 'High Bongo'],\n    [61, 'Low Bongo'],\n    [62, 'Mute High Conga'],\n    [63, 'Open High Conga'],\n    [64, 'Low Conga'],\n    [65, 'High Timbale'],\n    [66, 'Low Timbale'],\n    [67, 'High Agogo'],\n    [68, 'Low Agogo'],\n    [69, 'Cabasa'],\n    [70, 'Maracas'],\n    [71, 'Short Whistle'],\n    [72, 'Long Whistle'],\n    [73, 'Short Guiro'],\n    [74, 'Long Guiro'],\n    [75, 'Claves'],\n    [76, 'High Wood Block'],\n    [77, 'Low Wood Block'],\n    [78, 'Mute Cuica'],\n    [79, 'Open Cuica'],\n    [80, 'Mute Triangle'],\n    [81, 'Open Triangle'],\n    [82, 'Shaker(GM2)'],\n    [83, 'Jingle Bell(GM2)'],\n    [84, 'Belltree(GM2)'],\n    [85, 'Castanets(GM2)'],\n    [86, 'Mute Surdo(GM2)'],\n    [87, 'Open Surdo(GM2)'],\n]);\n\n\n/**\n * @type {object[]}\n * @todo add instrument numbers\n * @todo This might be useful, e.g. to check which notes Player can play\n */\nexport const MIDI_NOTE_RANGES = [\n    // Strings\n    { instrNr: 40, nrL2: -1, subNrL2: -1, label: 'Violin', min: 55, max: 103 },\n    { instrNr: 41, nrL2: -1, subNrL2: -1, label: 'Viola', min: 48, max: 91 },\n    { instrNr: 42, nrL2: -1, subNrL2: -1, label: 'Cello', min: 36, max: 76 },\n    { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Double Bass', min: 28, max: 67 },\n    { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Bass Guitar', min: 28, max: 67 },\n    { instrNr: -1, nrL2: -1, subNrL2: -1, label: 'Acoustic Guitar', min: 40, max: 88 },\n    // Brass\n    { instrNr: 58, nrL2: 59, subNrL2: 0, label: 'Tuba', min: 28, max: 58 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Trombone', min: 34, max: 67 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'French Horn', min: 34, max: 77 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trombone', min: 40, max: 72 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Trumpet', min: 55, max: 82 },\n    // Woodwinds\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Piccolo', min: 74, max: 102 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Flute', min: 60, max: 96 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Oboe', min: 58, max: 91 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Flute', min: 55, max: 91 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Cor Anglais (English Horn)', min: 52, max: 81 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Clarinet', min: 50, max: 94 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Clarinet', min: 38, max: 77 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bassoon', min: 34, max: 75 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Contrabassoon', min: 22, max: 53 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Recorder', min: 72, max: 98 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Recorder', min: 65, max: 91 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Recorder', min: 60, max: 86 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Recorder', min: 53, max: 79 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Baritone Sax', min: 36, max: 69 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tenor Sax', min: 44, max: 76 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Alto Sax', min: 49, max: 81 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Soprano Sax', min: 56, max: 88 },\n    // Tuned Percussion\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Glockenspiel', min: 79, max: 108 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Xylophone', min: 65, max: 108 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Vibraphone', min: 53, max: 89 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Marimba', min: 45, max: 96 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Bass Marimba', min: 33, max: 81 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Celeste', min: 60, max: 108 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Tubular Bells', min: 60, max: 77 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Timpani', min: 40, max: 55 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harpsichord', min: 29, max: 89 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Kalimba', min: 60, max: 88 },\n    { instrNr: 0, nrL2: -1, subNrL2: -1, label: 'Harp', min: 24, max: 103 },\n];\n\n// Build lookup maps\nfor (const note of MIDI_NOTES) {\n    MidiNoteByPitch.set(note.pitch, note);\n    MidiNoteByLabel.set(note.label, note);\n}\nfor (const instrument of MIDI_INSTRUMENTS) {\n    MidiInstrumentByNumber.set(instrument.number, instrument);\n}\nfor (const instrument of MIDI_INSTRUMENTS_Lev2) {\n    const key = `${instrument.number}-${instrument.subnumber}`;\n    MidiInstrumentByNumberLev2.set(key, instrument);\n}\n","import { getMidiNoteByLabel, getMidiNoteByNr } from '../fileFormats/Midi';\n\n/**\n * Note class that reflects MIDI properties but has\n * absolute start and end times in seconds.\n */\nclass Note {\n    /**\n     * Creates a new Note\n     *\n     * @param {number} pitch pitch\n     * @param {number} start start time in seconds\n     * @param {number} velocity velocity\n     * @param {number} channel MIDI channel\n     * @param {number} end end time in seconds\n     */\n    constructor(\n        pitch = 0,\n        start = 0,\n        velocity = 127,\n        channel = 0,\n        end = null,\n    ) {\n        // Get note name, e.g. C#4\n        if (pitch < 0 || pitch > 127) {\n            throw new Error(`Invalid pitch ${pitch}`);\n        }\n        try {\n            this.name = getMidiNoteByNr(pitch).label;\n        } catch {\n            throw new Error(`Invalid pitch ${pitch}`);\n        }\n        this.pitch = pitch;\n        this.start = start;\n        this.velocity = velocity;\n        this.channel = channel;\n        this.end = end;\n    }\n\n    /**\n     * Creates a Note object from an object via destructuring\n     *\n     * @example\n     *  const n = Note.from({\n     *      pitch: 'C#4'     // e.g. 12 or C#4\n     *      start: 0.5       // start time in seconds\n     *      end: 1.5         // end time in seconds\n     *      velocity: 127    // MIDI velocity\n     *      channel: 0       // MIDI channel\n     *  });\n     * @param {object} object object with at least {pitch}\n     *  {\n     *      pitch: number|string    e.g. 12 or C#4\n     *      start: number           start time in seconds\n     *      end: number             end time in seconds\n     *      velocity: number        MIDI velocity\n     *      channel: number         MIDI channel\n     *  }\n     * @returns {Note} new note\n     * @throws {Error} when pitch is invalid\n     */\n    static from(object) {\n        let {\n            pitch = 0,\n            start = 0,\n            velocity = 127,\n            channel = 0,\n            end = null,\n        } = object;\n        if (typeof pitch === 'string' && Number.isNaN(+pitch)) {\n            const note = getMidiNoteByLabel(pitch);\n            if (note === null || note === undefined) {\n                throw new Error('Invalid pitch for Note.from()');\n            }\n            pitch = note.pitch;\n        }\n        return new Note(pitch, start, velocity, channel, end);\n    }\n\n    /**\n     * Returns a copy of the Note object\n     *\n     * @returns {Note} new note\n     */\n    clone() {\n        return new Note(\n            this.pitch,\n            this.start,\n            this.velocity,\n            this.channel,\n            this.end,\n        );\n    }\n\n    /**\n     * Returns the duration of this note in seconds\n     *\n     * @returns {number} note duration\n     */\n    getDuration() {\n        if (this.end === null) {\n            return 0;\n        }\n        return this.end - this.start;\n    }\n\n    /**\n     * Returns the note's name and octave, e.g. 'C#3'\n     *\n     * @returns {string} note name as string\n     */\n    getName() {\n        return this.name;\n    }\n\n    /**\n     * Returns the note's name WITHOUT the octave, e.g. 'C#'\n     *\n     * @returns {string} note name as string\n     */\n    getLetter() {\n        return getMidiNoteByNr(this.pitch).name;\n    }\n\n    /**\n     * Returns the note's octave\n     *\n     * @returns {number} the note's octave\n     */\n    getOctave() {\n        return getMidiNoteByNr(this.pitch).octave;\n    }\n\n    /**\n     * Returns a new Note where start and end are multiplied by factor\n     *\n     * @param {number} addedSeconds seconds to be added to start and end\n     * @returns {Note} new note\n     */\n    shiftTime(addedSeconds) {\n        const n = this.clone();\n        n.start += addedSeconds;\n        n.end = n.end === null ? null : n.end + addedSeconds;\n        return n;\n    }\n\n    /**\n     * Returns a new Note where start and end are multiplied by factor\n     *\n     * @param {number} factor factor to scale start and end with\n     * @returns {Note} new note\n     */\n    scaleTime(factor) {\n        const n = this.clone();\n        n.start *= factor;\n        n.end = n.end === null ? null : n.end * factor;\n        return n;\n    }\n\n    /**\n     * Returns true, if this Note and otherNote overlap in time.\n     *\n     * @param {Note} otherNote another Note\n     * @returns {boolean} true if they overlap\n     */\n    overlapsInTime(otherNote) {\n        return (this.start >= otherNote.start && this.start <= otherNote.end) ||\n            (this.end >= otherNote.start && this.end <= otherNote.end);\n    }\n\n    /**\n     * Returns the amount of seconds this Note and otherNote overlap in time.\n     *\n     * @param {Note} otherNote another Note\n     * @returns {number} seconds of overlap\n     */\n    overlapInSeconds(otherNote) {\n        if (!this.overlapsInTime(otherNote)) {\n            return 0;\n        }\n        const laterStart = Math.max(this.start, otherNote.start);\n        const earlierEnd = Math.min(this.end, otherNote.end);\n        return earlierEnd - laterStart;\n    }\n\n    /**\n     * Returns true if this note and otherNote have equal attributes.\n     *\n     * @param {Note} otherNote another Note\n     * @returns {boolean} true if equal\n     */\n    equals(otherNote) {\n        if (!(otherNote instanceof Note)) {\n            return false;\n        }\n        return (\n            this.pitch === otherNote.pitch &&\n            this.start === otherNote.start &&\n            this.velocity === otherNote.velocity &&\n            this.channel === otherNote.channel &&\n            this.end === otherNote.end\n        );\n    }\n\n    /**\n     * Human-readable string representation of this Note\n     *\n     * @param {boolean} short if true, attribute names will be shortened\n     * @returns {string} string representation\n     */\n    toString(short = false) {\n        if (short) {\n            return `Note(n: ${this.name}, p: ${this.pitch}, s: ${this.start}, e: ${this.end}, v: ${this.velocity}, c: ${this.channel})`;\n        }\n        return `Note(name: ${this.name}, pitch: ${this.pitch}, start: ${this.start}, end: ${this.end}, velocity: ${this.velocity}, channel: ${this.channel})`;\n    }\n}\n\nexport default Note;\n","import { getMidiNoteByLabel } from '../fileFormats/Midi';\nimport Note from './Note';\n\n\n/**\n * Guitar note class that reflects MIDI properties but has\n * absolute start and end times in seconds and\n * information on how to play it.\n *\n * @augments Note\n */\nclass GuitarNote extends Note {\n    /**\n     * Creates a new Note\n     *\n     * @param {number} pitch pitch\n     * @param {number} start start time in seconds\n     * @param {number} velocity velocity\n     * @param {number} channel MIDI channel\n     * @param {number} end end time in seconds\n     * @param {number} string guitar string\n     * @param {number} fret guitar fret\n     */\n    constructor(\n        pitch = 0,\n        start = 0,\n        velocity = 127,\n        channel = 0,\n        end = null,\n        // This is different to the base Note class\n        string = null,\n        fret = null,\n    ) {\n        super(pitch, start, velocity, channel, end);\n        this.string = string;\n        this.fret = fret;\n    }\n\n    /**\n     * Creates a GuitarNote object from an object via destructuring\n     *\n     * @param {object} object object with at least {pitch}\n     *  {\n     *      pitch: number|string    e.g. 12 or C#4\n     *      start: number           start time in seconds\n     *      end: number             end time in seconds\n     *      velocity: number        MIDI velocity\n     *      channel: number         MIDI channel\n     *      string: number          guitar string\n     *      fret: number            guitar fret\n     *  }\n     * @returns {GuitarNote} new note\n     * @throws {Error} when pitch is invalid\n     */\n    static from(object) {\n        let {\n            pitch = 0,\n            start = 0,\n            velocity = 127,\n            channel = 0,\n            end = null,\n            // This is different to the base Note class\n            string = null,\n            fret = null,\n        } = object;\n        if (typeof pitch === 'string' && Number.isNaN(+pitch)) {\n            const note = getMidiNoteByLabel(pitch);\n            if (note === null || note === undefined) {\n                throw new Error('Invalid pitch for GuitarNote.from()');\n            }\n            pitch = note.pitch;\n        }\n        return new GuitarNote(pitch, start, velocity, channel, end, string, fret);\n    }\n\n    /**\n     * Converts a Note to a GuitarNote\n     *\n     * @param {Note} note note\n     * @param {number} string string\n     * @param {number} fret fret\n     * @returns {GuitarNote} guitar note\n     */\n    static fromNote(note, string, fret) {\n        return new GuitarNote(note.pitch, note.start, note.velocity, note.channel, note.end, string, fret);\n    }\n\n    /**\n     * Simplifies the GuitarNote to a Note\n     *\n     * @returns {Note} note\n     */\n    toNote() {\n        return new Note(this.pitch, this.start, this.velocity, this.channel, this.end);\n    }\n\n    /**\n     * Returns a copy of the Note object\n     *\n     * @returns {GuitarNote} new note\n     */\n    clone() {\n        return new GuitarNote(\n            this.pitch,\n            this.start,\n            this.velocity,\n            this.channel,\n            this.end,\n            // This is different to the base Note class\n            this.string,\n            this.fret,\n        );\n    }\n\n    /**\n     * Returns true if this note and otherNote have equal attributes.\n     *\n     * @param {GuitarNote} otherNote another GuitarNote\n     * @returns {boolean} true if equal\n     */\n    equals(otherNote) {\n        if (!(otherNote instanceof GuitarNote)) {\n            return false;\n        }\n        return (\n            this.pitch === otherNote.pitch &&\n            this.start === otherNote.start &&\n            this.velocity === otherNote.velocity &&\n            this.channel === otherNote.channel &&\n            this.end === otherNote.end &&\n            // This is different to the base Note class\n            this.string === otherNote.string &&\n            this.fret === otherNote.fret\n        );\n    }\n\n    /**\n     * Human-readable string representation of this GuitarNote\n     *\n     * @param {boolean} short if true, attribute names will be shortened\n     * @returns {string} string representation\n     */\n    toString(short = false) {\n        if (short) {\n            return `GuitarNote(n: ${this.name}, p: ${this.pitch}, s: ${this.start}, e: ${this.end}, v: ${this.velocity}, c: ${this.channel}, s: ${this.string}, f: ${this.fret})`;\n        }\n        return `GuitarNote(name: ${this.name}, pitch: ${this.pitch}, start: ${this.start}, end: ${this.end}, velocity: ${this.velocity}, channel: ${this.channel}, string: ${this.string}, fret: ${this.fret})`;\n    }\n}\n\nexport default GuitarNote;\n","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new Map();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export default function difference(values, ...others) {\n  values = new Set(values);\n  for (const other of others) {\n    for (const value of other) {\n      values.delete(value);\n    }\n  }\n  return values;\n}\n","export default function set(values) {\n  return values instanceof Set ? values : new Set(values);\n}\n","import set from \"./set.js\";\n\nexport default function intersection(values, ...others) {\n  values = new Set(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return this.children;\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport array from \"../array.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = array(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    var group = select.apply(this, arguments);\n    return group == null ? [] : array(group);\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(selection) {\n  if (!(selection instanceof Selection)) throw new Error(\"invalid merge\");\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move();\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export default Math.random;\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomInt(source) {\n  function randomInt(min, max) {\n    if (arguments.length < 2) max = min, min = 0;\n    min = Math.floor(min);\n    max = Math.floor(max) - min;\n    return function() {\n      return Math.floor(source() * max + min);\n    };\n  }\n\n  randomInt.source = sourceRandomInt;\n\n  return randomInt;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst mul = 0x19660D;\nconst inc = 0x3C6EF35F;\nconst eps = 1 / 0x100000000;\n\nexport default function lcg(seed = Math.random()) {\n  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;\n  return () => (state = mul * state + inc | 0, eps * (state >>> 0));\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    step = -step;\n    start = Math.ceil(start * step);\n    stop = Math.floor(stop * step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import { randomInt } from 'd3';\n\n/**\n * @module utils/MathUtils\n */\n\n/**\n * Generates a random float in [min, max)\n *\n * @param {number} min minimum\n * @param {number} max maximum\n * @returns {number} random float\n */\nexport function randFloat(min = 0, max = 1) {\n    return Math.random() * (max - min) + min;\n}\n\n/**\n * Returns a random element from the given array.\n *\n * @param {Array} array an array\n * @returns {any} random element from the array\n */\nexport function choose(array) {\n    const index = randomInt(0, array.length)();\n    return array[index];\n}\n\n/**\n * Shortcut for Math.max(minValue, Math.min(maxValue, value))\n *\n * @param {number} value value\n * @param {number} minValue lower limit\n * @param {number} maxValue upper limit\n * @returns {number} clipped number\n */\nexport function clipValue(value, minValue, maxValue) {\n    return Math.max(minValue, Math.min(maxValue, value));\n}\n\n/**\n * Rounds a number to a given number of decimals\n *\n * @param {number} number a number\n * @param {number} n number of digits\n * @returns {number} rounded number\n */\nexport function roundToNDecimals(number, n) {\n    return +number.toFixed(n);\n}\n\n/**\n * Swaps two numbers if the first is larger than the second\n *\n * @param {number} x a number\n * @param {number} y a number\n * @returns {number[]} array with the smaller number first\n */\nexport function swapSoSmallerFirst(x, y) {\n    if (x <= y) {\n        return [x, y];\n    }\n    return [y, x];\n}\n\n/**\n * Counts the number of 1s in a binary number, e.g 100101 has 3 1s\n *\n * @see https://prismoskills.appspot.com/lessons/Bitwise_Operators/Count_ones_in_an_integer.jsp\n * @param {number} integer an integer number\n * @returns {number} number of 1s\n */\nexport function countOnesOfBinary(integer) {\n    let count = 0;\n    while (integer !== 0) {\n        // eslint-disable-next-line no-bitwise\n        integer = integer & (integer - 1);\n        count++;\n    }\n    return count;\n}\n\n/**\n * Local maxima are found by looking at entries that are higher than their left\n * and right neighbor, or higher than their only neighbor if they are at the\n * boundary.\n * IMPORTANT: does not find plateaus\n *\n * @param {number[]} array array\n * @returns {number[]} array with indices of maxima\n */\nexport function findLocalMaxima(array) {\n    if (array.length <= 1) { return []; }\n    if (array.length === 2) {\n        if (array[0] > array[1]) { return [0]; }\n        if (array[1] > array[0]) { return [1]; }\n        return [];\n    }\n    // General case with 3 or more\n    const maximaIndices = [];\n    if (array[0] > array[1]) {\n        maximaIndices.push(0);\n    }\n    let last = array[0];\n    let current = array[1];\n    for (let index = 1; index < array.length - 1; index++) {\n        const next = array[index + 1];\n        if (current > last && current > next) {\n            maximaIndices.push(index);\n        }\n        last = current;\n        current = next;\n    }\n    const lastIndex = array.length - 1;\n    if (array[lastIndex] > array[lastIndex - 1]) {\n        maximaIndices.push(array.length - 1);\n    }\n    return maximaIndices;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import Note from './Note';\r\nimport GuitarNote from './GuitarNote';\r\nimport { clipValue } from '../utils/MathUtils';\r\nimport { min } from 'd3';\r\n\r\n/**\r\n * This class represents an array of note objects.\r\n * It can be used to simplify operations on a track.\r\n *\r\n * @example\r\n *   const notes = [\r\n *       // Some Note objects\r\n *   ];\r\n *   const noteArr = new NoteArray(notes)\r\n *       // Add more notes (all notes will be sorted by time by default after this)\r\n *       .addNotes([])\r\n *       // Scale all note's sart and end time to make a track slower or faster\r\n *       .scaleTime(0.5)\r\n *       // Do more ...\r\n *       // This class also mirrors many functions from the Array class\r\n *       .sort(sortFunction).filter(filterFunction).map(mapFunction).slice(0, 20)\r\n *\r\n *   // Get Note objects back in a simple Array\r\n *   const transformedNotes = noteArr.getNotes();\r\n *   // [Note, Note, Note, ...]\r\n *\r\n *   // Or use an iterator\r\n *   for (const note of noteArr) {\r\n *       console.log(note);\r\n *   }\r\n */\r\nclass NoteArray {\r\n\r\n    _notes;\r\n\r\n    /**\r\n     * Creates a new NoteArray,\r\n     * will make a copy of the passed array and cast all notes\r\n     *\r\n     * @param {Note[]} notes notes, default: []\r\n     */\r\n    constructor(notes = []) {\r\n        // Parse notes\r\n        this._notes = notes.map(d => {\r\n            if (d.string !== undefined && d.fret !== undefined) {\r\n                return GuitarNote.from(d);\r\n            }\r\n            return Note.from(d);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns a simple array with all Note objects.\r\n     *\r\n     * @returns {Note[]} array with Note objects\r\n     * @example <caption>Getting notes as simple Note[]</caption>\r\n     *      const na = new NoteArray(someNotes);\r\n     *      const notes = na.getNotes();\r\n     * @example <caption>Using an iterator instead</caption>\r\n     *      const na = new NoteArray(someNotes);\r\n     *      for (const note of na) {\r\n     *          console.log(note);\r\n     *      }\r\n     *      // Or copy all Notes to an array with\r\n     *      const array = [...na];\r\n     */\r\n    getNotes() {\r\n        return this._notes;\r\n    }\r\n\r\n    /**\r\n     * Makes this class iterable\r\n     *\r\n     * @yields {Note} note\r\n     * @example <caption>Using an iterator for NoteArray</caption>\r\n     *      const na = new NoteArray(someNotes);\r\n     *      for (const note of na) {\r\n     *          console.log(note);\r\n     *      }\r\n     */\r\n    *[Symbol.iterator]() {\r\n        for (const note of this._notes) {\r\n            yield note;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Appends notes to this NoteArray\r\n     *\r\n     * @param {Note[]} notes notes\r\n     * @param {boolean} sort iff ture, sorts notes by start timeafter adding\r\n     *      the new ones (default:true)\r\n     * @returns {NoteArray} itself\r\n     */\r\n    addNotes(notes, sort = true) {\r\n        this._notes = [...this._notes, ...notes];\r\n        if (sort) {\r\n            this.sortByTime();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds the notes from another NoteArray to this NoteArray\r\n     * IMPORTANT: this does not change the notes or sort them!\r\n     * Take a look at NoteArray.append() if you want to extend\r\n     * a track at its end.\r\n     *\r\n     * @param {NoteArray} noteArray another NoteArray\r\n     * @returns {NoteArray} itself\r\n     */\r\n    concat(noteArray) {\r\n        this._notes = [...this._notes, ...noteArray._notes];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Appends notes to the end of this NoteArray, after shifting them by its\r\n     * duration. Set gap to something != 0 to create a gap or overlap.\r\n     *\r\n     * @param {NoteArray} noteArray another NoteArray\r\n     * @param {number} gap in seconds between the two parts\r\n     * @returns {NoteArray} itself\r\n     */\r\n    append(noteArray, gap = 0) {\r\n        const duration = this.getDuration();\r\n        const clone = noteArray.clone();\r\n        clone.shiftTime(duration + gap);\r\n        this._notes = [...this._notes, ...clone._notes];\r\n        this.sortByTime();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Repeats the notes of this array by concatenating a time-shifted copy\r\n     *\r\n     * @param {number} times number of times to repeat it\r\n     * @returns {NoteArray} a new NoteArray with the repeated note sequence\r\n     */\r\n    repeat(times) {\r\n        const result = this.clone();\r\n        if (times < 1) {\r\n            return new NoteArray();\r\n        }\r\n        if (times === 1) {\r\n            return result;\r\n        }\r\n        const copy = this.clone();\r\n        const duration = this.getDuration();\r\n        for (let index = 1; index < times; index++) {\r\n            // Shift notes in time\r\n            copy.shiftTime(duration);\r\n            // Result is a NoteArray so use .concat\r\n            // eslint-disable-next-line unicorn/prefer-spread\r\n            result.concat(copy);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns the number of Note objects in this NoteArray\r\n     *\r\n     * @returns {number} note count\r\n     */\r\n    length() {\r\n        return this._notes.length;\r\n    }\r\n\r\n    /**\r\n     * Returns the start time of the earliest note in this NoteArray\r\n     *\r\n     * @returns {number} start time\r\n     */\r\n    getStartTime() {\r\n        return min(this._notes, d => d.start);\r\n    }\r\n\r\n    /**\r\n     * Returns the duration of this note array in seconds from 0 to the end of\r\n     * the latest note.\r\n     *\r\n     * @returns {number} duration\r\n     */\r\n    getDuration() {\r\n        let duration = 0;\r\n        for (const note of this._notes) {\r\n            const noteEnd = note.end === null ? note.start : note.end;\r\n            if (noteEnd > duration) {\r\n                duration = noteEnd;\r\n            }\r\n        }\r\n        return duration;\r\n    }\r\n\r\n    /**\r\n     * Scales the time of each note by factor\r\n     *\r\n     * @param {number} factor factor\r\n     * @returns {NoteArray} itself\r\n     */\r\n    scaleTime(factor) {\r\n        this._notes = this._notes.map(n => n.scaleTime(factor));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds the speicifed number of seconds to each note\r\n     *\r\n     * @param {number} addedSeconds time to add in seconds\r\n     * @returns {NoteArray} itself\r\n     */\r\n    shiftTime(addedSeconds) {\r\n        this._notes = this._notes.map(n => n.shiftTime(addedSeconds));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Moves all notes s.t. the first starts at <start>\r\n     * Will sort the notes by start time.\r\n     *\r\n     * @param {number} startTime the new start time for the earliest note\r\n     * @returns {NoteArray} itself\r\n     */\r\n    shiftToStartAt(startTime) {\r\n        this.sortByTime();\r\n        const firstNoteStart = this._notes[0].start;\r\n        const offset = firstNoteStart - startTime;\r\n        this._notes.forEach(n => {\r\n            n.start -= offset;\r\n            if (n.end !== null) {\r\n                n.end -= offset;\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Similar to Array.forEach\r\n     *\r\n     * @param {Function} func a function\r\n     * @returns {NoteArray} this\r\n     */\r\n    forEach(func) {\r\n        this._notes.forEach(\r\n            (element, index, array) => func(element, index, array),\r\n        );\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sorts the notes\r\n     *\r\n     * @param {Function} sortFunction sort function, e.g. (a, b)=>a.start-b.start\r\n     * @returns {NoteArray} itself\r\n     */\r\n    sort(sortFunction) {\r\n        this._notes = this._notes.sort(sortFunction);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sorts the notes by start time\r\n     *\r\n     * @returns {NoteArray} itself\r\n     */\r\n    sortByTime() {\r\n        this._notes = this._notes.sort((a, b) => a.start - b.start);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Maps the notes using some mapping function\r\n     *\r\n     * @param {Function} mapFunction mapping function with same signature as\r\n     *      Array.map()\r\n     * @returns {NoteArray} itself\r\n     */\r\n    map(mapFunction) {\r\n        this._notes = this._notes.map(\r\n            (element, index, array) => mapFunction(element, index, array),\r\n        );\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Slices the notes by index, like Array.slice()\r\n     *\r\n     * @param {number} start start index\r\n     * @param {number} end end index\r\n     * @returns {NoteArray} itself\r\n     */\r\n    slice(start, end) {\r\n        this._notes = this._notes.slice(start, end);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Slices the notes by time.\r\n     * The modes 'end' and 'contained' will remove all notes with end === null!\r\n     * Notes will not be changed, e.g. start time will remain the same.\r\n     *\r\n     * @param {number} startTime start of the filter range in seconds\r\n     * @param {number} endTime end of the filter range in seconds (exclusive)\r\n     * @param {string} mode controls which note time to consider, one of:\r\n     *      - start: note.start must be inside range\r\n     *      - end: note.end must be inside range\r\n     *      - contained: BOTH note.start and note.end must be inside range\r\n     *      - touched: EITHER start or end (or both) must be inside range)\r\n     *      - touched-included: like touched, but also includes notes where\r\n     *          neither start nor end inside range, but range is completely\r\n     *          inside the note\r\n     *      (contained is default)\r\n     * @returns {NoteArray} itself\r\n     * @throws {'Invalid slicing mode'} When slicing mode is not one of the\r\n     *      above values\r\n     */\r\n    sliceTime(startTime, endTime, mode = 'contained') {\r\n        const start = startTime;\r\n        const end = endTime;\r\n        let filterFunc;\r\n        if (mode === 'start') {\r\n            filterFunc = n => n.start >= start && n.start < end;\r\n        } else if (mode === 'end') {\r\n            filterFunc = n => n.end !== null && n.end >= start && n.end < end;\r\n        } else if (mode === 'contained') {\r\n            filterFunc = n => n.end !== null && n.start >= start && n.end < end;\r\n        } else if (mode === 'touched') {\r\n            filterFunc = n =>\r\n                (n.start >= start && n.start <= end) ||\r\n                (n.end !== null && n.end >= start && n.end <= end);\r\n        } else if (mode === 'touched-included') {\r\n            filterFunc = n =>\r\n                // like touched\r\n                (n.start >= start && n.start <= end) ||\r\n                (n.end !== null && n.end >= start && n.end <= end) ||\r\n                // filter range inside note range\r\n                (n.end !== null && n.start <= start && n.end >= end);\r\n        } else {\r\n            throw new Error('Invalid slicing mode');\r\n        }\r\n        // eslint-disable-next-line unicorn/no-array-callback-reference\r\n        this._notes = this._notes.filter(filterFunc);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Slices this NoteArray into slices by the given times. Will not return\r\n     * NoteArrays but simple Note[][], where each item contains all notes of one\r\n     * time slice. Do not include 0, it will be assumed as first time to slice.\r\n     * To make sure notes are not contained twice in different slices use the\r\n     * mode 'start'.\r\n     *\r\n     * @param {number[]} times points of time at which to slice (in seconds)\r\n     * @param {string} mode see NoteArray.sliceTime()\r\n     * @returns {Note[][]} time slices\r\n     * @example\r\n     *      // Slice into 1 second slices\r\n     *      const slices = noteArray.sliceAtTimes([1, 2, 3], 'start)\r\n     */\r\n    sliceAtTimes(times, mode) {\r\n        const slices = [];\r\n        let lastTime = 0;\r\n        for (const time of times) {\r\n            slices.push(\r\n                this.clone()\r\n                    .sliceTime(lastTime, time, mode)\r\n                    .getNotes(),\r\n            );\r\n            lastTime = time;\r\n        }\r\n        return slices;\r\n    }\r\n\r\n    /**\r\n     * Filters the NoteArray like you would filter via Array.filter().\r\n     *\r\n     * @param {Function} filterFunction filter function, same signature as\r\n     *      Array.filter()\r\n     * @returns {NoteArray} itself\r\n     * @example\r\n     *      // Only keep notes longer than 1 second\r\n     *      const filtered = noteArray.filter(note=>note.getDuration()>1);\r\n     */\r\n    filter(filterFunction) {\r\n        this._notes = this._notes.filter((element, index, array) => filterFunction(element, index, array));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Filters by pitch, keeping only pitches specified in <pitches>\r\n     *\r\n     * @param {number[]|Set<number>} pitches array or Set of pitches to keep\r\n     * @returns {NoteArray} itself\r\n     */\r\n    filterPitches(pitches) {\r\n        if (!(pitches instanceof Set)) {\r\n            pitches = new Set(pitches);\r\n        }\r\n        this._notes = this._notes.filter(n => pitches.has(n.pitch));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Transposes each note by <steps> semitones, will clip pitches to [0, 127]\r\n     *\r\n     * @param {number} steps number of semitones to transpose, can be negative\r\n     * @returns {NoteArray} itself\r\n     */\r\n    transpose(steps) {\r\n        this._notes = this._notes.map(n => Note.from({\r\n            ...n,\r\n            pitch: clipValue(n.pitch + steps, 0, 127),\r\n        }));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Will set the octave of all notes to -1.\r\n     * This might cause two notes to exist at the same time and pitch!\r\n     *\r\n     * @returns {NoteArray} itself\r\n     */\r\n    removeOctaves() {\r\n        this._notes = this._notes.map(note => Note.from({\r\n            ...note,\r\n            pitch: note.pitch % 12,\r\n        }));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Reverses the note array, such that it can be played backwards.\r\n     *\r\n     * @returns {NoteArray} itself\r\n     */\r\n    reverse() {\r\n        // Update note start and end times\r\n        const duration = this.getDuration();\r\n        this._notes = this._notes.map(n => {\r\n            const newNote = n.clone();\r\n            newNote.start = duration - n.end;\r\n            newNote.end = newNote.start + n.getDuration();\r\n            return newNote;\r\n        });\r\n        // Sort by time\r\n        this.sortByTime();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns true if this NoteArray and otherNoteArray have equal attributes.\r\n     *\r\n     * @param {NoteArray} otherNoteArray another NoteArray\r\n     * @returns {boolean} true if equal\r\n     */\r\n    equals(otherNoteArray) {\r\n        if (!(otherNoteArray instanceof NoteArray)) {\r\n            return false;\r\n        }\r\n        const notes = otherNoteArray.getNotes();\r\n        if (this._notes.length !== notes.length) {\r\n            return false;\r\n        }\r\n        for (const [index, note] of notes.entries()) {\r\n            if (!this._notes[index].equals(note)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Deep clone, all contained notes are cloned as well.\r\n     *\r\n     * @returns {NoteArray} clone\r\n     */\r\n    clone() {\r\n        return new NoteArray(this._notes);\r\n    }\r\n}\r\n\r\nexport default NoteArray;\r\n","/**\r\n * @module utils/ArrayUtils\r\n */\r\n\r\nimport { intersection, union } from 'd3';\r\n\r\n/**\r\n * Shallow compares two arrays\r\n *\r\n * @param {Array} a an array\r\n * @param {Array} b another array\r\n * @returns {boolean} true iff equal\r\n */\r\nexport function arrayShallowEquals(a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n    for (const [index, element] of a.entries()) {\r\n        if (element !== b[index]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n// TODO: use https://github.com/d3/d3-array/blob/master/README.md#intersection etc\r\n\r\n/**\r\n * Checks if two arrays contain the same elements,\r\n * ignoring their ordering in each array.\r\n *\r\n * @param {Array} a an array\r\n * @param {Array} b another array\r\n * @param {boolean} checkLength also checks if arrays have the same length\r\n * @returns {boolean} true iff arrays contain same elements\r\n */\r\nexport function arrayHasSameElements(a, b, checkLength = true) {\r\n    if (checkLength && a.length !== b.length) {\r\n        return false;\r\n    }\r\n    const setA = new Set(a);\r\n    const setB = new Set(b);\r\n    for (const element of setA) {\r\n        if (!setB.has(element)) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const element of setB) {\r\n        if (!setA.has(element)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Jaccard index calulates the similarity of the sets as the size of the set\r\n * interaction divided by the size of the set union:\r\n * jackard_index = |intersection| / |union|\r\n *\r\n * @see https://en.wikipedia.org/wiki/Jaccard_index\r\n * @param {number[]} set1 set 1\r\n * @param {number[]} set2 set 2\r\n * @returns {number} similarity in [0, 1]\r\n */\r\nexport function jaccardIndex(set1, set2) {\r\n    if (set1.length === 0 && set2.length === 0) {\r\n        return 1;\r\n    }\r\n    return intersection(set1, set2).size / union(set1, set2).size;\r\n}\r\n\r\n/**\r\n * Removes duplicates from an Array by converting to a Set and back\r\n *\r\n * @param {Array} array an array\r\n * @returns {Array} array without duplicates\r\n */\r\nexport function removeDuplicates(array) {\r\n    return [...new Set(array)];\r\n}\r\n\r\n/**\r\n * Checks whether the array a contains the array b, i.e. whether the first\r\n * b.length elements are the same.\r\n *\r\n * @todo rename to arrayStartsWithArray\r\n * @param {Array} a an array\r\n * @param {Array} b a shorter array\r\n * @returns {boolean} true iff a contains b\r\n */\r\nexport function arrayContainsArray(a, b) {\r\n    if (a.length < b.length) {\r\n        return false;\r\n    }\r\n    for (const [index, element] of b.entries()) {\r\n        if (a[index] !== element) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * Returns the maximum numerical value from an array of arrays\r\n *\r\n * @param {number[][]} matrix matrix\r\n * @returns {number} maximum value\r\n */\r\nexport function getMatrixMax(matrix) {\r\n    let maximum = Number.NEGATIVE_INFINITY;\r\n    for (const row of matrix) {\r\n        for (const value of row) {\r\n            if (Number.isNaN(+value)) { continue; }\r\n            if (value > maximum) {\r\n                maximum = value;\r\n            }\r\n        }\r\n    }\r\n    return maximum;\r\n}\r\n\r\n/**\r\n * Stringifies a 2D array / matrix for logging onto the console.\r\n *\r\n * @param {any[][]} matrix the matrix\r\n * @param {string} colSeparator column separator\r\n * @param {string} rowSeparator row separator\r\n * @param {Function} formatter formatting for each element\r\n * @returns {string} stringified matrix\r\n */\r\nexport function formatMatrix(matrix, colSeparator = ', ', rowSeparator = '\\n', formatter) {\r\n    if (!matrix || matrix.length === 0) { return ''; }\r\n    if (formatter) {\r\n        matrix = matrix.map(row => row.map(value => formatter(value)));\r\n    }\r\n    return matrix.map(row => row.join(colSeparator)).join(rowSeparator);\r\n}\r\n\r\n/**\r\n * Returns the value in array that is closest to value.\r\n * Array MUST be sorted ascending.\r\n *\r\n * @param {Array} array array\r\n * @param {*} value value\r\n * @param {Function} accessor accessor\r\n * @returns {*} value in array closest to value\r\n */\r\nexport function binarySearch(array, value, accessor = d => d) {\r\n    // console.log('search', array, 'for', value);\r\n    // Handle short arrays\r\n    if (array.length <= 3) {\r\n        let closest = null;\r\n        let diff = Number.POSITIVE_INFINITY;\r\n        for (const element of array) {\r\n            const value_ = accessor(element);\r\n            const diff2 = Math.abs(value - value_);\r\n            if (diff2 < diff) {\r\n                closest = element;\r\n                diff = diff2;\r\n            }\r\n        }\r\n        return closest;\r\n    }\r\n    // Split longer array in two for binary search\r\n    const pivotPosition = Math.floor(array.length / 2);\r\n    const pivotElement = array[pivotPosition];\r\n    const pivotValue = accessor(pivotElement);\r\n    if (value === pivotValue) {\r\n        return pivotElement;\r\n    }\r\n    if (value < pivotValue) {\r\n        return binarySearch(array.slice(0, pivotPosition + 1), value, accessor);\r\n    }\r\n    if (value > pivotValue) {\r\n        return binarySearch(array.slice(pivotPosition - 1), value, accessor);\r\n    }\r\n}\r\n","export default function union(...others) {\n  const set = new Set();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n","import NoteArray from './NoteArray';\nimport { arrayShallowEquals } from '../utils/ArrayUtils';\n\n/**\n * Class for storing recorded notes alongside meta information.\n */\nclass Recording extends NoteArray {\n    /**\n     * Creates a new Recording\n     *\n     * @param {string} name name if the song\n     * @param {Date} date date of the recording\n     * @param {Note[]} notes array of Note objects\n     * @param {number} speed relative speed compared to ground truth, e.g. 0.5\n     *      for half as fast\n     * @param {number} selectedTrack track number of the ground truth to which\n     *      this recording belongs\n     * @param {number[]|null} timeSelection time selection of the ground truth\n     *      to which this recording belongs, or null if full duration\n     */\n    constructor(name, date, notes, speed = 1, selectedTrack = 0, timeSelection = null) {\n        super(notes);\n        this.name = name;\n        this.date = date;\n        // Save formatted date for faster access\n        this.dateString = date.toISOString()\n            .slice(0, 19)\n            .replace('T', ' ');\n        this.speed = +speed;\n        this.selectedTrack = +selectedTrack;\n        this.timeSelection = timeSelection;\n        this.sortByTime();\n    }\n\n    /**\n     * Returns a copy of the Note object\n     *\n     * @returns {Recording} new recording\n     */\n    clone() {\n        return new Recording(\n            this.name,\n            this.date,\n            this.getNotes().map(d => d.clone()),\n            this.speed,\n            this.selectedTrack,\n            this.timeSelection === null ? null : [...this.timeSelection],\n        );\n    }\n\n    /**\n     * Returns true if this Recording and otherRecording have equal attributes.\n     *\n     * @param {Recording} otherRecording another Recording\n     * @returns {boolean} true if equal\n     */\n    equals(otherRecording) {\n        if (!(otherRecording instanceof Recording)) { return false; }\n        if (this.name !== otherRecording.name) { return false; }\n        if (this.date.getTime() !== otherRecording.date.getTime()) { return false; }\n        if (this.speed !== otherRecording.speed) { return false; }\n        if (this.selectedTrack !== otherRecording.selectedTrack) { return false; }\n        if (this.timeSelection !== otherRecording.timeSelection) {\n            if (this.timeSelection === null || otherRecording.timeSelection === null) {\n                return false;\n            }\n            if (!arrayShallowEquals(this.timeSelection, otherRecording.timeSelection)) {\n                return false;\n            }\n        }\n        // Below is the same as NoteArray\n        const notes1 = this.getNotes();\n        const notes2 = otherRecording.getNotes();\n        if (notes1.length !== notes2.length) {\n            return false;\n        }\n        for (const [index, element] of notes1.entries()) {\n            if (!element.equals(notes2[index])) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Turns the recoring into a simple object with the same properties\n     *\n     * @returns {object} simple object representation of the recording\n     */\n    toSimpleObject() {\n        return {\n            name: this.name,\n            date: this.date,\n            notes: this.getNotes(),\n            speed: this.speed,\n            selectedTrack: this.selectedTrack,\n            timeSelection: this.timeSelection,\n        };\n    }\n\n    /**\n     * Creates a Note object from an object via destructuring\n     *\n     * @param {object} object object with at least {name, date, notes, speed}\n     * @returns {Recording} new note\n     * @throws {Error} when name, date, or notes are missing\n     */\n    static from(object) {\n        let { name, date, notes } = object;\n        // Check for undefined\n        const values = [name, date, notes];\n        const names = ['name', 'date', 'notes'];\n        for (const [index, value] of values.entries()) {\n            if (value === undefined || value === null) {\n                throw new Error(`Cannot create Recording with undefined ${names[index]}`);\n            }\n        }\n        // Parse date if it is a string\n        if (typeof (date) === 'string') {\n            date = new Date(Date.parse(date));\n        }\n        const { speed, selectedTrack, timeSelection } = object;\n        return new Recording(\n            name,\n            date,\n            notes,\n            speed,\n            selectedTrack,\n            timeSelection,\n        );\n    }\n}\n\nexport default Recording;\n","import Note from '../types/Note';\r\nimport GuitarNote from '../types/GuitarNote';\r\nimport { getMidiNoteByNameAndOctave } from './Midi';\r\nimport { max } from 'd3';\r\nimport { roundToNDecimals } from '../utils/MathUtils';\r\n\r\n/**\r\n * @module fileFormats/MusicXmlParser\r\n */\r\n\r\n\r\n// Precision in number of digits when rounding seconds\r\nconst ROUNDING_PRECISION = 5;\r\n\r\n/**\r\n * Converts a collection of MusicXML measures to JavaScript Objects with timing information in seconds.\r\n * Also calculates the position of measure lines and the total time in seconds.\r\n *\r\n * @param {XMLDocument} xml MusicXML document\r\n * @param {boolean} log set to true to log results etc. to the console\r\n * @returns {object} parsed document\r\n */\r\nexport function preprocessMusicXmlData(xml, log = false) {\r\n    if (log) {\r\n        console.groupCollapsed('[MusicXmlParser] Parsing MusicXML');\r\n        console.log(xml);\r\n    }\r\n    // Get part and instrument names\r\n    const partNameElements = xml.querySelectorAll('part-name');\r\n    const instruments = xml.querySelectorAll('score-instrument');\r\n    const partNames = [];\r\n    const instrumentNames = [];\r\n    for (const p of partNameElements) {\r\n        partNames.push(p.innerHTML);\r\n    }\r\n    for (const index of instruments) {\r\n        instrumentNames.push(index.children[0].innerHTML);\r\n    }\r\n    // Get instrument definitions\r\n    const drumInstrumentMap = getDrumInstrumentMap(xml);\r\n    // Preprocess notes\r\n    const parts = xml.querySelectorAll('part');\r\n    const parsedParts = [];\r\n    for (const part of parts) {\r\n        parsedParts.push(preprocessMusicXmlPart(part, drumInstrumentMap));\r\n    }\r\n    const result = {\r\n        parts: parsedParts,\r\n        partNames,\r\n        instruments: instrumentNames,\r\n        totalTime: max(parsedParts, d => d.totalTime),\r\n    };\r\n    if (log) {\r\n        console.log(result);\r\n        console.groupEnd();\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Converts a collection of MusicXML measures to JavaScript Objects with timing information in seconds.\r\n * Also calculates the position of measure lines and the total time in seconds.\r\n *\r\n * @private\r\n * @param {HTMLElement} part MusicXML part\r\n * @param {Map} drumInstrumentMap midiPitch = map.get(partId).get(instrId)\r\n * @returns {object} parsed measures\r\n */\r\nfunction preprocessMusicXmlPart(part, drumInstrumentMap) {\r\n    // Handle Guitar sheets with stave and tab (so dublicate notes)\r\n    part = handleStaveAndTab(part);\r\n    // Handle repetitions by duplicating measures\r\n    let measures = part.children;\r\n    measures = duplicateRepeatedMeasures(measures);\r\n\r\n    let currentTime = 0;\r\n    let divisions;\r\n    let tempo = 120;\r\n    let beats = 4;\r\n    let beatType = 4;\r\n    // Default velocity is 90 https://www.musicxml.com/tutorial/the-midi-compatible-part/sound-suggestions/\r\n    const defaultVelocity = 90;\r\n    const velocityFactor = 64 / 71;\r\n    let velocity = Math.round(defaultVelocity * velocityFactor);\r\n\r\n    // Handle changing tempo and beat type\r\n    const tempoChanges = [];\r\n    const beatTypeChanges = [];\r\n    const keySignatureChanges = [];\r\n    const noteObjs = [];\r\n    const measureLinePositions = [];\r\n    for (const measure of measures) {\r\n        const currentTimeRounded = roundToNDecimals(currentTime, ROUNDING_PRECISION);\r\n        // Try to update metrics (if they are not set, keep the old ones)\r\n        try {\r\n            const soundElements = measure.querySelectorAll('sound');\r\n            for (const element of soundElements) {\r\n                const tempoValue = element.getAttribute('tempo');\r\n                if (tempoValue !== null) {\r\n                    tempo = roundToNDecimals(+tempoValue, 3);\r\n                    tempoChanges.push({\r\n                        time: currentTimeRounded,\r\n                        tempo,\r\n                    });\r\n                }\r\n                // TODO: this only support one tempo change per measure!\r\n                // TODO: tempo changes that are not at the measure start will be false\r\n                // TODO: solution: go trough all children of measure: notes and other children\r\n                // notes will update the time\r\n                break;\r\n            }\r\n        } catch { }\r\n        try {\r\n            divisions = +measure.querySelectorAll('divisions')[0].innerHTML;\r\n        } catch { }\r\n        try {\r\n            beats = +measure.querySelectorAll('beats')[0].innerHTML;\r\n            beatType = +measure.querySelectorAll('beat-type')[0].innerHTML;\r\n            beatTypeChanges.push({\r\n                time: currentTimeRounded,\r\n                beats,\r\n                beatType,\r\n            });\r\n        } catch { }\r\n        const secondsPerBeat = 1 / (tempo / 60);\r\n        try {\r\n            const fifths = +measure.querySelectorAll('fifths')[0].innerHTML;\r\n            const { key, scale } = keySignatureMap.get(fifths);\r\n            keySignatureChanges.push({\r\n                time: currentTimeRounded,\r\n                key,\r\n                scale,\r\n            });\r\n        } catch { }\r\n\r\n        // Read notes\r\n        let lastNoteDuration = 0;\r\n        for (const child of measure.children) {\r\n            if (child.nodeName === 'backup') {\r\n                // Handle backup, which reduces the current time to handle multiple staves\r\n                const duration = +child.querySelectorAll('duration')[0].innerHTML;\r\n                const durationInSeconds = getDurationInSeconds(duration, divisions, secondsPerBeat);\r\n                currentTime -= durationInSeconds;\r\n            } else if (child.nodeName === 'forward') {\r\n                // Forward is inverse of backward\r\n                const duration = +child.querySelectorAll('duration')[0].innerHTML;\r\n                const durationInSeconds = getDurationInSeconds(duration, divisions, secondsPerBeat);\r\n                currentTime += durationInSeconds;\r\n            } else if (child.nodeName === 'direction') {\r\n                // Handle directions such as dynamics\r\n                for (const direction of child.children) {\r\n                    if (direction.nodeName === 'sound' && direction.getAttribute('dynamics')) {\r\n                        // Convert number... https://www.musicxml.com/tutorial/the-midi-compatible-part/sound-suggestions/\r\n                        velocity = Math.round(velocityFactor * +direction.getAttribute('dynamics'));\r\n                    }\r\n                    // TODO: handle others, e.g. tempo\r\n                    // if (direction.nodeName === 'sound' && direction.getAttribute('tempo')) {\r\n                    //     const tempoValue = Math.round(+direction.getAttribute('tempo'));\r\n                    //     tempo = roundToNDecimals(tempoValue, 3);\r\n                    //     tempoChanges.push({\r\n                    //         time: roundToNDecimals(currentTime, ROUNDING_PRECISION),\r\n                    //         tempo,\r\n                    //     });\r\n                    // }\r\n                }\r\n            } else if (child.nodeName === 'note') {\r\n                const note = child;\r\n                try {\r\n                    // Get note duration in seconds\r\n                    const duration = +note.querySelectorAll('duration')[0].innerHTML;\r\n                    const durationInSeconds = getDurationInSeconds(duration, divisions, secondsPerBeat);\r\n                    // Do not create note object for rests, only increase time\r\n                    const isRest = note.querySelectorAll('rest').length > 0;\r\n                    if (isRest) {\r\n                        currentTime += durationInSeconds;\r\n                        continue;\r\n                    }\r\n                    let pitch;\r\n                    if (note.querySelectorAll('unpitched').length > 0) {\r\n                        // Handle drum notes\r\n                        const instrumentId = note.querySelectorAll('instrument')[0].id;\r\n                        pitch = drumInstrumentMap.get(part.id).get(instrumentId);\r\n                    } else {\r\n                        // Get MIDI pitch\r\n                        // Handle <alter> tag for accidentals\r\n                        const alter = +(note.querySelectorAll('alter')[0]?.innerHTML ?? 0);\r\n                        const step = note.querySelectorAll('step')[0].innerHTML;\r\n                        const octave = +note.querySelectorAll('octave')[0].innerHTML;\r\n                        pitch = getMidiNoteByNameAndOctave(step, octave).pitch + alter;\r\n                    }\r\n                    // TODO: Handle dynamics defined as tag inside a note\r\n                    const dynamicsTag = note.querySelectorAll('dynamics')[0]?.children[0];\r\n                    if (dynamicsTag) {\r\n                        velocity = dynamicsMap.get(dynamicsTag.nodeName);\r\n                    }\r\n\r\n                    // Is this a chord? (https://www.musicxml.com/tutorial/the-midi-compatible-part/chords/)\r\n                    const isChord = note.querySelectorAll('chord').length > 0;\r\n                    if (isChord) {\r\n                        currentTime -= lastNoteDuration;\r\n                    }\r\n                    // Is this note tied?\r\n                    const tieElement = note.querySelectorAll('tie')[0];\r\n                    if (tieElement && tieElement.getAttribute('type') === 'stop') {\r\n                        const noteEnd = currentTime + durationInSeconds;\r\n                        // Find last note with this pitch and update end\r\n                        for (let index = noteObjs.length - 1; index > 0; index--) {\r\n                            const n = noteObjs[index];\r\n                            if (n.pitch === pitch) {\r\n                                n.end = noteEnd;\r\n                                break;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // Staff is used as note's channel for non-guitar notes\r\n                        const staff = +(note.querySelectorAll('staff')[0]?.innerHTML ?? 1);\r\n                        // TODO: use xml note type?\r\n                        // const type = note.getElementsByTagName('type')[0].innerHTML;\r\n                        const startTime = roundToNDecimals(currentTime, ROUNDING_PRECISION);\r\n                        const endTime = roundToNDecimals(currentTime + durationInSeconds, ROUNDING_PRECISION);\r\n                        // Try to get guitar specific data\r\n                        let string = null;\r\n                        let fret = null;\r\n                        try {\r\n                            fret = +note.querySelectorAll('fret')[0].innerHTML;\r\n                            string = +note.querySelectorAll('string')[0].innerHTML;\r\n                        } catch { }\r\n                        if (string !== null && fret !== null) {\r\n                            noteObjs.push(new GuitarNote(\r\n                                pitch,\r\n                                startTime,\r\n                                velocity,\r\n                                string,\r\n                                endTime,\r\n                                string,\r\n                                fret,\r\n                            ));\r\n                        } else {\r\n                            noteObjs.push(new Note(\r\n                                pitch,\r\n                                startTime,\r\n                                velocity,\r\n                                // MusicXML starts with 1 but MIDI with 0\r\n                                staff - 1,\r\n                                endTime,\r\n                            ));\r\n                        }\r\n                    }\r\n                    lastNoteDuration = durationInSeconds;\r\n                    currentTime += durationInSeconds;\r\n                } catch (error) {\r\n                    console.warn('[MusicXmlParser] Cannot parse MusicXML note', error, note);\r\n                }\r\n            }\r\n        }\r\n        // Add measure line position\r\n        measureLinePositions.push(roundToNDecimals(currentTime, ROUNDING_PRECISION));\r\n    }\r\n    // Defaults\r\n    if (tempoChanges.length === 0) {\r\n        tempoChanges.push({ tempo: 120, time: 0 });\r\n    }\r\n    if (beatTypeChanges.length === 0) {\r\n        beatTypeChanges.push({ beats: 4, beatType: 4, time: 0 });\r\n    }\r\n    if (keySignatureChanges.length === 0) {\r\n        keySignatureChanges.push({ key: 'C', scale: 'major', time: 0 });\r\n    }\r\n    const result = {\r\n        noteObjs: noteObjs,\r\n        totalTime: currentTime,\r\n        measureLinePositions,\r\n        tempoChanges,\r\n        beatTypeChanges,\r\n        keySignatureChanges,\r\n        tuning: getTuningPitches(measures),\r\n    };\r\n    // console.log('[MusicXmlParser] Parsed part: ', result);\r\n    return result;\r\n}\r\n\r\n/**\r\n * Calculates the duration in seconds of a note, rest or backup\r\n *\r\n * @private\r\n * @param {number} duration duration of the event in divisions\r\n * @param {number} divisions MusicXML time divisions value\r\n * @param {number} secondsPerBeat seconds per beat\r\n * @returns {number} duration in seconds\r\n */\r\nfunction getDurationInSeconds(duration, divisions, secondsPerBeat) {\r\n    const durationInBeats = duration / divisions;\r\n    const durationInSeconds = durationInBeats * secondsPerBeat;\r\n    return durationInSeconds;\r\n}\r\n\r\n/**\r\n * Resolves repetitions by simply duplicating repeated measures.\r\n * Handles volta lines (ending one, ending two).\r\n *\r\n * @todo handle 3x etc\r\n * @todo write tests\r\n * @see https://www.musicxml.com/tutorial/the-midi-compatible-part/repeats/\r\n * @private\r\n * @param {HTMLCollection} measures measures\r\n * @returns {HTMLAllCollection[]} processed measures\r\n */\r\nfunction duplicateRepeatedMeasures(measures) {\r\n    let resultMeasures = [];\r\n    let currentRepeatedSection = [];\r\n    let isAlternativeEndingOne = false;\r\n    for (const measure of measures) {\r\n        // Check if this is the first measure of an volta ending 1\r\n        const endingMarks = measure.querySelectorAll('ending');\r\n        if (\r\n            +(endingMarks[0]?.getAttribute('number')) === 1\r\n            && endingMarks[0]?.getAttribute('type') === 'start'\r\n        ) {\r\n            isAlternativeEndingOne = true;\r\n        }\r\n        // Handle repetition marks\r\n        const repetitionMarks = measure.querySelectorAll('repeat');\r\n        if (repetitionMarks.length === 2) {\r\n            // Only this measure is repeated\r\n            // TODO: volta endings don't make sense here so no need to handle?\r\n            const times = repetitionMarks[1].getAttribute('times') || 2;\r\n            const repetition = Array.from({ length: +times }).fill(measure);\r\n            if (currentRepeatedSection.length === 0) {\r\n                resultMeasures = [...resultMeasures, ...repetition];\r\n            } else {\r\n                currentRepeatedSection = [...currentRepeatedSection, ...repetition];\r\n            }\r\n        } else if (repetitionMarks.length === 1) {\r\n            // Repetition either starts or ends here\r\n            const direction = repetitionMarks[0].getAttribute('direction');\r\n            if (direction === 'forward') {\r\n                // Start new repetition\r\n                currentRepeatedSection.push(measure);\r\n            } else if (direction === 'backward') {\r\n                const times = repetitionMarks[0].getAttribute('times') || 2;\r\n                if (currentRepeatedSection.length > 0) {\r\n                    // Finish current repetition\r\n                    if (!isAlternativeEndingOne) {\r\n                        currentRepeatedSection.push(measure);\r\n                        for (let index = 0; index < times; index++) {\r\n                            resultMeasures = [...resultMeasures, ...currentRepeatedSection];\r\n                        }\r\n                    } else {\r\n                        // Only include ending 1 in first repetition\r\n                        const firstRepetition = [...currentRepeatedSection, measure];\r\n                        resultMeasures = [...resultMeasures, ...firstRepetition];\r\n                        for (let index = 1; index < times; index++) {\r\n                            resultMeasures = [...resultMeasures, ...currentRepeatedSection];\r\n                        }\r\n                    }\r\n                    currentRepeatedSection = [];\r\n                } else {\r\n                    // Repetition started at the start of the piece, repeat all\r\n                    // we have until here\r\n                    const allMeasuresUntilHere = [...resultMeasures];\r\n                    for (let index = 1; index < times; index++) {\r\n                        resultMeasures = [...resultMeasures, ...allMeasuresUntilHere];\r\n                    }\r\n                    // resultMeasures = [...resultMeasures, ...resultMeasures];\r\n                }\r\n            }\r\n        } else {\r\n            if (!isAlternativeEndingOne) {\r\n                // Measure without repetition marks, but might still be inside a\r\n                // repetition\r\n                if (currentRepeatedSection.length === 0) {\r\n                    resultMeasures.push(measure);\r\n                } else {\r\n                    currentRepeatedSection.push(measure);\r\n                }\r\n            }\r\n        }\r\n        // Check if this is the last measure of a volta ending 1\r\n        if (isAlternativeEndingOne) {\r\n            for (const endingMark of endingMarks) {\r\n                if (\r\n                    +(endingMark.getAttribute('number')) === 1\r\n                    && endingMark.getAttribute('type') === 'stop'\r\n                ) {\r\n                    isAlternativeEndingOne = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return resultMeasures;\r\n}\r\n\r\n/**\r\n * Handles MusicXML measures that contain both a stave and a tab. Since every\r\n * note is described twice, we just need to remove those without string, fret\r\n * information\r\n * This function also removes <backup> tags which should not be necessary after\r\n * removing dublicate notes (only if string, fret notes were found).\r\n *\r\n * @private\r\n * @param {HTMLElement} track a MusicXML track, i.e. its measures\r\n * @returns {HTMLCollection} cleaned-up MusicXML measure\r\n */\r\nfunction handleStaveAndTab(track) {\r\n    const notes = track.querySelectorAll('note');\r\n    // Check whether this file has notes with string, fret information\r\n    let hasStringFretNotes = false;\r\n    for (const note of notes) {\r\n        if (\r\n            note.querySelectorAll('string').length > 0\r\n            && note.querySelectorAll('fret').length > 0\r\n        ) {\r\n            hasStringFretNotes = true;\r\n            break;\r\n        }\r\n    }\r\n    // If some notes have string and fret information, remove all the others\r\n    if (hasStringFretNotes) {\r\n        for (const note of notes) {\r\n            if (note.querySelectorAll('fret').length === 0) {\r\n                note.remove();\r\n            }\r\n        }\r\n        // Also remove <backup> tags which were only there due to having to\r\n        // staves\r\n        const backups = track.querySelectorAll('backup');\r\n        for (const backup of backups) {\r\n            backup.remove();\r\n        }\r\n    }\r\n    return track;\r\n}\r\n\r\n/**\r\n * Gets the tuning for a MusicXML part\r\n *\r\n * @private\r\n * @param {HTMLCollection} measures the measures of the parts\r\n * @returns {number[]} pitches of the tuning or [] if none is found\r\n */\r\nfunction getTuningPitches(measures) {\r\n    for (const measure of measures) {\r\n        try {\r\n            const tuningPitches = [];\r\n            const staffTunings = measure.querySelectorAll('staff-tuning');\r\n            for (const st of staffTunings) {\r\n                const tuningNote = st.querySelectorAll('tuning-step')[0].innerHTML;\r\n                const tuningOctave = +st.querySelectorAll('tuning-octave')[0].innerHTML;\r\n                // let line = +st.getAttribute('line');\r\n                // console.log(`String ${line} is tuned to ${tuningNote}${tuningOctave}`);\r\n                tuningPitches.push(getMidiNoteByNameAndOctave(tuningNote, tuningOctave).pitch);\r\n            }\r\n            return tuningPitches;\r\n        } catch { }\r\n    }\r\n    return [];\r\n}\r\n\r\n/**\r\n * Returns a map containing maps, such that result.get(partId).get(instrId)\r\n * gives you the instrument with the ID instrId as defined in the part partId.\r\n *\r\n * This is needed to map drum notes to MIDI pitches.\r\n *\r\n * @param {XMLDocument} xml MusicXML\r\n * @returns {Map} map with structure result.get(partId).get(instrId)\r\n */\r\nfunction getDrumInstrumentMap(xml) {\r\n    const partMap = new Map();\r\n    const scoreParts = xml.querySelectorAll('part-list')[0]?.querySelectorAll('score-part');\r\n    if (!scoreParts) { return partMap; }\r\n    for (const scorePart of scoreParts) {\r\n        const partId = scorePart.id;\r\n        const instruMap = new Map();\r\n        const midiInstrs = scorePart.querySelectorAll('midi-instrument');\r\n        for (const midiInstr of midiInstrs) {\r\n            const instrId = midiInstr.id;\r\n            const pitch = midiInstr.querySelectorAll('midi-unpitched')[0]?.innerHTML;\r\n            if (pitch) {\r\n                instruMap.set(instrId, +pitch);\r\n            }\r\n        }\r\n        partMap.set(partId, instruMap);\r\n    }\r\n    return partMap;\r\n}\r\n\r\n/**\r\n * Map from fiths to key signature\r\n *\r\n * @type {Map<number,object>}\r\n */\r\nconst keySignatureMap = new Map([\r\n    [-7, { key: 'Cb', scale: 'major' }],\r\n    [-6, { key: 'Gb', scale: 'major' }],\r\n    [-5, { key: 'Db', scale: 'major' }],\r\n    [-4, { key: 'Ab', scale: 'major' }],\r\n    [-3, { key: 'Eb', scale: 'major' }],\r\n    [-2, { key: 'Bb', scale: 'major' }],\r\n    [-1, { key: 'F', scale: 'major' }],\r\n    [0, { key: 'C', scale: 'major' }],\r\n    [1, { key: 'G', scale: 'major' }],\r\n    [2, { key: 'D', scale: 'major' }],\r\n    [3, { key: 'A', scale: 'major' }],\r\n    [4, { key: 'E', scale: 'major' }],\r\n    [5, { key: 'B', scale: 'major' }],\r\n    [6, { key: 'F#', scale: 'major' }],\r\n    [7, { key: 'C#', scale: 'major' }],\r\n]);\r\n\r\n/**\r\n * Maps dynamics to MIDI velocity numbers, i.e. 'ff' to 102\r\n *\r\n * @type {Map<string,number>}\r\n */\r\nconst dynamicsMap = new Map([\r\n    ['ppp', 25],\r\n    ['pp', 38],\r\n    ['p', 51],\r\n    ['mp', 64],\r\n    ['mf', 76],\r\n    ['f', 89],\r\n    ['ff', 102],\r\n    ['fff', 114],\r\n]);\r\n","import { group } from 'd3';\r\n\r\n/**\r\n * @module utils/MiscUtils\r\n */\r\n\r\n/**\r\n * Converts beats per minute to seconds per beat\r\n *\r\n * @deprecated use MusicUtils.bpmToSecondsPerBeat instead\r\n * @param {number} bpm tempo in beats per minute\r\n * @returns {number} seconds per beat\r\n */\r\nexport function bpmToSecondsPerBeat(bpm) {\r\n    return 1 / (bpm / 60);\r\n}\r\n\r\n/**\r\n * Clones a map where the values are flat objects,\r\n * i.e. values do not contain objects themselfes.\r\n *\r\n * @param {Map} map a map with object values\r\n * @returns {Map} a copy of the map with copies of the value objects\r\n */\r\nexport function deepCloneFlatObjectMap(map) {\r\n    const result = new Map();\r\n    for (const [key, value] of map.entries()) {\r\n        result.set(key, { ...value });\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Groups the Notes from multiple tracks\r\n *\r\n * @param {Note[][]} tracks array of arrays of Note objects\r\n * @returns {Map} grouping\r\n */\r\nexport function groupNotesByPitch(tracks) {\r\n    const allNotes = tracks.flat();\r\n    if (allNotes.length === 0) {\r\n        return new Map();\r\n    }\r\n    return group(allNotes, d => d.pitch);\r\n}\r\n\r\n/**\r\n * Reverses a given string.\r\n *\r\n * @param {string} s string\r\n * @returns {string} reversed string\r\n */\r\nexport function reverseString(s) {\r\n    return s.split('')\r\n        .reverse()\r\n        .join('');\r\n}\r\n\r\n/**\r\n * Given some notes and a target note, finds\r\n * the note that has its start time closest to\r\n * the one of targetNote\r\n *\r\n * @todo replace by d3 argmin or sth?\r\n * @param {Note[]} notes notes\r\n * @param {Note} targetNote target note\r\n * @returns {Note} closest note to targetNote\r\n */\r\nexport function findNearest(notes, targetNote) {\r\n    if (!notes || notes.length === 0 || !targetNote) {\r\n        return null;\r\n    }\r\n    let nearest = null;\r\n    let dist = Number.POSITIVE_INFINITY;\r\n    const targetStart = targetNote.start;\r\n    for (const n of notes) {\r\n        const newDist = Math.abs(n.start - targetStart);\r\n        if (newDist < dist) {\r\n            dist = newDist;\r\n            nearest = n;\r\n        }\r\n    }\r\n    return nearest;\r\n}\r\n","import Note from '../types/Note';\nimport { group, max } from 'd3';\nimport { bpmToSecondsPerBeat } from '../utils/MiscUtils';\nimport { roundToNDecimals } from '../utils/MathUtils';\n\n/**\n * @module fileFormats/MidiParser\n *\n * @todo parse pitch bends\n */\n\n\n// Precision in number of digits when rounding seconds\nconst ROUNDING_PRECISION = 5;\n\n/**\n * Parses a MIDI JSON file to get Note objects with absolute time in seconds.\n *\n * @see https://github.com/colxi/midi-parser-js/wiki/MIDI-File-Format-Specifications\n * @param {object} data MIDI data in JSON format\n * @param {boolean} splitFormat0IntoTracks split MIDI format 0 data into tracks\n *      instead of using channels?\n * @param {boolean} log set to true to log results etc. to the console\n * @returns {object} including an array of note objects and meta information\n */\nexport function preprocessMidiFileData(data, splitFormat0IntoTracks = true, log = false) {\n    if (data === null || data === undefined) {\n        // console.warn('[MidiParser] MIDI data is null');\n        return;\n    }\n    if (!data.track) {\n        console.warn('[MidiParser] MIDI data has no track');\n        return;\n    }\n    if (log) {\n        console.groupCollapsed('[MidiParser] Preprocessing MIDI file data');\n    }\n    // Parse notes\n    let parsedTracks = [];\n    const { tempoChanges, beatTypeChanges, keySignatureChanges } = getSignatureChanges(data.track);\n    // for (let index = 0; index < data.track.length; index++) {\n    //     const track = data.track[index];\n    for (const track of data.track) {\n        const t = parseMidiTrack(\n            track,\n            data.timeDivision,\n            tempoChanges,\n            beatTypeChanges,\n            keySignatureChanges,\n            log,\n        );\n        if (t !== null) {\n            parsedTracks.push(t);\n        }\n    }\n    // Split MIDI format 0 data into tracks instead of having channels\n    if (data.formatType === 0 && splitFormat0IntoTracks && parsedTracks.length === 1) {\n        parsedTracks = splitFormat0(parsedTracks);\n    }\n    // Generate measure lines from tempo and beat type changes\n    const totalTime = max(parsedTracks, d => d?.totalTime ?? 0);\n    const measureLinePositions = getMeasureLines(tempoChanges, beatTypeChanges, totalTime);\n    const result = {\n        tracks: parsedTracks,\n        totalTime,\n        tempoChanges,\n        beatTypeChanges,\n        keySignatureChanges,\n        measureLinePositions,\n    };\n    if (log) {\n        console.log(`Got ${parsedTracks.length} MIDI tracks`, result);\n        console.groupEnd();\n    }\n    return result;\n}\n\n/**\n * Parses a single MIDI track and pushes it to parsedTracks if it contains notes\n *\n * @private\n * @param {object} track a MIDI track\n * @param {number} timeDivision MIDI time division\n * @param {object[]} tempoChanges array with tempo change events\n * @param {object[]} beatTypeChanges array with beat type change events\n * @param {object[]} keySignatureChanges array with key signature change events\n * @param {boolean} log if true, debug info will be logged to the console\n * @returns {object} parsed track\n */\nfunction parseMidiTrack(track, timeDivision, tempoChanges, beatTypeChanges, keySignatureChanges, log) {\n    const notes = [];\n    let tempo = tempoChanges[0]?.tempo ?? 120;\n    let currentTick = 0;\n    let currentTime;\n    let milliSecondsPerTick = getMillisecondsPerTick(tempo, timeDivision);\n    let tickOfLastTempoChange = 0;\n    let timeOfLastTempoChange = 0;\n    // This map stores note-on note that have not yet been finished by a note-off\n    const unfinishedNotes = new Map();\n    for (const event of track.event) {\n        const type = event.type;\n        // Ignore delta time if it is a meta event (fixes some parsing issues)\n        if (type === EVENT_TYPES.meta) {\n            continue;\n        }\n        currentTick += event.deltaTime;\n        // Update beat type change times\n        for (const btc of beatTypeChanges) {\n            if (btc.time === undefined && btc.tick <= currentTick) {\n                const t = (btc.tick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange;\n                btc.time = roundToNDecimals(t, ROUNDING_PRECISION);\n            }\n        }\n        // Update key signature change times\n        for (const ksc of keySignatureChanges) {\n            if (ksc.time === undefined && ksc.tick <= currentTick) {\n                const t = (ksc.tick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange;\n                ksc.time = roundToNDecimals(t, ROUNDING_PRECISION);\n            }\n        }\n        // Handle last tempo change in track differently\n        let mostRecentTempoChange;\n        if (tempoChanges.length > 0 && currentTick > tempoChanges[tempoChanges.length - 1].tick) {\n            mostRecentTempoChange = tempoChanges[tempoChanges.length - 1];\n        }\n        // Get current tempo, as soon as we are too far, 1 step back\n        for (let index = 1; index < tempoChanges.length; index++) {\n            const tick = tempoChanges[index].tick;\n            if (tick > currentTick) {\n                const change = tempoChanges[index - 1];\n                mostRecentTempoChange = change;\n                break;\n            }\n        }\n        // React to tempo changes\n        if (mostRecentTempoChange && mostRecentTempoChange.tempo !== tempo) {\n            const tick = mostRecentTempoChange.tick;\n            timeOfLastTempoChange = (tick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange;\n            tickOfLastTempoChange = tick;\n            mostRecentTempoChange.time = roundToNDecimals(timeOfLastTempoChange, ROUNDING_PRECISION);\n            tempo = mostRecentTempoChange.tempo;\n            milliSecondsPerTick = getMillisecondsPerTick(tempo, timeDivision);\n        }\n        // Update current time in seconds\n        currentTime = (currentTick - tickOfLastTempoChange) * milliSecondsPerTick / 1000 + timeOfLastTempoChange;\n        // Skip events that are neither note-on nor note-off\n        if (type !== EVENT_TYPES.noteOn && type !== EVENT_TYPES.noteOff) {\n            continue;\n        }\n        const [pitch, velocity] = event.data;\n        const channel = event.channel;\n        const key = `${pitch} ${channel}`;\n        if (type === EVENT_TYPES.noteOff || (type === EVENT_TYPES.noteOn && velocity === 0)) {\n            // Handle note-off\n            if (unfinishedNotes.has(key)) {\n                unfinishedNotes.get(key).end = currentTime;\n                unfinishedNotes.delete(key);\n            } else {\n                if (log) {\n                    console.warn('Did not find an unfinished note for note-off event!');\n                    console.log(event);\n                }\n            }\n        } else if (type === EVENT_TYPES.noteOn) {\n            // Handle note-on\n            const newNote = new Note(\n                pitch,\n                roundToNDecimals(currentTime, ROUNDING_PRECISION),\n                velocity,\n                channel,\n            );\n            notes.push(newNote);\n            unfinishedNotes.set(key, newNote);\n        } else {\n            continue;\n        }\n    }\n    // Fix missing note ends\n    const neededToFix = [];\n    for (const note of notes) {\n        if (note.end === -1) {\n            note.end = roundToNDecimals(currentTime, ROUNDING_PRECISION);\n            neededToFix.push(note);\n        }\n    }\n    if (neededToFix.length > 0) {\n        console.warn(`had to fix ${neededToFix.length} notes`);\n        console.log(neededToFix);\n    }\n    // Save parsed track with meta information\n    const { trackName, instrument, instrumentName } = getInstrumentAndTrackName(track);\n    if (notes.length > 0) {\n        const parsedTrack = {\n            noteObjs: notes,\n            totalTime: currentTime,\n            trackName: trackName ?? 'Track',\n            instrument,\n            instrumentName: instrumentName ?? 'Unknown instrument',\n        };\n        // console.log(`Got part with ${notes.length} notes,\\n`, parsedTrack);\n        return parsedTrack;\n    } else {\n        // console.log('Empty track');\n        return null;\n    }\n}\n\n/**\n * Finds out the name of the track and the instrument, if this data is available\n *\n * @private\n * @param {object} track MIDI track\n * @returns {{trackName, instrument, instrumentName}} meta data with either\n *      values or null when no information found\n */\nfunction getInstrumentAndTrackName(track) {\n    let trackName = null;\n    let instrument = null;\n    let instrumentName = null;\n    for (const event of track.event) {\n        if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.trackName) {\n            trackName = event.data;\n        }\n        if (event.type === EVENT_TYPES.programChange) {\n            instrument = event.data;\n        }\n        if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.instrumentName) {\n            instrumentName = event.data;\n        }\n    }\n    return {\n        trackName,\n        instrument,\n        instrumentName,\n    };\n}\n\n/**\n * Caclulates the time positions of measure lines by looking at tempo and beat\n * type change events\n *\n * @private\n * @param {object[]} tempoChanges tempo change events\n * @param {object[]} beatTypeChanges beat type change events\n * @param {number} totalTime total time\n * @returns {number[]} measure line times in seconds\n */\nfunction getMeasureLines(tempoChanges, beatTypeChanges, totalTime) {\n    const measureLines = [];\n    // Generate measure lines from tempo and beat type changes\n    let tempo = 120;\n    let beats = 4;\n    let beatType = 4;\n    let currentTime = 0;\n    let currentBeatsInMeasure = 0;\n    let timeOfLastTempoChange = 0;\n    let timeSinceLastTempoChange = 0;\n    while (currentTime < totalTime) {\n        // Get current tempo and beat type\n        let mostRecentTempoChange;\n        for (const t of tempoChanges) {\n            if (t.time <= currentTime) {\n                mostRecentTempoChange = t.tempo;\n            }\n        }\n        if (mostRecentTempoChange && mostRecentTempoChange !== tempo) {\n            timeOfLastTempoChange = currentTime;\n            timeSinceLastTempoChange = 0;\n            tempo = mostRecentTempoChange;\n        }\n        for (const b of beatTypeChanges) {\n            if (b.time <= currentTime) {\n                beats = b.beats;\n                beatType = b.beatType;\n            }\n        }\n        // Update time and beats\n        currentBeatsInMeasure++;\n        const secondsPerBeat = bpmToSecondsPerBeat(tempo) / (beatType / 4);\n        timeSinceLastTempoChange += secondsPerBeat;\n        currentTime = timeOfLastTempoChange + timeSinceLastTempoChange;\n        if (currentBeatsInMeasure >= beats) {\n            // Measure is full\n            currentBeatsInMeasure = 0;\n            measureLines.push(roundToNDecimals(currentTime, ROUNDING_PRECISION));\n        }\n    }\n    return measureLines;\n}\n\n/**\n * Split MIDI format 0 data into tracks instead of having channels,\n * creates one track for each channel\n *\n * @private\n * @param {Note[][]} tracks parsed MIDI tracks\n * @returns {Note[][]} splitted tracks\n */\nfunction splitFormat0(tracks) {\n    if (tracks.length > 1) {\n        console.warn('Splitting a format 0 file with more than 1 track will result in all but the first beeing lost!');\n    }\n    // console.log('Splitting format 0 file into tracks based on channel');\n    const grouped = group(tracks[0].noteObjs, d => d.channel);\n    // All tracks will share the meta infomation of the 0th track\n    // Assign the splitted-by-channel notes to their new tracks\n    const splittedTracks = [];\n    for (const notes of grouped.values()) {\n        splittedTracks.push({\n            ...tracks[0],\n            noteObjs: notes,\n        });\n    }\n    return splittedTracks;\n}\n\n/**\n * Given the tempo and time division, returns the number of milliseconds\n * each MIDI time tick corresponds to\n *\n * @private\n * @param {number} tempo tempo\n * @param {number} timeDivision time division\n * @returns {number} milli seconds per tick\n */\nfunction getMillisecondsPerTick(tempo, timeDivision) {\n    const milliSecondsPerBeat = 1 / tempo * 60000;\n    const milliSecondsPerTick = milliSecondsPerBeat / timeDivision;\n    return milliSecondsPerTick;\n}\n\n/**\n * Retrieves all tempo and beat type changes from a MIDI file's tracks.\n *\n * @see https://github.com/colxi/midi-parser-js/wiki/MIDI-File-Format-Specifications\n * @private\n * @param {Array} tracks MIDI JSON file tracks\n * @returns {object} {tempoChanges, beatTypeChanges} as arrays of objects, which\n *      contain the MIDI tick and the new information\n */\nfunction getSignatureChanges(tracks) {\n    const tempoChanges = [];\n    const beatTypeChanges = [];\n    const keySignatureChanges = [];\n    let currentTick = 0;\n    let lastTempo = null;\n    for (const track of tracks) {\n        for (const event of track.event) {\n            // Get timing of events\n            currentTick += event.deltaTime;\n            // Tempo change\n            if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.setTempo) {\n                const milliSecondsPerQuarter = event.data / 1000;\n                const tempo = Math.round(1 / (milliSecondsPerQuarter / 60000));\n                // Ignore tempo changes that don't change the tempo\n                if (tempo !== lastTempo) {\n                    tempoChanges.push({\n                        tick: currentTick,\n                        tempo,\n                        time: currentTick === 0 ? 0 : undefined,\n                    });\n                    lastTempo = tempo;\n                }\n            }\n            // Beat type change\n            if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.timeSignature) {\n                const d = event.data;\n                const beats = d[0];\n                const beatType = 2 ** d[1];\n                const newEntry = {\n                    tick: currentTick,\n                    beats,\n                    beatType,\n                };\n                if (beatTypeChanges.length === 0) {\n                    beatTypeChanges.push(newEntry);\n                } else {\n                    // If it id not change, do not add\n                    const last = beatTypeChanges[beatTypeChanges.length - 1];\n                    if (last.beats !== beats || last.beatType !== beatType) {\n                        beatTypeChanges.push(newEntry);\n                    }\n                }\n                // console.log(`Metro: ${d[2]}`);\n                // console.log(`32nds: ${d[3]}`);\n            }\n            // Key change\n            if (event.type === EVENT_TYPES.meta && event.metaType === META_TYPES.keySignature) {\n                // console.log('keychange', event);\n                const d = event.data;\n                if (!KEY_SIG_MAP.has(d)) {\n                    console.warn('[MidiParser] Invalid key signature', d);\n                } else {\n                    const { key, scale } = KEY_SIG_MAP.get(d);\n                    const newEntry = {\n                        tick: currentTick,\n                        key,\n                        scale,\n                    };\n                    if (keySignatureChanges.length === 0) {\n                        keySignatureChanges.push(newEntry);\n                    } else {\n                        // If it id not change, do not add\n                        const last = keySignatureChanges[keySignatureChanges.length - 1];\n                        if (last.key !== key || last.scale !== scale) {\n                            keySignatureChanges.push(newEntry);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    // Default values\n    if (tempoChanges.length === 0) {\n        tempoChanges.push({ tempo: 120, time: 0 });\n    }\n    if (beatTypeChanges.length === 0) {\n        beatTypeChanges.push({ beats: 4, beatType: 4, time: 0 });\n    }\n    if (keySignatureChanges.length === 0) {\n        keySignatureChanges.push({ key: 'C', scale: 'major', time: 0 });\n    }\n    return { tempoChanges, beatTypeChanges, keySignatureChanges };\n}\n\n/**\n * MIDI event types and meta types and their codes\n *\n * @see https://github.com/colxi/midi-parser-js/wiki/MIDI-File-Format-Specifications\n * Event Type         Value   Value decimal    Parameter 1         Parameter 2\n * Note Off           0x8       8              note number         velocity\n * Note On            0x9       9              note number         velocity\n * Note Aftertouch    0xA      10              note number         aftertouch value\n * Controller         0xB      11              controller number   controller value\n * Program Change     0xC      12              program number      not used\n * Channel Aftertouch 0xD      13              aftertouch value    not used\n * Pitch Bend         0xE      14              pitch value (LSB)   pitch value (MSB)\n * Meta               0xFF    255                 parameters depend on meta type\n *\n * @type {object}\n */\nconst EVENT_TYPES = {\n    noteOff: 0x8,\n    noteOn: 0x9,\n    noteAftertouch: 0xA,\n    controller: 0xB,\n    programChange: 0xC,\n    channelAftertouch: 0xD,\n    pitchBend: 0xE,\n    meta: 0xFF,\n};\n/**\n * @type {object}\n */\nconst META_TYPES = {\n    sequenceNumber: 0x0,\n    textEvent: 0x1,\n    copyright: 0x2,\n    trackName: 0x3,\n    instrumentName: 0x4,\n    lyrics: 0x5,\n    marker: 0x6,\n    cuePoint: 0x7,\n    channelPrefix: 0x20,\n    endOfTrack: 0x2F,\n    setTempo: 0x51,\n    smpteOffset: 0x54,\n    timeSignature: 0x58,\n    keySignature: 0x59,\n    sequencerSpecific: 0x7F,\n};\n\n/**\n * Maps needed for key signature detection from number of sharps / flats\n *\n * @type {Map<number,object>}\n * @see https://www.recordingblogs.com/wiki/midi-key-signature-meta-message\n */\nconst KEY_SIG_MAP = new Map([\n    // major\n    [0xF900, { key: 'Cb', scale: 'major' }],\n    [0xFA00, { key: 'Gb', scale: 'major' }],\n    [0xFB00, { key: 'Db', scale: 'major' }],\n    [0xFC00, { key: 'Ab', scale: 'major' }],\n    [0xFD00, { key: 'Eb', scale: 'major' }],\n    [0xFE00, { key: 'Bb', scale: 'major' }],\n    [0xFF00, { key: 'F', scale: 'major' }],\n    [0x0000, { key: 'C', scale: 'major' }],\n    [0x0100, { key: 'G', scale: 'major' }],\n    [0x0200, { key: 'D', scale: 'major' }],\n    [0x0300, { key: 'A', scale: 'major' }],\n    [0x0400, { key: 'E', scale: 'major' }],\n    [0x0500, { key: 'B', scale: 'major' }],\n    [0x0600, { key: 'F#', scale: 'major' }],\n    [0x0700, { key: 'C#', scale: 'major' }],\n    // minor\n    [0xF901, { key: 'Ab', scale: 'minor' }],\n    [0xFA01, { key: 'Eb', scale: 'minor' }],\n    [0xFB01, { key: 'Bb', scale: 'minor' }],\n    [0xFC01, { key: 'F', scale: 'minor' }],\n    [0xFD01, { key: 'C', scale: 'minor' }],\n    [0xFE01, { key: 'G', scale: 'minor' }],\n    [0xFF01, { key: 'D', scale: 'minor' }],\n    [0x0001, { key: 'A', scale: 'minor' }],\n    [0x0101, { key: 'E', scale: 'minor' }],\n    [0x0201, { key: 'B', scale: 'minor' }],\n    [0x0301, { key: 'F#', scale: 'minor' }],\n    [0x0401, { key: 'C#', scale: 'minor' }],\n    [0x0501, { key: 'G#', scale: 'minor' }],\n    [0x0601, { key: 'D#', scale: 'minor' }],\n    [0x0701, { key: 'A#', scale: 'minor' }],\n]);\n","import Note from './Note';\r\nimport * as midiParser from 'midi-parser-js';\r\nimport { Midi } from '@tonejs/midi';\r\nimport { preprocessMusicXmlData } from '../fileFormats/MusicXmlParser';\r\nimport { preprocessMidiFileData } from '../fileFormats/MidiParser';\r\nimport NoteArray from './NoteArray';\r\n\r\n\r\n\r\n/**\r\n * Represents a parsed MIDI or MusicXML file in a uniform format.\r\n */\r\nclass MusicPiece {\r\n\r\n    /**\r\n     * Do not use this constructor, but the static methods MusicPiece.fromMidi\r\n     * and MusicPiece.fromMusicXml instead.\r\n     *\r\n     * @param {string} name name (e.g. file name or piece name)\r\n     * @param {TempoDefinition[]} tempos tempos\r\n     * @param {TimeSignature[]} timeSignatures time signatures\r\n     * @param {KeySignature[]} keySignatures key signatures\r\n     * @param {number[]} measureTimes time in seconds for each measure line\r\n     * @param {Track[]} tracks tracks\r\n     * @throws {'No or invalid tracks given!'} when invalid tracks are given\r\n     */\r\n    constructor(name, tempos, timeSignatures, keySignatures, measureTimes, tracks) {\r\n        if (!tracks || tracks.length === 0) {\r\n            throw new Error('No or invalid tracks given');\r\n        }\r\n        this.name = name;\r\n        this.measureTimes = measureTimes;\r\n        this.tracks = tracks;\r\n        this.duration = Math.max(...this.tracks.map(d => d.duration));\r\n        // Filter multiple identical consecutive infos\r\n        this.tempos = tempos.slice(0, 1);\r\n        let currentTempo = tempos[0];\r\n        for (const tempo of tempos) {\r\n            if (tempo.string !== currentTempo.string) {\r\n                currentTempo = tempo;\r\n                this.tempos.push(tempo);\r\n            }\r\n        }\r\n        this.timeSignatures = timeSignatures.slice(0, 1);\r\n        let currentTimeSig = timeSignatures[0];\r\n        for (const timeSignature of timeSignatures) {\r\n            if (timeSignature.string !== currentTimeSig.string) {\r\n                currentTimeSig = timeSignature;\r\n                this.timeSignatures.push(timeSignature);\r\n            }\r\n        }\r\n        this.keySignatures = keySignatures.slice(0, 1);\r\n        let currentKeySig = keySignatures[0];\r\n        for (const keySignature of keySignatures) {\r\n            if (keySignature.string !== currentKeySig.string) {\r\n                currentKeySig = keySignature;\r\n                this.keySignatures.push(keySignature);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a MusicPiece object from a MIDI file binary\r\n     *\r\n     * @param {string} name name\r\n     * @param {ArrayBuffer} midiFile MIDI file\r\n     * @returns {MusicPiece} new MusicPiece\r\n     * @throws {'No MIDI file content given'} when MIDI file is undefined or null\r\n     * @example <caption>In Node.js</caption>\r\n     *      const file = path.join(directory, fileName);\r\n     *      const data = fs.readFileSync(file, 'base64');\r\n     *      const mp = MusicPiece.fromMidi(fileName, data);\r\n     * @example <caption>In the browser</caption>\r\n     *      const uintArray = new Uint8Array(midiBinary);\r\n     *      const MP = MusicPiece.fromMidi(filename, uintArray);\r\n     */\r\n    static fromMidi(name, midiFile) {\r\n        if (!midiFile) {\r\n            throw new Error('No MIDI file content given');\r\n        }\r\n        const midi = midiParser.parse(midiFile);\r\n        const parsed = preprocessMidiFileData(midi);\r\n        let tempos = [];\r\n        let timeSignatures = [];\r\n        let keySignatures = [];\r\n        let measureTimes = [];\r\n        if (parsed.tracks.length > 0) {\r\n            // Tempos\r\n            tempos = parsed.tempoChanges\r\n                .map(d => new TempoDefinition(d.time, d.tempo));\r\n            // Time signatures\r\n            timeSignatures = parsed.beatTypeChanges\r\n                .map(d => new TimeSignature(d.time, [d.beats, d.beatType]));\r\n            // Key signatures\r\n            keySignatures = parsed.keySignatureChanges\r\n                .map(d => new KeySignature(d.time, d.key, d.scale));\r\n            // Measure times\r\n            measureTimes = parsed.measureLinePositions;\r\n        }\r\n        // Tracks\r\n        const tracks = parsed.tracks.map((t, index) => Track.fromMidi(\r\n            t.trackName,\r\n            t.instrumentName,\r\n            t.noteObjs,\r\n            index,\r\n        ));\r\n        return new MusicPiece(\r\n            name,\r\n            tempos,\r\n            timeSignatures,\r\n            keySignatures,\r\n            measureTimes,\r\n            tracks,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Creates a MusicPiece object from a MIDI file binary\r\n     *\r\n     * @todo on hold until @tonejs/midi adds time in seconds for meta events\r\n     * @deprecated This is not fully implemented yet\r\n     * @todo use @tonejs/midi for parsing, but the same information as with\r\n     * MusicPiece.fromMidi()\r\n     * @see https://github.com/Tonejs/Midi\r\n     * @param {string} name name\r\n     * @param {ArrayBuffer} midiFile MIDI file\r\n     * @returns {MusicPiece} new MusicPiece\r\n     * @throws {'No MIDI file content given'} when MIDI file is undefined or null\r\n     * @example <caption>In Node.js</caption>\r\n     *      const file = path.join(directory, fileName);\r\n     *      const data = fs.readFileSync(file);\r\n     *      const mp = MusicPiece.fromMidi(fileName, data);\r\n     * @example <caption>In the browser</caption>\r\n     *      const uintArray = new Uint8Array(midiBinary);\r\n     *      const MP = MusicPiece.fromMidi(filename, uintArray);\r\n     */\r\n    static fromMidi2(name, midiFile) {\r\n        if (!midiFile) {\r\n            throw new Error('No MIDI file content given');\r\n        }\r\n\r\n        const parsed = new Midi(midiFile);\r\n        // const uintArray = new Uint8Array(midiFile);\r\n        // const parsed = new Midi(uintArray);\r\n\r\n        // Tracks\r\n        const tracks = [];\r\n        for (const track of parsed.tracks) {\r\n            if (track.notes.length === 0) { continue; }\r\n            const notes = track.notes.map(note => Note.from({\r\n                pitch: note.midi,\r\n                start: note.time,\r\n                end: note.time + note.duration,\r\n                velocity: Math.round(note.velocity * 127),\r\n                channel: track.channel,\r\n            }));\r\n            tracks.push(\r\n                Track.fromMidi(\r\n                    track.trackName,\r\n                    track.instrumentName,\r\n                    notes,\r\n                ),\r\n            );\r\n        }\r\n\r\n        // TODO: convert ticks to seconds\r\n        let tempos = [];\r\n        let timeSignatures = [];\r\n        let keySignatures = [];\r\n        let measureTimes = [];\r\n        if (parsed.tracks.length > 0) {\r\n            // tempos\r\n            tempos = parsed.header.tempos\r\n                .map(d => new TempoDefinition(d.time, d.tempo));\r\n            // time signatures\r\n            timeSignatures = parsed.header.timeSignatures\r\n                .map(d => new TimeSignature(d.time, [d.beats, d.beatType]));\r\n            // key signatures\r\n            keySignatures = parsed.header.keySignatures\r\n                .map(d => new KeySignature(d.time, d.key, d.scale));\r\n            // measure times\r\n            measureTimes = parsed.measureLinePositions;\r\n        }\r\n        return new MusicPiece(\r\n            name,\r\n            tempos,\r\n            timeSignatures,\r\n            keySignatures,\r\n            measureTimes,\r\n            tracks,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Creates a MusicPiece object from a MusicXML string\r\n     *\r\n     * @param {string} name name\r\n     * @param {string|object} xmlFile MusicXML file content as string or object\r\n     *      If it is an object, it must behave like a DOM, e.g. provide methods\r\n     *      such as .querySelectorAll()\r\n     * @returns {MusicPiece} new MusicPiece\r\n     * @throws {'No MusicXML file content given'} when MusicXML file is\r\n     *  undefined or null\r\n     * @example Parsing a MusicPiece in Node.js\r\n     *    const jsdom = require('jsdom');\r\n     *    const xmlFile = fs.readFileSync('My Song.musicxml');\r\n     *    const dom = new jsdom.JSDOM(xmlFile);\r\n     *    const xmlDocument = dom.window.document;\r\n     *    const mp = musicvislib.MusicPiece.fromMusicXml('My Song', xmlDocument);\r\n     */\r\n    static fromMusicXml(name, xmlFile) {\r\n        if (!xmlFile) {\r\n            throw new Error('No MusicXML file content given');\r\n        }\r\n        let xmlDocument = xmlFile;\r\n        if (typeof xmlDocument === 'string') {\r\n            const parser = new DOMParser();\r\n            xmlDocument = parser.parseFromString(xmlFile, 'text/xml');\r\n        }\r\n        const parsed = preprocessMusicXmlData(xmlDocument);\r\n        let tempos = [];\r\n        let timeSignatures = [];\r\n        let keySignatures = [];\r\n        if (parsed.parts.length > 0) {\r\n            // Tempos\r\n            tempos = parsed.parts[0].tempoChanges\r\n                .map(d => new TempoDefinition(d.time, d.tempo));\r\n            // Time signatures\r\n            timeSignatures = parsed.parts[0].beatTypeChanges\r\n                .map(d => new TimeSignature(d.time, [d.beats, d.beatType]));\r\n            // Key signatures\r\n            keySignatures = parsed.parts[0].keySignatureChanges\r\n                .map(d => new KeySignature(d.time, d.key, d.scale));\r\n        }\r\n        // Measure times\r\n        let measureTimes = [];\r\n        if (parsed.parts.length > 0) {\r\n            measureTimes = parsed.parts[0].measureLinePositions;\r\n        }\r\n        // Tracks\r\n        const tracks = parsed.parts\r\n            .map((t, index) => Track.fromMusicXml(\r\n                parsed.partNames[index],\r\n                parsed.instruments[index],\r\n                t.noteObjs,\r\n                index,\r\n                t.tuning,\r\n            ));\r\n        return new MusicPiece(\r\n            name,\r\n            tempos,\r\n            timeSignatures,\r\n            keySignatures,\r\n            measureTimes,\r\n            tracks,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns an array with all notes from all tracks.\r\n     *\r\n     * @deprecated use getNotesFromTracks('all') instead.\r\n     * @param {boolean} sortByTime true: sort notes by time\r\n     * @returns {Note[]} all notes of this piece\r\n     */\r\n    getAllNotes(sortByTime = false) {\r\n        const notes = this.tracks.flatMap(t => t.notes);\r\n        if (sortByTime) {\r\n            notes.sort((a, b) => a.start - b.start);\r\n        }\r\n        return notes;\r\n    }\r\n\r\n    /**\r\n     * Returns an array with notes from the specified tracks.\r\n     *\r\n     * @param {'all'|number|number[]} indices either 'all', a number, or an\r\n     *      Array with numbers\r\n     * @param {boolean} sortByTime true: sort notes by time (not needed for a\r\n     *      single track)\r\n     * @returns {Note[]} Array with all notes from the specified tracks\r\n     */\r\n    getNotesFromTracks(indices = 'all', sortByTime = false) {\r\n        let notes = [];\r\n        if (indices === 'all') {\r\n            // Return all notes from all tracks\r\n            notes = this.tracks.flatMap(t => t.notes);\r\n        } else if (Array.isArray(indices)) {\r\n            // Return notes from some tracks\r\n            notes = this.tracks\r\n                .filter((d, i) => indices.includes(i))\r\n                .flatMap(t => t.notes);\r\n        } else {\r\n            // Return notes from a single track\r\n            notes = this.tracks[indices].notes;\r\n            // Notes in each tracks are already sorted\r\n            sortByTime = false;\r\n        }\r\n        if (sortByTime) {\r\n            notes.sort((a, b) => a.start - b.start);\r\n        }\r\n        return notes;\r\n    }\r\n\r\n    /**\r\n     * Transposes all or only the specified tracks by the specified number of\r\n     * (semitone) steps.\r\n     * Will return a new MusicPiece instance.\r\n     * Note pitches will be clipped to [0, 127].\r\n     *\r\n     * @param {number} steps number of semitones to transpose (can be negative)\r\n     * @param {'all'|number|number[]} tracks tracks to transpose\r\n     * @returns {MusicPiece} a new, transposed MusicPiece\r\n     */\r\n    transpose(steps = 0, tracks = 'all') {\r\n        const newTracks = this.tracks.map((track, index) => {\r\n            const change = (\r\n                tracks === 'all'\r\n                || (Array.isArray(tracks) && tracks.includes(index))\r\n                || tracks === index\r\n            );\r\n            const na = new NoteArray(track.notes);\r\n            let tuning = track.tuningPitches;\r\n            if (change) {\r\n                // Transpose notes and tuning pitches\r\n                na.transpose(steps);\r\n                tuning = track.tuningPitches.map(d => d + steps);\r\n            }\r\n            return new Track(\r\n                track.name,\r\n                track.instrument,\r\n                na.getNotes(),\r\n                tuning,\r\n            );\r\n        });\r\n        return new MusicPiece(\r\n            this.name,\r\n            [...this.tempos],\r\n            [...this.timeSignatures],\r\n            [...this.keySignatures],\r\n            [...this.measureTimes],\r\n            newTracks,\r\n        );\r\n    }\r\n}\r\n\r\n/**\r\n * Used by MusicPiece, should not be used directly\r\n */\r\nexport class Track {\r\n    /**\r\n     * Do not use this constructor, but the static methods Track.fromMidi\r\n     * and Track.fromMusicXml instead.\r\n     *\r\n     * Notes will be sorted by start time.\r\n     *\r\n     * @param {string} name name\r\n     * @param {string} instrument instrument name\r\n     * @param {Note[]} notes notes\r\n     * @param {number[]} tuningPitches MIDI note numbers of the track's tuning\r\n     * @throws {'Notes are undefined or not an array'} for invalid notes\r\n     */\r\n    constructor(name, instrument, notes, tuningPitches = null) {\r\n        name = !name?.length ? 'unnamed' : name.replace('\\u0000', '');\r\n        this.name = name;\r\n        this.instrument = instrument;\r\n        if (!notes || notes.length === undefined) {\r\n            throw new Error('Notes are undefined or not an array');\r\n        }\r\n        this.notes = notes.sort((a, b) => a.start - b.start);\r\n        this.tuningPitches = tuningPitches;\r\n        // Computed properties\r\n        this.duration = new NoteArray(notes).getDuration();\r\n        this.hasStringFret = false;\r\n        for (const note of notes) {\r\n            if (note.string !== undefined && note.fret !== undefined) {\r\n                this.hasStringFret = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a new Track from a MusicXML track\r\n     *\r\n     * @param {string} name name\r\n     * @param {string} instrument instrument name\r\n     * @param {Note[]} notes parsed MusicXML track's notes\r\n     * @returns {Track} new Track\r\n     */\r\n    static fromMidi(name, instrument, notes) {\r\n        return new Track(name, instrument, notes);\r\n    }\r\n\r\n    /**\r\n     * Creates a new Track from a MusicXML track\r\n     *\r\n     * @param {string} name name\r\n     * @param {string} instrument instrument name\r\n     * @param {Note[]} notes parsed MusicXML track's notes\r\n     * @param {number} channel channel\r\n     * @param {number[]} tuningPitches MIDI note numbers of the track's tuning\r\n     * @returns {Track} new Track\r\n     */\r\n    static fromMusicXml(name, instrument, notes, channel, tuningPitches = null) {\r\n        for (const n of notes) {\r\n            n.channel = channel;\r\n        }\r\n        return new Track(name, instrument, notes, tuningPitches);\r\n    }\r\n}\r\n\r\n/**\r\n * Tempo definition\r\n */\r\nexport class TempoDefinition {\r\n    /**\r\n     * @param {number} time in seconds\r\n     * @param {number} bpm tempo in seconds per beat\r\n     */\r\n    constructor(time, bpm) {\r\n        this.time = time;\r\n        this.bpm = bpm;\r\n        this.string = `${bpm} bpm`;\r\n    }\r\n}\r\n\r\n/**\r\n * Time signature definition\r\n */\r\nexport class TimeSignature {\r\n    /**\r\n     * @param {number} time in seconds\r\n     * @param {number[]} signature time signature as [beats, beatType]\r\n     */\r\n    constructor(time, signature) {\r\n        this.time = time;\r\n        this.signature = signature;\r\n        this.string = signature.join('/');\r\n    }\r\n}\r\n\r\n/**\r\n * Key signature definition\r\n */\r\nexport class KeySignature {\r\n    /**\r\n     * @param {number} time in seconds\r\n     * @param {string} key key e.g. 'C'\r\n     * @param {string} scale scale e.g. 'major'\r\n     */\r\n    constructor(time, key, scale) {\r\n        this.time = time;\r\n        this.key = key;\r\n        this.scale = scale;\r\n        this.string = `${key} ${scale}`;\r\n    }\r\n}\r\n\r\nexport default MusicPiece;\r\n","import { getMidiNoteByNr } from '../fileFormats/Midi';\n\n/**\n * Stores a sequence of pitches and provides some methods to simplify and\n * manipulate it.\n *\n * @todo implement keepOnlyHighestConcurrentNotes\n */\nclass PitchSequence {\n\n    #pitches = [];\n\n    /**\n     * @param {number[]} pitches pitches\n     */\n    constructor(pitches = []) {\n        this.#pitches = pitches;\n    }\n\n    /**\n     * Creates a pitch sequence from an array of Notes\n     *\n     * @param {Note[]} notes notes\n     * @returns {PitchSequence} pitch sequence\n     */\n    static fromNotes(notes = []) {\n        const pitches = [...notes]\n            .sort((a, b) => {\n                if (a.start === b.start) {\n                    return a.pitch - b.pitch;\n                }\n                return a.start - b.start;\n            })\n            .map(d => d.pitch);\n        return new PitchSequence(pitches);\n    }\n\n    /**\n     * @param {string} string a string of Unicode characters\n     * @returns {PitchSequence} pitch sequence\n     */\n    static fromCharString(string) {\n        if (!string || string.length === 0) { return new PitchSequence(); }\n        const pitches = string.split('').map((d, index) => string.charCodeAt(index));\n        return new PitchSequence(pitches);\n    }\n\n    /**\n     * @returns {number[]} pitches\n     */\n    getPitches() {\n        return this.#pitches;\n    }\n\n    /**\n     * @returns {number} number of pitches\n     */\n    length() {\n        return this.#pitches.length;\n    }\n\n    /**\n     * Turns pitch sequence into a string by turning each  pitch into a character\n     * (based on Unicode index)\n     *\n     * @returns {string} string representation of note pitches\n     */\n    toCharString() {\n        if (!this.#pitches || this.#pitches.length === 0) {\n            return '';\n        }\n        return String.fromCharCode(...this.#pitches);\n    }\n\n    /**\n     * @returns {string} a string with the notes' names\n     */\n    toNoteNameString() {\n        return this.#pitches.map(p => getMidiNoteByNr(p).label).join(' ');\n    }\n\n    /**\n     * Reverses the order of pitches in this PitchSequence\n     *\n     * @returns {PitchSequence} this\n     */\n    reverse() {\n        this.#pitches = this.#pitches.reverse();\n        return this;\n    }\n\n    /**\n     * Takes a sequence of MIDI pitches and nomralizes them to be in [0, 11]\n     *\n     * @returns {PitchSequence} this\n     */\n    removeOctaves() {\n        this.#pitches = this.#pitches.map(d => d % 12);\n        return this;\n    }\n\n    /**\n     * Transforms note pitches to intervals, i.e. diffrences between to subsequent\n     * notes: C, C#, C, D => 1, -1, 2\n     *\n     * @returns {number[]} intervals\n     */\n    toIntervals() {\n        const p = this.#pitches;\n        if (!p || p.length === 0 || p.length < 2) {\n            return [];\n        }\n        const result = Array.from({ length: p.length - 1 });\n        for (let index = 1; index < p.length; index++) {\n            result[index - 1] = p[index] - p[index - 1];\n        }\n        return result;\n    }\n\n    /**\n     * @returns {PitchSequence} clone\n     */\n    clone() {\n        return new PitchSequence(this.#pitches);\n    }\n\n    /**\n     * Returns true if this NoteArray and otherNoteArray have equal attributes.\n     *\n     * @param {NoteArray} otherPitchSequence another NoteArray\n     * @returns {boolean} true if equal\n     */\n    equals(otherPitchSequence) {\n        if (!(otherPitchSequence instanceof PitchSequence)) {\n            return false;\n        }\n        const p = otherPitchSequence.getPitches();\n        if (this.#pitches.length !== p.length) {\n            return false;\n        }\n        for (const [index, element] of p.entries()) {\n            if (this.#pitches[index] !== element) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nexport default PitchSequence;\n","/**\n * @module graphics/Canvas\n * @todo save canvas as file https://www.digitalocean.com/community/tutorials/js-canvas-toblob\n */\n\n/**\n * Sets up a canvas rescaled to device pixel ratio\n *\n * @param {HTMLCanvasElement} canvas canvas element\n * @returns {CanvasRenderingContext2D} canvas rendering context\n */\nexport function setupCanvas(canvas) {\n    // Fix issues when importing musicvis-lib in Node.js\n    if (!window) { return; }\n    // Get the device pixel ratio, falling back to 1.\n    const dpr = window.devicePixelRatio || 1;\n    // Get the size of the canvas in CSS pixels.\n    const rect = canvas.getBoundingClientRect();\n    // Give the canvas pixel dimensions of their CSS\n    // sizes times the device pixel ratio.\n    canvas.width = rect.width * dpr;\n    canvas.height = rect.height * dpr;\n    const context = canvas.getContext('2d');\n    // Scale all drawing operations by the dpr\n    context.scale(dpr, dpr);\n    return context;\n}\n\n/**\n * Draws a stroked straight line.\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x1 x coordinate of the start\n * @param {number} y1 y coordinate of the start\n * @param {number} x2 x coordinate of end\n * @param {number} y2 y coordinate of end\n * @returns {void}\n */\nexport function drawLine(context, x1, y1, x2, y2) {\n    context.beginPath();\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n}\n\n/**\n * Draws a stroked circle.\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} radius radius\n * @returns {void}\n */\nexport function drawCircle(context, x, y, radius) {\n    context.beginPath();\n    context.arc(x, y, radius, 0, 2 * Math.PI);\n    context.stroke();\n}\n\n/**\n * Draws a filled circle.\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} radius radius\n * @returns {void}\n */\nexport function drawFilledCircle(context, x, y, radius) {\n    context.beginPath();\n    context.arc(x, y, radius, 0, 2 * Math.PI);\n    context.fill();\n}\n\n/**\n * Draws a filled triangle like this: /\\\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} halfSize half of the size\n * @returns {void}\n */\nexport function drawTriangle(context, x, y, halfSize) {\n    context.beginPath();\n    context.moveTo(x - halfSize, y + halfSize);\n    context.lineTo(x + halfSize, y + halfSize);\n    context.lineTo(x, y - halfSize);\n    context.closePath();\n    context.fill();\n}\n\n/**\n * Draws a diamond like this: <>\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} halfSize half of the size\n * @returns {void}\n */\nexport function drawDiamond(context, x, y, halfSize) {\n    context.beginPath();\n    context.moveTo(x - halfSize, y);\n    context.lineTo(x, y - halfSize);\n    context.lineTo(x + halfSize, y);\n    context.lineTo(x, y + halfSize);\n    context.closePath();\n    context.fill();\n}\n\n/**\n * Draws an X\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of center\n * @param {number} y y coordinate of center\n * @param {number} halfSize half of the size\n * @returns {void}\n */\nexport function drawX(context, x, y, halfSize) {\n    context.save();\n    context.lineWidth = 2;\n    context.beginPath();\n    context.moveTo(x - halfSize, y - halfSize);\n    context.lineTo(x + halfSize, y + halfSize);\n    context.moveTo(x - halfSize, y + halfSize);\n    context.lineTo(x + halfSize, y - halfSize);\n    context.stroke();\n    context.restore();\n}\n\n/**\n * Draws a trapezoid that looks like a rectangle but gets narrower at the right\n * end, so better show where one ends and the next begins.\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of top left\n * @param {number} y y coordinate of top left\n * @param {number} width width\n * @param {number} height height (of left side)\n * @param {number} height2 height (of right side)\n * @returns {void}\n */\nexport function drawNoteTrapezoid(context, x, y, width, height, height2) {\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x, y + height);\n    context.lineTo(x + width, y + (height / 2 + height2 / 2));\n    context.lineTo(x + width, y + (height / 2 - height2 / 2));\n    context.closePath();\n    context.fill();\n}\n\n/**\n * Draws a trapezoid that looks like a rectangle but gets narrower at the top\n * end, so better show where one ends and the next begins.\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of bounding rect's top left\n * @param {number} y y coordinate of bounding rect's top left\n * @param {number} width width (of bounding rect / bottom side)\n * @param {number} height height\n * @param {number} width2 width (of top side)\n * @returns {void}\n */\nexport function drawNoteTrapezoidUpwards(context, x, y, width, height, width2) {\n    context.beginPath();\n    context.lineTo(x, y + height);\n    context.lineTo(x + width, y + height);\n    context.lineTo(x + (width / 2 + width2 / 2), y);\n    context.lineTo(x + (width / 2 - width2 / 2), y);\n    context.closePath();\n    context.fill();\n}\n\n/**\n * Draws a rectangle with rounded corners, does not fill or stroke by itself\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x x coordinate of bounding rect's top left\n * @param {number} y y coordinate of bounding rect's top left\n * @param {number} width width\n * @param {number} height height\n * @param {number} radius rounding radius\n * @returns {void}\n */\nexport function drawRoundedRect(context, x, y, width, height, radius) {\n    if (width < 0) { return; }\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n}\n\n/**\n * Draws a horizontal, then vertical line to connect two points (or the other\n * way round when xFirst == false)\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x1 x coordinate of start\n * @param {number} y1 y coordinate of start\n * @param {number} x2 x coordinate of end\n * @param {number} y2 y coordinate of end\n * @param {boolean} [xFirst=true] controls whether to go first in x or y direction\n */\nexport function drawCornerLine(context, x1, y1, x2, y2, xFirst = true) {\n    context.beginPath();\n    context.moveTo(x1, y1);\n    xFirst\n        ? context.lineTo(x2, y1)\n        : context.lineTo(x1, y2);\n    context.lineTo(x2, y2);\n    context.stroke();\n}\n\n/**\n * Draws a rounded version of drawCornerLine()\n *\n * @todo only works for dendrograms drawn from top-dowm\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} x1 x coordinate of start\n * @param {number} y1 y coordinate of start\n * @param {number} x2 x coordinate of end\n * @param {number} y2 y coordinate of end\n * @param {number} [maxRadius=25] maximum radius, fixes possible overlaps\n */\nexport function drawRoundedCornerLine(context, x1, y1, x2, y2, maxRadius = 25) {\n    const xDist = Math.abs(x2 - x1);\n    const yDist = Math.abs(y2 - y1);\n    const radius = Math.min(xDist, yDist, maxRadius);\n    const cx = x1 < x2 ? x2 - radius : x2 + radius;\n    const cy = y1 < y2 ? y1 + radius : y1 - radius;\n    context.beginPath();\n    context.moveTo(x1, y1);\n    if (x1 < x2) {\n        context.arc(cx, cy, radius, 1.5 * Math.PI, 2 * Math.PI);\n    } else {\n        context.arc(cx, cy, radius, 1.5 * Math.PI, Math.PI, true);\n    }\n    context.lineTo(x2, y2);\n    context.stroke();\n}\n\n/**\n * Draws a hexagon\n *\n * @param {CanvasRenderingContext2D} context canvas rendering context\n * @param {number} cx center x\n * @param {number} cy center y\n * @param {number} radius radius of the circle on which the points are placed\n */\nexport function drawHexagon(context, cx, cy, radius) {\n    context.beginPath();\n    for (let index = 0; index < 6; index++) {\n        // Start at 30° TODO: allow to specify\n        const angle = (60 * index + 30) / 180 * Math.PI;\n        const x = cx + Math.cos(angle) * radius;\n        const y = cy + Math.sin(angle) * radius;\n        if (index === 0) {\n            context.moveTo(x, y);\n        } else {\n            context.lineTo(x, y);\n        }\n    }\n    context.closePath();\n}\n","/**\n * Allows to record audio blobs.\n *\n * @module input/AudioRecorder\n * @example\n * Usage (only in async functions):\n *     const recorder = await recordAudio();\n *     recorder.start();\n *     // ...\n *     const audio = await recorder.stop();\n * stop() returns a Blob with audio data\n * @see https://medium.com/@bryanjenningz/how-to-record-and-play-audio-in-javascript-faa1b2b3e49b\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder\n * @returns {Promise} audio recorder\n */\nexport const recordAudio = () => {\n    return new Promise(async resolve => {\n        let stream;\n        try {\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        } catch (error) {\n            console.warn('[AudioInput] Cannot access audio', error);\n            return;\n        }\n        const options = {\n            audioBitsPerSecond: 128000,\n        };\n        const mediaRecorder = new MediaRecorder(stream, options);\n        let audioChunks = [];\n        // Add new data when it arrives\n        mediaRecorder.addEventListener('dataavailable', event => {\n            audioChunks.push(event.data);\n        });\n        // Starts recording\n        const start = () => {\n            if (!mediaRecorder) {\n                console.warn('[AudioInput] Cannot record audio, no microphone?');\n                return;\n            }\n            if (mediaRecorder.state === 'recording') { return; }\n            console.log(`[AudioInput] Recording @ ${mediaRecorder.audioBitsPerSecond} b/s`);\n            audioChunks = [];\n            mediaRecorder.start();\n        };\n        // Stops recording\n        const stop = () =>\n            new Promise(resolve => {\n                if (!mediaRecorder) { return; }\n                console.log('[AudioInput] Stopping audio recording');\n                mediaRecorder.addEventListener('stop', () => {\n                    // Audio blob contains the data to store on the server\n                    const blobOptions = { type: mediaRecorder.mimeType };\n                    const audioBlob = new Blob(audioChunks, blobOptions);\n                    // console.log(audioBlob);\n                    resolve(audioBlob);\n                });\n                mediaRecorder.stop();\n            });\n        resolve({ start, stop });\n    });\n};\n","import Note from '../types/Note';\n\n/**\n * Records incoming MIDI messages from a MIDI device.\n *\n * @module input/MidiRecorder\n * @example\n * Usage (only in async functions):\n *     const recorder = await recordMidi();\n *     recorder.start();\n *     const notes = recorder.stop();\n * @returns {Promise} MIDI recorder\n */\nexport const recordMidi = () => {\n    return new Promise(async resolve => {\n        let midiAccess;\n        try {\n            midiAccess = await navigator.requestMIDIAccess();\n        } catch (error) {\n            console.warn('[MidiInput] Cannot access MIDI', error);\n            return;\n        }\n        let messages = [];\n        // Add new data when it arrives\n        const addMessage = (message) => messages.push(message);\n        // Starts recording\n        const start = () => {\n            if (!midiAccess) {\n                console.warn('[MidiInput] Cannot record MIDI');\n                return;\n            }\n            // Do this here, in case devices changed\n            for (const input of midiAccess.inputs.values()) {\n                input.onmidimessage = addMessage;\n            }\n            console.log('[MidiInput] Starting recording');\n            messages = [];\n        };\n        // Stops recording\n        const stop = () => {\n            if (!midiAccess) { return; }\n            console.log('[MidiInput] Stopping recording');\n            // Process messages\n            const notes = processMidiMessagesToNotes(messages);\n            return notes;\n        };\n        resolve({ start, stop });\n    });\n};\n\n/**\n * Parses MIDI messages to Notes\n *\n * @private\n * @param {Oject[]} messages MIDI messages as they come from the WebMidi API\n * @returns {Note[]} notes\n */\nfunction processMidiMessagesToNotes(messages) {\n    // Keep track of currently sounding notes\n    const currentNotes = new Map();\n    const notes = [];\n    for (const message of messages) {\n        const device = message.target.name;\n        const time = message.timeStamp;\n        const commandAndChannel = message.data[0];\n        const channel = commandAndChannel % 16;\n        const command = commandAndChannel - channel;\n        const pitch = message.data[1];\n        // A velocity value might not be included with a noteOff command\n        const velocity = (message.data.length > 2) ? message.data[2] : 0;\n        switch (command) {\n        case 128:\n            noteOff(notes, currentNotes, device, time, pitch, channel);\n            break;\n        case 144:\n            if (velocity > 0) {\n                noteOn(currentNotes, device, time, pitch, channel, velocity);\n            } else {\n                noteOff(notes, currentNotes, device, time, pitch, channel);\n            }\n            break;\n        case 224:\n            // TODO: handle pitch wheel?\n            break;\n        default:\n            // TODO: handle other commands?\n        }\n    }\n    // Look for unfinished notes\n    if (currentNotes.size > 0) {\n        console.warn(`[MidiInput] Got ${currentNotes.size} unfinished notes`);\n    }\n    notes.sort((a, b) => a.start - b.start);\n    return notes;\n}\n\n/**\n * Handles note-on messages\n *\n * @private\n * @param {Map} currentNotes Map with started but not yet ended notes\n * @param {string} device device name\n * @param {number} time time stamp of the message\n * @param {number} pitch MIDI pitch in [0, 127]\n * @param {number} channel MIDI channel\n * @param {number} velocity MIDI velocity\n */\nfunction noteOn(currentNotes, device, time, pitch, channel, velocity) {\n    const note = new Note(pitch, time / 1000, velocity, channel);\n    const key = `${device}-${channel}-${pitch}`;\n    currentNotes.set(key, note);\n}\n\n/**\n * Handles note-off messages\n *\n * @private\n * @param {Note[]} notes finished notes\n * @param {Map} currentNotes Map with started but not yet ended notes\n * @param {string} device device name\n * @param {number} time time stamp of the message\n * @param {number} pitch MIDI pitch in [0, 127]\n * @param {number} channel MIDI channel\n */\nfunction noteOff(notes, currentNotes, device, time, pitch, channel) {\n    // Look for note start\n    const key = `${device}-${channel}-${pitch}`;\n    if (!currentNotes.has(key)) {\n        console.warn(`[MidiInput] Missing note-on for note-off with key ${key}`);\n        return;\n    }\n    const note = currentNotes.get(key);\n    note.end = time / 1000;\n    notes.push(note);\n    currentNotes.delete(key);\n}\n","import Note from '../types/Note';\n\n/**\n * Handles incoming MIDI messages from a MIDI device.\n *\n * @module input/MidiInputManager\n */\nclass MidiInputManager {\n\n    #getMidiLiveData;\n    #setMidiLiveData;\n    #addCurrentNote;\n    #removeCurrentNote;\n\n    /**\n     * Constructor with callback functions\n     *\n     * @param {Function} getMidiLiveData a function called by this object to get\n     *      the currently recorded MIDI notes from App.js, where the\n     *      MidiInputManager instance should be created\n     *      Example for how to defined getMidiLiveData as method in App.js:\n     *          getMidiLiveData = () => this.state.midiLiveData;\n     * @param {Function} setMidiLiveData a function called by this object to\n     *      update the currently MIDI notes in App.js\n     *      Example:\n     *          setMidiLiveData = (data) => {\n     *              // Work-around so note_off event handling can\n     *              // immediately find the note_on event\n     *              this.state.midiLiveData = data;\n     *              this.setState({ midiLiveData: data });\n     *          };\n     * @param {Function} addCurrentNote a function called by this object to add\n     *      a currently played note (e.g. currently pressed piano key)\n     *      Example:\n     *          addCurrentNote = (note) => {\n     *              const newMap = new Map(this.state.currentNotes).set(note.pitch, note);\n     *              this.setState({ currentNotes: newMap });\n     *          }\n     * @param {Function} removeCurrentNote a function called by this object to\n     *      remove a currently played note\n     *      Example:\n     *          removeCurrentNote = (pitch) => {\n     *              const newMap = new Map(this.state.currentNotes).delete(pitch);\n     *              this.setState({ currentNotes: newMap });\n     *          }\n     */\n    constructor(\n        getMidiLiveData,\n        setMidiLiveData,\n        addCurrentNote = () => { },\n        removeCurrentNote = () => { },\n    ) {\n        this.#getMidiLiveData = getMidiLiveData;\n        this.#setMidiLiveData = setMidiLiveData;\n        this.#addCurrentNote = addCurrentNote;\n        this.#removeCurrentNote = removeCurrentNote;\n        // Request MIDI access\n        if (navigator.requestMIDIAccess) {\n            navigator.requestMIDIAccess().then(this._onMIDISuccess, this._onMIDIFailure);\n        } else {\n            console.error('[MidiInput] WebMIDI is not supported in this browser.');\n            alert('You browser does not support WebMIDI');\n        }\n    }\n\n    /**\n     * Handles a successful MIDI access request\n     *\n     * @private\n     * @param {*} midiAccess MIDI access\n     */\n    _onMIDISuccess = (midiAccess) => {\n        // console.log(midiAccess);\n        console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} input devices`);\n        for (const input of midiAccess.inputs.values()) {\n            console.log(` - ${input.name}`);\n            input.onmidimessage = this._handleMIDIMessage;\n        }\n        console.groupEnd();\n        // console.groupCollapsed(`[MidiInput] ${midiAccess.inputs.size} output devices`);\n        // for (let output of midiAccess.outputs.values()) {\n        //     console.log(` - ${output.name}`);\n        // }\n        // console.groupEnd();\n    };\n\n    /**\n     * Handles MIDI access errors\n     *\n     * @private\n     * @param {*} error error\n     */\n    _onMIDIFailure(error) {\n        console.error('[MidiInput] Cannot access MIDI devices.', error);\n    }\n\n    /**\n     * Handles incoming MIDI messages\n     *\n     * @private\n     * @param {*} message MIDI message\n     */\n    _handleMIDIMessage = (message) => {\n        // console.log(message);\n        const device = message.target.name;\n        const commandAndChannel = message.data[0];\n        const channel = commandAndChannel % 16;\n        const command = commandAndChannel - channel;\n        const time = message.timeStamp;\n        const pitch = message.data[1];\n        // A velocity value might not be included with a noteOff command\n        const velocity = (message.data.length > 2) ? message.data[2] : 0;\n        switch (command) {\n        case 128:\n            this._noteOff(device, time, pitch, channel);\n            break;\n        case 144:\n            if (velocity > 0) {\n                this._noteOn(device, time, pitch, channel, velocity);\n            } else {\n                this._noteOff(device, time, pitch, channel);\n            }\n            break;\n        case 224:\n            // TODO: handle pitch wheel?\n            break;\n        default:\n            // TODO: handle other commands?\n        }\n    };\n\n    /**\n     * Handles note-on messages\n     *\n     * @private\n     * @param {string} device device name\n     * @param {number} time time stamp of the message\n     * @param {number} pitch MIDI pitch in [0, 127]\n     * @param {number} channel MIDI channel\n     * @param {number} velocity MIDI velocity\n     */\n    _noteOn(device, time, pitch, channel, velocity) {\n        const note = new Note(pitch, time / 1000, velocity, channel);\n        // Add current note\n        this.#addCurrentNote(note);\n        // Update recorded MIDI data\n        // TODO: probably better to only update on note-off,\n        // Then we need internal cache\n        // But this might be good, since only 'unfinished' notes need to be checked on note-off,\n        // so we can remove finished notes from the cache\n        let midiData = this.#getMidiLiveData();\n        midiData = [...midiData, note];\n        this.#setMidiLiveData(midiData);\n    }\n\n    /**\n     * Handles note-off messages by updating the end time of the corresponding\n     * note\n     *\n     * @private\n     * @param {string} device device name\n     * @param {number} time time stamp of the message\n     * @param {number} pitch MIDI pitch in [0, 127]\n     * @param {number} channel MIDI channel\n     */\n    _noteOff(device, time, pitch, channel) {\n        const midiData = this.#getMidiLiveData();\n        if (midiData.length === 0) {\n            // If we have to wait for the setState to process, try again\n            setTimeout(() => this._noteOff(time, pitch), 10);\n        }\n        // Go back to latest note with the same pitch and channel and add the end time\n        let index = midiData.length - 1;\n        // TODO: if there are multiple instruments or channels, check also for those\n        while (midiData[index].pitch !== pitch || midiData[index].channel !== channel) {\n            index--;\n            if (index < 0) {\n                console.warn('[MidiInput] Did not find note-on event for note-off event!');\n                break;\n            }\n        }\n        if (index >= 0) {\n            // Note successfully found, update data\n            midiData[index].end = time / 1000;\n            this.#setMidiLiveData(midiData);\n            this.#removeCurrentNote(pitch);\n        }\n    }\n}\n\nexport default MidiInputManager;\n","import { choose, randFloat } from '../utils/MathUtils';\nimport Note from '../types/Note';\nimport { randomNormal, randomInt, group } from 'd3';\n\n/**\n * @module instruments/Drums\n */\n\n/**\n * Pitches that are mapped onto themselves are included for other information.\n * Millenium MPS-850 https://www.thomann.de/de/millenium_mps_850_e_drum_set.htm\n *\n * Notation info (line and shape of symbol) so drum notation can generate a lookup from this\n * https://en.wikipedia.org/wiki/Percussion_notation#/media/File:Sibelius_drum_legend.png\n * Lines start with 0 at the top above the top most horizontal notation line,\n * using incremental integers for every possible position, i.e. for on and between lines\n *\n * Legend:\n *  Map key: The orignal pitch from the input data\n *  repPitch: Replacement pitch, used to simplify multiple zones into one\n *  zone: Zone of the instrument this pitch comes from\n *  order: visual order ranking of this intrumentin the UI (top-bottom or left-right)\n *  line: y position in the drum notation (using integers for every possible position)\n *  shape: Note shape in notation: triangle, <>, x, o, ostroke, xstroke\n *  label: Short label for this intrument\n *  name: Full name of this instrument\n *\n * @type {Map<number,object>}\n */\nexport const drumPitchReplacementMapMPS850 = new Map([\n    // Crash 1\n    [49, { repPitch: 49, zone: 1, order: 10, line: -1, shape: 'o', label: 'CC1', name: 'Crash Cymbal 1' }],\n    [55, { repPitch: 49, zone: 2, order: 11, line: -1, shape: 'o', label: 'CC1', name: 'Crash Cymbal 1' }],\n    // Crash 2\n    [52, { repPitch: 57, zone: 1, order: 20, line: 0, shape: 'o', label: 'CC2', name: 'Crash Cymbal 2' }],\n    [57, { repPitch: 57, zone: 2, order: 21, line: 0, shape: 'o', label: 'CC2', name: 'Crash Cymbal 2' }],\n    // Hi-hat stick\n    [22, { repPitch: 46, zone: 1, order: 30, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\n    [26, { repPitch: 46, zone: 2, order: 31, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\n    [42, { repPitch: 46, zone: 3, order: 32, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\n    [46, { repPitch: 46, zone: 4, order: 33, line: 0, shape: '<>', label: 'HHS', name: 'Hi-Hat' }],\n    // Hi-hat pedal\n    [44, { repPitch: 44, zone: 1, order: 40, line: 9, shape: 'o', label: 'HHP', name: 'Hi-Hat Pedal' }],\n    // Ride\n    [51, { repPitch: 51, zone: 1, order: 50, line: 1, shape: 'x', label: 'Rd', name: 'Ride Cymbal' }],\n    [53, { repPitch: 51, zone: 2, order: 51, line: 1, shape: 'x', label: 'Rd', name: 'Ride Cymbal' }],\n    [59, { repPitch: 51, zone: 3, order: 52, line: 1, shape: 'x', label: 'Rd', name: 'Ride Cymbal' }],\n    // Snare\n    [38, { repPitch: 38, zone: 1, order: 60, line: 4, shape: 'o', label: 'SN', name: 'Snare' }],\n    [40, { repPitch: 38, zone: 2, order: 61, line: 4, shape: 'o', label: 'SN', name: 'Snare' }],\n    // Tom 1\n    [48, { repPitch: 48, zone: 1, order: 90, line: 2, shape: 'o', label: 'T1', name: 'Tom 1' }],\n    [50, { repPitch: 48, zone: 2, order: 91, line: 2, shape: 'o', label: 'T1', name: 'Tom 1' }],\n    // Tom 2\n    [45, { repPitch: 45, zone: 1, order: 100, line: 3, shape: 'o', label: 'T2', name: 'Tom 2' }],\n    [47, { repPitch: 45, zone: 2, order: 101, line: 3, shape: 'o', label: 'T2', name: 'Tom 2' }],\n    // Stand tom 1\n    [43, { repPitch: 43, zone: 1, order: 70, line: 5, shape: 'o', label: 'ST1', name: 'Stand Tom 1' }],\n    [58, { repPitch: 43, zone: 2, order: 71, line: 5, shape: 'o', label: 'ST1', name: 'Stand Tom 1' }],\n    // Stand tom 2\n    [39, { repPitch: 41, zone: 1, order: 80, line: 6, shape: 'o', label: 'ST2', name: 'Stand Tom 2' }],\n    [41, { repPitch: 41, zone: 2, order: 81, line: 6, shape: 'o', label: 'ST2', name: 'Stand Tom 2' }],\n    // Bass drum\n    [35, { repPitch: 36, zone: 1, order: 110, line: 8, shape: 'o', label: 'BD', name: 'Bass Drum' }],\n    [36, { repPitch: 36, zone: 2, order: 111, line: 8, shape: 'o', label: 'BD', name: 'Bass Drum' }],\n]);\n\n/**\n * Generates a variation of an array of notes by adding, removing or changing notes\n *\n * @param {Note[]} data array of notes\n * @param {number} deviation width of the Gauss kernel\n * @param {number} pAdd probability of adding a note after each note\n * @param {number} pRemove probability of removing each note\n * @returns {Note[]} variated Note array\n */\nexport function generateDrumVariation(data, deviation = 1, pAdd = 0.1, pRemove = 0.1) {\n    // Only use pitches that occur in the GT data\n    const usedPitches = new Set();\n    for (const note of data) {\n        usedPitches.add(note.pitch);\n    }\n    const pitches = [...usedPitches];\n    // Create variation by adding, removing, and shifting notes\n    const randVelocity = randomInt(15, 128);\n    const randTime = randomNormal(0, deviation);\n    const variation = [];\n    for (const note of data) {\n        // Add and remove notes at random\n        if (randFloat(0, 1) < pAdd) {\n            // Add another note\n            const start = note.start + randFloat(0, 1);\n            const end = start + randFloat(0, 1);\n            const velocity = randVelocity();\n            const pitch = choose(pitches);\n            variation.push(new Note(\n                pitch,\n                start,\n                velocity,\n                0,\n                end,\n            ));\n        }\n        if (randFloat(0, 1) < pRemove) {\n            // Remove note (just add nothing to varation)\n        } else {\n            // Shift timings at random\n            const start = note.start + randTime();\n            const end = note.end + randTime();\n            // Get new note\n            const newNote = Note.from(note);\n            newNote.start = Math.min(start, end);\n            newNote.end = Math.max(start, end);\n            variation.push(newNote);\n        }\n    }\n    // Sort notes by start just in case\n    variation.sort((a, b) => a.start - b.start);\n    return variation;\n}\n\n/**\n * Replaces pitches based on replacementMap\n *\n * @param {Note[]} notes notes\n * @param {Map} replacementMap a map pitch->replacementPitch\n * @returns {Notes[]} notes with replaced pitches\n * @throws {Error} when replacementMap is missing\n */\nexport function simplifyDrumPitches(notes, replacementMap) {\n    if (!replacementMap || !(replacementMap instanceof Map)) {\n        throw 'No replacement map given!';\n    }\n    const errors = new Set();\n    const simplified = notes.map(note => {\n        const oldPitch = note.pitch;\n        let newPitch = oldPitch;\n        if (!replacementMap.has(oldPitch)) {\n            errors.add(oldPitch);\n        } else {\n            newPitch = replacementMap.get(oldPitch).repPitch;\n        }\n        const newNote = Note.from({ ...note, pitch: newPitch });\n        return newNote;\n    });\n    // TODO: return errors, do not log! also easier to test\n    // if (errors.size > 0) {\n    //     console.warn(`Cannot replace all pitches, replacementMap misses entry for these pitches:`);\n    //     console.log(Array.from(errors));\n    // }\n    return simplified;\n    // return { simplified, errors };\n}\n\n/**\n * Returns a Map:pitch->yPosIndex for views to lookup which row\n * a pitch has to be drawn in\n *\n * @param {Map} replacementMap a pitch replacement map\n * @returns {Map} Map:pitch->yPosIndex\n */\nexport function getPitch2PositionMap(replacementMap) {\n    const result = new Map();\n    const uniqeRows = [...group([...replacementMap], d => d[1].repPitch)];\n    uniqeRows.sort((a, b) => a[1][0][1].order - b[1][0][1].order);\n    for (const [index, d] of uniqeRows.entries()) {\n        result.set(d[0], index);\n    }\n    return result;\n}\n","import { randFloat } from '../utils/MathUtils';\r\nimport { getMidiNoteByNr, getMidiNoteByLabel } from '../fileFormats/Midi';\r\nimport GuitarNote from '../types/GuitarNote';\r\nimport { randomInt, extent } from 'd3';\r\nimport { arrayShallowEquals } from '../utils/ArrayUtils';\r\n\r\n/**\r\n * @module instruments/Guitar\r\n */\r\n\r\n/**\r\n * Represents a tuning of a fretted string instrument.\r\n */\r\nexport class StringedTuning {\r\n    /**\r\n     * Represents a tuning of a fretted string instrument.\r\n     *\r\n     * @param {string} name name\r\n     * @param {string[]} notes array of notes, e.g. ['E2', 'A2', 'D3', ...]\r\n     */\r\n    constructor(name, notes) {\r\n        this.name = name;\r\n        this.notes = notes;\r\n        this.short = notes.join(' ');\r\n        this.pitches = notes.map(note => getMidiNoteByLabel(note).pitch);\r\n        this.stringCount = notes.length;\r\n    }\r\n}\r\n\r\n/**\r\n * Maps from instrument to string number to list of tunings.\r\n * Defaults are at the top.\r\n *\r\n * @todo add more? https://en.wikipedia.org/wiki/List_of_guitar_tunings\r\n * @todo replace arrays by maps? tuning name - tuning\r\n * @type {Map<string,Map<number,StringedTuning>>}\r\n * @example\r\n *      stringedTunings.get('Guitar').get(6) for 6-string guitar tunings\r\n */\r\nexport const stringedTunings = new Map([\r\n    ['Guitar', new Map([\r\n        [6, [\r\n            new StringedTuning('E stand.', ['E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n            new StringedTuning('Drop D', ['D2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n            new StringedTuning('Drop C', ['C2', 'G2', 'C3', 'F3', 'A3', 'D4']),\r\n            new StringedTuning('1/2 down', ['D#2', 'G#2', 'C#3', 'F#3', 'A#3', 'D#4']),\r\n            new StringedTuning('1 down', ['D2', 'G2', 'C3', 'F3', 'A3', 'D4']),\r\n            new StringedTuning('2 down', ['C2', 'F2', 'A#2', 'D#3', 'G3', 'C4']),\r\n            new StringedTuning('DADGAG', ['D2', 'A2', 'D3', 'G3', 'A3', 'D4']),\r\n        ]],\r\n        [7, [\r\n            new StringedTuning('B stand.', ['B1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n            new StringedTuning('Drop A', ['A1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n            new StringedTuning('1/2 down', ['A#1', 'D#2', 'G#2', 'C#3', 'F#3', 'A#3', 'D#4']),\r\n            new StringedTuning('1 down', ['A1', 'D2', 'G2', 'C3', 'F3', 'A3', 'D4']),\r\n            new StringedTuning('2 down', ['G1', 'C2', 'F2', 'A#2', 'D#3', 'G3', 'C4']),\r\n        ]],\r\n        [8, [\r\n            new StringedTuning('F# stand.', ['F#1', 'B1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n            new StringedTuning('Drop E', ['E1', 'B1', 'E2', 'A2', 'D3', 'G3', 'B3', 'E4']),\r\n            new StringedTuning('1/2 down', ['F1', 'A#1', 'D#2', 'G#2', 'C#3', 'F#3', 'A#3', 'D#4']),\r\n            new StringedTuning('1 down', ['E1', 'A1', 'D2', 'G2', 'C3', 'F3', 'A3', 'D4']),\r\n            new StringedTuning('2 down', ['D1', 'G1', 'C2', 'F2', 'A#2', 'D#3', 'G3', 'C4']),\r\n        ]],\r\n    ])],\r\n    ['Bass', new Map([\r\n        [4, [\r\n            new StringedTuning('E stand.', ['E1', 'A1', 'D2', 'G2']),\r\n            new StringedTuning('Drop D', ['D1', 'A1', 'D2', 'G2']),\r\n            new StringedTuning('1/2 down', ['D#1', 'G#1', 'C#2', 'F#2']),\r\n            new StringedTuning('1 down', ['D1', 'G1', 'C2', 'F2']),\r\n            new StringedTuning('2 down', ['C1', 'F1', 'A#1', 'D#2']),\r\n        ]],\r\n        [5, [\r\n            new StringedTuning('B stand.', ['B0', 'E1', 'A1', 'D2', 'G2']),\r\n            new StringedTuning('Drop A', ['A0', 'D1', 'A1', 'D2', 'G2']),\r\n            new StringedTuning('1/2 down', ['A#0', 'D#1', 'G#1', 'C#2', 'F#2']),\r\n            new StringedTuning('1 down', ['A0', 'D1', 'G1', 'C2', 'F2']),\r\n            new StringedTuning('2 down', ['G0', 'C1', 'F1', 'A#1', 'D#2']),\r\n        ]],\r\n        [6, [\r\n            new StringedTuning('F# stand.', ['F#0', 'B0', 'E1', 'A1', 'D2', 'G2']),\r\n            new StringedTuning('Drop E', ['E0', 'A0', 'D1', 'A1', 'D2', 'G2']),\r\n            new StringedTuning('1/2 down', ['F0', 'A#0', 'D#1', 'G#1', 'C#2', 'F#2']),\r\n            new StringedTuning('1 down', ['E1', 'A0', 'D1', 'G1', 'C2', 'F2']),\r\n            new StringedTuning('2 down', ['D0', 'G0', 'C1', 'F1', 'A#1', 'D#2']),\r\n        ]],\r\n    ])],\r\n    ['Ukulele', new Map([\r\n        [4, [\r\n            new StringedTuning('Hawaii', ['G4', 'C4', 'E4', 'A4']),\r\n            new StringedTuning('Low G', ['G3', 'C4', 'E4', 'A4']),\r\n            new StringedTuning('D-tuning', ['A4', 'D4', 'F#4', 'B4']),\r\n            new StringedTuning('Canadian', ['A3', 'D4', 'F#4', 'B4']),\r\n            new StringedTuning('Bariton', ['D3', 'G3', 'B3', 'E4']),\r\n        ]],\r\n    ])],\r\n]);\r\n\r\n/**\r\n * For Notes that have a guitar string encoded in their channel, this function\r\n * allows to convert them to a GuitarNote.\r\n *\r\n * @param {Note} note a Note that has the guitar string stored in its channel\r\n *      e.g. 0 to 5 for a six string\r\n * @param {StringedTuning} tuning tuning\r\n * @returns {GuitarNote} a GuitarNote\r\n */\r\nexport function guitarNoteFromNote(note, tuning) {\r\n    const string = note.channel;\r\n    const reversedString = tuning.stringCount - string - 1;\r\n    const fret = note.pitch - tuning.pitches[reversedString];\r\n    return GuitarNote.fromNote(note, string, fret);\r\n}\r\n\r\n/**\r\n * Returns a tuning with the specified pitches or null if none found.\r\n *\r\n * @param {number[]} pitches pitches of the tuning, same order as in\r\n *      Guitar.js' stringedTunings, i.e. low to high notes\r\n * @returns {StringedTuning|null} the found tuning or null\r\n */\r\nexport function getTuningFromPitches(pitches) {\r\n    const stringCount = pitches.length;\r\n    for (const stringCountMap of stringedTunings.values()) {\r\n        if (stringCountMap.has(stringCount)) {\r\n            const tunings = stringCountMap.get(stringCount);\r\n            for (const t of tunings) {\r\n                if (arrayShallowEquals(t.pitches, pitches)) {\r\n                    return t;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Returns the pitch range of a tuning, given the number of frets.\r\n *\r\n * @param {StringedTuning} tuning tuning\r\n * @param {number} fretCount number of frets the instrument has (default: 24)\r\n * @returns {number[]} [minPitch, maxPitch]\r\n */\r\nexport function getTuningPitchRange(tuning, fretCount = 24) {\r\n    // const openExtent = extent(tuning.pitches);\r\n    const openMax = tuning.pitches[tuning.stringCount - 1];\r\n    const openMin = tuning.pitches[0];\r\n    return [openMin, openMax + fretCount];\r\n}\r\n\r\n/**\r\n * Colors for guitar strings, acces via stringColor[string]\r\n * where string in [1, 8].\r\n *\r\n * @type {string[]}\r\n */\r\nexport const stringColors = [\r\n    '#888',\r\n    '#d122e9',\r\n    '#31eb1c',\r\n    '#f37c14',\r\n    '#10edfc',\r\n    '#ffeb09',\r\n    '#ff210d',\r\n    'silver',\r\n    'gold',\r\n];\r\n\r\n/**\r\n * Returns the pitch of a note at a given fretboard position.\r\n *\r\n * @param {number} string string\r\n * @param {number} fret fret\r\n * @param {StringedTuning} tuning tuning\r\n * @returns {number} pitch\r\n */\r\nexport function getPitchFromFretboardPos(string, fret, tuning) {\r\n    // Order is reversed, since tunings are named from bass to treble\r\n    // but strings are numbered the other direction...\r\n    const reversedString = tuning.stringCount - string + 1;\r\n    const openPitch = tuning.pitches[reversedString - 1];\r\n    return openPitch + fret;\r\n}\r\n\r\n/**\r\n * Returns MIDI attributes of a note at a given fretboard position, e.g. C#\r\n *\r\n * @param {number} string string\r\n * @param {number} fret fret\r\n * @param {StringedTuning} tuning tuning\r\n * @returns {object} note info, e.g. { pitch: 69, name: 'A', octave: 4, label: 'A4', frequency: 440.000 }\r\n */\r\nexport function getNoteInfoFromFretboardPos(string, fret, tuning) {\r\n    const pitch = getPitchFromFretboardPos(string, fret, tuning);\r\n    return getMidiNoteByNr(pitch);\r\n}\r\n\r\n/**\r\n * Finds all fretboard positions with this exact pitch.\r\n *\r\n * @param {number} pitch MIDI pitch\r\n * @param {StringedTuning} tuning tuning\r\n * @param {number} fretCount number of frets the instrument has\r\n * @returns {object[]} positions\r\n */\r\nexport function getFretboardPositionsFromPitch(pitch, tuning, fretCount) {\r\n    const positions = [];\r\n    const stringCount = tuning.stringCount;\r\n    for (let string = 0; string < stringCount; string++) {\r\n        const openPitch = tuning.pitches[string];\r\n        // Rule out strings where pitch is lower than open string\r\n        if (pitch < openPitch) {\r\n            continue;\r\n        }\r\n        // Rule out strings where pitch is higher than highest fret\r\n        if (pitch > openPitch + fretCount) {\r\n            continue;\r\n        }\r\n        positions.push({\r\n            // Convert so string 1 is treble\r\n            string: stringCount - string,\r\n            fret: pitch - openPitch,\r\n        });\r\n    }\r\n    return positions;\r\n}\r\n\r\n/**\r\n * Finds all fretboard positions with this note in all octaves.\r\n *\r\n * @param {string} name note name, e.g. 'C#'\r\n * @param {StringedTuning} tuning tuning\r\n * @param {number} fretCount number of frets the instrument has\r\n * @returns {object[]} positions\r\n */\r\nexport function getFretboardPositionsFromNoteName(name, tuning, fretCount = 24) {\r\n    const n = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\r\n    if (!n.includes(name)) { return null; }\r\n    const positions = [];\r\n    const lowestPitch = n.indexOf(name);\r\n    const stringCount = tuning.stringCount;\r\n    for (let string = 0; string < stringCount; string++) {\r\n        // First fret where this note appears\r\n        const openPitch = tuning.pitches[string];\r\n        let fret = lowestPitch - (openPitch % 12);\r\n        if (fret < 0) {\r\n            fret += 12;\r\n        }\r\n        while (fret <= fretCount) {\r\n            positions.push({\r\n                // Convert so string 1 is treble\r\n                string: stringCount - string,\r\n                fret,\r\n            });\r\n            // Go to next octave\r\n            fret += 12;\r\n        }\r\n    }\r\n    return positions;\r\n}\r\n\r\n/**\r\n * Generates example MIDI-like data (preprocessed MIDI).\r\n *\r\n * @param {number} startTime start tick\r\n * @param {number} count number of notes to generate\r\n * @param {StringedTuning} tuning tuning\r\n * @returns {GuitarNote[]} notes\r\n */\r\nexport function generateExampleData(startTime = 0, count = 50, tuning) {\r\n    let currentTime = startTime;\r\n    return Array.from({ length: count })\r\n        .map(() => {\r\n            const start = currentTime + randFloat(0, 1);\r\n            currentTime = start + randFloat(0, 1);\r\n            const string = randomInt(1, 7)();\r\n            const fret = randomInt(0, 25)();\r\n            const pitch = getPitchFromFretboardPos(string, fret, tuning);\r\n            const velocity = randomInt(15, 127)();\r\n            return new GuitarNote(\r\n                pitch,\r\n                start,\r\n                velocity,\r\n                string,\r\n                currentTime,\r\n                string,\r\n                fret,\r\n            );\r\n        });\r\n}\r\n\r\n/**\r\n * Estimates the fretboard position from MIDI notes\r\n *\r\n * @todo does not work well yet\r\n * @param {Note[]} notes notes with only MIDI information\r\n * @param {StringedTuning} tuning tuning\r\n * @param {number} fretCount number of frets the instrument has\r\n * @returns {GuitarNote[]} GuitarNotes with fretboard positions\r\n */\r\nexport function fretboardPositionsFromMidi(notes, tuning, fretCount = 24) {\r\n    if (!notes || notes.length === 0) { return []; }\r\n    if (!tuning || !tuning.pitches) {\r\n        console.warn('Invalid tuning parameter!');\r\n        return [];\r\n    }\r\n    // Sort notes that cannot be played out in advance for better performance\r\n    const [minPitch, maxPitch] = getTuningPitchRange(tuning, fretCount);\r\n    const possibleNotes = [];\r\n    const errorPitches = [];\r\n    for (const note of notes) {\r\n        if (note.pitch < minPitch || note.pitch > maxPitch) {\r\n            errorPitches.push(note.pitch);\r\n        } else {\r\n            possibleNotes.push(note);\r\n        }\r\n    }\r\n    const result = [];\r\n    for (const note of possibleNotes) {\r\n        const positions = getFretboardPositionsFromPitch(note.pitch, tuning, 24);\r\n        // Choose best position\r\n        // TODO: improve this to make it easier to play, take closest postion to prior one\r\n        let bestPos = positions[0];\r\n        for (const pos of positions) {\r\n            if (pos.fret < bestPos.fret) {\r\n                bestPos = pos;\r\n            }\r\n        }\r\n        const { string, fret } = bestPos;\r\n        result.push(GuitarNote.fromNote(note, string, fret));\r\n    }\r\n    // Give advice on transposing for better results\r\n    if (errorPitches.length > 0) {\r\n        const [minDataPitch, maxDataPitch] = extent(notes, d => d.pitch);\r\n        let advice = '';\r\n        if (minDataPitch < minPitch) {\r\n            advice += `Transpose by ${minPitch - minDataPitch} semitones`;\r\n        }\r\n        if (maxPitch < maxDataPitch) {\r\n            advice += `Transpose by ${maxPitch - maxDataPitch} semitones`;\r\n        }\r\n        console.warn(\r\n            `Cannot find a fretboard position for ${errorPitches.length} pitches, try another tuning instead:\\n`,\r\n            errorPitches,\r\n            `\\nCurrent tuning's pitch range is ${minPitch} - ${maxPitch}`,\r\n            `\\ndata pitch range is ${minDataPitch} - ${maxDataPitch}\\n`,\r\n            advice,\r\n        );\r\n    }\r\n    return result;\r\n}\r\n\r\n// /**\r\n//  * @todo chords always? use 4-fret-blocks\r\n//  * @param {GuitarNote[]} notes notes with fretboard positions\r\n//  * @returns {?} fingering information\r\n//  */\r\n// export function fingeringFromFretboardPositions(notes) {\r\n//     // TODO: detect chords first?\r\n//     // TODO: then lookup chords' fingerings from a lookup table\r\n\r\n//     // TODO: alternatively (as fallback) use heuristics\r\n\r\n//     // TODO: or try to do it like humans do when playing\r\n\r\n//     // TODO: consider prior and following notes/chords!\r\n\r\n// }\r\n","/**\r\n * Fill a string with a repeated character\r\n *\r\n * @param character\r\n * @param repetition\r\n */\r\nconst fillStr = (s, n) => Array(Math.abs(n) + 1).join(s);\r\nfunction deprecate(original, alternative, fn) {\r\n    return function (...args) {\r\n        // tslint:disable-next-line\r\n        console.warn(`${original} is deprecated. Use ${alternative}.`);\r\n        return fn.apply(this, args);\r\n    };\r\n}\n\nfunction isNamed(src) {\r\n    return src !== null && typeof src === \"object\" && typeof src.name === \"string\"\r\n        ? true\r\n        : false;\r\n}\n\nfunction isPitch(pitch) {\r\n    return pitch !== null &&\r\n        typeof pitch === \"object\" &&\r\n        typeof pitch.step === \"number\" &&\r\n        typeof pitch.alt === \"number\"\r\n        ? true\r\n        : false;\r\n}\r\n// The number of fifths of [C, D, E, F, G, A, B]\r\nconst FIFTHS = [0, 2, 4, -1, 1, 3, 5];\r\n// The number of octaves it span each step\r\nconst STEPS_TO_OCTS = FIFTHS.map((fifths) => Math.floor((fifths * 7) / 12));\r\nfunction encode(pitch) {\r\n    const { step, alt, oct, dir = 1 } = pitch;\r\n    const f = FIFTHS[step] + 7 * alt;\r\n    if (oct === undefined) {\r\n        return [dir * f];\r\n    }\r\n    const o = oct - STEPS_TO_OCTS[step] - 4 * alt;\r\n    return [dir * f, dir * o];\r\n}\r\n// We need to get the steps from fifths\r\n// Fifths for CDEFGAB are [ 0, 2, 4, -1, 1, 3, 5 ]\r\n// We add 1 to fifths to avoid negative numbers, so:\r\n// for [\"F\", \"C\", \"G\", \"D\", \"A\", \"E\", \"B\"] we have:\r\nconst FIFTHS_TO_STEPS = [3, 0, 4, 1, 5, 2, 6];\r\nfunction decode(coord) {\r\n    const [f, o, dir] = coord;\r\n    const step = FIFTHS_TO_STEPS[unaltered(f)];\r\n    const alt = Math.floor((f + 1) / 7);\r\n    if (o === undefined) {\r\n        return { step, alt, dir };\r\n    }\r\n    const oct = o + 4 * alt + STEPS_TO_OCTS[step];\r\n    return { step, alt, oct, dir };\r\n}\r\n// Return the number of fifths as if it were unaltered\r\nfunction unaltered(f) {\r\n    const i = (f + 1) % 7;\r\n    return i < 0 ? 7 + i : i;\r\n}\n\nconst NoNote = { empty: true, name: \"\", pc: \"\", acc: \"\" };\r\nconst cache = new Map();\r\nconst stepToLetter = (step) => \"CDEFGAB\".charAt(step);\r\nconst altToAcc = (alt) => alt < 0 ? fillStr(\"b\", -alt) : fillStr(\"#\", alt);\r\nconst accToAlt = (acc) => acc[0] === \"b\" ? -acc.length : acc.length;\r\n/**\r\n * Given a note literal (a note name or a note object), returns the Note object\r\n * @example\r\n * note('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\r\n */\r\nfunction note(src) {\r\n    const cached = cache.get(src);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const value = typeof src === \"string\"\r\n        ? parse(src)\r\n        : isPitch(src)\r\n            ? note(pitchName(src))\r\n            : isNamed(src)\r\n                ? note(src.name)\r\n                : NoNote;\r\n    cache.set(src, value);\r\n    return value;\r\n}\r\nconst REGEX = /^([a-gA-G]?)(#{1,}|b{1,}|x{1,}|)(-?\\d*)\\s*(.*)$/;\r\n/**\r\n * @private\r\n */\r\nfunction tokenizeNote(str) {\r\n    const m = REGEX.exec(str);\r\n    return [m[1].toUpperCase(), m[2].replace(/x/g, \"##\"), m[3], m[4]];\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction coordToNote(noteCoord) {\r\n    return note(decode(noteCoord));\r\n}\r\nconst mod = (n, m) => ((n % m) + m) % m;\r\nconst SEMI = [0, 2, 4, 5, 7, 9, 11];\r\nfunction parse(noteName) {\r\n    const tokens = tokenizeNote(noteName);\r\n    if (tokens[0] === \"\" || tokens[3] !== \"\") {\r\n        return NoNote;\r\n    }\r\n    const letter = tokens[0];\r\n    const acc = tokens[1];\r\n    const octStr = tokens[2];\r\n    const step = (letter.charCodeAt(0) + 3) % 7;\r\n    const alt = accToAlt(acc);\r\n    const oct = octStr.length ? +octStr : undefined;\r\n    const coord = encode({ step, alt, oct });\r\n    const name = letter + acc + octStr;\r\n    const pc = letter + acc;\r\n    const chroma = (SEMI[step] + alt + 120) % 12;\r\n    const height = oct === undefined\r\n        ? mod(SEMI[step] + alt, 12) - 12 * 99\r\n        : SEMI[step] + alt + 12 * (oct + 1);\r\n    const midi = height >= 0 && height <= 127 ? height : null;\r\n    const freq = oct === undefined ? null : Math.pow(2, (height - 69) / 12) * 440;\r\n    return {\r\n        empty: false,\r\n        acc,\r\n        alt,\r\n        chroma,\r\n        coord,\r\n        freq,\r\n        height,\r\n        letter,\r\n        midi,\r\n        name,\r\n        oct,\r\n        pc,\r\n        step,\r\n    };\r\n}\r\nfunction pitchName(props) {\r\n    const { step, alt, oct } = props;\r\n    const letter = stepToLetter(step);\r\n    if (!letter) {\r\n        return \"\";\r\n    }\r\n    const pc = letter + altToAcc(alt);\r\n    return oct || oct === 0 ? pc + oct : pc;\r\n}\n\nconst NoInterval = { empty: true, name: \"\", acc: \"\" };\r\n// shorthand tonal notation (with quality after number)\r\nconst INTERVAL_TONAL_REGEX = \"([-+]?\\\\d+)(d{1,4}|m|M|P|A{1,4})\";\r\n// standard shorthand notation (with quality before number)\r\nconst INTERVAL_SHORTHAND_REGEX = \"(AA|A|P|M|m|d|dd)([-+]?\\\\d+)\";\r\nconst REGEX$1 = new RegExp(\"^\" + INTERVAL_TONAL_REGEX + \"|\" + INTERVAL_SHORTHAND_REGEX + \"$\");\r\n/**\r\n * @private\r\n */\r\nfunction tokenizeInterval(str) {\r\n    const m = REGEX$1.exec(`${str}`);\r\n    if (m === null) {\r\n        return [\"\", \"\"];\r\n    }\r\n    return m[1] ? [m[1], m[2]] : [m[4], m[3]];\r\n}\r\nconst cache$1 = {};\r\n/**\r\n * Get interval properties. It returns an object with:\r\n *\r\n * - name: the interval name\r\n * - num: the interval number\r\n * - type: 'perfectable' or 'majorable'\r\n * - q: the interval quality (d, m, M, A)\r\n * - dir: interval direction (1 ascending, -1 descending)\r\n * - simple: the simplified number\r\n * - semitones: the size in semitones\r\n * - chroma: the interval chroma\r\n *\r\n * @param {string} interval - the interval name\r\n * @return {Object} the interval properties\r\n *\r\n * @example\r\n * import { interval } from '@tonaljs/core'\r\n * interval('P5').semitones // => 7\r\n * interval('m3').type // => 'majorable'\r\n */\r\nfunction interval(src) {\r\n    return typeof src === \"string\"\r\n        ? cache$1[src] || (cache$1[src] = parse$1(src))\r\n        : isPitch(src)\r\n            ? interval(pitchName$1(src))\r\n            : isNamed(src)\r\n                ? interval(src.name)\r\n                : NoInterval;\r\n}\r\nconst SIZES = [0, 2, 4, 5, 7, 9, 11];\r\nconst TYPES = \"PMMPPMM\";\r\nfunction parse$1(str) {\r\n    const tokens = tokenizeInterval(str);\r\n    if (tokens[0] === \"\") {\r\n        return NoInterval;\r\n    }\r\n    const num = +tokens[0];\r\n    const q = tokens[1];\r\n    const step = (Math.abs(num) - 1) % 7;\r\n    const t = TYPES[step];\r\n    if (t === \"M\" && q === \"P\") {\r\n        return NoInterval;\r\n    }\r\n    const type = t === \"M\" ? \"majorable\" : \"perfectable\";\r\n    const name = \"\" + num + q;\r\n    const dir = num < 0 ? -1 : 1;\r\n    const simple = num === 8 || num === -8 ? num : dir * (step + 1);\r\n    const alt = qToAlt(type, q);\r\n    const oct = Math.floor((Math.abs(num) - 1) / 7);\r\n    const semitones = dir * (SIZES[step] + alt + 12 * oct);\r\n    const chroma = (((dir * (SIZES[step] + alt)) % 12) + 12) % 12;\r\n    const coord = encode({ step, alt, oct, dir });\r\n    return {\r\n        empty: false,\r\n        name,\r\n        num,\r\n        q,\r\n        step,\r\n        alt,\r\n        dir,\r\n        type,\r\n        simple,\r\n        semitones,\r\n        chroma,\r\n        coord,\r\n        oct,\r\n    };\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction coordToInterval(coord) {\r\n    const [f, o = 0] = coord;\r\n    const isDescending = f * 7 + o * 12 < 0;\r\n    const ivl = isDescending ? [-f, -o, -1] : [f, o, 1];\r\n    return interval(decode(ivl));\r\n}\r\nfunction qToAlt(type, q) {\r\n    return (q === \"M\" && type === \"majorable\") ||\r\n        (q === \"P\" && type === \"perfectable\")\r\n        ? 0\r\n        : q === \"m\" && type === \"majorable\"\r\n            ? -1\r\n            : /^A+$/.test(q)\r\n                ? q.length\r\n                : /^d+$/.test(q)\r\n                    ? -1 * (type === \"perfectable\" ? q.length : q.length + 1)\r\n                    : 0;\r\n}\r\n// return the interval name of a pitch\r\nfunction pitchName$1(props) {\r\n    const { step, alt, oct = 0, dir } = props;\r\n    if (!dir) {\r\n        return \"\";\r\n    }\r\n    const num = step + 1 + 7 * oct;\r\n    const d = dir < 0 ? \"-\" : \"\";\r\n    const type = TYPES[step] === \"M\" ? \"majorable\" : \"perfectable\";\r\n    const name = d + num + altToQ(type, alt);\r\n    return name;\r\n}\r\nfunction altToQ(type, alt) {\r\n    if (alt === 0) {\r\n        return type === \"majorable\" ? \"M\" : \"P\";\r\n    }\r\n    else if (alt === -1 && type === \"majorable\") {\r\n        return \"m\";\r\n    }\r\n    else if (alt > 0) {\r\n        return fillStr(\"A\", alt);\r\n    }\r\n    else {\r\n        return fillStr(\"d\", type === \"perfectable\" ? alt : alt + 1);\r\n    }\r\n}\n\n/**\r\n * Transpose a note by an interval.\r\n *\r\n * @param {string} note - the note or note name\r\n * @param {string} interval - the interval or interval name\r\n * @return {string} the transposed note name or empty string if not valid notes\r\n * @example\r\n * import { tranpose } from \"@tonaljs/core\"\r\n * transpose(\"d3\", \"3M\") // => \"F#3\"\r\n * transpose(\"D\", \"3M\") // => \"F#\"\r\n * [\"C\", \"D\", \"E\", \"F\", \"G\"].map(pc => transpose(pc, \"M3)) // => [\"E\", \"F#\", \"G#\", \"A\", \"B\"]\r\n */\r\nfunction transpose(noteName, intervalName) {\r\n    const note$1 = note(noteName);\r\n    const interval$1 = interval(intervalName);\r\n    if (note$1.empty || interval$1.empty) {\r\n        return \"\";\r\n    }\r\n    const noteCoord = note$1.coord;\r\n    const intervalCoord = interval$1.coord;\r\n    const tr = noteCoord.length === 1\r\n        ? [noteCoord[0] + intervalCoord[0]]\r\n        : [noteCoord[0] + intervalCoord[0], noteCoord[1] + intervalCoord[1]];\r\n    return coordToNote(tr).name;\r\n}\r\n/**\r\n * Find the interval distance between two notes or coord classes.\r\n *\r\n * To find distance between coord classes, both notes must be coord classes and\r\n * the interval is always ascending\r\n *\r\n * @param {Note|string} from - the note or note name to calculate distance from\r\n * @param {Note|string} to - the note or note name to calculate distance to\r\n * @return {string} the interval name or empty string if not valid notes\r\n *\r\n */\r\nfunction distance(fromNote, toNote) {\r\n    const from = note(fromNote);\r\n    const to = note(toNote);\r\n    if (from.empty || to.empty) {\r\n        return \"\";\r\n    }\r\n    const fcoord = from.coord;\r\n    const tcoord = to.coord;\r\n    const fifths = tcoord[0] - fcoord[0];\r\n    const octs = fcoord.length === 2 && tcoord.length === 2\r\n        ? tcoord[1] - fcoord[1]\r\n        : -Math.floor((fifths * 7) / 12);\r\n    return coordToInterval([fifths, octs]).name;\r\n}\n\nexport { accToAlt, altToAcc, coordToInterval, coordToNote, decode, deprecate, distance, encode, fillStr, interval, isNamed, isPitch, note, stepToLetter, tokenizeInterval, tokenizeNote, transpose };\n//# sourceMappingURL=index.es.js.map\n","// ascending range\r\nfunction ascR(b, n) {\r\n    const a = [];\r\n    // tslint:disable-next-line:curly\r\n    for (; n--; a[n] = n + b)\r\n        ;\r\n    return a;\r\n}\r\n// descending range\r\nfunction descR(b, n) {\r\n    const a = [];\r\n    // tslint:disable-next-line:curly\r\n    for (; n--; a[n] = b - n)\r\n        ;\r\n    return a;\r\n}\r\n/**\r\n * Creates a numeric range\r\n *\r\n * @param {number} from\r\n * @param {number} to\r\n * @return {Array<number>}\r\n *\r\n * @example\r\n * range(-2, 2) // => [-2, -1, 0, 1, 2]\r\n * range(2, -2) // => [2, 1, 0, -1, -2]\r\n */\r\nfunction range(from, to) {\r\n    return from < to ? ascR(from, to - from + 1) : descR(from, from - to + 1);\r\n}\r\n/**\r\n * Rotates a list a number of times. It\"s completly agnostic about the\r\n * contents of the list.\r\n *\r\n * @param {Integer} times - the number of rotations\r\n * @param {Array} collection\r\n * @return {Array} the rotated collection\r\n *\r\n * @example\r\n * rotate(1, [1, 2, 3]) // => [2, 3, 1]\r\n */\r\nfunction rotate(times, arr) {\r\n    const len = arr.length;\r\n    const n = ((times % len) + len) % len;\r\n    return arr.slice(n, len).concat(arr.slice(0, n));\r\n}\r\n/**\r\n * Return a copy of the collection with the null values removed\r\n * @function\r\n * @param {Array} collection\r\n * @return {Array}\r\n *\r\n * @example\r\n * compact([\"a\", \"b\", null, \"c\"]) // => [\"a\", \"b\", \"c\"]\r\n */\r\nfunction compact(arr) {\r\n    return arr.filter((n) => n === 0 || n);\r\n}\r\n/**\r\n * Randomizes the order of the specified collection in-place, using the Fisher–Yates shuffle.\r\n *\r\n * @function\r\n * @param {Array} collection\r\n * @return {Array} the collection shuffled\r\n *\r\n * @example\r\n * shuffle([\"C\", \"D\", \"E\", \"F\"]) // => [...]\r\n */\r\nfunction shuffle(arr, rnd = Math.random) {\r\n    let i;\r\n    let t;\r\n    let m = arr.length;\r\n    while (m) {\r\n        i = Math.floor(rnd() * m--);\r\n        t = arr[m];\r\n        arr[m] = arr[i];\r\n        arr[i] = t;\r\n    }\r\n    return arr;\r\n}\r\n/**\r\n * Get all permutations of an collection\r\n *\r\n * @param {Array} collection - the collection\r\n * @return {Array<Array>} an collection with all the permutations\r\n * @example\r\n * permutations([\"a\", \"b\", \"c\"])) // =>\r\n * [\r\n *   [\"a\", \"b\", \"c\"],\r\n *   [\"b\", \"a\", \"c\"],\r\n *   [\"b\", \"c\", \"a\"],\r\n *   [\"a\", \"c\", \"b\"],\r\n *   [\"c\", \"a\", \"b\"],\r\n *   [\"c\", \"b\", \"a\"]\r\n * ]\r\n */\r\nfunction permutations(arr) {\r\n    if (arr.length === 0) {\r\n        return [[]];\r\n    }\r\n    return permutations(arr.slice(1)).reduce((acc, perm) => {\r\n        return acc.concat(arr.map((e, pos) => {\r\n            const newPerm = perm.slice();\r\n            newPerm.splice(pos, 0, arr[0]);\r\n            return newPerm;\r\n        }));\r\n    }, []);\r\n}\r\nvar index = {\r\n    compact,\r\n    permutations,\r\n    range,\r\n    rotate,\r\n    shuffle,\r\n};\n\nexport default index;\nexport { compact, permutations, range, rotate, shuffle };\n//# sourceMappingURL=index.es.js.map\n","import { range, compact, rotate } from '@tonaljs/collection';\nimport { deprecate, note, interval } from '@tonaljs/core';\n\nconst EmptyPcset = {\r\n    empty: true,\r\n    name: \"\",\r\n    setNum: 0,\r\n    chroma: \"000000000000\",\r\n    normalized: \"000000000000\",\r\n    intervals: [],\r\n};\r\n// UTILITIES\r\nconst setNumToChroma = (num) => Number(num).toString(2);\r\nconst chromaToNumber = (chroma) => parseInt(chroma, 2);\r\nconst REGEX = /^[01]{12}$/;\r\nfunction isChroma(set) {\r\n    return REGEX.test(set);\r\n}\r\nconst isPcsetNum = (set) => typeof set === \"number\" && set >= 0 && set <= 4095;\r\nconst isPcset = (set) => set && isChroma(set.chroma);\r\nconst cache = { [EmptyPcset.chroma]: EmptyPcset };\r\n/**\r\n * Get the pitch class set of a collection of notes or set number or chroma\r\n */\r\nfunction get(src) {\r\n    const chroma = isChroma(src)\r\n        ? src\r\n        : isPcsetNum(src)\r\n            ? setNumToChroma(src)\r\n            : Array.isArray(src)\r\n                ? listToChroma(src)\r\n                : isPcset(src)\r\n                    ? src.chroma\r\n                    : EmptyPcset.chroma;\r\n    return (cache[chroma] = cache[chroma] || chromaToPcset(chroma));\r\n}\r\n/**\r\n * Use Pcset.properties\r\n * @function\r\n * @deprecated\r\n */\r\nconst pcset = deprecate(\"Pcset.pcset\", \"Pcset.get\", get);\r\n/**\r\n * Get pitch class set chroma\r\n * @function\r\n * @example\r\n * Pcset.chroma([\"c\", \"d\", \"e\"]); //=> \"101010000000\"\r\n */\r\nconst chroma = (set) => get(set).chroma;\r\n/**\r\n * Get intervals (from C) of a set\r\n * @function\r\n * @example\r\n * Pcset.intervals([\"c\", \"d\", \"e\"]); //=>\r\n */\r\nconst intervals = (set) => get(set).intervals;\r\n/**\r\n * Get pitch class set number\r\n * @function\r\n * @example\r\n * Pcset.num([\"c\", \"d\", \"e\"]); //=> 2192\r\n */\r\nconst num = (set) => get(set).setNum;\r\nconst IVLS = [\r\n    \"1P\",\r\n    \"2m\",\r\n    \"2M\",\r\n    \"3m\",\r\n    \"3M\",\r\n    \"4P\",\r\n    \"5d\",\r\n    \"5P\",\r\n    \"6m\",\r\n    \"6M\",\r\n    \"7m\",\r\n    \"7M\",\r\n];\r\n/**\r\n * @private\r\n * Get the intervals of a pcset *starting from C*\r\n * @param {Set} set - the pitch class set\r\n * @return {IntervalName[]} an array of interval names or an empty array\r\n * if not a valid pitch class set\r\n */\r\nfunction chromaToIntervals(chroma) {\r\n    const intervals = [];\r\n    for (let i = 0; i < 12; i++) {\r\n        // tslint:disable-next-line:curly\r\n        if (chroma.charAt(i) === \"1\")\r\n            intervals.push(IVLS[i]);\r\n    }\r\n    return intervals;\r\n}\r\n/**\r\n * Get a list of all possible pitch class sets (all possible chromas) *having\r\n * C as root*. There are 2048 different chromas. If you want them with another\r\n * note you have to transpose it\r\n *\r\n * @see http://allthescales.org/\r\n * @return {Array<PcsetChroma>} an array of possible chromas from '10000000000' to '11111111111'\r\n */\r\nfunction chromas() {\r\n    return range(2048, 4095).map(setNumToChroma);\r\n}\r\n/**\r\n * Given a a list of notes or a pcset chroma, produce the rotations\r\n * of the chroma discarding the ones that starts with \"0\"\r\n *\r\n * This is used, for example, to get all the modes of a scale.\r\n *\r\n * @param {Array|string} set - the list of notes or pitchChr of the set\r\n * @param {boolean} normalize - (Optional, true by default) remove all\r\n * the rotations that starts with \"0\"\r\n * @return {Array<string>} an array with all the modes of the chroma\r\n *\r\n * @example\r\n * Pcset.modes([\"C\", \"D\", \"E\"]).map(Pcset.intervals)\r\n */\r\nfunction modes(set, normalize = true) {\r\n    const pcs = get(set);\r\n    const binary = pcs.chroma.split(\"\");\r\n    return compact(binary.map((_, i) => {\r\n        const r = rotate(i, binary);\r\n        return normalize && r[0] === \"0\" ? null : r.join(\"\");\r\n    }));\r\n}\r\n/**\r\n * Test if two pitch class sets are numentical\r\n *\r\n * @param {Array|string} set1 - one of the pitch class sets\r\n * @param {Array|string} set2 - the other pitch class set\r\n * @return {boolean} true if they are equal\r\n * @example\r\n * Pcset.isEqual([\"c2\", \"d3\"], [\"c5\", \"d2\"]) // => true\r\n */\r\nfunction isEqual(s1, s2) {\r\n    return get(s1).setNum === get(s2).setNum;\r\n}\r\n/**\r\n * Create a function that test if a collection of notes is a\r\n * subset of a given set\r\n *\r\n * The function is curryfied.\r\n *\r\n * @param {PcsetChroma|NoteName[]} set - the superset to test against (chroma or\r\n * list of notes)\r\n * @return{function(PcsetChroma|NoteNames[]): boolean} a function accepting a set\r\n * to test against (chroma or list of notes)\r\n * @example\r\n * const inCMajor = Pcset.isSubsetOf([\"C\", \"E\", \"G\"])\r\n * inCMajor([\"e6\", \"c4\"]) // => true\r\n * inCMajor([\"e6\", \"c4\", \"d3\"]) // => false\r\n */\r\nfunction isSubsetOf(set) {\r\n    const s = get(set).setNum;\r\n    return (notes) => {\r\n        const o = get(notes).setNum;\r\n        // tslint:disable-next-line: no-bitwise\r\n        return s && s !== o && (o & s) === o;\r\n    };\r\n}\r\n/**\r\n * Create a function that test if a collection of notes is a\r\n * superset of a given set (it contains all notes and at least one more)\r\n *\r\n * @param {Set} set - an array of notes or a chroma set string to test against\r\n * @return {(subset: Set): boolean} a function that given a set\r\n * returns true if is a subset of the first one\r\n * @example\r\n * const extendsCMajor = Pcset.isSupersetOf([\"C\", \"E\", \"G\"])\r\n * extendsCMajor([\"e6\", \"a\", \"c4\", \"g2\"]) // => true\r\n * extendsCMajor([\"c6\", \"e4\", \"g3\"]) // => false\r\n */\r\nfunction isSupersetOf(set) {\r\n    const s = get(set).setNum;\r\n    return (notes) => {\r\n        const o = get(notes).setNum;\r\n        // tslint:disable-next-line: no-bitwise\r\n        return s && s !== o && (o | s) === o;\r\n    };\r\n}\r\n/**\r\n * Test if a given pitch class set includes a note\r\n *\r\n * @param {Array<string>} set - the base set to test against\r\n * @param {string} note - the note to test\r\n * @return {boolean} true if the note is included in the pcset\r\n *\r\n * Can be partially applied\r\n *\r\n * @example\r\n * const isNoteInCMajor = isNoteIncludedIn(['C', 'E', 'G'])\r\n * isNoteInCMajor('C4') // => true\r\n * isNoteInCMajor('C#4') // => false\r\n */\r\nfunction isNoteIncludedIn(set) {\r\n    const s = get(set);\r\n    return (noteName) => {\r\n        const n = note(noteName);\r\n        return s && !n.empty && s.chroma.charAt(n.chroma) === \"1\";\r\n    };\r\n}\r\n/** @deprecated use: isNoteIncludedIn */\r\nconst includes = isNoteIncludedIn;\r\n/**\r\n * Filter a list with a pitch class set\r\n *\r\n * @param {Array|string} set - the pitch class set notes\r\n * @param {Array|string} notes - the note list to be filtered\r\n * @return {Array} the filtered notes\r\n *\r\n * @example\r\n * Pcset.filter([\"C\", \"D\", \"E\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"d2\", \"c3\", \"d3\" ])\r\n * Pcset.filter([\"C2\"], [\"c2\", \"c#2\", \"d2\", \"c3\", \"c#3\", \"d3\"]) // => [ \"c2\", \"c3\" ])\r\n */\r\nfunction filter(set) {\r\n    const isIncluded = isNoteIncludedIn(set);\r\n    return (notes) => {\r\n        return notes.filter(isIncluded);\r\n    };\r\n}\r\nvar index = {\r\n    get,\r\n    chroma,\r\n    num,\r\n    intervals,\r\n    chromas,\r\n    isSupersetOf,\r\n    isSubsetOf,\r\n    isNoteIncludedIn,\r\n    isEqual,\r\n    filter,\r\n    modes,\r\n    // deprecated\r\n    pcset,\r\n};\r\n//// PRIVATE ////\r\nfunction chromaRotations(chroma) {\r\n    const binary = chroma.split(\"\");\r\n    return binary.map((_, i) => rotate(i, binary).join(\"\"));\r\n}\r\nfunction chromaToPcset(chroma) {\r\n    const setNum = chromaToNumber(chroma);\r\n    const normalizedNum = chromaRotations(chroma)\r\n        .map(chromaToNumber)\r\n        .filter((n) => n >= 2048)\r\n        .sort()[0];\r\n    const normalized = setNumToChroma(normalizedNum);\r\n    const intervals = chromaToIntervals(chroma);\r\n    return {\r\n        empty: false,\r\n        name: \"\",\r\n        setNum,\r\n        chroma,\r\n        normalized,\r\n        intervals,\r\n    };\r\n}\r\nfunction listToChroma(set) {\r\n    if (set.length === 0) {\r\n        return EmptyPcset.chroma;\r\n    }\r\n    let pitch;\r\n    const binary = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < set.length; i++) {\r\n        pitch = note(set[i]);\r\n        // tslint:disable-next-line: curly\r\n        if (pitch.empty)\r\n            pitch = interval(set[i]);\r\n        // tslint:disable-next-line: curly\r\n        if (!pitch.empty)\r\n            binary[pitch.chroma] = 1;\r\n    }\r\n    return binary.join(\"\");\r\n}\n\nexport default index;\nexport { EmptyPcset, chromaToIntervals, chromas, filter, get, includes, isEqual, isNoteIncludedIn, isSubsetOf, isSupersetOf, modes, pcset };\n//# sourceMappingURL=index.es.js.map\n","import { deprecate } from '@tonaljs/core';\nimport { get as get$1, EmptyPcset } from '@tonaljs/pcset';\n\n/**\r\n * @private\r\n * Chord List\r\n * Source: https://en.wikibooks.org/wiki/Music_Theory/Complete_List_of_Chord_Patterns\r\n * Format: [\"intervals\", \"full name\", \"abrv1 abrv2\"]\r\n */\r\nconst CHORDS = [\r\n    // ==Major==\r\n    [\"1P 3M 5P\", \"major\", \"M ^ \"],\r\n    [\"1P 3M 5P 7M\", \"major seventh\", \"maj7 Δ ma7 M7 Maj7 ^7\"],\r\n    [\"1P 3M 5P 7M 9M\", \"major ninth\", \"maj9 Δ9 ^9\"],\r\n    [\"1P 3M 5P 7M 9M 13M\", \"major thirteenth\", \"maj13 Maj13 ^13\"],\r\n    [\"1P 3M 5P 6M\", \"sixth\", \"6 add6 add13 M6\"],\r\n    [\"1P 3M 5P 6M 9M\", \"sixth/ninth\", \"6/9 69 M69\"],\r\n    [\"1P 3M 6m 7M\", \"major seventh flat sixth\", \"M7b6 ^7b6\"],\r\n    [\r\n        \"1P 3M 5P 7M 11A\",\r\n        \"major seventh sharp eleventh\",\r\n        \"maj#4 Δ#4 Δ#11 M7#11 ^7#11 maj7#11\",\r\n    ],\r\n    // ==Minor==\r\n    // '''Normal'''\r\n    [\"1P 3m 5P\", \"minor\", \"m min -\"],\r\n    [\"1P 3m 5P 7m\", \"minor seventh\", \"m7 min7 mi7 -7\"],\r\n    [\r\n        \"1P 3m 5P 7M\",\r\n        \"minor/major seventh\",\r\n        \"m/ma7 m/maj7 mM7 mMaj7 m/M7 -Δ7 mΔ -^7\",\r\n    ],\r\n    [\"1P 3m 5P 6M\", \"minor sixth\", \"m6 -6\"],\r\n    [\"1P 3m 5P 7m 9M\", \"minor ninth\", \"m9 -9\"],\r\n    [\"1P 3m 5P 7M 9M\", \"minor/major ninth\", \"mM9 mMaj9 -^9\"],\r\n    [\"1P 3m 5P 7m 9M 11P\", \"minor eleventh\", \"m11 -11\"],\r\n    [\"1P 3m 5P 7m 9M 13M\", \"minor thirteenth\", \"m13 -13\"],\r\n    // '''Diminished'''\r\n    [\"1P 3m 5d\", \"diminished\", \"dim ° o\"],\r\n    [\"1P 3m 5d 7d\", \"diminished seventh\", \"dim7 °7 o7\"],\r\n    [\"1P 3m 5d 7m\", \"half-diminished\", \"m7b5 ø -7b5 h7 h\"],\r\n    // ==Dominant/Seventh==\r\n    // '''Normal'''\r\n    [\"1P 3M 5P 7m\", \"dominant seventh\", \"7 dom\"],\r\n    [\"1P 3M 5P 7m 9M\", \"dominant ninth\", \"9\"],\r\n    [\"1P 3M 5P 7m 9M 13M\", \"dominant thirteenth\", \"13\"],\r\n    [\"1P 3M 5P 7m 11A\", \"lydian dominant seventh\", \"7#11 7#4\"],\r\n    // '''Altered'''\r\n    [\"1P 3M 5P 7m 9m\", \"dominant flat ninth\", \"7b9\"],\r\n    [\"1P 3M 5P 7m 9A\", \"dominant sharp ninth\", \"7#9\"],\r\n    [\"1P 3M 7m 9m\", \"altered\", \"alt7\"],\r\n    // '''Suspended'''\r\n    [\"1P 4P 5P\", \"suspended fourth\", \"sus4 sus\"],\r\n    [\"1P 2M 5P\", \"suspended second\", \"sus2\"],\r\n    [\"1P 4P 5P 7m\", \"suspended fourth seventh\", \"7sus4 7sus\"],\r\n    [\"1P 5P 7m 9M 11P\", \"eleventh\", \"11\"],\r\n    [\r\n        \"1P 4P 5P 7m 9m\",\r\n        \"suspended fourth flat ninth\",\r\n        \"b9sus phryg 7b9sus 7b9sus4\",\r\n    ],\r\n    // ==Other==\r\n    [\"1P 5P\", \"fifth\", \"5\"],\r\n    [\"1P 3M 5A\", \"augmented\", \"aug + +5 ^#5\"],\r\n    [\"1P 3m 5A\", \"minor augmented\", \"m#5 -#5 m+\"],\r\n    [\"1P 3M 5A 7M\", \"augmented seventh\", \"maj7#5 maj7+5 +maj7 ^7#5\"],\r\n    [\r\n        \"1P 3M 5P 7M 9M 11A\",\r\n        \"major sharp eleventh (lydian)\",\r\n        \"maj9#11 Δ9#11 ^9#11\",\r\n    ],\r\n    // ==Legacy==\r\n    [\"1P 2M 4P 5P\", \"\", \"sus24 sus4add9\"],\r\n    [\"1P 3M 5A 7M 9M\", \"\", \"maj9#5 Maj9#5\"],\r\n    [\"1P 3M 5A 7m\", \"\", \"7#5 +7 7+ 7aug aug7\"],\r\n    [\"1P 3M 5A 7m 9A\", \"\", \"7#5#9 7#9#5 7alt\"],\r\n    [\"1P 3M 5A 7m 9M\", \"\", \"9#5 9+\"],\r\n    [\"1P 3M 5A 7m 9M 11A\", \"\", \"9#5#11\"],\r\n    [\"1P 3M 5A 7m 9m\", \"\", \"7#5b9 7b9#5\"],\r\n    [\"1P 3M 5A 7m 9m 11A\", \"\", \"7#5b9#11\"],\r\n    [\"1P 3M 5A 9A\", \"\", \"+add#9\"],\r\n    [\"1P 3M 5A 9M\", \"\", \"M#5add9 +add9\"],\r\n    [\"1P 3M 5P 6M 11A\", \"\", \"M6#11 M6b5 6#11 6b5\"],\r\n    [\"1P 3M 5P 6M 7M 9M\", \"\", \"M7add13\"],\r\n    [\"1P 3M 5P 6M 9M 11A\", \"\", \"69#11\"],\r\n    [\"1P 3m 5P 6M 9M\", \"\", \"m69 -69\"],\r\n    [\"1P 3M 5P 6m 7m\", \"\", \"7b6\"],\r\n    [\"1P 3M 5P 7M 9A 11A\", \"\", \"maj7#9#11\"],\r\n    [\"1P 3M 5P 7M 9M 11A 13M\", \"\", \"M13#11 maj13#11 M13+4 M13#4\"],\r\n    [\"1P 3M 5P 7M 9m\", \"\", \"M7b9\"],\r\n    [\"1P 3M 5P 7m 11A 13m\", \"\", \"7#11b13 7b5b13\"],\r\n    [\"1P 3M 5P 7m 13M\", \"\", \"7add6 67 7add13\"],\r\n    [\"1P 3M 5P 7m 9A 11A\", \"\", \"7#9#11 7b5#9 7#9b5\"],\r\n    [\"1P 3M 5P 7m 9A 11A 13M\", \"\", \"13#9#11\"],\r\n    [\"1P 3M 5P 7m 9A 11A 13m\", \"\", \"7#9#11b13\"],\r\n    [\"1P 3M 5P 7m 9A 13M\", \"\", \"13#9\"],\r\n    [\"1P 3M 5P 7m 9A 13m\", \"\", \"7#9b13\"],\r\n    [\"1P 3M 5P 7m 9M 11A\", \"\", \"9#11 9+4 9#4\"],\r\n    [\"1P 3M 5P 7m 9M 11A 13M\", \"\", \"13#11 13+4 13#4\"],\r\n    [\"1P 3M 5P 7m 9M 11A 13m\", \"\", \"9#11b13 9b5b13\"],\r\n    [\"1P 3M 5P 7m 9m 11A\", \"\", \"7b9#11 7b5b9 7b9b5\"],\r\n    [\"1P 3M 5P 7m 9m 11A 13M\", \"\", \"13b9#11\"],\r\n    [\"1P 3M 5P 7m 9m 11A 13m\", \"\", \"7b9b13#11 7b9#11b13 7b5b9b13\"],\r\n    [\"1P 3M 5P 7m 9m 13M\", \"\", \"13b9\"],\r\n    [\"1P 3M 5P 7m 9m 13m\", \"\", \"7b9b13\"],\r\n    [\"1P 3M 5P 7m 9m 9A\", \"\", \"7b9#9\"],\r\n    [\"1P 3M 5P 9M\", \"\", \"Madd9 2 add9 add2\"],\r\n    [\"1P 3M 5P 9m\", \"\", \"Maddb9\"],\r\n    [\"1P 3M 5d\", \"\", \"Mb5\"],\r\n    [\"1P 3M 5d 6M 7m 9M\", \"\", \"13b5\"],\r\n    [\"1P 3M 5d 7M\", \"\", \"M7b5\"],\r\n    [\"1P 3M 5d 7M 9M\", \"\", \"M9b5\"],\r\n    [\"1P 3M 5d 7m\", \"\", \"7b5\"],\r\n    [\"1P 3M 5d 7m 9M\", \"\", \"9b5\"],\r\n    [\"1P 3M 7m\", \"\", \"7no5\"],\r\n    [\"1P 3M 7m 13m\", \"\", \"7b13\"],\r\n    [\"1P 3M 7m 9M\", \"\", \"9no5\"],\r\n    [\"1P 3M 7m 9M 13M\", \"\", \"13no5\"],\r\n    [\"1P 3M 7m 9M 13m\", \"\", \"9b13\"],\r\n    [\"1P 3m 4P 5P\", \"\", \"madd4\"],\r\n    [\"1P 3m 5P 6m 7M\", \"\", \"mMaj7b6\"],\r\n    [\"1P 3m 5P 6m 7M 9M\", \"\", \"mMaj9b6\"],\r\n    [\"1P 3m 5P 7m 11P\", \"\", \"m7add11 m7add4\"],\r\n    [\"1P 3m 5P 9M\", \"\", \"madd9\"],\r\n    [\"1P 3m 5d 6M 7M\", \"\", \"o7M7\"],\r\n    [\"1P 3m 5d 7M\", \"\", \"oM7\"],\r\n    [\"1P 3m 6m 7M\", \"\", \"mb6M7\"],\r\n    [\"1P 3m 6m 7m\", \"\", \"m7#5\"],\r\n    [\"1P 3m 6m 7m 9M\", \"\", \"m9#5\"],\r\n    [\"1P 3m 5A 7m 9M 11P\", \"\", \"m11A\"],\r\n    [\"1P 3m 6m 9m\", \"\", \"mb6b9\"],\r\n    [\"1P 2M 3m 5d 7m\", \"\", \"m9b5\"],\r\n    [\"1P 4P 5A 7M\", \"\", \"M7#5sus4\"],\r\n    [\"1P 4P 5A 7M 9M\", \"\", \"M9#5sus4\"],\r\n    [\"1P 4P 5A 7m\", \"\", \"7#5sus4\"],\r\n    [\"1P 4P 5P 7M\", \"\", \"M7sus4\"],\r\n    [\"1P 4P 5P 7M 9M\", \"\", \"M9sus4\"],\r\n    [\"1P 4P 5P 7m 9M\", \"\", \"9sus4 9sus\"],\r\n    [\"1P 4P 5P 7m 9M 13M\", \"\", \"13sus4 13sus\"],\r\n    [\"1P 4P 5P 7m 9m 13m\", \"\", \"7sus4b9b13 7b9b13sus4\"],\r\n    [\"1P 4P 7m 10m\", \"\", \"4 quartal\"],\r\n    [\"1P 5P 7m 9m 11P\", \"\", \"11b9\"],\r\n];\n\nconst NoChordType = {\r\n    ...EmptyPcset,\r\n    name: \"\",\r\n    quality: \"Unknown\",\r\n    intervals: [],\r\n    aliases: [],\r\n};\r\nlet dictionary = [];\r\nlet index = {};\r\n/**\r\n * Given a chord name or chroma, return the chord properties\r\n * @param {string} source - chord name or pitch class set chroma\r\n * @example\r\n * import { get } from 'tonaljs/chord-type'\r\n * get('major') // => { name: 'major', ... }\r\n */\r\nfunction get(type) {\r\n    return index[type] || NoChordType;\r\n}\r\nconst chordType = deprecate(\"ChordType.chordType\", \"ChordType.get\", get);\r\n/**\r\n * Get all chord (long) names\r\n */\r\nfunction names() {\r\n    return dictionary.map((chord) => chord.name).filter((x) => x);\r\n}\r\n/**\r\n * Get all chord symbols\r\n */\r\nfunction symbols() {\r\n    return dictionary.map((chord) => chord.aliases[0]).filter((x) => x);\r\n}\r\n/**\r\n * Keys used to reference chord types\r\n */\r\nfunction keys() {\r\n    return Object.keys(index);\r\n}\r\n/**\r\n * Return a list of all chord types\r\n */\r\nfunction all() {\r\n    return dictionary.slice();\r\n}\r\nconst entries = deprecate(\"ChordType.entries\", \"ChordType.all\", all);\r\n/**\r\n * Clear the dictionary\r\n */\r\nfunction removeAll() {\r\n    dictionary = [];\r\n    index = {};\r\n}\r\n/**\r\n * Add a chord to the dictionary.\r\n * @param intervals\r\n * @param aliases\r\n * @param [fullName]\r\n */\r\nfunction add(intervals, aliases, fullName) {\r\n    const quality = getQuality(intervals);\r\n    const chord = {\r\n        ...get$1(intervals),\r\n        name: fullName || \"\",\r\n        quality,\r\n        intervals,\r\n        aliases,\r\n    };\r\n    dictionary.push(chord);\r\n    if (chord.name) {\r\n        index[chord.name] = chord;\r\n    }\r\n    index[chord.setNum] = chord;\r\n    index[chord.chroma] = chord;\r\n    chord.aliases.forEach((alias) => addAlias(chord, alias));\r\n}\r\nfunction addAlias(chord, alias) {\r\n    index[alias] = chord;\r\n}\r\nfunction getQuality(intervals) {\r\n    const has = (interval) => intervals.indexOf(interval) !== -1;\r\n    return has(\"5A\")\r\n        ? \"Augmented\"\r\n        : has(\"3M\")\r\n            ? \"Major\"\r\n            : has(\"5d\")\r\n                ? \"Diminished\"\r\n                : has(\"3m\")\r\n                    ? \"Minor\"\r\n                    : \"Unknown\";\r\n}\r\nCHORDS.forEach(([ivls, fullName, names]) => add(ivls.split(\" \"), names.split(\" \"), fullName));\r\ndictionary.sort((a, b) => a.setNum - b.setNum);\r\nvar index$1 = {\r\n    names,\r\n    symbols,\r\n    get,\r\n    all,\r\n    add,\r\n    removeAll,\r\n    keys,\r\n    // deprecated\r\n    entries,\r\n    chordType,\r\n};\n\nexport default index$1;\nexport { add, addAlias, all, chordType, entries, get, keys, names, removeAll, symbols };\n//# sourceMappingURL=index.es.js.map\n","import { all } from '@tonaljs/chord-type';\nimport { note } from '@tonaljs/core';\nimport { modes } from '@tonaljs/pcset';\n\nconst namedSet = (notes) => {\r\n    const pcToName = notes.reduce((record, n) => {\r\n        const chroma = note(n).chroma;\r\n        if (chroma !== undefined) {\r\n            record[chroma] = record[chroma] || note(n).name;\r\n        }\r\n        return record;\r\n    }, {});\r\n    return (chroma) => pcToName[chroma];\r\n};\r\nfunction detect(source) {\r\n    const notes = source.map((n) => note(n).pc).filter((x) => x);\r\n    if (note.length === 0) {\r\n        return [];\r\n    }\r\n    const found = findExactMatches(notes, 1);\r\n    return found\r\n        .filter((chord) => chord.weight)\r\n        .sort((a, b) => b.weight - a.weight)\r\n        .map((chord) => chord.name);\r\n}\r\nfunction findExactMatches(notes, weight) {\r\n    const tonic = notes[0];\r\n    const tonicChroma = note(tonic).chroma;\r\n    const noteName = namedSet(notes);\r\n    // we need to test all chormas to get the correct baseNote\r\n    const allModes = modes(notes, false);\r\n    const found = [];\r\n    allModes.forEach((mode, index) => {\r\n        // some chords could have the same chroma but different interval spelling\r\n        const chordTypes = all().filter((chordType) => chordType.chroma === mode);\r\n        chordTypes.forEach((chordType) => {\r\n            const chordName = chordType.aliases[0];\r\n            const baseNote = noteName(index);\r\n            const isInversion = index !== tonicChroma;\r\n            if (isInversion) {\r\n                found.push({\r\n                    weight: 0.5 * weight,\r\n                    name: `${baseNote}${chordName}/${tonic}`,\r\n                });\r\n            }\r\n            else {\r\n                found.push({ weight: 1 * weight, name: `${baseNote}${chordName}` });\r\n            }\r\n        });\r\n    });\r\n    return found;\r\n}\r\nvar index = { detect };\n\nexport default index;\nexport { detect };\n//# sourceMappingURL=index.es.js.map\n","import { deprecate } from '@tonaljs/core';\nimport { EmptyPcset, get as get$1 } from '@tonaljs/pcset';\n\n// SCALES\r\n// Format: [\"intervals\", \"name\", \"alias1\", \"alias2\", ...]\r\nconst SCALES = [\r\n    // 5-note scales\r\n    [\"1P 2M 3M 5P 6M\", \"major pentatonic\", \"pentatonic\"],\r\n    [\"1P 3M 4P 5P 7M\", \"ionian pentatonic\"],\r\n    [\"1P 3M 4P 5P 7m\", \"mixolydian pentatonic\", \"indian\"],\r\n    [\"1P 2M 4P 5P 6M\", \"ritusen\"],\r\n    [\"1P 2M 4P 5P 7m\", \"egyptian\"],\r\n    [\"1P 3M 4P 5d 7m\", \"neopolitan major pentatonic\"],\r\n    [\"1P 3m 4P 5P 6m\", \"vietnamese 1\"],\r\n    [\"1P 2m 3m 5P 6m\", \"pelog\"],\r\n    [\"1P 2m 4P 5P 6m\", \"kumoijoshi\"],\r\n    [\"1P 2M 3m 5P 6m\", \"hirajoshi\"],\r\n    [\"1P 2m 4P 5d 7m\", \"iwato\"],\r\n    [\"1P 2m 4P 5P 7m\", \"in-sen\"],\r\n    [\"1P 3M 4A 5P 7M\", \"lydian pentatonic\", \"chinese\"],\r\n    [\"1P 3m 4P 6m 7m\", \"malkos raga\"],\r\n    [\"1P 3m 4P 5d 7m\", \"locrian pentatonic\", \"minor seven flat five pentatonic\"],\r\n    [\"1P 3m 4P 5P 7m\", \"minor pentatonic\", \"vietnamese 2\"],\r\n    [\"1P 3m 4P 5P 6M\", \"minor six pentatonic\"],\r\n    [\"1P 2M 3m 5P 6M\", \"flat three pentatonic\", \"kumoi\"],\r\n    [\"1P 2M 3M 5P 6m\", \"flat six pentatonic\"],\r\n    [\"1P 2m 3M 5P 6M\", \"scriabin\"],\r\n    [\"1P 3M 5d 6m 7m\", \"whole tone pentatonic\"],\r\n    [\"1P 3M 4A 5A 7M\", \"lydian #5P pentatonic\"],\r\n    [\"1P 3M 4A 5P 7m\", \"lydian dominant pentatonic\"],\r\n    [\"1P 3m 4P 5P 7M\", \"minor #7M pentatonic\"],\r\n    [\"1P 3m 4d 5d 7m\", \"super locrian pentatonic\"],\r\n    // 6-note scales\r\n    [\"1P 2M 3m 4P 5P 7M\", \"minor hexatonic\"],\r\n    [\"1P 2A 3M 5P 5A 7M\", \"augmented\"],\r\n    [\"1P 2M 3m 3M 5P 6M\", \"major blues\"],\r\n    [\"1P 2M 4P 5P 6M 7m\", \"piongio\"],\r\n    [\"1P 2m 3M 4A 6M 7m\", \"prometheus neopolitan\"],\r\n    [\"1P 2M 3M 4A 6M 7m\", \"prometheus\"],\r\n    [\"1P 2m 3M 5d 6m 7m\", \"mystery #1\"],\r\n    [\"1P 2m 3M 4P 5A 6M\", \"six tone symmetric\"],\r\n    [\"1P 2M 3M 4A 5A 7m\", \"whole tone\", \"messiaen's mode #1\"],\r\n    [\"1P 2m 4P 4A 5P 7M\", \"messiaen's mode #5\"],\r\n    [\"1P 3m 4P 5d 5P 7m\", \"minor blues\", \"blues\"],\r\n    // 7-note scales\r\n    [\"1P 2M 3M 4P 5d 6m 7m\", \"locrian major\", \"arabian\"],\r\n    [\"1P 2m 3M 4A 5P 6m 7M\", \"double harmonic lydian\"],\r\n    [\"1P 2M 3m 4P 5P 6m 7M\", \"harmonic minor\"],\r\n    [\r\n        \"1P 2m 3m 4d 5d 6m 7m\",\r\n        \"altered\",\r\n        \"super locrian\",\r\n        \"diminished whole tone\",\r\n        \"pomeroy\",\r\n    ],\r\n    [\"1P 2M 3m 4P 5d 6m 7m\", \"locrian #2\", \"half-diminished\", \"aeolian b5\"],\r\n    [\r\n        \"1P 2M 3M 4P 5P 6m 7m\",\r\n        \"mixolydian b6\",\r\n        \"melodic minor fifth mode\",\r\n        \"hindu\",\r\n    ],\r\n    [\"1P 2M 3M 4A 5P 6M 7m\", \"lydian dominant\", \"lydian b7\", \"overtone\"],\r\n    [\"1P 2M 3M 4A 5P 6M 7M\", \"lydian\"],\r\n    [\"1P 2M 3M 4A 5A 6M 7M\", \"lydian augmented\"],\r\n    [\r\n        \"1P 2m 3m 4P 5P 6M 7m\",\r\n        \"dorian b2\",\r\n        \"phrygian #6\",\r\n        \"melodic minor second mode\",\r\n    ],\r\n    [\"1P 2M 3m 4P 5P 6M 7M\", \"melodic minor\"],\r\n    [\"1P 2m 3m 4P 5d 6m 7m\", \"locrian\"],\r\n    [\r\n        \"1P 2m 3m 4d 5d 6m 7d\",\r\n        \"ultralocrian\",\r\n        \"superlocrian bb7\",\r\n        \"·superlocrian diminished\",\r\n    ],\r\n    [\"1P 2m 3m 4P 5d 6M 7m\", \"locrian 6\", \"locrian natural 6\", \"locrian sharp 6\"],\r\n    [\"1P 2A 3M 4P 5P 5A 7M\", \"augmented heptatonic\"],\r\n    [\"1P 2M 3m 5d 5P 6M 7m\", \"romanian minor\"],\r\n    [\"1P 2M 3m 4A 5P 6M 7m\", \"dorian #4\"],\r\n    [\"1P 2M 3m 4A 5P 6M 7M\", \"lydian diminished\"],\r\n    [\"1P 2m 3m 4P 5P 6m 7m\", \"phrygian\"],\r\n    [\"1P 2M 3M 4A 5A 7m 7M\", \"leading whole tone\"],\r\n    [\"1P 2M 3M 4A 5P 6m 7m\", \"lydian minor\"],\r\n    [\"1P 2m 3M 4P 5P 6m 7m\", \"phrygian dominant\", \"spanish\", \"phrygian major\"],\r\n    [\"1P 2m 3m 4P 5P 6m 7M\", \"balinese\"],\r\n    [\"1P 2m 3m 4P 5P 6M 7M\", \"neopolitan major\"],\r\n    [\"1P 2M 3m 4P 5P 6m 7m\", \"aeolian\", \"minor\"],\r\n    [\"1P 2M 3M 4P 5P 6m 7M\", \"harmonic major\"],\r\n    [\"1P 2m 3M 4P 5P 6m 7M\", \"double harmonic major\", \"gypsy\"],\r\n    [\"1P 2M 3m 4P 5P 6M 7m\", \"dorian\"],\r\n    [\"1P 2M 3m 4A 5P 6m 7M\", \"hungarian minor\"],\r\n    [\"1P 2A 3M 4A 5P 6M 7m\", \"hungarian major\"],\r\n    [\"1P 2m 3M 4P 5d 6M 7m\", \"oriental\"],\r\n    [\"1P 2m 3m 3M 4A 5P 7m\", \"flamenco\"],\r\n    [\"1P 2m 3m 4A 5P 6m 7M\", \"todi raga\"],\r\n    [\"1P 2M 3M 4P 5P 6M 7m\", \"mixolydian\", \"dominant\"],\r\n    [\"1P 2m 3M 4P 5d 6m 7M\", \"persian\"],\r\n    [\"1P 2M 3M 4P 5P 6M 7M\", \"major\", \"ionian\"],\r\n    [\"1P 2m 3M 5d 6m 7m 7M\", \"enigmatic\"],\r\n    [\r\n        \"1P 2M 3M 4P 5A 6M 7M\",\r\n        \"major augmented\",\r\n        \"major #5\",\r\n        \"ionian augmented\",\r\n        \"ionian #5\",\r\n    ],\r\n    [\"1P 2A 3M 4A 5P 6M 7M\", \"lydian #9\"],\r\n    // 8-note scales\r\n    [\"1P 2m 2M 4P 4A 5P 6m 7M\", \"messiaen's mode #4\"],\r\n    [\"1P 2m 3M 4P 4A 5P 6m 7M\", \"purvi raga\"],\r\n    [\"1P 2m 3m 3M 4P 5P 6m 7m\", \"spanish heptatonic\"],\r\n    [\"1P 2M 3M 4P 5P 6M 7m 7M\", \"bebop\"],\r\n    [\"1P 2M 3m 3M 4P 5P 6M 7m\", \"bebop minor\"],\r\n    [\"1P 2M 3M 4P 5P 5A 6M 7M\", \"bebop major\"],\r\n    [\"1P 2m 3m 4P 5d 5P 6m 7m\", \"bebop locrian\"],\r\n    [\"1P 2M 3m 4P 5P 6m 7m 7M\", \"minor bebop\"],\r\n    [\"1P 2M 3m 4P 5d 6m 6M 7M\", \"diminished\", \"whole-half diminished\"],\r\n    [\"1P 2M 3M 4P 5d 5P 6M 7M\", \"ichikosucho\"],\r\n    [\"1P 2M 3m 4P 5P 6m 6M 7M\", \"minor six diminished\"],\r\n    [\r\n        \"1P 2m 3m 3M 4A 5P 6M 7m\",\r\n        \"half-whole diminished\",\r\n        \"dominant diminished\",\r\n        \"messiaen's mode #2\",\r\n    ],\r\n    [\"1P 3m 3M 4P 5P 6M 7m 7M\", \"kafi raga\"],\r\n    [\"1P 2M 3M 4P 4A 5A 6A 7M\", \"messiaen's mode #6\"],\r\n    // 9-note scales\r\n    [\"1P 2M 3m 3M 4P 5d 5P 6M 7m\", \"composite blues\"],\r\n    [\"1P 2M 3m 3M 4A 5P 6m 7m 7M\", \"messiaen's mode #3\"],\r\n    // 10-note scales\r\n    [\"1P 2m 2M 3m 4P 4A 5P 6m 6M 7M\", \"messiaen's mode #7\"],\r\n    // 12-note scales\r\n    [\"1P 2m 2M 3m 3M 4P 5d 5P 6m 6M 7m 7M\", \"chromatic\"],\r\n];\n\nconst NoScaleType = {\r\n    ...EmptyPcset,\r\n    intervals: [],\r\n    aliases: [],\r\n};\r\nlet dictionary = [];\r\nlet index = {};\r\nfunction names() {\r\n    return dictionary.map((scale) => scale.name);\r\n}\r\n/**\r\n * Given a scale name or chroma, return the scale properties\r\n *\r\n * @param {string} type - scale name or pitch class set chroma\r\n * @example\r\n * import { get } from 'tonaljs/scale-type'\r\n * get('major') // => { name: 'major', ... }\r\n */\r\nfunction get(type) {\r\n    return index[type] || NoScaleType;\r\n}\r\nconst scaleType = deprecate(\"ScaleDictionary.scaleType\", \"ScaleType.get\", get);\r\n/**\r\n * Return a list of all scale types\r\n */\r\nfunction all() {\r\n    return dictionary.slice();\r\n}\r\nconst entries = deprecate(\"ScaleDictionary.entries\", \"ScaleType.all\", all);\r\n/**\r\n * Keys used to reference scale types\r\n */\r\nfunction keys() {\r\n    return Object.keys(index);\r\n}\r\n/**\r\n * Clear the dictionary\r\n */\r\nfunction removeAll() {\r\n    dictionary = [];\r\n    index = {};\r\n}\r\n/**\r\n * Add a scale into dictionary\r\n * @param intervals\r\n * @param name\r\n * @param aliases\r\n */\r\nfunction add(intervals, name, aliases = []) {\r\n    const scale = { ...get$1(intervals), name, intervals, aliases };\r\n    dictionary.push(scale);\r\n    index[scale.name] = scale;\r\n    index[scale.setNum] = scale;\r\n    index[scale.chroma] = scale;\r\n    scale.aliases.forEach((alias) => addAlias(scale, alias));\r\n    return scale;\r\n}\r\nfunction addAlias(scale, alias) {\r\n    index[alias] = scale;\r\n}\r\nSCALES.forEach(([ivls, name, ...aliases]) => add(ivls.split(\" \"), name, aliases));\r\nvar index$1 = {\r\n    names,\r\n    get,\r\n    all,\r\n    add,\r\n    removeAll,\r\n    keys,\r\n    // deprecated\r\n    entries,\r\n    scaleType,\r\n};\n\nexport default index$1;\nexport { NoScaleType, add, addAlias, all, entries, get, keys, names, removeAll, scaleType };\n//# sourceMappingURL=index.es.js.map\n","import { detect } from '@tonaljs/chord-detect';\nexport { detect } from '@tonaljs/chord-detect';\nimport { get as get$1, all as all$1 } from '@tonaljs/chord-type';\nimport { tokenizeNote, note, distance, transpose as transpose$1, deprecate } from '@tonaljs/core';\nimport { isSupersetOf, isSubsetOf } from '@tonaljs/pcset';\nimport { all } from '@tonaljs/scale-type';\n\nconst NoChord = {\r\n    empty: true,\r\n    name: \"\",\r\n    symbol: \"\",\r\n    root: \"\",\r\n    rootDegree: 0,\r\n    type: \"\",\r\n    tonic: null,\r\n    setNum: NaN,\r\n    quality: \"Unknown\",\r\n    chroma: \"\",\r\n    normalized: \"\",\r\n    aliases: [],\r\n    notes: [],\r\n    intervals: [],\r\n};\r\n// 6, 64, 7, 9, 11 and 13 are consider part of the chord\r\n// (see https://github.com/danigb/tonal/issues/55)\r\nconst NUM_TYPES = /^(6|64|7|9|11|13)$/;\r\n/**\r\n * Tokenize a chord name. It returns an array with the tonic and chord type\r\n * If not tonic is found, all the name is considered the chord name.\r\n *\r\n * This function does NOT check if the chord type exists or not. It only tries\r\n * to split the tonic and chord type.\r\n *\r\n * @function\r\n * @param {string} name - the chord name\r\n * @return {Array} an array with [tonic, type]\r\n * @example\r\n * tokenize(\"Cmaj7\") // => [ \"C\", \"maj7\" ]\r\n * tokenize(\"C7\") // => [ \"C\", \"7\" ]\r\n * tokenize(\"mMaj7\") // => [ null, \"mMaj7\" ]\r\n * tokenize(\"Cnonsense\") // => [ null, \"nonsense\" ]\r\n */\r\nfunction tokenize(name) {\r\n    const [letter, acc, oct, type] = tokenizeNote(name);\r\n    if (letter === \"\") {\r\n        return [\"\", name];\r\n    }\r\n    // aug is augmented (see https://github.com/danigb/tonal/issues/55)\r\n    if (letter === \"A\" && type === \"ug\") {\r\n        return [\"\", \"aug\"];\r\n    }\r\n    // see: https://github.com/tonaljs/tonal/issues/70\r\n    if (!type && (oct === \"4\" || oct === \"5\")) {\r\n        return [letter + acc, oct];\r\n    }\r\n    if (NUM_TYPES.test(oct)) {\r\n        return [letter + acc, oct + type];\r\n    }\r\n    else {\r\n        return [letter + acc + oct, type];\r\n    }\r\n}\r\n/**\r\n * Get a Chord from a chord name.\r\n */\r\nfunction get(src) {\r\n    if (src === \"\") {\r\n        return NoChord;\r\n    }\r\n    if (Array.isArray(src) && src.length === 2) {\r\n        return getChord(src[1], src[0]);\r\n    }\r\n    else {\r\n        const [tonic, type] = tokenize(src);\r\n        const chord = getChord(type, tonic);\r\n        return chord.empty ? getChord(src) : chord;\r\n    }\r\n}\r\n/**\r\n * Get chord properties\r\n *\r\n * @param typeName - the chord type name\r\n * @param [tonic] - Optional tonic\r\n * @param [root]  - Optional root (requires a tonic)\r\n */\r\nfunction getChord(typeName, optionalTonic, optionalRoot) {\r\n    const type = get$1(typeName);\r\n    const tonic = note(optionalTonic || \"\");\r\n    const root = note(optionalRoot || \"\");\r\n    if (type.empty ||\r\n        (optionalTonic && tonic.empty) ||\r\n        (optionalRoot && root.empty)) {\r\n        return NoChord;\r\n    }\r\n    const rootInterval = distance(tonic.pc, root.pc);\r\n    const rootDegree = type.intervals.indexOf(rootInterval) + 1;\r\n    if (!root.empty && !rootDegree) {\r\n        return NoChord;\r\n    }\r\n    const intervals = Array.from(type.intervals);\r\n    for (let i = 1; i < rootDegree; i++) {\r\n        const num = intervals[0][0];\r\n        const quality = intervals[0][1];\r\n        const newNum = parseInt(num, 10) + 7;\r\n        intervals.push(`${newNum}${quality}`);\r\n        intervals.shift();\r\n    }\r\n    const notes = tonic.empty\r\n        ? []\r\n        : intervals.map((i) => transpose$1(tonic, i));\r\n    typeName = type.aliases.indexOf(typeName) !== -1 ? typeName : type.aliases[0];\r\n    const symbol = `${tonic.empty ? \"\" : tonic.pc}${typeName}${root.empty || rootDegree <= 1 ? \"\" : \"/\" + root.pc}`;\r\n    const name = `${optionalTonic ? tonic.pc + \" \" : \"\"}${type.name}${rootDegree > 1 && optionalRoot ? \" over \" + root.pc : \"\"}`;\r\n    return {\r\n        ...type,\r\n        name,\r\n        symbol,\r\n        type: type.name,\r\n        root: root.name,\r\n        intervals,\r\n        rootDegree,\r\n        tonic: tonic.name,\r\n        notes,\r\n    };\r\n}\r\nconst chord = deprecate(\"Chord.chord\", \"Chord.get\", get);\r\n/**\r\n * Transpose a chord name\r\n *\r\n * @param {string} chordName - the chord name\r\n * @return {string} the transposed chord\r\n *\r\n * @example\r\n * transpose('Dm7', 'P4') // => 'Gm7\r\n */\r\nfunction transpose(chordName, interval) {\r\n    const [tonic, type] = tokenize(chordName);\r\n    if (!tonic) {\r\n        return chordName;\r\n    }\r\n    return transpose$1(tonic, interval) + type;\r\n}\r\n/**\r\n * Get all scales where the given chord fits\r\n *\r\n * @example\r\n * chordScales('C7b9')\r\n * // => [\"phrygian dominant\", \"flamenco\", \"spanish heptatonic\", \"half-whole diminished\", \"chromatic\"]\r\n */\r\nfunction chordScales(name) {\r\n    const s = get(name);\r\n    const isChordIncluded = isSupersetOf(s.chroma);\r\n    return all()\r\n        .filter((scale) => isChordIncluded(scale.chroma))\r\n        .map((scale) => scale.name);\r\n}\r\n/**\r\n * Get all chords names that are a superset of the given one\r\n * (has the same notes and at least one more)\r\n *\r\n * @function\r\n * @example\r\n * extended(\"CMaj7\")\r\n * // => [ 'Cmaj#4', 'Cmaj7#9#11', 'Cmaj9', 'CM7add13', 'Cmaj13', 'Cmaj9#11', 'CM13#11', 'CM7b9' ]\r\n */\r\nfunction extended(chordName) {\r\n    const s = get(chordName);\r\n    const isSuperset = isSupersetOf(s.chroma);\r\n    return all$1()\r\n        .filter((chord) => isSuperset(chord.chroma))\r\n        .map((chord) => s.tonic + chord.aliases[0]);\r\n}\r\n/**\r\n * Find all chords names that are a subset of the given one\r\n * (has less notes but all from the given chord)\r\n *\r\n * @example\r\n */\r\nfunction reduced(chordName) {\r\n    const s = get(chordName);\r\n    const isSubset = isSubsetOf(s.chroma);\r\n    return all$1()\r\n        .filter((chord) => isSubset(chord.chroma))\r\n        .map((chord) => s.tonic + chord.aliases[0]);\r\n}\r\nvar index = {\r\n    getChord,\r\n    get,\r\n    detect,\r\n    chordScales,\r\n    extended,\r\n    reduced,\r\n    tokenize,\r\n    transpose,\r\n    // deprecate\r\n    chord,\r\n};\n\nexport default index;\nexport { chord, chordScales, extended, get, getChord, reduced, tokenize, transpose };\n//# sourceMappingURL=index.es.js.map\n","// source: https://en.wikipedia.org/wiki/Note_value\r\nconst DATA = [\r\n    [\r\n        0.125,\r\n        \"dl\",\r\n        [\"large\", \"duplex longa\", \"maxima\", \"octuple\", \"octuple whole\"],\r\n    ],\r\n    [0.25, \"l\", [\"long\", \"longa\"]],\r\n    [0.5, \"d\", [\"double whole\", \"double\", \"breve\"]],\r\n    [1, \"w\", [\"whole\", \"semibreve\"]],\r\n    [2, \"h\", [\"half\", \"minim\"]],\r\n    [4, \"q\", [\"quarter\", \"crotchet\"]],\r\n    [8, \"e\", [\"eighth\", \"quaver\"]],\r\n    [16, \"s\", [\"sixteenth\", \"semiquaver\"]],\r\n    [32, \"t\", [\"thirty-second\", \"demisemiquaver\"]],\r\n    [64, \"sf\", [\"sixty-fourth\", \"hemidemisemiquaver\"]],\r\n    [128, \"h\", [\"hundred twenty-eighth\"]],\r\n    [256, \"th\", [\"two hundred fifty-sixth\"]],\r\n];\n\nconst VALUES = [];\r\nDATA.forEach(([denominator, shorthand, names]) => add(denominator, shorthand, names));\r\nconst NoDuration = {\r\n    empty: true,\r\n    name: \"\",\r\n    value: 0,\r\n    fraction: [0, 0],\r\n    shorthand: \"\",\r\n    dots: \"\",\r\n    names: [],\r\n};\r\nfunction names() {\r\n    return VALUES.reduce((names, duration) => {\r\n        duration.names.forEach((name) => names.push(name));\r\n        return names;\r\n    }, []);\r\n}\r\nfunction shorthands() {\r\n    return VALUES.map((dur) => dur.shorthand);\r\n}\r\nconst REGEX = /^([^.]+)(\\.*)$/;\r\nfunction get(name) {\r\n    const [_, simple, dots] = REGEX.exec(name) || [];\r\n    const base = VALUES.find((dur) => dur.shorthand === simple || dur.names.includes(simple));\r\n    if (!base) {\r\n        return NoDuration;\r\n    }\r\n    const fraction = calcDots(base.fraction, dots.length);\r\n    const value = fraction[0] / fraction[1];\r\n    return { ...base, name, dots, value, fraction };\r\n}\r\nconst value = (name) => get(name).value;\r\nconst fraction = (name) => get(name).fraction;\r\nvar index = { names, shorthands, get, value, fraction };\r\n//// PRIVATE ////\r\nfunction add(denominator, shorthand, names) {\r\n    VALUES.push({\r\n        empty: false,\r\n        dots: \"\",\r\n        name: \"\",\r\n        value: 1 / denominator,\r\n        fraction: denominator < 1 ? [1 / denominator, 1] : [1, denominator],\r\n        shorthand,\r\n        names,\r\n    });\r\n}\r\nfunction calcDots(fraction, dots) {\r\n    const pow = Math.pow(2, dots);\r\n    let numerator = fraction[0] * pow;\r\n    let denominator = fraction[1] * pow;\r\n    const base = numerator;\r\n    // add fractions\r\n    for (let i = 0; i < dots; i++) {\r\n        numerator += base / Math.pow(2, i + 1);\r\n    }\r\n    // simplify\r\n    while (numerator % 2 === 0 && denominator % 2 === 0) {\r\n        numerator /= 2;\r\n        denominator /= 2;\r\n    }\r\n    return [numerator, denominator];\r\n}\n\nexport default index;\nexport { fraction, get, names, shorthands, value };\n//# sourceMappingURL=index.es.js.map\n","import { interval, distance as distance$1, coordToInterval } from '@tonaljs/core';\n\n/**\r\n * Get the natural list of names\r\n */\r\nfunction names() {\r\n    return \"1P 2M 3M 4P 5P 6m 7m\".split(\" \");\r\n}\r\n/**\r\n * Get properties of an interval\r\n *\r\n * @function\r\n * @example\r\n * Interval.get('P4') // => {\"alt\": 0,  \"dir\": 1,  \"name\": \"4P\", \"num\": 4, \"oct\": 0, \"q\": \"P\", \"semitones\": 5, \"simple\": 4, \"step\": 3, \"type\": \"perfectable\"}\r\n */\r\nconst get = interval;\r\n/**\r\n * Get name of an interval\r\n *\r\n * @function\r\n * @example\r\n * Interval.name('4P') // => \"4P\"\r\n * Interval.name('P4') // => \"4P\"\r\n * Interval.name('C4') // => \"\"\r\n */\r\nconst name = (name) => interval(name).name;\r\n/**\r\n * Get semitones of an interval\r\n * @function\r\n * @example\r\n * Interval.semitones('P4') // => 5\r\n */\r\nconst semitones = (name) => interval(name).semitones;\r\n/**\r\n * Get quality of an interval\r\n * @function\r\n * @example\r\n * Interval.quality('P4') // => \"P\"\r\n */\r\nconst quality = (name) => interval(name).q;\r\n/**\r\n * Get number of an interval\r\n * @function\r\n * @example\r\n * Interval.num('P4') // => 4\r\n */\r\nconst num = (name) => interval(name).num;\r\n/**\r\n * Get the simplified version of an interval.\r\n *\r\n * @function\r\n * @param {string} interval - the interval to simplify\r\n * @return {string} the simplified interval\r\n *\r\n * @example\r\n * Interval.simplify(\"9M\") // => \"2M\"\r\n * Interval.simplify(\"2M\") // => \"2M\"\r\n * Interval.simplify(\"-2M\") // => \"7m\"\r\n * [\"8P\", \"9M\", \"10M\", \"11P\", \"12P\", \"13M\", \"14M\", \"15P\"].map(Interval.simplify)\r\n * // => [ \"8P\", \"2M\", \"3M\", \"4P\", \"5P\", \"6M\", \"7M\", \"8P\" ]\r\n */\r\nfunction simplify(name) {\r\n    const i = interval(name);\r\n    return i.empty ? \"\" : i.simple + i.q;\r\n}\r\n/**\r\n * Get the inversion (https://en.wikipedia.org/wiki/Inversion_(music)#Intervals)\r\n * of an interval.\r\n *\r\n * @function\r\n * @param {string} interval - the interval to invert in interval shorthand\r\n * notation or interval array notation\r\n * @return {string} the inverted interval\r\n *\r\n * @example\r\n * Interval.invert(\"3m\") // => \"6M\"\r\n * Interval.invert(\"2M\") // => \"7m\"\r\n */\r\nfunction invert(name) {\r\n    const i = interval(name);\r\n    if (i.empty) {\r\n        return \"\";\r\n    }\r\n    const step = (7 - i.step) % 7;\r\n    const alt = i.type === \"perfectable\" ? -i.alt : -(i.alt + 1);\r\n    return interval({ step, alt, oct: i.oct, dir: i.dir }).name;\r\n}\r\n// interval numbers\r\nconst IN = [1, 2, 2, 3, 3, 4, 5, 5, 6, 6, 7, 7];\r\n// interval qualities\r\nconst IQ = \"P m M m M P d P m M m M\".split(\" \");\r\n/**\r\n * Get interval name from semitones number. Since there are several interval\r\n * names for the same number, the name it's arbitrary, but deterministic.\r\n *\r\n * @param {Integer} num - the number of semitones (can be negative)\r\n * @return {string} the interval name\r\n * @example\r\n * Interval.fromSemitones(7) // => \"5P\"\r\n * Interval.fromSemitones(-7) // => \"-5P\"\r\n */\r\nfunction fromSemitones(semitones) {\r\n    const d = semitones < 0 ? -1 : 1;\r\n    const n = Math.abs(semitones);\r\n    const c = n % 12;\r\n    const o = Math.floor(n / 12);\r\n    return d * (IN[c] + 7 * o) + IQ[c];\r\n}\r\n/**\r\n * Find interval between two notes\r\n *\r\n * @example\r\n * Interval.distance(\"C4\", \"G4\"); // => \"5P\"\r\n */\r\nconst distance = distance$1;\r\n/**\r\n * Adds two intervals\r\n *\r\n * @function\r\n * @param {string} interval1\r\n * @param {string} interval2\r\n * @return {string} the added interval name\r\n * @example\r\n * Interval.add(\"3m\", \"5P\") // => \"7m\"\r\n */\r\nconst add = combinator((a, b) => [a[0] + b[0], a[1] + b[1]]);\r\n/**\r\n * Returns a function that adds an interval\r\n *\r\n * @function\r\n * @example\r\n * ['1P', '2M', '3M'].map(Interval.addTo('5P')) // => [\"5P\", \"6M\", \"7M\"]\r\n */\r\nconst addTo = (interval) => (other) => add(interval, other);\r\n/**\r\n * Subtracts two intervals\r\n *\r\n * @function\r\n * @param {string} minuendInterval\r\n * @param {string} subtrahendInterval\r\n * @return {string} the substracted interval name\r\n * @example\r\n * Interval.substract('5P', '3M') // => '3m'\r\n * Interval.substract('3M', '5P') // => '-3m'\r\n */\r\nconst substract = combinator((a, b) => [a[0] - b[0], a[1] - b[1]]);\r\nfunction transposeFifths(interval, fifths) {\r\n    const ivl = get(interval);\r\n    if (ivl.empty)\r\n        return \"\";\r\n    const [nFifths, nOcts, dir] = ivl.coord;\r\n    return coordToInterval([nFifths + fifths, nOcts, dir]).name;\r\n}\r\nvar index = {\r\n    names,\r\n    get,\r\n    name,\r\n    num,\r\n    semitones,\r\n    quality,\r\n    fromSemitones,\r\n    distance,\r\n    invert,\r\n    simplify,\r\n    add,\r\n    addTo,\r\n    substract,\r\n    transposeFifths,\r\n};\r\nfunction combinator(fn) {\r\n    return (a, b) => {\r\n        const coordA = interval(a).coord;\r\n        const coordB = interval(b).coord;\r\n        if (coordA && coordB) {\r\n            const coord = fn(coordA, coordB);\r\n            return coordToInterval(coord).name;\r\n        }\r\n    };\r\n}\n\nexport default index;\nexport { add, addTo, distance, fromSemitones, get, invert, name, names, num, quality, semitones, simplify, substract, transposeFifths };\n//# sourceMappingURL=index.es.js.map\n","import { note } from '@tonaljs/core';\n\nfunction isMidi(arg) {\r\n    return +arg >= 0 && +arg <= 127;\r\n}\r\n/**\r\n * Get the note midi number (a number between 0 and 127)\r\n *\r\n * It returns undefined if not valid note name\r\n *\r\n * @function\r\n * @param {string|number} note - the note name or midi number\r\n * @return {Integer} the midi number or undefined if not valid note\r\n * @example\r\n * import { toMidi } from '@tonaljs/midi'\r\n * toMidi(\"C4\") // => 60\r\n * toMidi(60) // => 60\r\n * toMidi('60') // => 60\r\n */\r\nfunction toMidi(note$1) {\r\n    if (isMidi(note$1)) {\r\n        return +note$1;\r\n    }\r\n    const n = note(note$1);\r\n    return n.empty ? null : n.midi;\r\n}\r\n/**\r\n * Get the frequency in hertzs from midi number\r\n *\r\n * @param {number} midi - the note midi number\r\n * @param {number} [tuning = 440] - A4 tuning frequency in Hz (440 by default)\r\n * @return {number} the frequency or null if not valid note midi\r\n * @example\r\n * import { midiToFreq} from '@tonaljs/midi'\r\n * midiToFreq(69) // => 440\r\n */\r\nfunction midiToFreq(midi, tuning = 440) {\r\n    return Math.pow(2, (midi - 69) / 12) * tuning;\r\n}\r\nconst L2 = Math.log(2);\r\nconst L440 = Math.log(440);\r\n/**\r\n * Get the midi number from a frequency in hertz. The midi number can\r\n * contain decimals (with two digits precission)\r\n *\r\n * @param {number} frequency\r\n * @return {number}\r\n * @example\r\n * import { freqToMidi} from '@tonaljs/midi'\r\n * freqToMidi(220)); //=> 57\r\n * freqToMidi(261.62)); //=> 60\r\n * freqToMidi(261)); //=> 59.96\r\n */\r\nfunction freqToMidi(freq) {\r\n    const v = (12 * (Math.log(freq) - L440)) / L2 + 69;\r\n    return Math.round(v * 100) / 100;\r\n}\r\nconst SHARPS = \"C C# D D# E F F# G G# A A# B\".split(\" \");\r\nconst FLATS = \"C Db D Eb E F Gb G Ab A Bb B\".split(\" \");\r\n/**\r\n * Given a midi number, returns a note name. The altered notes will have\r\n * flats unless explicitly set with the optional `useSharps` parameter.\r\n *\r\n * @function\r\n * @param {number} midi - the midi note number\r\n * @param {Object} options = default: `{ sharps: false, pitchClass: false }`\r\n * @param {boolean} useSharps - (Optional) set to true to use sharps instead of flats\r\n * @return {string} the note name\r\n * @example\r\n * import { midiToNoteName } from '@tonaljs/midi'\r\n * midiToNoteName(61) // => \"Db4\"\r\n * midiToNoteName(61, { pitchClass: true }) // => \"Db\"\r\n * midiToNoteName(61, { sharps: true }) // => \"C#4\"\r\n * midiToNoteName(61, { pitchClass: true, sharps: true }) // => \"C#\"\r\n * // it rounds to nearest note\r\n * midiToNoteName(61.7) // => \"D4\"\r\n */\r\nfunction midiToNoteName(midi, options = {}) {\r\n    if (isNaN(midi) || midi === -Infinity || midi === Infinity)\r\n        return \"\";\r\n    midi = Math.round(midi);\r\n    const pcs = options.sharps === true ? SHARPS : FLATS;\r\n    const pc = pcs[midi % 12];\r\n    if (options.pitchClass) {\r\n        return pc;\r\n    }\r\n    const o = Math.floor(midi / 12) - 1;\r\n    return pc + o;\r\n}\r\nvar index = { isMidi, toMidi, midiToFreq, midiToNoteName, freqToMidi };\n\nexport default index;\nexport { freqToMidi, isMidi, midiToFreq, midiToNoteName, toMidi };\n//# sourceMappingURL=index.es.js.map\n","import { note, transpose as transpose$1, coordToNote } from '@tonaljs/core';\nimport { midiToNoteName, freqToMidi } from '@tonaljs/midi';\n\nconst NAMES = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\r\nconst toName = (n) => n.name;\r\nconst onlyNotes = (array) => array.map(note).filter((n) => !n.empty);\r\n/**\r\n * Return the natural note names without octave\r\n * @function\r\n * @example\r\n * Note.names(); // => [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"]\r\n */\r\nfunction names(array) {\r\n    if (array === undefined) {\r\n        return NAMES.slice();\r\n    }\r\n    else if (!Array.isArray(array)) {\r\n        return [];\r\n    }\r\n    else {\r\n        return onlyNotes(array).map(toName);\r\n    }\r\n}\r\n/**\r\n * Get a note from a note name\r\n *\r\n * @function\r\n * @example\r\n * Note.get('Bb4') // => { name: \"Bb4\", midi: 70, chroma: 10, ... }\r\n */\r\nconst get = note;\r\n/**\r\n * Get the note name\r\n * @function\r\n */\r\nconst name = (note) => get(note).name;\r\n/**\r\n * Get the note pitch class name\r\n * @function\r\n */\r\nconst pitchClass = (note) => get(note).pc;\r\n/**\r\n * Get the note accidentals\r\n * @function\r\n */\r\nconst accidentals = (note) => get(note).acc;\r\n/**\r\n * Get the note octave\r\n * @function\r\n */\r\nconst octave = (note) => get(note).oct;\r\n/**\r\n * Get the note midi\r\n * @function\r\n */\r\nconst midi = (note) => get(note).midi;\r\n/**\r\n * Get the note midi\r\n * @function\r\n */\r\nconst freq = (note) => get(note).freq;\r\n/**\r\n * Get the note chroma\r\n * @function\r\n */\r\nconst chroma = (note) => get(note).chroma;\r\n/**\r\n * Given a midi number, returns a note name. Uses flats for altered notes.\r\n *\r\n * @function\r\n * @param {number} midi - the midi note number\r\n * @return {string} the note name\r\n * @example\r\n * Note.fromMidi(61) // => \"Db4\"\r\n * Note.fromMidi(61.7) // => \"D4\"\r\n */\r\nfunction fromMidi(midi) {\r\n    return midiToNoteName(midi);\r\n}\r\n/**\r\n * Given a midi number, returns a note name. Uses flats for altered notes.\r\n */\r\nfunction fromFreq(freq) {\r\n    return midiToNoteName(freqToMidi(freq));\r\n}\r\n/**\r\n * Given a midi number, returns a note name. Uses flats for altered notes.\r\n */\r\nfunction fromFreqSharps(freq) {\r\n    return midiToNoteName(freqToMidi(freq), { sharps: true });\r\n}\r\n/**\r\n * Given a midi number, returns a note name. Uses flats for altered notes.\r\n *\r\n * @function\r\n * @param {number} midi - the midi note number\r\n * @return {string} the note name\r\n * @example\r\n * Note.fromMidiSharps(61) // => \"C#4\"\r\n */\r\nfunction fromMidiSharps(midi) {\r\n    return midiToNoteName(midi, { sharps: true });\r\n}\r\n/**\r\n * Transpose a note by an interval\r\n */\r\nconst transpose = transpose$1;\r\nconst tr = transpose$1;\r\n/**\r\n * Transpose by an interval.\r\n * @function\r\n * @param {string} interval\r\n * @return {function} a function that transposes by the given interval\r\n * @example\r\n * [\"C\", \"D\", \"E\"].map(Note.transposeBy(\"5P\"));\r\n * // => [\"G\", \"A\", \"B\"]\r\n */\r\nconst transposeBy = (interval) => (note) => transpose(note, interval);\r\nconst trBy = transposeBy;\r\n/**\r\n * Transpose from a note\r\n * @function\r\n * @param {string} note\r\n * @return {function}  a function that transposes the the note by an interval\r\n * [\"1P\", \"3M\", \"5P\"].map(Note.transposeFrom(\"C\"));\r\n * // => [\"C\", \"E\", \"G\"]\r\n */\r\nconst transposeFrom = (note) => (interval) => transpose(note, interval);\r\nconst trFrom = transposeFrom;\r\n/**\r\n * Transpose a note by a number of perfect fifths.\r\n *\r\n * @function\r\n * @param {string} note - the note name\r\n * @param {number} fifhts - the number of fifths\r\n * @return {string} the transposed note name\r\n *\r\n * @example\r\n * import { transposeFifths } from \"@tonaljs/note\"\r\n * transposeFifths(\"G4\", 1) // => \"D\"\r\n * [0, 1, 2, 3, 4].map(fifths => transposeFifths(\"C\", fifths)) // => [\"C\", \"G\", \"D\", \"A\", \"E\"]\r\n */\r\nfunction transposeFifths(noteName, fifths) {\r\n    const note = get(noteName);\r\n    if (note.empty) {\r\n        return \"\";\r\n    }\r\n    const [nFifths, nOcts] = note.coord;\r\n    const transposed = nOcts === undefined\r\n        ? coordToNote([nFifths + fifths])\r\n        : coordToNote([nFifths + fifths, nOcts]);\r\n    return transposed.name;\r\n}\r\nconst trFifths = transposeFifths;\r\nconst ascending = (a, b) => a.height - b.height;\r\nconst descending = (a, b) => b.height - a.height;\r\nfunction sortedNames(notes, comparator) {\r\n    comparator = comparator || ascending;\r\n    return onlyNotes(notes).sort(comparator).map(toName);\r\n}\r\nfunction sortedUniqNames(notes) {\r\n    return sortedNames(notes, ascending).filter((n, i, a) => i === 0 || n !== a[i - 1]);\r\n}\r\n/**\r\n * Simplify a note\r\n *\r\n * @function\r\n * @param {string} note - the note to be simplified\r\n * - sameAccType: default true. Use same kind of accidentals that source\r\n * @return {string} the simplified note or '' if not valid note\r\n * @example\r\n * simplify(\"C##\") // => \"D\"\r\n * simplify(\"C###\") // => \"D#\"\r\n * simplify(\"C###\")\r\n * simplify(\"B#4\") // => \"C5\"\r\n */\r\nconst simplify = (noteName) => {\r\n    const note = get(noteName);\r\n    if (note.empty) {\r\n        return \"\";\r\n    }\r\n    return midiToNoteName(note.midi || note.chroma, {\r\n        sharps: note.alt > 0,\r\n        pitchClass: note.midi === null,\r\n    });\r\n};\r\n/**\r\n * Get enharmonic of a note\r\n *\r\n * @function\r\n * @param {string} note\r\n * @param [string] - [optional] Destination pitch class\r\n * @return {string} the enharmonic note name or '' if not valid note\r\n * @example\r\n * Note.enharmonic(\"Db\") // => \"C#\"\r\n * Note.enharmonic(\"C\") // => \"C\"\r\n * Note.enharmonic(\"F2\",\"E#\") // => \"E#2\"\r\n */\r\nfunction enharmonic(noteName, destName) {\r\n    const src = get(noteName);\r\n    if (src.empty) {\r\n        return \"\";\r\n    }\r\n    // destination: use given or generate one\r\n    const dest = get(destName ||\r\n        midiToNoteName(src.midi || src.chroma, {\r\n            sharps: src.alt < 0,\r\n            pitchClass: true,\r\n        }));\r\n    // ensure destination is valid\r\n    if (dest.empty || dest.chroma !== src.chroma) {\r\n        return \"\";\r\n    }\r\n    // if src has no octave, no need to calculate anything else\r\n    if (src.oct === undefined) {\r\n        return dest.pc;\r\n    }\r\n    // detect any octave overflow\r\n    const srcChroma = src.chroma - src.alt;\r\n    const destChroma = dest.chroma - dest.alt;\r\n    const destOctOffset = srcChroma > 11 || destChroma < 0\r\n        ? -1\r\n        : srcChroma < 0 || destChroma > 11\r\n            ? +1\r\n            : 0;\r\n    // calculate the new octave\r\n    const destOct = src.oct + destOctOffset;\r\n    return dest.pc + destOct;\r\n}\r\nvar index = {\r\n    names,\r\n    get,\r\n    name,\r\n    pitchClass,\r\n    accidentals,\r\n    octave,\r\n    midi,\r\n    ascending,\r\n    descending,\r\n    sortedNames,\r\n    sortedUniqNames,\r\n    fromMidi,\r\n    fromMidiSharps,\r\n    freq,\r\n    fromFreq,\r\n    fromFreqSharps,\r\n    chroma,\r\n    transpose,\r\n    tr,\r\n    transposeBy,\r\n    trBy,\r\n    transposeFrom,\r\n    trFrom,\r\n    transposeFifths,\r\n    trFifths,\r\n    simplify,\r\n    enharmonic,\r\n};\n\nexport default index;\nexport { accidentals, ascending, chroma, descending, enharmonic, freq, fromFreq, fromFreqSharps, fromMidi, fromMidiSharps, get, midi, name, names, octave, pitchClass, simplify, sortedNames, sortedUniqNames, tr, trBy, trFifths, trFrom, transpose, transposeBy, transposeFifths, transposeFrom };\n//# sourceMappingURL=index.es.js.map\n","import { isPitch, altToAcc, isNamed, deprecate, accToAlt, interval } from '@tonaljs/core';\n\nconst NoRomanNumeral = { empty: true, name: \"\", chordType: \"\" };\r\nconst cache = {};\r\n/**\r\n * Get properties of a roman numeral string\r\n *\r\n * @function\r\n * @param {string} - the roman numeral string (can have type, like: Imaj7)\r\n * @return {Object} - the roman numeral properties\r\n * @param {string} name - the roman numeral (tonic)\r\n * @param {string} type - the chord type\r\n * @param {string} num - the number (1 = I, 2 = II...)\r\n * @param {boolean} major - major or not\r\n *\r\n * @example\r\n * romanNumeral(\"VIIb5\") // => { name: \"VII\", type: \"b5\", num: 7, major: true }\r\n */\r\nfunction get(src) {\r\n    return typeof src === \"string\"\r\n        ? cache[src] || (cache[src] = parse(src))\r\n        : typeof src === \"number\"\r\n            ? get(NAMES[src] || \"\")\r\n            : isPitch(src)\r\n                ? fromPitch(src)\r\n                : isNamed(src)\r\n                    ? get(src.name)\r\n                    : NoRomanNumeral;\r\n}\r\nconst romanNumeral = deprecate(\"RomanNumeral.romanNumeral\", \"RomanNumeral.get\", get);\r\n/**\r\n * Get roman numeral names\r\n *\r\n * @function\r\n * @param {boolean} [isMajor=true]\r\n * @return {Array<String>}\r\n *\r\n * @example\r\n * names() // => [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"]\r\n */\r\nfunction names(major = true) {\r\n    return (major ? NAMES : NAMES_MINOR).slice();\r\n}\r\nfunction fromPitch(pitch) {\r\n    return get(altToAcc(pitch.alt) + NAMES[pitch.step]);\r\n}\r\nconst REGEX = /^(#{1,}|b{1,}|x{1,}|)(IV|I{1,3}|VI{0,2}|iv|i{1,3}|vi{0,2})([^IViv]*)$/;\r\nfunction tokenize(str) {\r\n    return (REGEX.exec(str) || [\"\", \"\", \"\", \"\"]);\r\n}\r\nconst ROMANS = \"I II III IV V VI VII\";\r\nconst NAMES = ROMANS.split(\" \");\r\nconst NAMES_MINOR = ROMANS.toLowerCase().split(\" \");\r\nfunction parse(src) {\r\n    const [name, acc, roman, chordType] = tokenize(src);\r\n    if (!roman) {\r\n        return NoRomanNumeral;\r\n    }\r\n    const upperRoman = roman.toUpperCase();\r\n    const step = NAMES.indexOf(upperRoman);\r\n    const alt = accToAlt(acc);\r\n    const dir = 1;\r\n    return {\r\n        empty: false,\r\n        name,\r\n        roman,\r\n        interval: interval({ step, alt, dir }).name,\r\n        acc,\r\n        chordType,\r\n        alt,\r\n        step,\r\n        major: roman === upperRoman,\r\n        oct: 0,\r\n        dir,\r\n    };\r\n}\r\nvar index = {\r\n    names,\r\n    get,\r\n    // deprecated\r\n    romanNumeral,\r\n};\n\nexport default index;\nexport { get, names, tokenize };\n//# sourceMappingURL=index.es.js.map\n","import { note, transpose, altToAcc, accToAlt } from '@tonaljs/core';\nimport { transposeFifths } from '@tonaljs/note';\nimport { get } from '@tonaljs/roman-numeral';\n\nconst Empty = Object.freeze([]);\r\nconst NoKey = {\r\n    type: \"major\",\r\n    tonic: \"\",\r\n    alteration: 0,\r\n    keySignature: \"\",\r\n};\r\nconst NoKeyScale = {\r\n    tonic: \"\",\r\n    grades: Empty,\r\n    intervals: Empty,\r\n    scale: Empty,\r\n    chords: Empty,\r\n    chordsHarmonicFunction: Empty,\r\n    chordScales: Empty,\r\n};\r\nconst NoMajorKey = {\r\n    ...NoKey,\r\n    ...NoKeyScale,\r\n    type: \"major\",\r\n    minorRelative: \"\",\r\n    scale: Empty,\r\n    secondaryDominants: Empty,\r\n    secondaryDominantsMinorRelative: Empty,\r\n    substituteDominants: Empty,\r\n    substituteDominantsMinorRelative: Empty,\r\n};\r\nconst NoMinorKey = {\r\n    ...NoKey,\r\n    type: \"minor\",\r\n    relativeMajor: \"\",\r\n    natural: NoKeyScale,\r\n    harmonic: NoKeyScale,\r\n    melodic: NoKeyScale,\r\n};\r\nconst mapScaleToType = (scale, list, sep = \"\") => list.map((type, i) => `${scale[i]}${sep}${type}`);\r\nfunction keyScale(grades, chords, harmonicFunctions, chordScales) {\r\n    return (tonic) => {\r\n        const intervals = grades.map((gr) => get(gr).interval || \"\");\r\n        const scale = intervals.map((interval) => transpose(tonic, interval));\r\n        return {\r\n            tonic,\r\n            grades,\r\n            intervals,\r\n            scale,\r\n            chords: mapScaleToType(scale, chords),\r\n            chordsHarmonicFunction: harmonicFunctions.slice(),\r\n            chordScales: mapScaleToType(scale, chordScales, \" \"),\r\n        };\r\n    };\r\n}\r\nconst distInFifths = (from, to) => {\r\n    const f = note(from);\r\n    const t = note(to);\r\n    return f.empty || t.empty ? 0 : t.coord[0] - f.coord[0];\r\n};\r\nconst MajorScale = keyScale(\"I II III IV V VI VII\".split(\" \"), \"maj7 m7 m7 maj7 7 m7 m7b5\".split(\" \"), \"T SD T SD D T D\".split(\" \"), \"major,dorian,phrygian,lydian,mixolydian,minor,locrian\".split(\",\"));\r\nconst NaturalScale = keyScale(\"I II bIII IV V bVI bVII\".split(\" \"), \"m7 m7b5 maj7 m7 m7 maj7 7\".split(\" \"), \"T SD T SD D SD SD\".split(\" \"), \"minor,locrian,major,dorian,phrygian,lydian,mixolydian\".split(\",\"));\r\nconst HarmonicScale = keyScale(\"I II bIII IV V bVI VII\".split(\" \"), \"mMaj7 m7b5 +maj7 m7 7 maj7 o7\".split(\" \"), \"T SD T SD D SD D\".split(\" \"), \"harmonic minor,locrian 6,major augmented,lydian diminished,phrygian dominant,lydian #9,ultralocrian\".split(\",\"));\r\nconst MelodicScale = keyScale(\"I II bIII IV V VI VII\".split(\" \"), \"m6 m7 +maj7 7 7 m7b5 m7b5\".split(\" \"), \"T SD T SD D  \".split(\" \"), \"melodic minor,dorian b2,lydian augmented,lydian dominant,mixolydian b6,locrian #2,altered\".split(\",\"));\r\n/**\r\n * Get a major key properties in a given tonic\r\n * @param tonic\r\n */\r\nfunction majorKey(tonic) {\r\n    const pc = note(tonic).pc;\r\n    if (!pc)\r\n        return NoMajorKey;\r\n    const keyScale = MajorScale(pc);\r\n    const alteration = distInFifths(\"C\", pc);\r\n    const romanInTonic = (src) => {\r\n        const r = get(src);\r\n        if (r.empty)\r\n            return \"\";\r\n        return transpose(tonic, r.interval) + r.chordType;\r\n    };\r\n    return {\r\n        ...keyScale,\r\n        type: \"major\",\r\n        minorRelative: transpose(pc, \"-3m\"),\r\n        alteration,\r\n        keySignature: altToAcc(alteration),\r\n        secondaryDominants: \"- VI7 VII7 I7 II7 III7 -\".split(\" \").map(romanInTonic),\r\n        secondaryDominantsMinorRelative: \"- IIIm7b5 IV#m7 Vm7 VIm7 VIIm7b5 -\"\r\n            .split(\" \")\r\n            .map(romanInTonic),\r\n        substituteDominants: \"- bIII7 IV7 bV7 bVI7 bVII7 -\"\r\n            .split(\" \")\r\n            .map(romanInTonic),\r\n        substituteDominantsMinorRelative: \"- IIIm7 Im7 IIbm7 VIm7 IVm7 -\"\r\n            .split(\" \")\r\n            .map(romanInTonic),\r\n    };\r\n}\r\n/**\r\n * Get minor key properties in a given tonic\r\n * @param tonic\r\n */\r\nfunction minorKey(tnc) {\r\n    const pc = note(tnc).pc;\r\n    if (!pc)\r\n        return NoMinorKey;\r\n    const alteration = distInFifths(\"C\", pc) - 3;\r\n    return {\r\n        type: \"minor\",\r\n        tonic: pc,\r\n        relativeMajor: transpose(pc, \"3m\"),\r\n        alteration,\r\n        keySignature: altToAcc(alteration),\r\n        natural: NaturalScale(pc),\r\n        harmonic: HarmonicScale(pc),\r\n        melodic: MelodicScale(pc),\r\n    };\r\n}\r\n/**\r\n * Given a key signature, returns the tonic of the major key\r\n * @param sigature\r\n * @example\r\n * majorTonicFromKeySignature('###') // => 'A'\r\n */\r\nfunction majorTonicFromKeySignature(sig) {\r\n    if (typeof sig === \"number\") {\r\n        return transposeFifths(\"C\", sig);\r\n    }\r\n    else if (typeof sig === \"string\" && /^b+|#+$/.test(sig)) {\r\n        return transposeFifths(\"C\", accToAlt(sig));\r\n    }\r\n    return null;\r\n}\r\nvar index = { majorKey, majorTonicFromKeySignature, minorKey };\n\nexport default index;\nexport { majorKey, majorTonicFromKeySignature, minorKey };\n//# sourceMappingURL=index.es.js.map\n","import { rotate } from '@tonaljs/collection';\nimport { deprecate, transpose } from '@tonaljs/core';\nimport { simplify, transposeFifths } from '@tonaljs/interval';\nimport { chromaToIntervals, EmptyPcset } from '@tonaljs/pcset';\n\nconst MODES = [\r\n    [0, 2773, 0, \"ionian\", \"\", \"Maj7\", \"major\"],\r\n    [1, 2902, 2, \"dorian\", \"m\", \"m7\"],\r\n    [2, 3418, 4, \"phrygian\", \"m\", \"m7\"],\r\n    [3, 2741, -1, \"lydian\", \"\", \"Maj7\"],\r\n    [4, 2774, 1, \"mixolydian\", \"\", \"7\"],\r\n    [5, 2906, 3, \"aeolian\", \"m\", \"m7\", \"minor\"],\r\n    [6, 3434, 5, \"locrian\", \"dim\", \"m7b5\"],\r\n];\r\nconst NoMode = {\r\n    ...EmptyPcset,\r\n    name: \"\",\r\n    alt: 0,\r\n    modeNum: NaN,\r\n    triad: \"\",\r\n    seventh: \"\",\r\n    aliases: [],\r\n};\r\nconst modes = MODES.map(toMode);\r\nconst index = {};\r\nmodes.forEach((mode) => {\r\n    index[mode.name] = mode;\r\n    mode.aliases.forEach((alias) => {\r\n        index[alias] = mode;\r\n    });\r\n});\r\n/**\r\n * Get a Mode by it's name\r\n *\r\n * @example\r\n * get('dorian')\r\n * // =>\r\n * // {\r\n * //   intervals: [ '1P', '2M', '3m', '4P', '5P', '6M', '7m' ],\r\n * //   modeNum: 1,\r\n * //   chroma: '101101010110',\r\n * //   normalized: '101101010110',\r\n * //   name: 'dorian',\r\n * //   setNum: 2902,\r\n * //   alt: 2,\r\n * //   triad: 'm',\r\n * //   seventh: 'm7',\r\n * //   aliases: []\r\n * // }\r\n */\r\nfunction get(name) {\r\n    return typeof name === \"string\"\r\n        ? index[name.toLowerCase()] || NoMode\r\n        : name && name.name\r\n            ? get(name.name)\r\n            : NoMode;\r\n}\r\nconst mode = deprecate(\"Mode.mode\", \"Mode.get\", get);\r\n/**\r\n * Get a list of all modes\r\n */\r\nfunction all() {\r\n    return modes.slice();\r\n}\r\nconst entries = deprecate(\"Mode.mode\", \"Mode.all\", all);\r\n/**\r\n * Get a list of all mode names\r\n */\r\nfunction names() {\r\n    return modes.map((mode) => mode.name);\r\n}\r\nfunction toMode(mode) {\r\n    const [modeNum, setNum, alt, name, triad, seventh, alias] = mode;\r\n    const aliases = alias ? [alias] : [];\r\n    const chroma = Number(setNum).toString(2);\r\n    const intervals = chromaToIntervals(chroma);\r\n    return {\r\n        empty: false,\r\n        intervals,\r\n        modeNum,\r\n        chroma,\r\n        normalized: chroma,\r\n        name,\r\n        setNum,\r\n        alt,\r\n        triad,\r\n        seventh,\r\n        aliases,\r\n    };\r\n}\r\nfunction notes(modeName, tonic) {\r\n    return get(modeName).intervals.map((ivl) => transpose(tonic, ivl));\r\n}\r\nfunction chords(chords) {\r\n    return (modeName, tonic) => {\r\n        const mode = get(modeName);\r\n        if (mode.empty)\r\n            return [];\r\n        const triads = rotate(mode.modeNum, chords);\r\n        const tonics = mode.intervals.map((i) => transpose(tonic, i));\r\n        return triads.map((triad, i) => tonics[i] + triad);\r\n    };\r\n}\r\nconst triads = chords(MODES.map((x) => x[4]));\r\nconst seventhChords = chords(MODES.map((x) => x[5]));\r\nfunction distance(destination, source) {\r\n    const from = get(source);\r\n    const to = get(destination);\r\n    if (from.empty || to.empty)\r\n        return \"\";\r\n    return simplify(transposeFifths(\"1P\", to.alt - from.alt));\r\n}\r\nfunction relativeTonic(destination, source, tonic) {\r\n    return transpose(tonic, distance(destination, source));\r\n}\r\nvar index$1 = {\r\n    get,\r\n    names,\r\n    all,\r\n    distance,\r\n    relativeTonic,\r\n    notes,\r\n    triads,\r\n    seventhChords,\r\n    // deprecated\r\n    entries,\r\n    mode,\r\n};\n\nexport default index$1;\nexport { all, distance, entries, get, mode, names, notes, relativeTonic, seventhChords, triads };\n//# sourceMappingURL=index.es.js.map\n","import { compact, range } from '@tonaljs/collection';\nimport { toMidi, midiToNoteName } from '@tonaljs/midi';\n\n/**\r\n * Create a numeric range. You supply a list of notes or numbers and it will\r\n * be connected to create complex ranges.\r\n *\r\n * @param {Array} notes - the list of notes or midi numbers used\r\n * @return {Array} an array of numbers or empty array if not valid parameters\r\n *\r\n * @example\r\n * numeric([\"C5\", \"C4\"]) // => [ 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60 ]\r\n * // it works midi notes\r\n * numeric([10, 5]) // => [ 10, 9, 8, 7, 6, 5 ]\r\n * // complex range\r\n * numeric([\"C4\", \"E4\", \"Bb3\"]) // => [60, 61, 62, 63, 64, 63, 62, 61, 60, 59, 58]\r\n */\r\nfunction numeric(notes) {\r\n    const midi = compact(notes.map(toMidi));\r\n    if (!notes.length || midi.length !== notes.length) {\r\n        // there is no valid notes\r\n        return [];\r\n    }\r\n    return midi.reduce((result, note) => {\r\n        const last = result[result.length - 1];\r\n        return result.concat(range(last, note).slice(1));\r\n    }, [midi[0]]);\r\n}\r\n/**\r\n * Create a range of chromatic notes. The altered notes will use flats.\r\n *\r\n * @function\r\n * @param {Array} notes - the list of notes or midi note numbers to create a range from\r\n * @param {Object} options - The same as `midiToNoteName` (`{ sharps: boolean, pitchClass: boolean }`)\r\n * @return {Array} an array of note names\r\n *\r\n * @example\r\n * Range.chromatic([\"C2, \"E2\", \"D2\"]) // => [\"C2\", \"Db2\", \"D2\", \"Eb2\", \"E2\", \"Eb2\", \"D2\"]\r\n * // with sharps\r\n * Range.chromatic([\"C2\", \"C3\"], { sharps: true }) // => [ \"C2\", \"C#2\", \"D2\", \"D#2\", \"E2\", \"F2\", \"F#2\", \"G2\", \"G#2\", \"A2\", \"A#2\", \"B2\", \"C3\" ]\r\n */\r\nfunction chromatic(notes, options) {\r\n    return numeric(notes).map((midi) => midiToNoteName(midi, options));\r\n}\r\nvar index = { numeric, chromatic };\n\nexport default index;\nexport { chromatic, numeric };\n//# sourceMappingURL=index.es.js.map\n","import { all } from '@tonaljs/chord-type';\nimport { rotate, range } from '@tonaljs/collection';\nimport { note, transpose, deprecate } from '@tonaljs/core';\nimport { sortedUniqNames } from '@tonaljs/note';\nimport { isSubsetOf, isSupersetOf, modes } from '@tonaljs/pcset';\nimport { names as names$1, get as get$1, all as all$1 } from '@tonaljs/scale-type';\n\n/**\r\n * References:\r\n * - https://www.researchgate.net/publication/327567188_An_Algorithm_for_Spelling_the_Pitches_of_Any_Musical_Scale\r\n * @module scale\r\n */\r\nconst NoScale = {\r\n    empty: true,\r\n    name: \"\",\r\n    type: \"\",\r\n    tonic: null,\r\n    setNum: NaN,\r\n    chroma: \"\",\r\n    normalized: \"\",\r\n    aliases: [],\r\n    notes: [],\r\n    intervals: [],\r\n};\r\n/**\r\n * Given a string with a scale name and (optionally) a tonic, split\r\n * that components.\r\n *\r\n * It retuns an array with the form [ name, tonic ] where tonic can be a\r\n * note name or null and name can be any arbitrary string\r\n * (this function doesn\"t check if that scale name exists)\r\n *\r\n * @function\r\n * @param {string} name - the scale name\r\n * @return {Array} an array [tonic, name]\r\n * @example\r\n * tokenize(\"C mixolydean\") // => [\"C\", \"mixolydean\"]\r\n * tokenize(\"anything is valid\") // => [\"\", \"anything is valid\"]\r\n * tokenize() // => [\"\", \"\"]\r\n */\r\nfunction tokenize(name) {\r\n    if (typeof name !== \"string\") {\r\n        return [\"\", \"\"];\r\n    }\r\n    const i = name.indexOf(\" \");\r\n    const tonic = note(name.substring(0, i));\r\n    if (tonic.empty) {\r\n        const n = note(name);\r\n        return n.empty ? [\"\", name] : [n.name, \"\"];\r\n    }\r\n    const type = name.substring(tonic.name.length + 1);\r\n    return [tonic.name, type.length ? type : \"\"];\r\n}\r\n/**\r\n * Get all scale names\r\n * @function\r\n */\r\nconst names = names$1;\r\n/**\r\n * Get a Scale from a scale name.\r\n */\r\nfunction get(src) {\r\n    const tokens = Array.isArray(src) ? src : tokenize(src);\r\n    const tonic = note(tokens[0]).name;\r\n    const st = get$1(tokens[1]);\r\n    if (st.empty) {\r\n        return NoScale;\r\n    }\r\n    const type = st.name;\r\n    const notes = tonic\r\n        ? st.intervals.map((i) => transpose(tonic, i))\r\n        : [];\r\n    const name = tonic ? tonic + \" \" + type : type;\r\n    return { ...st, name, type, tonic, notes };\r\n}\r\nconst scale = deprecate(\"Scale.scale\", \"Scale.get\", get);\r\n/**\r\n * Get all chords that fits a given scale\r\n *\r\n * @function\r\n * @param {string} name - the scale name\r\n * @return {Array<string>} - the chord names\r\n *\r\n * @example\r\n * scaleChords(\"pentatonic\") // => [\"5\", \"64\", \"M\", \"M6\", \"Madd9\", \"Msus2\"]\r\n */\r\nfunction scaleChords(name) {\r\n    const s = get(name);\r\n    const inScale = isSubsetOf(s.chroma);\r\n    return all()\r\n        .filter((chord) => inScale(chord.chroma))\r\n        .map((chord) => chord.aliases[0]);\r\n}\r\n/**\r\n * Get all scales names that are a superset of the given one\r\n * (has the same notes and at least one more)\r\n *\r\n * @function\r\n * @param {string} name\r\n * @return {Array} a list of scale names\r\n * @example\r\n * extended(\"major\") // => [\"bebop\", \"bebop dominant\", \"bebop major\", \"chromatic\", \"ichikosucho\"]\r\n */\r\nfunction extended(name) {\r\n    const s = get(name);\r\n    const isSuperset = isSupersetOf(s.chroma);\r\n    return all$1()\r\n        .filter((scale) => isSuperset(scale.chroma))\r\n        .map((scale) => scale.name);\r\n}\r\n/**\r\n * Find all scales names that are a subset of the given one\r\n * (has less notes but all from the given scale)\r\n *\r\n * @function\r\n * @param {string} name\r\n * @return {Array} a list of scale names\r\n *\r\n * @example\r\n * reduced(\"major\") // => [\"ionian pentatonic\", \"major pentatonic\", \"ritusen\"]\r\n */\r\nfunction reduced(name) {\r\n    const isSubset = isSubsetOf(get(name).chroma);\r\n    return all$1()\r\n        .filter((scale) => isSubset(scale.chroma))\r\n        .map((scale) => scale.name);\r\n}\r\n/**\r\n * Given an array of notes, return the scale: a pitch class set starting from\r\n * the first note of the array\r\n *\r\n * @function\r\n * @param {string[]} notes\r\n * @return {string[]} pitch classes with same tonic\r\n * @example\r\n * scaleNotes(['C4', 'c3', 'C5', 'C4', 'c4']) // => [\"C\"]\r\n * scaleNotes(['D4', 'c#5', 'A5', 'F#6']) // => [\"D\", \"F#\", \"A\", \"C#\"]\r\n */\r\nfunction scaleNotes(notes) {\r\n    const pcset = notes.map((n) => note(n).pc).filter((x) => x);\r\n    const tonic = pcset[0];\r\n    const scale = sortedUniqNames(pcset);\r\n    return rotate(scale.indexOf(tonic), scale);\r\n}\r\n/**\r\n * Find mode names of a scale\r\n *\r\n * @function\r\n * @param {string} name - scale name\r\n * @example\r\n * modeNames(\"C pentatonic\") // => [\r\n *   [\"C\", \"major pentatonic\"],\r\n *   [\"D\", \"egyptian\"],\r\n *   [\"E\", \"malkos raga\"],\r\n *   [\"G\", \"ritusen\"],\r\n *   [\"A\", \"minor pentatonic\"]\r\n * ]\r\n */\r\nfunction modeNames(name) {\r\n    const s = get(name);\r\n    if (s.empty) {\r\n        return [];\r\n    }\r\n    const tonics = s.tonic ? s.notes : s.intervals;\r\n    return modes(s.chroma)\r\n        .map((chroma, i) => {\r\n        const modeName = get(chroma).name;\r\n        return modeName ? [tonics[i], modeName] : [\"\", \"\"];\r\n    })\r\n        .filter((x) => x[0]);\r\n}\r\nfunction getNoteNameOf(scale) {\r\n    const names = Array.isArray(scale) ? scaleNotes(scale) : get(scale).notes;\r\n    const chromas = names.map((name) => note(name).chroma);\r\n    return (noteOrMidi) => {\r\n        const height = typeof noteOrMidi === \"number\" ? noteOrMidi : note(noteOrMidi).height;\r\n        if (height === undefined)\r\n            return undefined;\r\n        const chroma = height % 12;\r\n        const oct = Math.floor(height / 12) - 1;\r\n        const position = chromas.indexOf(chroma);\r\n        if (position === -1)\r\n            return undefined;\r\n        return names[position] + oct;\r\n    };\r\n}\r\nfunction rangeOf(scale) {\r\n    const getName = getNoteNameOf(scale);\r\n    return (fromNote, toNote) => {\r\n        const from = note(fromNote).height;\r\n        const to = note(toNote).height;\r\n        if (from === undefined || to === undefined)\r\n            return [];\r\n        return range(from, to)\r\n            .map(getName)\r\n            .filter((x) => x);\r\n    };\r\n}\r\nvar index = {\r\n    get,\r\n    names,\r\n    extended,\r\n    modeNames,\r\n    reduced,\r\n    scaleChords,\r\n    scaleNotes,\r\n    tokenize,\r\n    rangeOf,\r\n    // deprecated\r\n    scale,\r\n};\n\nexport default index;\nexport { extended, get, modeNames, names, rangeOf, reduced, scale, scaleChords, scaleNotes, tokenize };\n//# sourceMappingURL=index.es.js.map\n","import { group } from 'd3';\nimport { arrayShallowEquals } from '../utils/ArrayUtils';\nimport { Chord } from '@tonaljs/tonal';\nimport Note from '../types/Note'; /* eslint-disable-line no-unused-vars */\n\n\n/**\n * @module Chords\n */\n\n/**\n * Detects chords as those notes that have the exact same start time, only works\n * for ground truth (since recordings are not exact)\n * Does only work if groundtruth is aligned! TuxGuitar produces unaligned MIDI.\n *\n * @param {Note[]} notes notes\n * @returns {Note[][]} array of chord arrays\n */\nexport function detectChordsByExactStart(notes) {\n    const grouped = group(notes, d => d.start);\n    const chords = [...grouped]\n        .map(d => d[1])\n        // Sort chords by time\n        .sort((a, b) => a[0].start - b[0].start)\n        // Sort notes in each chord by pitch\n        .map(chord => chord.sort((a, b) => a.pitch - b.pitch));\n    return chords;\n}\n\n/**\n * Detects chords, by simply looking for notes that overlap each other in time.\n * Example:\n *    =======\n *       =========\n *         ========\n * Important: Notes must be sorted by start time for this to work correctly.\n *\n * @todo not used yet\n * @todo optional minimum overlap ratio\n * @todo new definition of chord? i.e. notes have to start 'together'\n * @param {Note[]} notes array of Note objects\n * @param {boolean} sortByPitch sort chords by pitch? (otherwise sorted\n *      by note start time)\n * @returns {Note[][]} array of chord arrays\n */\nexport function detectChordsByOverlap(notes, sortByPitch = true) {\n    if (!notes || notes.length === 0) { return []; }\n    if (notes.length === 1) { return [[notes[0]]]; }\n    const sorted = [...notes].sort((a, b) => { a.start !== b.start ? (a.start - b.start) : a.pitch - b.pitch; });\n    const notesTodo = new Set(sorted);\n    const chords = [];\n    // Find all overlaps with brute force\n    while (notesTodo.size > 0) {\n        // Take a new note and make a new chord\n        const note1 = notesTodo.values().next().value;\n        notesTodo.delete(note1);\n        let chord = [note1];\n        // Add all notes that overap note1\n        for (const note2 of notesTodo.values()) {\n            if (note1.overlapInSeconds(note2) >= 0.5 * note1.getDuration()) {\n                chord.push(note2);\n                notesTodo.delete(note2);\n            }\n        }\n        if (sortByPitch) {\n            chord = chord.sort((a, b) => a.pitch - b.pitch);\n        }\n        chords.push(chord);\n    }\n    return chords;\n}\n// export function detectChordsByOverlap(notes, sortByPitch = true) {\n//     if (!notes || !notes.length) { return []; }\n//     if (notes.length === 1) { return [[notes[0]]]; }\n//     const chords = [];\n//     let currentChord = [notes[0]];\n//     for (let i = 1; i < notes.length; i++) {\n//         const note = notes[i];\n//         console.log(i);\n//         console.log(currentChord);\n//         console.log(note);\n\n//         // Check for overlap with current chord\n//         let overlaps = false;\n//         for (let note2 of currentChord) {\n//             if (note.overlapsInTime(note2)) {\n//                 overlaps = true;\n//                 break;\n//             }\n//         }\n//         console.log(overlaps);\n//         if (overlaps) {\n//             currentChord.push(note);\n//             // TODO: also check the distance from the first note of the chord!\n//             // TODO:jump ahead to not count the cord multiple times (partially)\n//         } else {\n//             // If not, the previous chord is finished\n//             // Sort chord by pitch?\n//             if (sortByPitch) {\n//                 currentChord = currentChord.sort((a, b) => a.pitch - b.pitch);\n//             }\n//             chords.push(currentChord);\n//             // Start new chord\n//             if (i < notes.length - 1) {\n//                 currentChord = [notes[i + 1]];\n//                 i++;\n//             }\n//         }\n//     }\n//     // finish last chord\n//     chords.push(currentChord);\n//     return chords;\n// }\n\n\n/*\n * Maps number of steps (number of notes -1) to possible chord types\n */\nconst chordTypes = new Map([\n    [\n        1,\n        [\n            // TODO: how to handle inversions?\n            { steps: [5], name: 'Inverted power chord', suffix: '?' },\n            { steps: [7], name: 'Power chord', suffix: '5' },\n        ],\n    ],\n    [\n        2,\n        [\n            { steps: [2, 7], name: 'Suspended second', suffix: 'sus2' },\n            { steps: [3, 6], name: 'Diminished', suffix: 'dim' },\n            { steps: [3, 7], name: 'Minor', suffix: 'min' },\n            { steps: [4, 10], name: 'Seventh', suffix: '7' },\n            { steps: [4, 7], name: 'Major', suffix: '' },\n            { steps: [4, 8], name: 'Augmented', suffix: 'aug' },\n            { steps: [4, 9], name: 'Sixth', suffix: '6' },\n            { steps: [5, 7], name: 'Suspended fourth', suffix: 'sus4' },\n        ],\n    ],\n    [\n        3,\n        [\n            { steps: [2, 3, 7], name: 'Minor, added ninth', suffix: 'm(add9)' },\n            { steps: [2, 4, 7], name: 'Added ninth', suffix: 'add9' },\n            { steps: [3, 6, 10], name: 'Minor seventh, flat fifth', suffix: 'm7b5' },\n            { steps: [3, 7, 10], name: 'Minor seventh', suffix: 'm7' },\n            { steps: [3, 7, 11], name: 'Minor, major seventh', suffix: 'm(Maj7)' },\n            { steps: [3, 7, 8], name: 'Minor, flat sixth', suffix: 'mb6' },\n            { steps: [3, 7, 9], name: 'Minor sixth', suffix: 'm6' },\n            { steps: [4, 5, 11], name: 'Major eleventh (no fifth, no ninth)', suffix: 'Maj11' },\n            { steps: [4, 5, 7], name: 'Added fourth', suffix: 'add4' },\n            { steps: [4, 7, 10], name: 'Dominant seventh', suffix: '7' },\n            { steps: [4, 7, 11], name: 'Major seventh', suffix: 'Maj7' },\n            { steps: [4, 7, 9], name: 'Major Sixth', suffix: 'Maj6' },\n        ],\n    ],\n    [\n        4,\n        [\n            { steps: [2, 3, 6, 10], name: 'Minor ninth flat fifth', suffix: 'm9b5' },\n            { steps: [2, 3, 7, 10], name: 'Minor ninth', suffix: 'm9' },\n            { steps: [2, 3, 7, 11], name: 'Minor ninth, major seventh', suffix: 'm9(Maj7)' },\n            { steps: [2, 3, 7, 9], name: 'Minor sixth, added ninth', suffix: 'm6/9' },\n            { steps: [2, 4, 7, 11], name: 'Major ninth', suffix: 'Maj9' },\n            { steps: [2, 4, 7, 9], name: 'Sixth, added ninth', suffix: '6/9' },\n            { steps: [4, 5, 7, 11], name: 'Major eleventh (no ninth)', suffix: 'Maj11' },\n            { steps: [4, 6, 7, 10], name: 'Seventh, sharp eleventh', suffix: '7#11' },\n            { steps: [4, 6, 7, 11], name: 'Major seventh, sharp eleventh', suffix: 'Maj7#11' },\n        ],\n    ],\n    [\n        5,\n        [\n            { steps: [2, 4, 5, 7, 11], name: 'Major eleventh', suffix: 'Maj11' },\n            { steps: [2, 4, 7, 9, 11], name: 'Major thirteen', suffix: 'Maj13' },\n        ],\n    ],\n    [\n        6,\n        [\n            { steps: [2, 3, 4, 6, 7, 10], name: 'Minor thirteen', suffix: 'm13' },\n        ],\n    ],\n]);\n\n/**\n * Returns chord type, e.g. 'Major', 'Diminished', ...\n * Important: Notes must be sorted by pitch ascending\n *\n * @todo some chords might be multiple types\n * @param {Note[]} notes notes (sorted by pitch asc.)\n * @returns {string} chord type\n */\nexport function getChordType(notes) {\n    if (!notes || notes.length === 0) { return { name: 'No note' }; }\n    if (notes.length === 1) { return { name: 'Single note' }; }\n    // Get distances in semitones\n    let steps = [];\n    const lowest = notes[0].pitch;\n    for (let index = 1; index < notes.length; index++) {\n        steps.push(notes[index].pitch - lowest);\n    }\n    // Normalize higher than octave\n    steps = steps.map(d => d % 12);\n    // Filter doubles\n    steps = [...new Set(steps)];\n    // Filter octaves\n    steps = steps.filter(d => d !== 0);\n    if (steps.length === 0) { return { name: 'Octave' }; }\n    steps.sort((a, b) => a - b);\n\n    // Now get the chord type\n    const candidates = chordTypes.get(steps.length);\n    if (candidates) {\n        for (const cand of candidates) {\n            if (arrayShallowEquals(steps, cand.steps)) {\n                return cand;\n            }\n        }\n    }\n    return { name: 'Unknown chord type' };\n}\n\n/**\n * https://github.com/tonaljs/tonal/tree/master/packages/chord\n * Detected chords can be used with https://github.com/tonaljs/tonal/tree/master/packages/chord-type\n *\n * @param {Note[]} notes notes\n * @returns {string[]} possible chord types\n */\nexport function getChordName(notes) {\n    const noteLetters = notes\n        .sort((a, b) => a.pitch - b.pitch)\n        .map(d => d.getLetter());\n    const chords = Chord.detect(noteLetters);\n    return chords;\n}\n\n// /**\n//  * Estimates the name of a given chord of notes\n//  *\n//  * @param {string} chord name\n//  * @return {Note[]} notes array of Note objects\n//  * @todo use tonaljs\n//  * @todo use this https://github.com/greird/chordictionaryjs\n//  */\n// export function getNotesFromChordName(name, length = 1, start = 0) {\n//     console.error('NIY');\n// }\n","// CONSTANTS\r\nconst NONE = {\r\n    empty: true,\r\n    name: \"\",\r\n    upper: undefined,\r\n    lower: undefined,\r\n    type: undefined,\r\n    additive: [],\r\n};\r\nconst NAMES = [\"4/4\", \"3/4\", \"2/4\", \"2/2\", \"12/8\", \"9/8\", \"6/8\", \"3/8\"];\r\n// PUBLIC API\r\nfunction names() {\r\n    return NAMES.slice();\r\n}\r\nconst REGEX = /^(\\d?\\d(?:\\+\\d)*)\\/(\\d)$/;\r\nconst CACHE = new Map();\r\nfunction get(literal) {\r\n    const cached = CACHE.get(literal);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const ts = build(parse(literal));\r\n    CACHE.set(literal, ts);\r\n    return ts;\r\n}\r\nfunction parse(literal) {\r\n    if (typeof literal === \"string\") {\r\n        const [_, up, low] = REGEX.exec(literal) || [];\r\n        return parse([up, low]);\r\n    }\r\n    const [up, down] = literal;\r\n    const denominator = +down;\r\n    if (typeof up === \"number\") {\r\n        return [up, denominator];\r\n    }\r\n    const list = up.split(\"+\").map((n) => +n);\r\n    return list.length === 1 ? [list[0], denominator] : [list, denominator];\r\n}\r\nvar index = { names, parse, get };\r\n// PRIVATE\r\nfunction build([up, down]) {\r\n    const upper = Array.isArray(up) ? up.reduce((a, b) => a + b, 0) : up;\r\n    const lower = down;\r\n    if (upper === 0 || lower === 0) {\r\n        return NONE;\r\n    }\r\n    const name = Array.isArray(up) ? `${up.join(\"+\")}/${down}` : `${up}/${down}`;\r\n    const additive = Array.isArray(up) ? up : [];\r\n    const type = lower === 4 || lower === 2\r\n        ? \"simple\"\r\n        : lower === 8 && upper % 3 === 0\r\n            ? \"compound\"\r\n            : \"irregular\";\r\n    return {\r\n        empty: false,\r\n        name,\r\n        type,\r\n        upper,\r\n        lower,\r\n        additive,\r\n    };\r\n}\n\nexport default index;\nexport { get, names, parse };\n//# sourceMappingURL=index.es.js.map\n","import { difference, extent, intersection, max } from 'd3';\nimport { getMidiNoteByLabel, getMidiNoteByNr } from '../fileFormats/Midi';\nimport { detectChordsByExactStart } from '../chords/Chords';\nimport Note from '../types/Note';\nimport { bpmToSecondsPerBeat } from '../utils/MiscUtils';\n\n/**\n * @module instruments/Lamellophone\n */\n\n/**\n * Represents Lamellophone tunings\n */\nexport class LamellophoneTuning {\n    /**\n     * Represents a tuning of lamellophone.\n     *\n     * @param {string} name name\n     * @param {string[]} notes array of notes, same order as on instrument\n     *      e.g. [..., 'D4','C4', 'F#4', ...]\n     */\n    constructor(name, notes) {\n        this.name = name;\n        this.notes = notes;\n        this.short = notes.join(' ');\n        this.pitches = notes.map(note => getMidiNoteByLabel(note).pitch);\n        this.pitchesSorted = [...this.pitches]\n            .sort((a, b) => a - b);\n        this.keyCount = notes.length;\n    }\n\n    /**\n     * Returns an array of the tuning's notes as number representation:\n     * Tuning notes:  C4, D4, ... C5, D5, ... C6,  D6\n     * Number format: 1,  2,  ... 1°, 2°, ... 1°°, 2°°\n     *\n     * @returns {string[]} array with tuning notes in number representation\n     */\n    getNumbers() {\n        const pitches = this.pitchesSorted;\n        const numbers = new Map();\n        for (const [index, pitch] of pitches.entries()) {\n            let number = index + 1;\n            let ending = '';\n            let lowerOctave = pitch - 12;\n            while (lowerOctave > 0 && numbers.has(lowerOctave)) {\n                number = numbers.get(lowerOctave).number;\n                ending += '°';\n                lowerOctave -= 12;\n            }\n            numbers.set(pitch, { number, numberString: `${number}${ending}` });\n        }\n        return [...numbers.values()]\n            .map(d => d.numberString);\n    }\n\n    /**\n     * Returns an array of the tuning's notes as letter representation:\n     * Tuning notes:  C4, D4, ... C5, D5, ... C6,  D6\n     * Number format: C,  D,  ... C°, D°, ... C°°, D°°\n     *\n     * @returns {string[]} array with tuning notes in letter representation\n     */\n    getLetters() {\n        const pitches = this.pitchesSorted;\n        const numbers = new Map();\n        for (const [index, pitch] of pitches.entries()) {\n            let number = index + 1;\n            let ending = '';\n            let lowerOctave = pitch - 12;\n            while (lowerOctave > 0 && numbers.has(lowerOctave)) {\n                number = numbers.get(lowerOctave).number;\n                ending += '°';\n                lowerOctave -= 12;\n            }\n            const letter = getMidiNoteByNr(pitch).name;\n            numbers.set(pitch, { number, letterString: `${letter}${ending}` });\n        }\n        return [...numbers.values()].map(d => d.letterString);\n    }\n}\n\n/**\n * Tunings.\n * Notes are in the same order as on the instrument\n *\n * @type {Map<string,Map<string,LamellophoneTuning>>}\n */\nexport const lamellophoneTunings = new Map([\n    ['Kalimba', new Map([\n        [\n            '9 A Major',\n            new LamellophoneTuning('9 A Major', ['A5', 'C#6', 'C#5', 'A5', 'A4', 'F#5', 'E5', 'E6', 'B5']),\n        ],\n        [\n            '9 A Minor',\n            new LamellophoneTuning('9 A Minor', ['A5', 'C6', 'C5', 'A5', 'A4', 'F5', 'E5', 'E6', 'B5']),\n        ],\n        [\n            '9 A Minor 7',\n            new LamellophoneTuning('9 A Minor 7', ['A5', 'C6', 'C5', 'A5', 'A4', 'F#5', 'E5', 'E6', 'B5']),\n        ],\n        [\n            '9 A Ake Bono',\n            new LamellophoneTuning('9 A Ake Bono', ['A5', 'D6', 'D5', 'A5', 'A4', 'F5', 'E5', 'E6', 'A#5']),\n        ],\n        [\n            '9 A Hijaz',\n            new LamellophoneTuning('9 A Hijaz', ['G5', 'D6', 'D5', 'A5', 'A4', 'F#5', 'D#5', 'D#6', 'A#5']),\n        ],\n        [\n            '9 A Pygmy',\n            new LamellophoneTuning('9 A Pygmy', ['G5', 'C6', 'C5', 'G5', 'G4', 'D#5', 'D5', 'D#6', 'A#5']),\n        ],\n        [\n            '17 C Major',\n            new LamellophoneTuning('17 C Major', ['D6', 'B5', 'G5', 'E5', 'C5', 'A4', 'F4', 'D4', 'C4', 'E4', 'G4', 'B4', 'D5', 'F5', 'A5', 'C6', 'E6']),\n        ],\n        [\n            '21 C Major',\n            new LamellophoneTuning('21 C Major', ['D6', 'B5', 'G5', 'E5', 'C5', 'A4', 'F4', 'D4', 'B3', 'G3', 'F3', 'A3', 'C4', 'E4', 'G4', 'B4', 'D5', 'F5', 'A5', 'C6', 'E6']),\n        ],\n    ])],\n]);\n\n\n/**\n * Parses a tab into notes\n *\n * @param {string} tab in letter format\n * @param {LamellophoneTuning} tuning tuning\n * @param {number} tempo tempo in bpm\n * @returns {Note[]} notes\n */\nexport function convertTabToNotes(tab, tuning, tempo = 120) {\n    if (!tab || tab.length === 0) { return []; }\n    // Create a mapping symbol->pitch\n    const symbolToPitchMap = new Map();\n    const symbols = tuning.getLetters();\n    for (let index = 0; index < tuning.keyCount; index++) {\n        symbolToPitchMap.set(symbols[index], tuning.pitchesSorted[index]);\n    }\n    // Parse tab to notes\n    const noteNames = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n    const noteNamesSet = new Set(noteNames);\n    const lowestNote = tuning.pitchesSorted[0];\n    const startOct = getMidiNoteByNr(lowestNote).octave;\n    const secondsPerBeat = bpmToSecondsPerBeat(tempo);\n    let insideChord = false;\n    let insideNote = false;\n    let currentTime = 0;\n    let currentPitch = 0;\n    let currentOctOffset = 0;\n    const notes = [];\n    tab = `${tab.toUpperCase().replaceAll('\\n', ' \\n')} `;\n    // This is needed more often\n    const finishNote = () => {\n        try {\n            notes.push(Note.from({\n                pitch: currentPitch + 12 * (startOct + 1 + currentOctOffset),\n                start: currentTime,\n                end: currentTime + secondsPerBeat,\n            }));\n            currentOctOffset = 0;\n            if (!insideChord) {\n                currentTime += secondsPerBeat;\n            }\n        } catch {\n            console.log(currentPitch);\n        }\n        insideNote = false;\n    };\n    for (const char of tab) {\n        if (char === '(') {\n            // Start chord (but finish current if any)\n            if (insideChord) {\n                insideChord = false;\n            }\n            if (insideNote) {\n                finishNote();\n            }\n            insideChord = true;\n        } else if (noteNamesSet.has(char)) {\n            // Start note (but finish current if any)\n            if (insideNote) {\n                finishNote();\n            }\n            insideNote = true;\n            currentPitch = noteNames.indexOf(char);\n        } else if (char === '#') {\n            // Sharpen note\n            currentPitch++;\n        } else if (char === '°') {\n            // Increase ocatve\n            currentOctOffset++;\n        } else if (char === ' ' || char === '\\n' || char === ')') {\n            // End chord and note if inside\n            if (char === ')') {\n                insideChord = false;\n            }\n            if (char === '\\n') {\n                insideChord = false;\n                currentTime += secondsPerBeat;\n            }\n            if (insideNote) {\n                finishNote();\n            }\n        }\n    }\n    return notes;\n}\n\n/**\n * Converts an array of notes into a text tab\n *\n * @param {Note[]} notes notes\n * @param {LamellophoneTuning} tuning tuning\n * @param {'letter'|'number'} mode mode\n * @param {number} restSize number of seconds for a gap between chords to insert\n *     a line break\n * @returns {string} text tab\n */\nexport function convertNotesToTab(notes, tuning, mode = 'letter', restSize = 0.1) {\n    if (!notes || notes.length === 0) { return []; }\n    // Create a mapping pitch->symbol\n    const pitchToSymbolMap = new Map();\n    const symbols = mode === 'letter' ? tuning.getLetters() : tuning.getNumbers();\n    for (let index = 0; index < tuning.keyCount; index++) {\n        pitchToSymbolMap.set(tuning.pitchesSorted[index], symbols[index]);\n    }\n    // Get chords\n    const chords = detectChordsByExactStart(notes);\n    // Create tab\n    let tab = '';\n    let previousEnd = 0;\n    for (const chord of chords) {\n        // Format chord's notes\n        let chordString = chord\n            .map(note => {\n                if (pitchToSymbolMap.has(note.pitch)) {\n                    return pitchToSymbolMap.get(note.pitch) || `[${note.pitch}]`;\n                } else {\n                    return mode === 'letter' ? getMidiNoteByNr(note.pitch)?.name ?? note.pitch : note.pitch;\n                }\n            })\n            .join(' ');\n        if (chord.length > 1) {\n            // Mark chords with backets (for multiple notes)\n            chordString = `(${chordString})`;\n        }\n        tab = chord[0].start - previousEnd > restSize ? `${tab}\\n${chordString}` : `${tab} ${chordString}`;\n        // Update last end time of chord\n        previousEnd = max(chord, n => n.end);\n    }\n    // Remove leading space\n    return tab.slice(1);\n}\n\n/**\n * Converts an array of notes into an HTML tab with colored notes\n *\n * @param {Note[]} notes notes\n * @param {LamellophoneTuning} tuning tuning\n * @param {'letter'|'number'} mode mode\n * @param {number} restSize number of seconds for a gap between chords to insert\n *     a line break\n * @param {Function} colormap color map function: pitch to color\n * @returns {string} HTML tab\n */\nexport function convertNotesToHtmlTab(\n    notes,\n    tuning,\n    mode = 'letter',\n    restSize = 0.1,\n    colormap = () => 'black',\n) {\n    if (!notes || notes.length === 0) { return []; }\n    // Create a mapping pitch->symbol\n    const pitchToSymbolMap = new Map();\n    const symbols = mode === 'letter' ? tuning.getLetters() : tuning.getNumbers();\n    for (let index = 0; index < tuning.keyCount; index++) {\n        pitchToSymbolMap.set(tuning.pitches[index], symbols[index]);\n    }\n    // Get chords\n    const chords = detectChordsByExactStart(notes);\n    // Create tab\n    let tab = '';\n    let previousEnd = 0;\n    for (const chord of chords) {\n        // Format chord's notes\n        let chordString = chord\n            .map(note => {\n                let string;\n                if (pitchToSymbolMap.has(note.pitch)) {\n                    string = pitchToSymbolMap.get(note.pitch) || `[${note.pitch}]`;\n                } else {\n                    string = mode === 'letter' ? getMidiNoteByNr(note.pitch)?.name ?? note.pitch : note.pitch;\n                }\n                const color = colormap(note.pitch);\n                return `<span class='note' style='background-color: ${color}'>${string}</span>`;\n            })\n            .join('\\n');\n        if (chord.length > 1) {\n            // Mark chords with backets (for multiple notes)\n            chordString = `<span class='chord'>${chordString}</span>`;\n        }\n        tab = chord[0].start - previousEnd > restSize ? `${tab}<br/>${chordString}` : `${tab}${chordString}`;\n        // Update last end time of chord\n        previousEnd = max(chord, n => n.end);\n    }\n    return tab;\n}\n\n/**\n * Converts a number-based tab to note letter format\n *\n * @param {string} numberTab tab text with number format\n * @param {Map<number, string>} numberLetterMap maps numbers to letters\n * @returns {string} tab in letter format\n */\nexport function convertNumbersToLetters(numberTab, numberLetterMap) {\n    if (!numberTab || numberTab.length === 0) { return ''; }\n    // Normalize to °\n    numberTab = numberTab.replaceAll('\\'', '°');\n    numberTab = numberTab.replaceAll('’', '°');\n    numberTab = numberTab.replaceAll('*', '°');\n    numberTab = numberTab.replaceAll('º', '°');\n    numberTab = numberTab.replaceAll('^', '°');\n    for (const [key, value] of numberLetterMap.entries()) {\n        numberTab = numberTab.replaceAll(key, value);\n    }\n    return numberTab;\n}\n\n/**\n * Tries to find a transposition s.t. the tuning is able to play all notes.\n * If not not possible, return the transposition that requires the least keys to\n * be retuned.\n *\n * @todo tests fail\n * @param {Note[]} notes notes\n * @param {LamellophoneTuning} tuning tuning\n * @returns {object} {transpose: number, retune: Map}\n */\nexport function bestTransposition(notes, tuning) {\n    if (!notes || notes.length === 0) {\n        return { transpose: 0, retune: new Map() };\n    }\n\n    const occuringPitches = new Set(notes.map(n => n.pitch));\n    if (occuringPitches.size > tuning.keyCount) {\n        // Cannot play all notes, no matter the transp. and tuning\n        // TODO:\n        // just choose best approx?\n\n    }\n    const notePitches = [...occuringPitches];\n\n    // Already perfect? return now\n    if (difference(notePitches, tuning.pitches).size === 0) {\n        return { transpose: 0, retune: new Map() };\n    }\n\n    const [minPitch, maxPitch] = extent(notePitches);\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    const transpose = (array, steps) => array.map(d => d + steps);\n\n    // Just brute force through all transpositions\n    let bestSteps = 0;\n    let bestTransposed;\n    let commonPitches;\n    for (let steps = -minPitch; steps <= 127 - maxPitch; steps++) {\n        const transposed = transpose(notePitches, steps);\n        const common = intersection(transposed, tuning.pitches);\n        if (!commonPitches || common.size > commonPitches.size) {\n            bestSteps = steps;\n            bestTransposed = transposed;\n        }\n    }\n    bestTransposed = new Set(bestTransposed);\n\n    // Get pitches in tuning but not in notes and other way round\n    const uncommon = difference(bestTransposed, tuning.pitches);\n    console.log(uncommon);\n\n    const freePitches = new Set();\n    const neededPitches = [];\n    for (const p of uncommon) {\n        if (bestTransposed.has(p)) {\n            neededPitches.push(p);\n        } else {\n            freePitches.add(p);\n        }\n    }\n    console.log(neededPitches);\n    console.log(freePitches);\n\n    if (neededPitches.length === 0) {\n        // Everything is fine!\n        return {\n            transpose: bestSteps,\n            retune: new Map(),\n        };\n    }\n    if (freePitches.size === 0) {\n        // Cannot solve this!\n        return {\n            transpose: bestSteps,\n            retune: new Map(),\n        };\n    }\n\n\n    // Get closest free pitch for each needed one\n    const retune = new Map();\n    for (const neededPitch of neededPitches) {\n        let bestMatch = null;\n        const bestDiff = Number.POSITIVE_INFINITY;\n        let freePitch;\n        for (freePitch of freePitches) {\n            const diff = Math.abs(neededPitch - freePitch);\n            if (diff < bestDiff) {\n                bestMatch = freePitch;\n            }\n        }\n        freePitches.delete(bestMatch);\n        retune.set(freePitch, neededPitch);\n    }\n\n    return {\n        transpose: bestSteps,\n        retune,\n    };\n}\n","/**\n * @module instruments/Piano\n */\n\n/**\n * Map:keyCount->pitchRange\n * pitchRange is {minPitch:number, maxPitch:number}\n *\n * @type {Map<number,object>}\n */\nexport const pianoPitchRange = new Map([\n    [72, { minPitch: 24, maxPitch: 95 }],\n    [88, { minPitch: 21, maxPitch: 108 }],\n    [128, { minPitch: 0, maxPitch: 127 }],\n]);\n\n/**\n *\n * @param {Note[]} notes notes with only MIDI information\n * @returns {?} notes with fingering information\n */\n// export function fingeringFromMidi(notes) {\n// TODO: detect chords first?\n// TODO: then lookup chords' fingerings from a lookup table\n\n// TODO: alternatively (as fallback) use heuristics\n\n// TODO: or try to do it like humans do when playing\n\n\n\n// }\n","/**\n * @module utils/BlobUtils\n */\n\n/**\n * Converts a Blob to a base64 string\n *\n * @param {Blob} blob Blob\n * @returns {Promise<string,undefined>} base64 string\n */\nexport function blobToBase64(blob) {\n    return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onloadend = () => resolve(reader.result);\n        reader.readAsDataURL(blob);\n    });\n}\n\n/**\n * Extracts the file extension from a Blob, so it can be saved as a file with\n * an appropriate extension.\n *\n * @param {Blob} blob Blob\n * @returns {string} file extension\n */\nexport function blobToFileExtension(blob) {\n    return blob.type.split('/')[1].split(';')[0];\n}\n","/**\n * @module utils/FormattingUtils\n */\n\n/**\n * Formats a time in seconds to <minutes>:<seconds>.<milliseconds>\n *\n * @param {number|null} seconds in seconds\n * @param {boolean} includeMillis include milli seconds in string?\n * @returns {string} 0-padded time string <minutes>:<seconds>.<milliseconds>\n */\nexport function formatTime(seconds, includeMillis = true) {\n    if (seconds === undefined || seconds === null) {\n        return includeMillis ? '--:--.---' : '--:--';\n    }\n    const s = Math.floor(seconds);\n    let min = (Math.floor(s / 60)).toString();\n    let sec = (s % 60).toString();\n    min = min.length < 2 ? `0${min}` : min;\n    sec = sec.length < 2 ? `0${sec}` : sec;\n    if (!includeMillis) {\n        return `${min}:${sec}`;\n    }\n    let ms = (Math.round((seconds - s) * 1000)).toString();\n    if (ms.length < 2) {\n        ms = `00${ms}`;\n    } else if (ms.length < 3) {\n        ms = `0${ms}`;\n    }\n    return `${min}:${sec}.${ms}`;\n}\n\n/**\n * Formats a Date to a string with format\n *      YYYY-mm-DDTHH:MM:SS\n * or when replaceT == true\n *      YYYY-mm-DD HH:MM:SS\n *\n * @param {Date} date date\n * @param {boolean} replaceT replace the 'T'?\n * @param {boolean} keepMillis keep milliseconds?\n * @returns {string} formatted date\n */\nexport function formatDate(date, replaceT = false, keepMillis = true) {\n    let string = date.toISOString()\n        .split(':')\n        .join('-');\n    if (!keepMillis) {\n        string = string.slice(0, string.indexOf('.'));\n    }\n    if (replaceT) {\n        string = string.replace('T', ' ');\n    }\n    return string;\n}\n\n/**\n * Formats the song title (e.g. remove file extension and shorten)\n *\n * @param {string} title song title\n * @param {number} maxLength shorten to this length\n * @returns {string} formatted song title\n */\nexport function formatSongTitle(title, maxLength = 30) {\n    if (!title) {\n        return '[No Song]';\n    }\n    // Remove file extension\n    if (title.lastIndexOf('.') !== -1) {\n        title = title.slice(0, title.lastIndexOf('.'));\n    }\n    // Shorten\n    if (title.length > maxLength) {\n        title = `${title.slice(0, maxLength - 3)}...`;\n    }\n    return title;\n}\n","/**\n * @module utils/LocalStorageUtils\n */\n\n/**\n * Stringifies an object and stores it in the localStorage\n *\n * @param {string} key key\n * @param {object} object JSON compatible object\n */\nexport function storeObjectInLocalStorage(key, object) {\n    const string = JSON.stringify(object);\n    localStorage.setItem(key, string);\n}\n\n/**\n * Retrieves a stringified object from the localStorage and parses it.\n *\n * @param {string} key key\n * @returns {object|null} object or null of not possible\n */\nexport function getObjectFromLocalStorage(key) {\n    const string = localStorage.getItem(key);\n    if (string === null) {\n        // console.warn(`LocalStorage has no key ${key}`);\n        return null;\n    }\n    try {\n        return JSON.parse(string);\n    } catch {\n        return null;\n    }\n}\n","import { countOnesOfBinary } from './MathUtils';\nimport { binarySearch } from './ArrayUtils';\n\n/**\n * @module utils/MusicUtils\n */\n\n/**\n * Converts beats per minute to seconds per beat\n *\n * @param {number} bpm tempo in beats per minute\n * @returns {number} seconds per beat\n */\nexport function bpmToSecondsPerBeat(bpm) {\n    return 1 / (bpm / 60);\n}\n\n/**\n * Turns a chord into an integer that uniquely describes the occuring chroma.\n * If the same chroma occurs twice this will not make a difference\n * (e.g. [C4, E4, G4, C5] will equal [C4, E4, G4])\n *\n * How it works:\n * Chord has C, E, and G\n * x = 000010010001\n *         G  E   C\n *\n * @param {Note[]} notes notes\n * @returns {number} an integer that uniquely identifies this chord's chroma\n */\nexport function chordToInteger(notes) {\n    let value = 0x0;\n    for (const note of notes) {\n        const chroma = note.pitch % 12;\n        // eslint-disable-next-line no-bitwise\n        const noteInteger = 1 << chroma;\n        // eslint-disable-next-line no-bitwise\n        value = value | noteInteger;\n    }\n    return value;\n}\n\n/**\n * Takes two chord integer representations from chordToInteger() and computes\n * the Jaccard index\n *\n * @param {number} chord1 chord as integer representation\n * @param {number} chord2 chord as integer representation\n * @returns {number} Jackard index, from 0 for different to 1 for identical\n */\nexport function chordIntegerJaccardIndex(chord1, chord2) {\n    if (chord1 === chord2) {\n        return 1;\n    }\n    // eslint-disable-next-line no-bitwise\n    const intersection = chord1 & chord2;\n    // eslint-disable-next-line no-bitwise\n    const union = chord1 | chord2;\n    const intersectionSize = countOnesOfBinary(intersection);\n    const unionSize = countOnesOfBinary(union);\n    return intersectionSize / unionSize;\n}\n\n/*\n * noteTypeDurationRatios\n * 1 = whole note, 1/2 = half note, ...\n *\n * With added dots:\n * o. has duration of 1.5, o.. 1.75, ...\n */\nconst noteTypeDurationRatios = [];\nconst baseDurations = [2, 1, 1 / 2, 1 / 4, 1 / 8, 1 / 16, 1 / 32, 1 / 64];\nfor (const d of baseDurations) {\n    for (let dots = 0; dots < 4; dots++) {\n        let duration = d;\n        let toAdd = d;\n        for (let dot = 0; dot < dots; dot++) {\n            // Each dot after the note adds half of the one before\n            toAdd /= 2;\n            duration += toAdd;\n        }\n        noteTypeDurationRatios.push({\n            type: d,\n            dots,\n            duration,\n        });\n    }\n}\nnoteTypeDurationRatios.sort((a, b) => a.duration - b.duration);\n\n/**\n * Estimates the note type (whole, quarter, ...) and number of dots for dotted\n * notes\n *\n * @todo test if corrrectly 'calibrated'\n * @param {number} duration duration of a note\n * @param {number} bpm tempo of the piece in bpm\n * @returns {object} note type and number of dots\n *      e.g. { \"dots\": 0, \"duration\": 1, \"type\": 1 } for a whole note\n *      e.g. { \"dots\": 1, \"duration\": 1.5, \"type\": 1 } for a dotted whole note\n */\nexport function noteDurationToNoteType(duration, bpm) {\n    const quarterDuration = bpmToSecondsPerBeat(bpm);\n    const ratio = duration / quarterDuration / 4;\n    // TODO: round to finest representable step?\n\n    // Binary search\n    return binarySearch(noteTypeDurationRatios, ratio, d => d.duration);\n}\n\n/**\n * Circle of 5ths as\n * [midiNr, noteAsSharp, noteAsFlat, numberOfSharps, numberOfFlats]\n *\n * @see https://en.wikipedia.org/wiki/Circle_of_fifths\n * @type {any[][]}\n */\nexport const CIRCLE_OF_5THS = [\n    [0, 'C', 'C', 0, 0],\n    [7, 'G', 'G', 1, 0],\n    [2, 'D', 'D', 2, 0],\n    [9, 'A', 'A', 3, 0],\n    [4, 'E', 'E', 4, 0],\n    [11, 'B', 'B', 5, 7],\n    [6, 'F#', 'Gb', 6, 6],\n    [1, 'C#', 'Db', 7, 5],\n    [8, 'G#', 'Ab', 0, 4],\n    [3, 'D#', 'Eb', 0, 3],\n    [10, 'A#', 'Bb', 0, 2],\n    [5, 'F', 'F', 0, 1],\n];\n","import { hsl, interpolateRgb } from 'd3';\n\n/**\n * @module utils/NoteColorUtils\n */\n\n// TODO: move to colors/ folder?\n\n/**\n * Maps each note to a color\n * Colors from https://www.svpwiki.com/music+note+or+sound+colors\n * Order is C, C#, ... B\n *\n * @type {string[]}\n */\nconst noteColormap = [\n    '#ff0000',\n    '#ff4e00',\n    '#db7b00',\n    '#ffcc00',\n    '#e4ed00',\n    '#81d700',\n    '#00ffb4',\n    '#00ffea',\n    '#00baff',\n    '#3c00ff',\n    '#a800ff',\n    '#ff00fd',\n].map(d => {\n    // Make colors less saturated\n    const c = hsl(d);\n    c.s = 0.5;\n    return c.toString();\n});\n/**\n * Colorblind save colors from\n * Malandrino et al. - Visualization and Music Harmony: Design, Implementation,\n * and Evaluation https://ieeexplore.ieee.org/abstract/document/8564210\n * Order is C, C#, ... B\n *\n * @type {string[]}\n */\n// export const noteColormapAccessible = new Map([\n//     ['C', '#9aebff'],\n//     ['C#', '#add5ff'],\n//     ['D', '#d6d6ff'],\n//     ['D#', '#ebd5ff'],\n//     ['E', '#ffc2eb'],\n//     ['F', '#ffcbcc'],\n//     ['F#', '#ffd5c2'],\n//     ['G', '#ffebc2'],\n//     ['G#', '#ebffc2'],\n//     ['A', '#c2d599'],\n//     ['A#', '#99ebbe'],\n//     ['B', '#adebeb'],\n// ]);\nconst noteColormapAccessible = [\n    '#6699ff',\n    '#66ffff',\n    '#000000',\n    '#647878',\n    '#993366',\n    '#ff0000',\n    '#ffcc99',\n    '#ffff01',\n    '#ff9900',\n    '#009900',\n    '#66ff99',\n    '#0000cc',\n];\n\nconst colorInterpolator = interpolateRgb('black', 'steelblue');\n/**\n * Gradient color map from black to steelblue\n *\n * @type {string[]}\n */\nconst noteColormapGradientArray = Array.from({ length: 12 })\n    .map((d, index) => colorInterpolator(index / 11));\n\n/**\n * Returns the note color depending on the given pitch.\n * (Simplifies note color lookup by looking up the color for pitch%12.)\n *\n * @param {number} pitch MIDI pitch in [0, 127]\n * @param {string} colormap one of 'default', 'accessible', 'gradient'\n * @returns {string} color code\n */\nexport function noteColorFromPitch(pitch, colormap = 'default') {\n    switch (colormap) {\n    case 'accessible':\n        return noteColormapAccessible[pitch % 12];\n    case 'gradient':\n        return noteColormapGradientArray[pitch % 12];\n    default:\n        return noteColormap[pitch % 12];\n    }\n}\n","import { quantile, mean, deviation } from 'd3';\n\n/**\n * @module utils/StatisticsUtils\n */\n\n/**\n * Calculates a 95% confidence interval\n *\n * @see https://www.alchemer.com/resources/blog/how-to-calculate-confidence-intervals/\n * @param {numnber[]} values values\n * @returns {object} {mean, low, high}\n */\nexport function confidenceInterval(values) {\n    const n = values.length;\n    const m = mean(values);\n    const s = deviation(values);\n    const z = 1.96; // 95% CI\n    // const z = 2.576; // 99% CI\n    const part = z * (s / Math.sqrt(n));\n    const low = m - part;\n    const high = m + part;\n    return { mean: m, low, high };\n}\n\n/**\n * Given an array of Note objects, returns the numbers\n * that are drawn in a box plot (of the Note.start property)\n *\n * @param {number[]} values values\n * @returns {object} { q1, q2, q3, r0, r1 }\n */\nexport function getBoxplotCharacteristics(values) {\n    values.sort((a, b) => a - b);\n    const minValue = values[0];\n    const maxValue = values[values.length - 1];\n    const q1 = quantile(values, 0.25);\n    const q2 = quantile(values, 0.5);\n    const q3 = quantile(values, 0.75);\n    const iqr = q3 - q1;\n    const r0 = Math.max(minValue, q1 - iqr * 1.5);\n    const r1 = Math.min(maxValue, q3 + iqr * 1.5);\n    return { q1, q2, q3, r0, r1 };\n}\n\n/**\n * Returns a kernel desity estimator function.\n *\n * @see https://www.d3-graph-gallery.com/graph/violin_basicDens.html\n * @example\n * // With x being a d3.scaleLinear() scale\n * const kde = kernelDensityEstimator(kernelEpanechnikov(0.2), x.ticks(50));\n * const estimate = kde(data);\n * @param {Function} kernel kernel function\n * @param {number[]} X domain\n * @returns {Function} kernel density estimator\n *\n */\nexport function kernelDensityEstimator(kernel, X) {\n    /**\n     * Kernel desity estimator\n     * For each value of X it computes the estimated density of the data values\n     * in V. The result has the form [ [x1, est1], [x2, est2], ... ]\n     *\n     * @param {number[]} V values\n     * @returns {number[][]} estimates for points of X\n     */\n    const estimator = (V) => {\n        return X.map(x => [\n            x,\n            mean(V, (v) => kernel(x - v)),\n        ]);\n    };\n    return estimator;\n}\n\n/**\n * Epanechnikov kernel\n *\n * @param {number} k kernel size\n * @returns {Function} kernel function with curried k\n */\nexport function kernelEpanechnikov(k) {\n    /**\n     * Epanechnokov kernel function\n     *\n     * @param {number} v value\n     * @returns {number} result\n     */\n    const epKernel = (v) => Math.abs(v /= k) <= 1 ?\n        0.75 * (1 - v * v) / k :\n        0;\n    return epKernel;\n}\n\n/**\n * Gauss kernel\n *\n * @param {number} k kernel size\n * @returns {Function} kernel function with curried k\n */\nexport function kernelGauss(k) {\n    /**\n     * Gaussian kernel function\n     *\n     * @param {number} v value\n     * @returns {number} result\n     */\n    const gaKernel = (v) => Math.abs(v / k) <= 1 ?\n        ((1 / Math.sqrt(2 * Math.PI)) * Math.E ** ((-1 / 2) * v * v)) :\n        0;\n    return gaKernel;\n}\n","import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n","import { scaleLinear, extent, group, max } from 'd3';\nimport Note from '../types/Note';\nimport { bpmToSecondsPerBeat } from './MiscUtils';\nimport { kernelDensityEstimator, kernelEpanechnikov } from './StatisticsUtils';\nimport { findLocalMaxima } from './MathUtils';\nimport Recording from '../types/Recording'; /* eslint-disable-line no-unused-vars */\n\n/**\n * @module utils/RecordingsUtils\n */\n\n/**\n * Filters notes of a recording to remove noise from the MIDI device or pickup\n *\n * @todo detect gaps and fill them\n * @param {Recording} recording a recording\n * @param {number} velocityThreshold notes with velocity < velocityThreshold\n *      are removed\n * @param {number} durationThreshold notes with duration < velocityThreshold\n *      are removed (value in seconds)\n * @returns {Recording} clone of the recording with filtered notes\n */\nexport function filterRecordingNoise(recording, velocityThreshold = 0, durationThreshold = 0) {\n    const result = recording\n        .clone()\n        .filter(note => {\n            if (note.velocity < velocityThreshold) {\n                return false;\n            }\n            if (note.getDuration() < durationThreshold) {\n                return false;\n            }\n            return true;\n        });\n    // console.log(`Filtered recording, ${result.length()} of ${recording.length()} notes left`);\n    return result;\n}\n\n/**\n * Removes notes from a recordings which are outside the range of the ground\n * truth and therefore likely noise.\n * Looks up the pitch range from the track of the GT that the recording was made\n * for.\n *\n * @param {Recording[]} recordings recordings\n * @param {Note[][]} groundTruth ground truth\n * @returns {Recording[]} filtered recordings\n */\nexport function clipRecordingsPitchesToGtRange(recordings, groundTruth) {\n    // Speed up by getting range only once for all tracks\n    const pitchRanges = new Map();\n    for (const [index, part] of groundTruth.entries()) {\n        const extension = extent(part, d => d.pitch);\n        pitchRanges.set(index, extension);\n    }\n    return recordings.map(recording => {\n        const track = recording.selectedTrack;\n        const [minPitch, maxPitch] = pitchRanges.get(track);\n        return recording.clone().filter(note => note.pitch >= minPitch && note.pitch <= maxPitch);\n    });\n}\n\n/**\n * Aligns notes to a rhythmic pattern\n *\n * @todo not used\n * @param {Note[]} notes notes\n * @param {number} bpm e.g. 120 for tempo 120\n * @param {number} timeDivision e.g. 16 for 16th note steps\n * @returns {Note[]} aligned notes\n */\nexport function alignNotesToBpm(notes, bpm, timeDivision = 16) {\n    const secondsPerBeat = bpmToSecondsPerBeat(bpm);\n    const secondsPerDivision = secondsPerBeat / timeDivision;\n    return notes.map(note => {\n        const n = note.clone();\n        n.start = Math.round(n.start / secondsPerDivision) * secondsPerDivision;\n        n.end = Math.round(n.end / secondsPerDivision) * secondsPerDivision;\n        return n;\n    });\n}\n\n\n/**\n * Calculates a heatmap either pitch- or channel-wise.\n * Pitch-time heatmap:\n * Calculates a heatmap of multiple recordings, to see the note density in the\n * pitch-time-space.\n * Channel-time heatmap:\n * Calculates a heatmap of multiple recordings, to see the note density in the\n * channel-time-space. Channel could be a guitar string or left and right hand\n * for example.\n *\n * @param {Note[]} recNotes recordings\n * @param {number} nRecs number of recordings\n * @param {number} binSize time bin size in milliseconds\n * @param {string} attribute 'pitch' | 'channel'\n * @returns {Map} pitch->heatmap; heatmap is number[] for all time slices\n */\nexport function recordingsHeatmap(recNotes, nRecs, binSize = 10, attribute = 'pitch') {\n    let groupedByAttribute;\n    if (attribute === 'pitch') {\n        groupedByAttribute = group(recNotes, d => d.pitch);\n    } else if (attribute === 'channel') {\n        groupedByAttribute = group(recNotes, d => d.channel);\n    } else {\n        console.warn(`Invalid attribute parameter '${attribute}'`);\n    }\n\n    const heatmapByAttribute = new Map();\n    for (const [attribute_, notes] of groupedByAttribute.entries()) {\n        // Calculate heatmap\n        const maxTime = max(notes, d => d.end);\n        const nBins = Math.ceil((maxTime * 1000) / binSize) + 1;\n        const heatmap = Array.from({ length: nBins }).fill(0);\n        for (const note of notes) {\n            const start = Math.round(note.start * 1000 / binSize);\n            const end = Math.round(note.end * 1000 / binSize);\n            for (let bin = start; bin <= end; bin++) {\n                heatmap[bin] += 1;\n            }\n        }\n        // Normalize\n        for (let bin = 0; bin < heatmap.length; bin++) {\n            heatmap[bin] /= nRecs;\n        }\n        heatmapByAttribute.set(attribute_, heatmap);\n    }\n    return heatmapByAttribute;\n}\n\n/**\n * 'Averages' multiple recordings of the same piece to get an approximation of\n * the ground truth.\n *\n * @todo use velocity?\n * @param {Map} heatmapByPitch haetmap from recordingsHeatmap()\n * @param {number} binSize size of time bins in milliseconds\n * @param {number} threshold note is regarded as true when this ratio of\n *      recordings has a note there\n * @returns {Note[]} approximated ground truth notes\n */\nexport function averageRecordings(heatmapByPitch, binSize, threshold = 0.8) {\n    const newNotes = [];\n    for (const [pitch, heatmap] of heatmapByPitch.entries()) {\n        // Threshold to get note timespans -> array with booleans (is note here?)\n        // TODO: use Canny Edge Detector? Fill Gaps?\n        for (let bin = 0; bin < heatmap.length; bin++) {\n            heatmap[bin] = heatmap[bin] > threshold;\n        }\n        // Extract notes\n        let currentNote = null;\n        for (let bin = 0; bin < heatmap.length; bin++) {\n            // Detect note start\n            if (!currentNote && heatmap[bin]) {\n                const time = bin * binSize / 1000;\n                currentNote = new Note(pitch, time, 127, 0);\n            }\n            // Detect note end or end of array\n            if (currentNote && (!heatmap[bin] || bin === heatmap.length - 1)) {\n                const time = bin * binSize / 1000;\n                currentNote.end = time;\n                newNotes.push(currentNote);\n                currentNote = null;\n            }\n        }\n    }\n    // Sort new notes\n    newNotes.sort((a, b) => a.start - b.start);\n    return newNotes;\n}\n\n/**\n * Extracts a probable ground truth from multiple recordings. Uses one KDE for\n * each note starts and ends, detects maxima in the KDE and thresholds them.\n * Then uses alternating start end end candidates to create notes.\n *\n * @param {Note[]} recNotes recordings notes\n * @param {number} bandwidth kernel bandwidth\n * @param {number} ticksPerSecond number of ticks per second\n * @param {number} threshold threshold\n * @returns {Note[]} new notes\n */\nexport function averageRecordings2(recNotes, bandwidth = 0.01, ticksPerSecond, threshold) {\n    const groupedByPitch = group(recNotes, d => d.pitch);\n    const newNotes = [];\n    for (const [pitch, notes] of groupedByPitch.entries()) {\n        const starts = notes.map(d => d.start);\n        const ends = notes.map(d => d.end);\n        // Create KDE\n        const duration = max(ends);\n        const ticks = Math.ceil(ticksPerSecond * duration);\n        const x = scaleLinear()\n            .domain([0, duration])\n            .range([0, duration]);\n        const kde = kernelDensityEstimator(kernelEpanechnikov(bandwidth), x.ticks(ticks));\n        const estimateStarts = kde(starts);\n        const estimateEnds = kde(ends);\n        // Search for density maxima\n        const maximaStarts = findLocalMaxima(estimateStarts.map(d => d[1]));\n        const maximaEnds = findLocalMaxima(estimateEnds.map(d => d[1]));\n        // If density value > threshold, update note state\n        const chosenStarts = maximaStarts\n            .filter(d => estimateStarts[d][1] > threshold)\n            .map(d => estimateStarts[d][0]);\n        const chosenEnds = maximaEnds\n            .filter(d => estimateEnds[d][1] > threshold)\n            .map(d => estimateEnds[d][0]);\n        // Create notes\n        while (chosenStarts.length > 0) {\n            const nextStart = chosenStarts.shift();\n            // Remove ends before nextStart\n            while (chosenEnds.length > 0 && chosenEnds[0] < nextStart) {\n                chosenEnds.shift();\n            }\n            const nextEnd = chosenEnds.shift();\n            // Remove starts before nextEnd\n            while (chosenStarts.length > 0 && chosenStarts[0] < nextEnd) {\n                chosenStarts.shift();\n            }\n            newNotes.push(new Note(pitch, nextStart, 127, 0, nextEnd));\n        }\n    }\n    // Sort new notes\n    newNotes.sort((a, b) => a.start - b.start);\n    return newNotes;\n}\n\n\n/**\n * Returns a Map: pitch->differenceMap, differenceMap is an Array with time bins\n * and each bin is either\n *      0 (none, neither GT nor rec have a note here)\n *      1 (missing, only GT has a note here)\n *      2 (additional, only rec has a note here)\n *      3 (both, both have a note here)\n *\n * @todo move to comparison\n * @param {Note[]} gtNotes ground truth notes\n * @param {Note[]} recNotes recrodings notes\n * @param {number} binSize size of a time bin\n * @returns {Map} pitch->differenceMap; differenceMap is number[] for all time slices\n */\nexport function differenceMap(gtNotes, recNotes, binSize) {\n    const recHeatmap = recordingsHeatmap(recNotes, 1, binSize);\n    const gtHeatmap = recordingsHeatmap(gtNotes, 1, binSize);\n    const allPitches = [...new Set([\n        ...recHeatmap.keys(),\n        ...gtHeatmap.keys(),\n    ])];\n    const resultMap = new Map();\n    for (const pitch of allPitches) {\n        let result;\n        // Handle pitches that occur only in one of both\n        if (!recHeatmap.has(pitch)) {\n            // All notes are missing\n            result = gtHeatmap.get(pitch).map(d => d !== 0 ? 1 : 0);\n        } else if (!gtHeatmap.has(pitch)) {\n            // All notes are additional\n            result = recHeatmap.get(pitch).map(d => d !== 0 ? 2 : 0);\n        } else {\n            // Compare both bins for each time slice\n            const recH = recHeatmap.get(pitch);\n            const gtH = gtHeatmap.get(pitch);\n            const nBins = Math.max(recH.length, gtH.length);\n            result = Array.from({ length: nBins }).fill(0);\n            for (let index = 0; index < result.length; index++) {\n                const gtValue = gtH[index] || 0;\n                const recValue = recH[index] || 0;\n                if (gtValue === 0 && recValue === 0) {\n                    // None\n                    result[index] = 0;\n                }\n                if (gtValue !== 0 && recValue === 0) {\n                    // Missing\n                    result[index] = 1;\n                }\n                if (gtValue === 0 && recValue !== 0) {\n                    // Additional\n                    result[index] = 2;\n                }\n                if (gtValue !== 0 && recValue !== 0) {\n                    // Both\n                    result[index] = 3;\n                }\n            }\n        }\n        resultMap.set(pitch, result);\n    }\n    return resultMap;\n}\n\n/**\n * Computes the 'area' of error from a differenceMap normalized by total area.\n * The area is simply the number of bins with each value, total area is max.\n * number of bins in all pitches * the number of pitches.\n *\n * @todo move to comparison\n * @todo not used or tested yet\n * @todo add threshold for small errors (i.e. ignore area left and right of notes' start and end (masking?)))\n *\n * @param {Map} differenceMap differenceMap from differenceMap()\n * @returns {object} {missing, additional, correct} area ratio\n */\nexport function differenceMapErrorAreas(differenceMap) {\n    // Count bins for each error type\n    let missingBins = 0;\n    let additionalBins = 0;\n    let correctBins = 0;\n\n    for (const diffMap of differenceMap.values()) {\n        for (const bin of diffMap) {\n            if (bin === 1) { missingBins++; }\n            else if (bin === 2) { additionalBins++; }\n            else if (bin === 3) { correctBins++; }\n        }\n    }\n\n    // Normalize\n    const maxLength = max([...differenceMap], d => d[1].length);\n    const totalArea = differenceMap.size * maxLength;\n\n    return {\n        missing: missingBins / totalArea,\n        additional: additionalBins / totalArea,\n        correct: correctBins / totalArea,\n    };\n}\n","/**\n * @module utils/WebMidiUtils\n */\n\n/**\n * Allows to ping a MIDI device that loops back to measure latency.\n * The tool loopMIDI does exactly this:\n *\n * @see https://www.tobias-erichsen.de/software/loopmidi.html.\n * @example pingMidiDevice('loopMIDI Port', 10);\n * @param {string} deviceName name of the MIDI device\n * @param {number} howOften how many times to ping the device\n */\nexport function pingMidiDevice(deviceName, howOften = 1) {\n    if (!navigator.requestMIDIAccess) {\n        console.error('MIDI: WebMIDI is not supported in this browser.');\n    } else {\n        let sentCount = 0;\n        let sentTime;\n        let totalTime = 0;\n        // Start listening for incoming data\n        const receiveFunction = () => {\n            const ping = Date.now() - sentTime;\n            totalTime += ping;\n            const avg = totalTime / sentCount;\n            console.log(`Received MIDI from ${deviceName} after ${ping} ms (avg: ${avg})`);\n        };\n        navigator.requestMIDIAccess().then(midiAccess => {\n            for (const input of midiAccess.inputs.values()) {\n                if (deviceName === input.name) {\n                    input.onmidimessage = receiveFunction;\n                }\n            }\n            // Get output device\n            let outputDevice = null;\n            for (const output of midiAccess.outputs.values()) {\n                if (deviceName === output.name) {\n                    outputDevice = output;\n                }\n            }\n            if (!outputDevice) {\n                console.error(`Cannot ping output device ${deviceName} because it is not there`);\n            }\n            // Send data once a second\n            const pingFunction = () => {\n                if (sentCount < howOften) {\n                    sentCount++;\n                    console.log(`Ping ${sentCount}/${howOften} Sending MIDI ping to ${deviceName}`);\n                    sentTime = new Date();\n                    outputDevice.send([0x90, 0x45, 0x7F]);\n                    setTimeout(pingFunction, 1000);\n                }\n            };\n            setTimeout(pingFunction, 1000);\n        }, () => console.error('Cannot get MIDI access'),\n        );\n    }\n}\n","import { group } from 'd3';\r\nimport * as Utils from '../utils';\r\nimport Note from '../types/Note'; /* eslint-disable-line no-unused-vars */\r\n\r\n/**\r\n * @module comparison/Matching\r\n */\r\n\r\n/**\r\n * For one recording, separately for each pitch,\r\n * matches each recorded note to its closest ground truth note.\r\n * If there are multiple matches, the best (smallest time difference)\r\n * will be kept and others will be regarded as additional notes.\r\n * Ground truth notes without match will be regarded as missing notes.\r\n *\r\n * Result format (separated by pitch in a Map):\r\n * Map:pitch->{\r\n *    gtRecMap           matched rec. note for each GT note Map:gtNoteStart->recNote,\r\n *    additionalNotes:   rec. notes without matched GT note\r\n *    missingNotes:      GT notes without matched rec. note\r\n *    gtNotes:           all GT notes\r\n * }\r\n *\r\n * @todo add max distance?\r\n * @param {Note[]} recNotes recorded notes of a single recording\r\n * @param {Note[]} gtNotes ground truth notes\r\n * @returns {Map} result\r\n */\r\nexport function matchGtAndRecordingNotes(recNotes, gtNotes) {\r\n    const groupedByPitch = group(gtNotes, d => d.pitch);\r\n    const groupedByPitchRec = group(recNotes, d => d.pitch);\r\n    const result = new Map();\r\n    // For each pitch, map recorded notes to GT notes\r\n    for (const [pitch, gtNotes] of groupedByPitch.entries()) {\r\n        const gtRecMap = new Map();\r\n        const additionalNotes = [];\r\n        const missingNotes = [];\r\n        for (const n of gtNotes) {\r\n            gtRecMap.set(n.start, null);\r\n        }\r\n        // Recording might be missing this pitch, then all notes are missing\r\n        if (!groupedByPitchRec.has(pitch)) {\r\n            result.set(pitch, {\r\n                gtRecMap: new Map(),\r\n                additionalNotes: [],\r\n                missingNotes: gtNotes,\r\n                gtNotes: gtNotes,\r\n            });\r\n            continue;\r\n        }\r\n        const recNotes = groupedByPitchRec.get(pitch);\r\n        for (const r of recNotes) {\r\n            // Match each recorded note to the closest ground truth note\r\n            const nearest = Utils.findNearest(gtNotes, r);\r\n            const currentEntry = gtRecMap.get(nearest.start);\r\n            if (currentEntry === null) {\r\n                // If empty, take\r\n                gtRecMap.set(nearest.start, r);\r\n            } else {\r\n                // If it is taken, overtake it if the new match is closer\r\n                if (Math.abs(nearest.start - r.start) < Math.abs(currentEntry.start - r.start)) {\r\n                    // If it can overtake, add the old note to 'wrong additional notes' list\r\n                    gtRecMap.set(nearest.start, r);\r\n                    additionalNotes.push(currentEntry);\r\n                } else {\r\n                    // If it cannot overtake, add note to 'wrong additional notes' list\r\n                    additionalNotes.push(r);\r\n                }\r\n            }\r\n        }\r\n        // Go trough all GT notes, those that have no recording assigned to it are missing notes\r\n        for (const n of gtNotes) {\r\n            if (gtRecMap.get(n.start) === null) {\r\n                missingNotes.push(n);\r\n            }\r\n        }\r\n        // Store result in map pitch->groupings\r\n        result.set(pitch, {\r\n            gtRecMap,\r\n            additionalNotes,\r\n            missingNotes,\r\n            gtNotes: gtNotes,\r\n        });\r\n    }\r\n    // If a recording has a pitch that GT has not, all those notes are additional notes\r\n    for (const [pitch, recNotes] of groupedByPitchRec.entries()) {\r\n        if (!groupedByPitch.has(pitch)) {\r\n            result.set(pitch, {\r\n                gtRecMap: new Map(),\r\n                additionalNotes: recNotes,\r\n                missingNotes: [],\r\n                gtNotes: [],\r\n            });\r\n\r\n        }\r\n    }\r\n    // console.log(result);\r\n    return result;\r\n}\r\n\r\n/**\r\n * Matches all recorded notes from multiple recordings to the nearest\r\n * ground truth (GT) note.\r\n * Contrary to the matching created by matchGtAndRecordingNotes()\r\n * missing and additional notes are not considered, so multiple notes\r\n * from a single recording can be matched to the same GT note.\r\n *\r\n * Result format:\r\n * Map:pitch->Map:gtStart->arrayOfMatchedRecNotes\r\n *\r\n * @param {Recording[]} recordings recordings\r\n * @param {Note[]} gtNotes ground truth notes\r\n * @returns {Map} matching\r\n */\r\nexport function matchGtAndMultipleRecordings(recordings, gtNotes) {\r\n    const allRecNotes = recordings.flatMap(d => d.notes);\r\n    const groupedByPitch = group(gtNotes, d => d.pitch);\r\n    const groupedByPitchRec = group(allRecNotes, d => d.pitch);\r\n    const result = new Map();\r\n    // For each pitch, map recorded notes to GT notes and keep track of misses\r\n    for (const [pitch, gtNotes] of groupedByPitch.entries()) {\r\n        const gtRecMap = new Map();\r\n        for (const n of gtNotes) {\r\n            gtRecMap.set(n.start, []);\r\n        }\r\n        // Recording might be missing this pitch, then match is empty\r\n        if (!groupedByPitchRec.has(pitch)) {\r\n            result.set(pitch, new Map());\r\n            continue;\r\n        }\r\n        const recNotes = groupedByPitchRec.get(pitch);\r\n        for (const r of recNotes) {\r\n            // Match each recorded note to the closest ground truth note\r\n            const nearest = Utils.findNearest(gtNotes, r);\r\n            const currentEntry = gtRecMap.get(nearest.start);\r\n            currentEntry.push(r);\r\n            gtRecMap.set(nearest.start, currentEntry);\r\n        }\r\n        // Store result in map pitch->groupings\r\n        result.set(pitch, gtRecMap);\r\n    }\r\n    // console.log(result);\r\n    return result;\r\n}\r\n\r\n/**\r\n * Calculates (for each pitch) the average error for each GT note (averaged\r\n * over all matched notes in the recordings),\r\n * as well as the maximum of all those average errors.\r\n * GT notes that have no matched recorded notes will have an error of 0.\r\n *\r\n * @param {Map} multiMatching matching with a GT and multiple recordings\r\n * @param {number} errorThreshold number seconds of deviation above which\r\n *      to exclude an error\r\n * @returns {Map} error summary Map:pitch->{gtErrorMap, maxError},\r\n *      gtErrorMap is Map:gtStart->error (error is average over all time\r\n *      differences between the GT note and matched recNotes)\r\n */\r\nexport function getMultiMatchingErrorPerNote(multiMatching, errorThreshold = 3) {\r\n    const result = new Map();\r\n    for (const [pitch, gtRecMap] of multiMatching.entries()) {\r\n        const gtErrorMap = new Map();\r\n        let maxError = 0;\r\n        // Go through all gtStart and matched notes\r\n        for (const [gtStart, matchedRecNotes] of gtRecMap.entries()) {\r\n            let error = 0;\r\n            if (matchedRecNotes.length > 0) {\r\n                for (const note of matchedRecNotes) {\r\n                    const error_ = Math.abs(note.start - gtStart);\r\n                    if (error_ <= errorThreshold) {\r\n                        error += error_;\r\n                    }\r\n                }\r\n                error /= matchedRecNotes.length;\r\n                if (error > maxError) {\r\n                    maxError = error;\r\n                }\r\n            }\r\n            gtErrorMap.set(gtStart, error);\r\n        }\r\n        result.set(pitch, {\r\n            gtErrorMap,\r\n            maxError,\r\n        });\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Calculates the error of a matching by applying penalties and summing up\r\n *\r\n * @param {Map} matching a matching created by matchGtAndRecordingNotes\r\n * @param {number} addPenalty penalty for each additonal note\r\n * @param {number} missPenalty penalty for each missing note\r\n * @param {number} timingPenalty penalty for note timing differences in seconds\r\n * @param {number} timeThreshold timing errors below it (absolute) are ignored\r\n * @returns {object} errors by category\r\n */\r\nexport function getMatchingError(matching, addPenalty, missPenalty, timingPenalty, timeThreshold = 0) {\r\n    const result = {\r\n        total: 0,\r\n        totalAdd: 0,\r\n        totalMiss: 0,\r\n        totalCorrect: 0,\r\n        totalTime: 0,\r\n        totalNumberOfGtNotes: 0,\r\n        perPitch: new Map(),\r\n    };\r\n    for (const [pitch, m] of matching.entries()) {\r\n        const { gtRecMap, additionalNotes, missingNotes, gtNotes } = m;\r\n        const addError = additionalNotes.length * addPenalty;\r\n        const missError = missingNotes.length * missPenalty;\r\n        let correct = 0;\r\n        let timeError = 0;\r\n        for (const [gtStart, matchedRecNote] of gtRecMap.entries()) {\r\n            // If it is null, this is handled in missingNotes\r\n            if (matchedRecNote !== null) {\r\n                correct++;\r\n                const error = Math.abs(matchedRecNote.start - gtStart);\r\n                if (error > timeThreshold) {\r\n                    timeError += error;\r\n                }\r\n            }\r\n        }\r\n        const total = addError + missError + timeError * timingPenalty;\r\n        result.perPitch.set(pitch, {\r\n            total,\r\n            addError,\r\n            missError,\r\n            correct,\r\n            timeError,\r\n            numberOfGtNotes: gtNotes.length,\r\n        });\r\n        // Update total\r\n        result.totalAdd += addError;\r\n        result.totalMiss += missError;\r\n        result.totalCorrect += correct;\r\n        result.totalTime += timeError;\r\n        result.total += total;\r\n        result.totalNumberOfGtNotes += gtNotes.length;\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Cuts a section from a matching by filtering on the start times\r\n * of ground truth, missing, and additonal notes\r\n *\r\n * @param {Map} matching matching\r\n * @param {number} start start time (inclusive)\r\n * @param {number} end end time (exclusive)\r\n * @returns {Map} section of matching\r\n */\r\nexport function getMatchingSection(matching, start, end) {\r\n    const result = new Map();\r\n    for (const [pitch, m] of matching.entries()) {\r\n        const { gtRecMap, additionalNotes, missingNotes, gtNotes } = m;\r\n        const newGtRecMap = new Map();\r\n        for (const [gtStart, matchedRecNote] of gtRecMap.entries()) {\r\n            // If it is null, this is handled in missingNotes\r\n            if (matchedRecNote !== null && gtStart >= start && gtStart < end) {\r\n                newGtRecMap.set(gtStart, matchedRecNote);\r\n            }\r\n        }\r\n        result.set(pitch, {\r\n            gtRecMap: newGtRecMap,\r\n            additionalNotes: additionalNotes.filter(d => d.start >= start && d.start < end),\r\n            missingNotes: missingNotes.filter(d => d.start >= start && d.start < end),\r\n            gtNotes: gtNotes,\r\n        });\r\n    }\r\n    return result;\r\n}\r\n\r\n/**\r\n * Shortcut for getMatchingSection and getMatchingError,\r\n * see them for parameter details.\r\n *\r\n * @param {Map} matching matching\r\n * @param {number} start start time (inclusive)\r\n * @param {number} end end time (exclusive)\r\n * @param {number} addPenalty penalty for each additonal note\r\n * @param {number} missPenalty penalty for each missing note\r\n * @param {number} timingPenalty penalty for note timing differences in seconds\r\n * @returns {object} error by category\r\n */\r\nexport function getMatchingSliceError(matching, start, end, addPenalty, missPenalty, timingPenalty) {\r\n    const section = getMatchingSection(matching, start, end);\r\n    const error = getMatchingError(section, addPenalty, missPenalty, timingPenalty);\r\n    return error;\r\n}\r\n","import { matchGtAndRecordingNotes } from '../comparison/Matching';\nimport { randomInt, randomLcg, randomUniform, median } from 'd3';\nimport * as Drums from '../instruments/Drums';\nimport Note from '../types/Note';\nimport NoteArray from '../types/NoteArray';\n\n/**\n * @module Alignment\n */\n\n/**\n * Given two NoteArrays, shift the second one in time such that they are aligned\n *\n * @todo use https://en.wikipedia.org/wiki/Smith%E2%80%93Waterman_algorithm\n *      to find note alignment, then only use those for force calculation\n * @param {NoteArray} gt a NoteArray, e.g. the ground truth\n * @param {NoteArray} rec a NoteArray to align to a\n * @returns {NoteArray} an aligned copy of b\n */\nexport function alignNoteArrays(gt, rec) {\n    rec = rec.clone();\n    const f = alignmentForce(gt.getNotes(), rec.getNotes());\n    rec = rec.shiftTime(f);\n    // console.log(`Aligned recording via shifting by ${f.toFixed(3)} seconds`);\n    return {\n        aligned: rec,\n        timeDifference: f,\n    };\n}\n\n/**\n * Given two NoteArrays, shift the second one in time such that they are aligned\n *\n * @param {NoteArray} gt a NoteArray, e.g. the ground truth\n * @param {NoteArray} rec a NoteArray to align to a\n * @returns {NoteArray} an aligned copy of b\n */\nexport function alignNoteArrays2(gt, rec) {\n    let timeDifference = 0;\n    let tries = 0;\n    rec = rec.clone();\n    while (tries < 25) {\n        // Get a 1-to-1 matching between gt and rec notes so noise has less impact\n        const matching = matchGtAndRecordingNotes(rec.getNotes(), gt.getNotes());\n        // Get average time difference between matched notes\n        let timeDiff = 0;\n        let count = 0;\n        for (const m of matching.values()) {\n            const { gtRecMap } = m;\n            for (const [gtStart, matchedRecNote] of gtRecMap.entries()) {\n                if (matchedRecNote !== null) {\n                    count++;\n                    timeDiff += gtStart - matchedRecNote.start;\n                }\n            }\n        }\n        timeDiff /= count;\n        // Shift recording\n        rec.shiftTime(timeDiff);\n        timeDifference += timeDiff;\n        // console.log(`${tries} shifting by ${timeDiff.toFixed(3)} seconds`);\n        // Stop while loop when finished\n        if (Math.abs(timeDiff) < 0.0005) {\n            break;\n        }\n        tries++;\n    }\n    return {\n        aligned: rec,\n        timeDifference,\n    };\n}\n\n/**\n * Given two NoteArrays, shift the second one in time such that they are aligned\n *\n * @todo use median instead of average?\n * @param {NoteArray} gt a NoteArray, e.g. the ground truth\n * @param {NoteArray} rec a NoteArray to align to a\n * @returns {NoteArray} an aligned copy of b\n */\nexport function alignNoteArrays3(gt, rec) {\n    let timeDifference = 0;\n    let tries = 0;\n    rec = rec.clone();\n    while (tries < 25) {\n        // Get a 1-to-1 matching between gt and rec notes so noise has less impact\n        const matching = matchGtAndRecordingNotes(rec.getNotes(), gt.getNotes());\n        // Get time differences\n        const timeDiffs = [];\n        for (const m of matching.values()) {\n            for (const [gtStart, matchedRecNote] of m.gtRecMap.entries()) {\n                if (matchedRecNote !== null) {\n                    timeDiffs.push(gtStart - matchedRecNote.start);\n                }\n            }\n        }\n        const shift = median(timeDiffs);\n        // Shift recording\n        rec.shiftTime(shift);\n        timeDifference += shift;\n        // console.log(`${tries} shifting by ${shift.toFixed(3)} seconds`);\n        // Stop while loop when finished\n        if (Math.abs(shift) < 0.0001) {\n            break;\n        }\n        tries++;\n    }\n    return {\n        aligned: rec,\n        timeDifference,\n    };\n}\n\n\n\n/**\n * Calculates the mean difference between all notes in a and the nearest same-\n * pitched notes in b\n *\n * @param {Note[]} a array with notes\n * @param {Note[]} b array with notes\n * @returns {number} mean time difference\n */\nfunction alignmentForce(a, b) {\n    let difference = 0;\n    let count = 0;\n    // For each note in a, search the closest note in b with the same pitch and calculate the distance\n    for (const noteA of a) {\n        let distance = Number.POSITIVE_INFINITY;\n        let diff = Number.POSITIVE_INFINITY;\n        for (const noteB of b) {\n            if (noteA.pitch === noteB.pitch) {\n                const dist = Math.abs(noteA.start - noteB.start);\n                if (dist < distance) {\n                    distance = dist;\n                    diff = noteA.start - noteB.start;\n                    // TODO: Larger distances might be errors\n                    // if (diff > 1) {\n                    //     diff = Math.sqrt(diff);\n                    // }\n                }\n            }\n        }\n        // (If not found, this does not change alignment)\n        if (distance < Number.POSITIVE_INFINITY) {\n            difference += diff;\n            count++;\n        }\n    }\n    return difference / count;\n}\n\n/**\n * Test function\n *\n * @todo move to test\n */\nexport function testAlignment() {\n    const test = (a, b, title) => {\n        console.log(title);\n        console.log(b.getNotes().map(n => n.start));\n        const aligned = alignNoteArrays(a, b);\n        console.log(aligned.getNotes().map(n => n.start));\n    };\n    const a = new NoteArray([\n        new Note(69, 0, 127, 0, 1),\n        new Note(70, 1, 127, 0, 2),\n        new Note(71, 2, 127, 0, 3),\n    ]);\n    console.log(a.getNotes().map(n => n.start));\n\n    let b;\n\n    b = a.clone().shiftTime(2);\n    test(a, b, 'shifted by 2');\n\n    b = a.clone().shiftTime(-2);\n    test(a, b, 'shifted by -2');\n\n    b = a.clone()\n        .shiftTime(3)\n        .addNotes([new Note(72, 2, 127, 0, 3)]);\n    test(a, b, 'shifted by 3, added note');\n\n    b = a.clone().repeat(2);\n    test(a, b, 'repeated');\n\n    b = a.clone()\n        .repeat(2)\n        .shiftTime(3);\n    test(a, b, 'repeated, shifted by 3');\n}\n\n\n\n/**\n * @todo Benchmark different aligment functions on a randomly generated test set\n * This allows to check the calculated alignment against a known ground truth\n */\nexport function alignmentBenchmark() {\n    // Use random seed for reproducability\n    const seed = 0.44871573888282423; // any number in [0, 1)\n    const rand127 = randomInt.source(randomLcg(seed))(0, 127);\n    const maxTime = 500;\n    const randTime = randomUniform.source(randomLcg(seed))(0, maxTime);\n    const randDuration = randomUniform.source(randomLcg(seed))(1 / 64, 2);\n\n    // Create random notes\n    const randomNotes = Array.from({ length: 200 }).fill(0).map(() => {\n        const start = randTime();\n        return new Note(\n            rand127(),\n            start,\n            127,\n            0,\n            start + randDuration(),\n        );\n    });\n    const notes = new NoteArray(randomNotes).sortByTime();\n    console.log('true notes', notes.getNotes());\n\n    // Shift notes by some amount of seconds (this is what alignment should calculate!)\n    const shift = 3;\n    const shifted = notes.clone().shiftTime(shift);\n    console.log('shifted', shifted);\n\n\n    // Introduce errors, as a human would\n    const deviation = 0.1;\n    const pAdd = 0.1;\n    const pRemove = 0.1;\n    let variation = Drums.generateDrumVariation(shifted.getNotes(), deviation, pAdd, pRemove);\n    variation = new NoteArray(variation);\n    console.log('variation', variation);\n\n\n    // Run all functions\n    const funcs = [alignNoteArrays, alignNoteArrays2, alignNoteArrays3];\n    console.log(`True time shift: ${shift} seconds`);\n\n    console.log('Only shifted');\n    for (const f of funcs) {\n        const { timeDifference } = f(notes, shifted);\n        const error = Math.abs(timeDifference - -shift);\n        console.log(`${f.name}\\nshift: ${timeDifference.toFixed(3)} \\nError ${error.toFixed(3)}`);\n    }\n\n    console.log('Shifted & variation');\n    for (const f of funcs) {\n        const { timeDifference } = f(notes, variation);\n        const error = Math.abs(timeDifference - -shift);\n        console.log(`${f.name}\\nshift: ${timeDifference.toFixed(3)} \\nError ${error.toFixed(3)}`);\n    }\n}\n","import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n","import NoteArray from '../types/NoteArray';\nimport { group, max } from 'd3';\n\n/**\n * @module DiffAlignment\n */\n\n/**\n * Global alignment.\n *\n * Returns an array with matches sorted by magnitude of agreement.\n * The offsetMilliseconds value describes at what time the first note of the\n * recording should start.\n *\n * Goal: Know which part of ground truth (GT) was played in recording (rec)\n * Assumptions:\n * - Rec has same tempo as GT\n * - Rec does not start before GT\n * - Rec does not repeat something that is not repeated in the GT\n * - Rec does not have gaps\n * Ideas:\n * - Brute-force\n * - Sliding window\n * - Using diff between time-pitch matrix of GT and rec\n * - Only compute agreement (correct diff part) for the current overlap\n * - For each time position save the agreement magnitude\n * - Optionally: repeat around local maxima with finer binSize\n *\n * @param {Note[]} gtNotes ground truth notes\n * @param {Note[]} recNotes recorded notes\n * @param {number} binSize time bin size in milliseconds\n * @returns {object[]} best offsets with agreements\n */\nexport function alignGtAndRecToMinimizeDiffError(gtNotes, recNotes, binSize) {\n    gtNotes = new NoteArray(gtNotes);\n    recNotes = new NoteArray(recNotes).shiftToStartAt(0);\n    const gtDuration = gtNotes.getDuration();\n    const recDuration = recNotes.getDuration();\n    const nBins = Math.ceil((gtDuration * 1000) / binSize) + 1;\n    const nRecBins = Math.ceil((recDuration * 1000) / binSize) + 1;\n    // TODO: just switch them around?\n    if (nRecBins > nBins) {\n        console.warn('Cannot compare GT and rec if rec is longer');\n    }\n    // Get activation maps\n    const gtActivation = activationMap(gtNotes.getNotes(), binSize);\n    const recActivation = activationMap(recNotes.getNotes(), binSize);\n    // Compare with sliding window\n    const agreementsPerOffset = [];\n    for (let offset = 0; offset < nBins - nRecBins + 1; offset++) {\n        const currentAgreement = agreement(gtActivation, recActivation, offset);\n        // console.log(`Comparing gt bins ${offset}...${offset + nRecBins} to rec\\nGot agreement ${currentAgreement}`);\n        agreementsPerOffset.push({\n            offsetBins: offset,\n            offsetMilliseconds: offset * binSize,\n            agreement: currentAgreement,\n        });\n    }\n    // Sort by best match\n    const sorted = agreementsPerOffset.sort((a, b) => b.agreement - a.agreement);\n    return sorted;\n}\n\n/**\n * Returns an activation map, that maps pitch to an array of time bins.\n * Each bin contains a 0 when there is no note or a 1 when there is one.\n *\n * @param {Note[]} allNotes notes\n * @param {number} binSize time bin size in milliseconds\n * @returns {Map} activation map\n */\nexport function activationMap(allNotes, binSize = 100) {\n    const activationMap = new Map();\n    for (const [pitch, notes] of group(allNotes, d => d.pitch).entries()) {\n        const maxTime = max(notes, d => d.end);\n        const nBins = Math.ceil((maxTime * 1000) / binSize) + 1;\n        const pitchActivationMap = Array.from({ length: nBins }).fill(0);\n        // Calculate heatmap by writing 1 where a note is active\n        for (const note of notes) {\n            const start = Math.round(note.start * 1000 / binSize);\n            const end = Math.round(note.end * 1000 / binSize);\n            for (let bin = start; bin <= end; bin++) {\n                pitchActivationMap[bin] = 1;\n            }\n        }\n        activationMap.set(pitch, pitchActivationMap);\n    }\n    return activationMap;\n}\n\n/**\n * Given two activation maps, simply counts the number of bins [pitch, time]\n * where both have a 1, so an acitve note\n * Gtmust be longer than rec\n *\n * @todo also count common 0s?\n * @param {Map} gtActivations see activationMap()\n * @param {Map} recActivations see activationMap()\n * @param {number} offset offset for activation2 when comparing\n * @returns {number} agreement\n */\nexport function agreement(gtActivations, recActivations, offset) {\n    const allPitches = [...new Set([\n        ...gtActivations.keys(),\n        ...recActivations.keys(),\n    ])];\n    let agreement = 0;\n    for (const pitch of allPitches) {\n        // Handle pitches that occur only in one of both\n        if (!gtActivations.has(pitch)) {\n            // All notes are missing\n        } else if (!recActivations.has(pitch)) {\n            // All notes are additional\n        } else {\n            // Compare both bins for each time slice\n            const gtA = gtActivations.get(pitch);\n            const recA = recActivations.get(pitch);\n            // Go through full rec, and compare to current section of GT\n            // eslint-disable-next-line unicorn/no-for-loop\n            for (let index = 0; index < recA.length; index++) {\n                const gtValue = gtA[index + offset] || 0;\n                const recValue = recA[index] || 0;\n                if (gtValue === 1 && recValue === 1) {\n                    agreement++;\n                }\n            }\n\n        }\n    }\n    return agreement;\n}\n\n/**\n * Aligns the recording to the best fitting position of the ground truth\n *\n * @param {Note[]} gtNotes ground truth notes\n * @param {Recording} recording a Recording object\n * @param {number} binSize time bin size in milliseconds\n * @returns {Recording} aligned recording\n */\nexport function alignRecordingToBestFit(gtNotes, recording, binSize = 100) {\n    const recNotes = recording.getNotes();\n    const bestFit = alignGtAndRecToMinimizeDiffError(gtNotes, recNotes, binSize)[0];\n    const newRec = recording.clone().shiftToStartAt(bestFit.offsetMilliseconds / 1000);\n    return newRec;\n}\n","import { max, min } from 'd3';\n// import DynamicTimeWarping from 'dynamic-time-warping-2';\n// eslint-disable-next-line no-unused-vars\nimport Note from '../types/Note';\n\n/**\n * @module comparison/Similarity\n */\n\n/**\n * Given a track, a selected time interval and a threshold,\n * this function searches for parts in the track that are\n * similar to the selection.\n * It uses a sliding window with the size of the selection\n * and a stride given as argument.\n *\n * @param {Note[]} track array of Note objects\n * @param {number[]} selectedInterval [startTime, endTime] in seconds\n * @param {number} stride stride for the sliding window in number of bins\n * @param {number} threshold distance threshold below which parts are considered similar\n * @param {number} secondsPerBin time bin size in seconds\n * @param {string} distance one of: 'dtw', 'euclidean', 'nearest'\n * @returns {object} similar parts\n */\nexport function getSimilarParts(track, selectedInterval, stride, threshold, secondsPerBin = 1 / 16, distance = 'euclidean') {\n    console.log(`Searching for similar parts based on selection, using ${distance}`);\n    if (track === undefined || track.length === 0) {\n        console.warn('No or empty track given');\n        return;\n    }\n    // Discretize track (instead of doing this for every part)\n    const minTime = min(track, d => d.start);\n    const maxTime = max(track, d => d.end);\n    const binCount = Math.ceil((maxTime - minTime) / secondsPerBin);\n    const discrTrack = discretizeTime(track, secondsPerBin);\n    // Selection\n    const startBin = Math.floor((selectedInterval[0] - minTime) / secondsPerBin);\n    const endBin = Math.ceil((selectedInterval[1] - minTime) / secondsPerBin);\n    const selection = sliceDiscretizedTrack(discrTrack, startBin, endBin);\n    const selectionSize = endBin - startBin;\n    // Sliding window through the track\n    const similarParts = [];\n    for (let pos = 0; pos < binCount - selectionSize; pos += stride) {\n        const pos2 = pos + selectionSize;\n        // Ignore intersections with selection\n        if (!(pos >= startBin && pos <= endBin) && !(pos2 >= startBin && pos2 <= endBin)) {\n            const part = sliceDiscretizedTrack(discrTrack, pos, pos2);\n            const dist = getTrackSimilarity(selection, part, distance);\n            if (dist <= threshold) {\n                similarParts.push({\n                    startBin: pos,\n                    endBin: pos2,\n                    startTime: minTime + pos * secondsPerBin,\n                    endTime: minTime + pos2 * secondsPerBin,\n                    dist,\n                });\n            }\n        }\n    }\n    return {\n        selection: {\n            startBin,\n            endBin,\n            startTime: minTime + startBin * secondsPerBin,\n            endTime: minTime + endBin * secondsPerBin,\n        },\n        similarParts,\n    };\n}\n\n/**\n * Uses calculates the distance between\n * two discretized tracks, for each pitch separately.\n * Pitch-wise distances are averaged and a penalty is added to the distance\n * for pitches that are not occuring in both tracks\n *\n * @see https://github.com/GordonLesti/dynamic-time-warping\n *\n * @param {Map} discrA discretized track\n * @param {Map} discrB discretized track\n * @param {string} distance one of: 'euclidean', 'nearest'\n * @returns {number} distance\n */\nexport function getTrackSimilarity(discrA, discrB, distance) {\n    // Get common pitches\n    const common = [];\n    for (const key of discrA.keys()) {\n        if (discrB.has(key)) {\n            common.push(key);\n        }\n    }\n    // Get distance for each pitch and add to weighted average\n    let totalDist = 0;\n    // Get DTW distance for each common pitch\n    for (const pitch of common) {\n        const binsA = discrA.get(pitch);\n        const binsB = discrB.get(pitch);\n        let dist;\n        if (distance === 'dtw') {\n            // const dtw = new DynamicTimeWarping(binsA, binsB, (a, b) => Math.abs(a - b));\n            // dist = dtw.getDistance();\n        } else if (distance === 'euclidean') {\n            dist = euclideanDistanceSquared(binsA, binsB);\n        } else if (distance === 'nearest') {\n            dist = neirestNeighborDistance(binsA, binsB);\n        }\n        // Get weighted average\n        // TODO: How to weight the average?\n        const weight = 1;\n        // const weight = countActiveNoteBins(binsA) + countActiveNoteBins(binsB);\n        // const weight = 1 / (countActiveNoteBins(binsA) + countActiveNoteBins(binsB));\n        totalDist += weight * dist;\n    }\n    // TODO: add penalty for uncommon pitches\n    // Depending on number of 1s?\n    let penaltyWeight = 0;\n    for (const discr of [discrA, discrB]) {\n        for (const key of discr.keys()) {\n            if (!common.includes(key)) {\n                penaltyWeight += countActiveNoteBins(discr.get(key));\n            }\n        }\n    }\n    return totalDist + penaltyWeight;\n}\n\n/**\n * - Normalizes Note times to be between 0 and (maxTime - minTime),\n * - discretizes the start and end time by using Math.round to get\n * the closest time bin (beat) and\n * - Creates one array for each pitch, where each entry contains\n * either a 0 (no note at that time bin) or a 1 (note at that time bin)\n *\n * @param {Note[]} track an array of Note objects\n * @param {number} secondsPerBin time bin size in seconds\n * @returns {Map} pitch to binArray\n */\nexport function discretizeTime(track, secondsPerBin) {\n    const minTime = min(track, d => d.start);\n    const maxTime = max(track, d => d.end);\n    const binCount = Math.ceil((maxTime - minTime) / secondsPerBin);\n    // Map pitch->timeBinArray\n    const result = new Map();\n    for (const note of track) {\n        const startBin = Math.round((note.start - minTime) / secondsPerBin);\n        const endBin = Math.round((note.end - minTime) / secondsPerBin);\n        const pitch = note.pitch;\n        let binArray;\n        binArray = result.has(pitch) ? result.get(pitch) : Array.from({ length: binCount }).fill(0);\n        for (let bin = startBin; bin <= endBin; bin++) {\n            binArray[bin] = 1;\n        }\n        result.set(pitch, binArray);\n    }\n    return result;\n}\n\n/**\n * Counts the occurence of 1 in an array\n *\n * @param {number[]} binArray array\n * @returns {number} occurence of 1\n */\nfunction countActiveNoteBins(binArray) {\n    let count = 0;\n    for (const bin of binArray) {\n        if (bin === 1) {\n            count++;\n        }\n    }\n    return count;\n}\n\n/**\n * Slices bins out of a discretices track.\n * This is done for each pitch separately\n *\n * @param {Map} trackMap Map pitch->binArray\n * @param {number} startBin index of first bin\n * @param {number} endBin index of last bin\n * @returns {Map} map with sliced arrays\n */\nfunction sliceDiscretizedTrack(trackMap, startBin, endBin) {\n    const slice = new Map();\n    for (const [key, value] of trackMap.entries()) {\n        slice.set(key, value.slice(startBin, endBin));\n    }\n    return slice;\n}\n\n/**\n * Returns sum_{i=0}^{N-1}{(a_i-b_i)^2},\n * i.e. Euclidean distance but without square root\n *\n * @param {number[]} A an array\n * @param {number[]} B  another array\n * @returns {number} Euclidean distance\n */\nfunction euclideanDistanceSquared(A, B) {\n    const maxBins = Math.max(A.length, B.length);\n    let sum = 0;\n    for (let index = 0; index < maxBins; index++) {\n        // If undefined (because one array is shorter)\n        // use 0 as padding value\n        const a = A[index] || 0;\n        const b = B[index] || 0;\n        const diff = a - b;\n        sum += diff * diff;\n    }\n    return sum;\n}\n\n/**\n * Given two arrays containing 1s and 0s, this algorithm\n * goes through all bins and for each bin where one array\n * has a 1 and the other a 0, it searches for the closest 1\n * next to the 0.\n * The distance is then added to the global distance.\n *\n * @param {number[]} A an array\n * @param {number[]} B  another array\n * @returns {number} nearest neighbor distance\n */\nfunction neirestNeighborDistance(A, B) {\n    const maxBins = Math.max(A.length, B.length);\n    const maxOffset = Math.round(maxBins / 4);\n    let sum = 0;\n    for (let index = 0; index < maxBins; index++) {\n        let offset = 0;\n        // If undefined (because one array is shorter)\n        // use 0 as padding value\n        const a = A[index] || 0;\n        const b = B[index] || 0;\n        if (a === b) {\n            // 0 cost\n        } else if (a === 0 && b === 1) {\n            // If b == 1, look for the nearest 1 in a\n            // Out of bounds does not matter since undefined !== 1\n            // while (i - offset > 0 && i + offset < (maxBins-1) && offset <= maxOffset) {\n            while (offset <= maxOffset) {\n                offset++;\n                if (a[index - offset] === 1 || a[index + offset === 1]) {\n                    break;\n                }\n            }\n        } else if (a === 1 && b === 0) {\n            // If a == 1, look for the nearest 1 in b\n            while (offset <= maxOffset) {\n                offset++;\n                if (b[index - offset] === 1 || b[index + offset === 1]) {\n                    break;\n                }\n            }\n        }\n        sum += offset;\n    }\n    return sum;\n}\n","/**\n * @module stringBased/Levenshtein\n */\n\n/**\n * Computes the Levenshtein distance of two strings or arrays.\n *\n * @see https://gist.github.com/andrei-m/982927#gistcomment-1931258\n * @author https://github.com/kigiri, license: MIT\n *\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @param {boolean} normalize when set to true, the distance will be normalized\n *      to [0, 1], by dividing by the longer string's length\n * @returns {number} Levenshtein distance\n */\nexport function levenshtein(a, b, normalize = false) {\n    if (a.length === 0 && b.length === 0) { return 0; }\n    if (a.length === 0) { return normalize ? 1 : b.length; }\n    if (b.length === 0) { return normalize ? 1 : a.length; }\n    let i, j, previous, value;\n    // swap to save some memory O(min(a,b)) instead of O(a)\n    if (a.length > b.length) {\n        const temporary = a;\n        a = b;\n        b = temporary;\n    }\n    // init the row\n    const row = Array.from({ length: a.length + 1 });\n    for (i = 0; i <= a.length; i++) {\n        row[i] = i;\n    }\n    // fill in the rest\n    for (i = 1; i <= b.length; i++) {\n        previous = i;\n        for (j = 1; j <= a.length; j++) {\n            value = b[i - 1] === a[j - 1] ? row[j - 1] : Math.min(\n                row[j - 1] + 1, // substitution\n                Math.min(\n                    previous + 1, // insertion\n                    row[j] + 1,   // deletion\n                ),\n            );\n            row[j - 1] = previous;\n            previous = value;\n        }\n        row[a.length] = previous;\n    }\n    const result = row[a.length];\n    // Normalize?\n    return normalize ? result / Math.max(a.length, b.length) : result;\n}\n\n/**\n * Computes the Damerau-Levenshtein distance of two strings or arrays.\n *\n * @see https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @param {boolean} normalize when set to true, the distance will be normalized\n *      to [0, 1], by dividing by the longer string's length\n * @returns {number} Levenshtein distance\n */\nexport function damerauLevenshtein(a, b, normalize = false) {\n    if (a.length === 0 && b.length === 0) { return 0; }\n    if (a.length === 0) { return normalize ? 1 : b.length; }\n    if (b.length === 0) { return normalize ? 1 : a.length; }\n    const d = Array.from({ length: a.length + 1 })\n        .map(() => Array.from({ length: b.length }));\n    for (let i = 0; i <= a.length; i++) {\n        d[i][0] = i;\n    }\n    for (let i = 0; i <= b.length; i++) {\n        d[0][i] = i;\n    }\n    let cost;\n    for (let i = 1; i <= a.length; i++) {\n        for (let j = 1; j <= b.length; j++) {\n            cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(\n                d[i - 1][j] + 1,        // deletion\n                d[i][j - 1] + 1,        // insertion\n                d[i - 1][j - 1] + cost, // substitution\n            );\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                // transposition\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + 1);\n            }\n        }\n    }\n    const result = d[a.length][b.length];\n    // Normalize?\n    return normalize ? result / Math.max(a.length, b.length) : result;\n}\n","import { levenshtein } from '../stringBased/Levenshtein';\nimport PitchSequence from '../types/PitchSequence';\n\n\n/**\n * @module comparison/SimilarSections\n */\n\n/**\n * Turns an array of notes into a string to perform pattern matching search for similar\n * patterns.\n *\n * @param {Note[]} notes notes, must be sorted by Note.start\n * @param {number} startTime start time of the section to search\n * @param {number} endTime end time for the section to search\n * @param {number} threshold threshold for normalized Levenshtein distance in [0, 1]\n * @returns {object[]} {index, distance, startTime, endTime}\n */\nexport function findSimilarNoteSections(notes, startTime, endTime, threshold = 0.5) {\n    const selectedNotes = notes.filter(d => d.start >= startTime && d.end <= endTime);\n    // Convert to string\n    const dataString = PitchSequence.fromNotes(notes).getPitches();\n    const searchString = PitchSequence.fromNotes(selectedNotes).getPitches();\n    const length = searchString.length;\n    if (length < 3) {\n        return [];\n    }\n    // Find matches\n    const matches = findSimilarStringSections(dataString, searchString, threshold);\n    // Get time spans\n    return matches.map(m => {\n        const { index } = m;\n        const note1 = notes[index];\n        const note2 = notes[index + length];\n        return {\n            ...m,\n            startTime: note1.start,\n            endTime: note2.end,\n        };\n    });\n}\n\n/**\n * Finds similar sections in a string via Levenshtein distance\n *\n * @param {stringArray} dataString they string to search in\n * @param {stringArray} searchString the string to search for\n * @param {number} threshold threshold for normalized Levenshtein distance in [0, 1]\n * @returns {object[]} {index, distance}\n */\nexport function findSimilarStringSections(dataString, searchString, threshold = 0.5) {\n    const length = searchString.length;\n    const matches = [];\n    for (let index = 0; index < dataString.length - length; index++) {\n        const slice = dataString.slice(index, index + length);\n        const distance = levenshtein(searchString, slice) / length;\n        if (distance < threshold) {\n            matches.push({ index: index, distance });\n        }\n    }\n    // Filter overlapping matches by removing the ones with larger distances\n    const filtered = [];\n    // Therefore, sort by distance ascending and add them one by one\n    matches.sort((a, b) => a.distance - b.distance);\n    // Speed up hit detection by keeping track of indices that are already occupied\n    const occupied = Array.from({ length: dataString.length }).fill(false);\n    for (const m of matches) {\n        const { index } = m;\n        // Check if occupied\n        let occ = false;\n        for (let i = index; i < index + length; i++) {\n            if (occupied[i]) {\n                occ = true;\n                break;\n            }\n        }\n        // If not occupied, add and occupy\n        if (!occ) {\n            filtered.push(m);\n            for (let i = index; i < index + length; i++) {\n                occupied[i] = true;\n            }\n        }\n    }\n    return filtered;\n}\n","/**\n * @module stringBased/LongestCommonSubsequence\n */\n\n/**\n * Calculates the longest common subsequence.\n *\n * @see https://rosettacode.org/wiki/Longest_common_subsequence#JavaScript\n * @example\n * const lcs = StringBased.LongestCommonSubsequence.lcs('hello world!', 'world');\n * // world\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {string|Array} the longest common subsequence\n */\nexport function lcs(a, b) {\n    // Make sure shorter string is the column string\n    const m = a.length;\n    const n = b.length;\n    // Return now if one (or both) empty\n    if (a.length === 0) { return a; }\n    if (b.length === 0) { return b; }\n    let i, j, row = [], left, diagonal, latch;\n    const lcs = [];\n    const c = [];\n    // Build the c-table\n    for (j = 0; j < n; row[j++] = 0);\n    for (i = 0; i < m; i++) {\n        c[i] = row = [...row];\n        for (diagonal = 0, j = 0; j < n; j++, diagonal = latch) {\n            latch = row[j];\n            if (a[i] === b[j]) {\n                row[j] = diagonal + 1;\n            } else {\n                left = row[j - 1] || 0;\n                if (left > row[j]) {\n                    row[j] = left;\n                }\n            }\n        }\n    }\n    i--;\n    j--;\n    // row[j] now contains the length of the lcs\n    // Recover the lcs from the table\n    while (i > -1 && j > -1) {\n        switch (c[i][j]) {\n        default:\n            j--;\n            lcs.unshift(a[i]);\n        case (i && c[i - 1][j]): // eslint-disable-line no-fallthrough\n            i--;\n            continue;\n        case (j && c[i][j - 1]):\n            j--;\n        }\n    }\n    // Only join when x and y are strings\n    return (Array.isArray(a)) || (Array.isArray(b)) ? lcs : lcs.join('');\n}\n\n/**\n * Calculates the *length* of the longest common subsequence.\n * Also works with arrays.\n *\n * @see https://rosettacode.org/wiki/Longest_common_subsequence#JavaScript\n * @example\n * const lcsLength = StringBased.LongestCommonSubsequence.lcs('hello world!', 'world');\n * // 5\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {number} the length of longest common subsequence\n */\nexport function lcsLength(a, b) {\n    // Make sure shorter string is the column string\n    const m = a.length;\n    const n = b.length;\n    // Return now if one (or both) empty\n    if (a.length === 0) { return 0; }\n    if (b.length === 0) { return 0; }\n    let i, j, row = [], left, diagonal, latch;\n    const c = [];\n    // Build the c-table\n    for (j = 0; j < n; row[j++] = 0);\n    for (i = 0; i < m; i++) {\n        c[i] = row = [...row];\n        for (diagonal = 0, j = 0; j < n; j++, diagonal = latch) {\n            latch = row[j];\n            if (a[i] === b[j]) {\n                row[j] = diagonal + 1;\n            } else {\n                left = row[j - 1] || 0;\n                if (left > row[j]) {\n                    row[j] = left;\n                }\n            }\n        }\n    }\n    i--;\n    j--;\n    // row[j] now contains the length of the lcs\n    return row[j];\n}\n\n\n/**\n * Normalizes the result of lcsLength() by dividing by the longer string's\n * length.\n *\n * @param {string|Array} a a string\n * @param {string|Array} b another string\n * @returns {number} normalized length of longest common subsequence\n */\nexport function normalizedLcsLength(a, b) {\n    const longerLength = Math.max(a.length, b.length);\n    if (longerLength === 0) {\n        return 0;\n    }\n    return lcsLength(a, b) / longerLength;\n}\n","/**\n * @module stringBased/Gotoh\n */\n\n\n/**\n * Calculates the SIMILARITY for two strings or arrays.\n * Similar to NeedlemanWunsch but O(n^2) instead of O(n^3)\n * IMPORTANT: This metric is not symmetric!\n *\n * @todo normalize to [0, 1], but how?\n * @todo somehow the the matched sequences and gaps...\n * @see https://de.wikipedia.org/wiki/Gotoh-Algorithmus\n * @param {string|Array} seqA a sequence\n * @param {string|Array} seqB a sequence\n * @param {Function} similarityFunction a function that takes two elements and\n *      returns their similarity score (higher => more similar)\n *      (a:any, b:any):number\n * @param {number} gapPenaltyStart cost for starting a new gap (negative)\n * @param {number} gapPenaltyExtend cost for continuing a gap (negative)\n * @returns {number} similarity score\n */\nexport function gotoh(\n    seqA,\n    seqB,\n    similarityFunction = matchMissmatchSimilarity,\n    gapPenaltyStart = -1,\n    gapPenaltyExtend = -0.1,\n) {\n    // check if strings are empty\n    if (seqA.length === 0 && seqB.length === 0) { return 0; }\n    // gap penalty function\n    const gap = (index) => gapPenaltyStart + (index - 1) * gapPenaltyExtend;\n    const lengthA = seqA.length;\n    const lengthB = seqB.length;\n    // initialize matrices\n    const a = Array.from({ length: lengthA + 1 }).map(() => Array.from({ length: lengthB + 1 }));\n    const b = Array.from({ length: lengthA + 1 }).map(() => Array.from({ length: lengthB + 1 }));\n    const c = Array.from({ length: lengthA + 1 }).map(() => Array.from({ length: lengthB + 1 }));\n    a[0][0] = 0;\n    b[0][0] = 0;\n    c[0][0] = 0;\n    for (let i = 1; i <= lengthA; i++) {\n        a[i][0] = c[i][0] = Number.NEGATIVE_INFINITY;\n        b[i][0] = gap(i);\n    }\n    for (let i = 1; i <= lengthB; i++) {\n        a[0][i] = b[0][i] = Number.NEGATIVE_INFINITY;\n        c[0][i] = gap(i);\n    }\n    // compute matrices\n    for (let i = 1; i <= lengthA; i++) {\n        for (let j = 1; j <= lengthB; j++) {\n            const sim = similarityFunction(seqA[i - 1], seqB[j - 1]);\n            a[i][j] = Math.max(\n                a[i - 1][j - 1],\n                b[i - 1][j - 1],\n                c[i - 1][j - 1]) + sim;\n            b[i][j] = Math.max(\n                a[i - 1][j] + gapPenaltyStart,\n                b[i - 1][j] + gapPenaltyExtend,\n                c[i - 1][j] + gapPenaltyStart);\n            c[i][j] = Math.max(\n                a[i][j - 1] + gapPenaltyStart,\n                b[i][j - 1] + gapPenaltyStart,\n                c[i][j - 1] + gapPenaltyExtend);\n        }\n    }\n    return Math.max(\n        a[lengthA][lengthB],\n        b[lengthA][lengthB],\n        c[lengthA][lengthB],\n    );\n}\n\n/**\n * Idea: what would the max. similarity value be? the string with itself!\n * So just compare the longer string to itself and use that similarity to\n * normalize\n *\n * @todo does this work with negative costs and/or results?\n * @todo can this be optimized since only the similarityFunction is needed?\n * @todo only compute 'a' matrix for maxSimilarity\n * @param {string|Array} seqA a sequence\n * @param {string|Array} seqB a sequence\n * @param {Function} similarityFunction a function that takes two elements and\n *      returns their similarity score (higher => more similar)\n *      (a:any, b:any):number\n * @param {number} gapPenaltyStart cost for starting a new gap (negative)\n * @param {number} gapPenaltyExtend cost for continuing a gap (negative)\n * @returns {number} normalized similarity score\n */\nexport function normalizedGotoh(\n    seqA,\n    seqB,\n    similarityFunction = matchMissmatchSimilarity,\n    gapPenaltyStart = -1,\n    gapPenaltyExtend = -0.1,\n) {\n    const similarity = gotoh(seqA, seqB, similarityFunction, gapPenaltyStart, gapPenaltyExtend);\n    const longer = seqA.length >= seqB.length ? seqA : seqB;\n    const maxSimilarity = gotoh(longer, longer, similarityFunction, gapPenaltyStart, gapPenaltyExtend);\n    if (maxSimilarity === 0) {\n        // TODO: can this happen? what would be reasonable here?\n        return similarity;\n    }\n    return similarity / maxSimilarity;\n}\n\n/**\n * Cost function that simply checks whether two values are equal or not with ===\n *\n * @param {any} a some value\n * @param {any} b some value\n * @returns {number} 1 if equal, -1 otherwise\n */\nexport function matchMissmatchSimilarity(a, b) {\n    return a === b ? 1 : -1;\n}\n\n/**\n * Cost function that takes the negative absolute value of the value's\n * difference, assuming that close values are more similar\n *\n * @param {number} a some value\n * @param {number} b some value\n * @returns {number} -Math.abs(a - b)\n */\nexport function differenceSimilarity(a, b) {\n    return -Math.abs(a - b);\n}\n","/* eslint-disable unicorn/prefer-spread */\nimport { arrayShallowEquals } from '../utils/ArrayUtils';\n\n/**\n * @module stringBased/SuffixTree\n */\n\n/**\n * Suffix tree, a tree that shows which subsequences are repeated\n *\n * @see https://github.com/eikes/suffixtree/blob/master/js/suffixtree.js\n */\nclass SuffixTree {\n    /**\n     * SuffixTree for strings or Arrays\n     *\n     * @param {string|Array} array string or Array to process\n     */\n    constructor(array) {\n        // Split string to array\n        if (typeof array === 'string') {\n            array = array.split('');\n        }\n        this.node = new TreeNode();\n        if (array && array.length > 0) {\n            for (let index = 0; index < array.length; index++) {\n                this.node.addSuffix(array.slice(index));\n            }\n        }\n    }\n\n    /**\n     * Returns the longest repeated substring\n     *\n     * @returns {Array} longest repeated substring\n     */\n    getLongestRepeatedSubString() {\n        return this.node.getLongestRepeatedSubString();\n    }\n\n    /**\n     * Returns a readable string format of this tree\n     *\n     * @returns {string} string\n     */\n    toString() {\n        return this.node.toString();\n    }\n\n    /**\n     * Returns a JSON representation of this tree\n     *\n     * @returns {string} JSON\n     */\n    toJson() {\n        return JSON.stringify(this.node);\n    }\n}\n\n/**\n * TreeNode\n */\nclass TreeNode {\n    /**\n     *\n     */\n    constructor() {\n        this.value = [];\n        this.leaves = [];\n        this.nodes = [];\n    }\n\n    /**\n     * @param {string|Array} suf suffix\n     * @returns {boolean} true if first entry of suf equals the value of a child\n     */\n    checkNodes(suf) {\n        let node;\n        for (let index = 0; index < this.nodes.length; index++) {\n            node = this.nodes[index];\n            if (arrayShallowEquals(node.value, [suf[0]])) {\n                node.addSuffix(suf.slice(1));\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @param {string|Array} suf suffix\n     */\n    checkLeaves(suf) {\n        let node, leaf;\n        for (let index = 0; index < this.leaves.length; index++) {\n            leaf = this.leaves[index];\n            if (leaf[0] === suf[0]) {\n                node = new TreeNode();\n                node.value = [leaf[0]];\n                node.addSuffix(suf.slice(1));\n                node.addSuffix(leaf.slice(1));\n                this.nodes.push(node);\n                this.leaves.splice(index, 1);\n                return;\n            }\n        }\n        this.leaves.push(suf);\n    }\n\n    /**\n     * @param {string|Array} suf suffix\n     */\n    addSuffix(suf) {\n        if (suf.length === 0) {\n            return;\n        }\n        if (!this.checkNodes(suf)) {\n            this.checkLeaves(suf);\n        }\n    }\n\n    /**\n     * Returns the longest repeated substring\n     *\n     * @returns {Array} longest substring\n     */\n    getLongestRepeatedSubString() {\n        let array = [];\n        let temporary = [];\n        for (let index = 0; index < this.nodes.length; index++) {\n            temporary = this.nodes[index].getLongestRepeatedSubString();\n            if (temporary.length > array.length) {\n                array = temporary;\n            }\n        }\n        return this.value.concat(array);\n    }\n\n    /**\n     * Readable string representation of this node and its children\n     *\n     * @param {number} indent indentation\n     * @returns {string} string representation\n     */\n    toString(indent = 1) {\n        const ind = ' |'.repeat(indent);\n        let string = '';\n        string += this.value.length > 0 ? `-N '${this.value}'` : 'root';\n        if (this.nodes.length > 0) {\n            for (let index = 0; index < this.nodes.length; index++) {\n                string += `\\n${ind}${this.nodes[index].toString(indent + 1)}`;\n            }\n        }\n        if (this.leaves.length > 0) {\n            for (let index = 0; index < this.leaves.length; index++) {\n                string += `\\n${ind}-L ${this.leaves[index]}`;\n            }\n        }\n        return string;\n    }\n}\n\nexport default SuffixTree;\n","/* eslint-disable unicorn/prefer-spread */\n\n/**\n * @module stringBased/NeedlemanWunsch\n */\n\n/**\n * Needleman-Wunsch algorithm\n *\n * @see https://github.com/blievrouw/needleman-wunsch/blob/master/src/needleman_wunsch.js\n * @todo does not support cost matrix\n * @todo extend by matchMismathFunction\n */\nclass NeedlemanWunsch {\n    /**\n     * @param {string|Array} seq1 a string\n     * @param {string|Array} seq2 another string\n     * @param {number} match_score score for matching characters\n     * @param {number} mismatch_penalty penalty for mismatching characters\n     * @param {number} gap_penalty penalty for a gap\n     */\n    constructor(seq1, seq2, match_score = 1, mismatch_penalty = -1, gap_penalty = -1) {\n        // Compared sequences\n        this.seq1 = seq1;\n        this.seq2 = seq2;\n        // Scoring parameters\n        this.match_score = match_score;\n        this.mismatch_penalty = mismatch_penalty;\n        this.gap_penalty = gap_penalty;\n        // Intermediate scores matrix (scores for [`insert`, `match`, `delete`] positions)\n        this.I = [];\n        // Score matrix (best score out of intermediate scores)\n        this.S = [];\n        // Traceback matrix (boolean values for [`insert`, `match`, `delete`] positions)\n        this.T = [];\n        // Alignments\n        this.finalAlignments = [];\n\n        // Calculate scores and tracebacks\n        this.calcScoresAndTracebacks();\n    }\n\n    /**\n     * Calculates (intermediate) scores and tracebacks using provided parameters\n     */\n    calcScoresAndTracebacks() {\n        this.S.push([0]);\n        this.I.push([[null, null, null]]);\n        this.T.push([[false, false, false]]);\n\n        // Calculate scores and traceback on first row\n        for (let i = 1; i < this.seq2.length + 1; i++) {\n            this.S[0].push(this.S[0][this.S[0].length - 1] + this.gap_penalty);\n            this.I[0].push([null, null, null]);\n            this.T[0].push([true, false, false]);\n        }\n\n        // Generate other rows\n        for (let i = 1; i < this.seq1.length + 1; i++) {\n            this.S.push([this.S[i - 1][0] + this.gap_penalty]);\n            this.I.push([[null, null, null]]);\n            this.T.push([[false, false, true]]);\n            for (let j = 1; j < this.seq2.length + 1; j++) {\n                const insert = this.S[i][j - 1] + this.gap_penalty;\n                const del = this.S[i - 1][j] + this.gap_penalty;\n                // similarity\n                // TODO: support function here\n                let sim_score;\n                sim_score = this.seq1[i - 1] === this.seq2[j - 1] ? this.match_score : this.mismatch_penalty;\n                const match = this.S[i - 1][j - 1] + sim_score;\n                const intermediate_scores = [insert, match, del];\n                const score = Math.max(...intermediate_scores);\n                const tracebackTypeStatus = intermediate_scores.map(entry => entry === score);\n                this.S[i].push(score);\n                this.I[i].push(intermediate_scores);\n                this.T[i].push(tracebackTypeStatus);\n            }\n        }\n\n        // set best match score\n        const lastRow = this.S[this.S.length - 1];\n        this.score = lastRow[lastRow.length - 1];\n    }\n\n    /**\n     * Finds next alignment locations (children) from a position in scoring matrix\n     *\n     * @param {number[]} pos m- Position in scoring matrix\n     * @returns {object[]} children - Children positions and alignment types\n     */\n    alignmentChildren(pos) {\n        const [i, j] = pos;\n        const children = [];\n        const traceback_type_status = this.T[i][j];\n        if (traceback_type_status[0]) {\n            // insert\n            children.push({ pos: [i, j - 1], tracebackType: 0 });\n        }\n        if (traceback_type_status[1]) {\n            // match\n            children.push({ pos: [i - 1, j - 1], tracebackType: 1 });\n        }\n        if (traceback_type_status[2]) {\n            // delete\n            children.push({ pos: [i - 1, j], tracebackType: 2 });\n        }\n        return children;\n    }\n\n    /**\n     * Runs through scoring matrix from bottom-right to top-left using traceback values to create all optimal alignments\n     *\n     * @returns {object[]} e.g. [{ seq1: '-4321', seq2: '54321' }]\n     */\n    alignmentTraceback() {\n        const finalAlignments = [];\n        const root = {\n            next: null,\n            pos: [this.seq1.length, this.seq2.length],\n            alignment: {\n                seq1: '',\n                seq2: '',\n                // score: this.score,\n            },\n        };\n        let current, child, children, length, alignment, pos, t;\n        current = root;\n        while (current) {\n            pos = current.pos;\n            alignment = current.alignment;\n            // Get children alignments\n            children = this.alignmentChildren(current.pos);\n            // Store completed alignments\n            if (children.length === 0) {\n                finalAlignments.push(alignment);\n            }\n            current = current.next;\n            for (t = 0, length = children.length; t < length; t++) {\n                child = children[t];\n                child.alignment = {\n                    // -1 refers to offset between  scoring matrix and the sequence\n                    seq1: alignment.seq1.concat(child.tracebackType === 0 ? '-' : this.seq1[pos[0] - 1]),\n                    seq2: alignment.seq2.concat(child.tracebackType === 2 ? '-' : this.seq2[pos[1] - 1]),\n                    // TODO: add score for this alignment\n                    // score: alignment.score - this.S[pos[0]][pos[1]]\n                };\n                // Move down a layer\n                child.next = current;\n                current = child;\n            }\n        }\n        return finalAlignments;\n    }\n}\n\nexport default NeedlemanWunsch;\n"],"sourceRoot":""}